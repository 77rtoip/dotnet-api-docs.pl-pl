<Type Name="Queryable" FullName="System.Linq.Queryable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13719170e2133e7fbb42e8ece41222c4d8008027" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37651814" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Queryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Queryable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Queryable" />
  <TypeSignature Language="VB.NET" Value="Public Module Queryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Queryable abstract sealed" />
  <TypeSignature Language="F#" Value="type Queryable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Queryable</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2b287-101">Zawiera zestaw <see langword="static" /> (<see langword="Shared" /> w języku Visual Basic) metody dla struktur danych, które implementują zapytań <see cref="T:System.Linq.IQueryable`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b287-101">Provides a set of <see langword="static" /> (<see langword="Shared" /> in Visual Basic) methods for querying data structures that implement <see cref="T:System.Linq.IQueryable`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-102">Zestaw metod zadeklarowanych w <xref:System.Linq.Queryable> klasa oferuje implementację standardowych operatorów zapytań dla kwerendy danych źródła, które implementują <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-102">The set of methods declared in the <xref:System.Linq.Queryable> class provides an implementation of the standard query operators for querying data sources that implement <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="2b287-103">Standardowe operatory zapytań są metodami ogólnego przeznaczenia, które należy wykonać [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] wzorca i umożliwiają express operacji przechodzenia, filtru i projekcji danych we wszystkich. Języka programowania opartego na sieci.</span><span class="sxs-lookup"><span data-stu-id="2b287-103">The standard query operators are general purpose methods that follow the [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] pattern and enable you to express traversal, filter, and projection operations over data in any .NET-based programming language.</span></span>  
  
 <span data-ttu-id="2b287-104">Większość metod w tej klasie są zdefiniowane jako metody rozszerzenia, które rozszerzają <xref:System.Linq.IQueryable%601> typu.</span><span class="sxs-lookup"><span data-stu-id="2b287-104">The majority of the methods in this class are defined as extension methods that extend the <xref:System.Linq.IQueryable%601> type.</span></span> <span data-ttu-id="2b287-105">Oznacza to, może być wywoływana takich jak metoda wystąpienia dla dowolnego obiektu, który implementuje <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-105">This means they can be called like an instance method on any object that implements <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="2b287-106">Te metody, które rozszerzają <xref:System.Linq.IQueryable%601> nie wykonuj żadnych zapytań bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="2b287-106">These methods that extend <xref:System.Linq.IQueryable%601> do not perform any querying directly.</span></span> <span data-ttu-id="2b287-107">Zamiast tego należy ich funkcjonalność jest kompilacja <xref:System.Linq.Expressions.Expression> obiektu, który jest drzewo wyrażenia, reprezentujący zbiorczą zapytania.</span><span class="sxs-lookup"><span data-stu-id="2b287-107">Instead, their functionality is to build an <xref:System.Linq.Expressions.Expression> object, which is an expression tree that represents the cumulative query.</span></span> <span data-ttu-id="2b287-108">Metody należy przekazać nowe drzewo wyrażeń do jednej <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody lub <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody wejściowej <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-108">The methods then pass the new expression tree to either the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method or the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the input <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="2b287-109">Metoda, która jest wywoływana zależy od tego, czy <xref:System.Linq.Queryable> metoda zwraca wartość pojedynczych, w którym to przypadku <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> nosi nazwę lub ma wyliczalny wyników, w którym to przypadku <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2b287-109">The method that is called depends on whether the <xref:System.Linq.Queryable> method returns a singleton value, in which case <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> is called, or has enumerable results, in which case <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is called.</span></span>  
  
 <span data-ttu-id="2b287-110">Wykonywanie kwerendy rzeczywistych danych docelowych odbywa się przez klasę, która implementuje <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-110">The actual query execution on the target data is performed by a class that implements <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="2b287-111">Oczekiwania dowolnego <xref:System.Linq.IQueryable%601> implementacja jest to, że wynik wykonania drzewo wyrażenia, który został zbudowany przez <xref:System.Linq.Queryable> standardowej kwerendy operatora metoda jest równoważna do wyniku wywołania odpowiedniej metody <xref:System.Linq.Enumerable> Klasa, gdyby źródła danych <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-111">The expectation of any <xref:System.Linq.IQueryable%601> implementation is that the result of executing an expression tree that was constructed by a <xref:System.Linq.Queryable> standard query operator method is equivalent to the result of calling the corresponding method in the <xref:System.Linq.Enumerable> class, if the data source were an <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="2b287-112">Oprócz standardowych metod operatorów kwerendy, które działają na <xref:System.Linq.IQueryable%601> obiektów, ta klasa zawiera także metodę <xref:System.Linq.Queryable.AsQueryable%2A>, jakie typy <xref:System.Collections.IEnumerable> obiektów jako <xref:System.Linq.IQueryable> obiektów.</span><span class="sxs-lookup"><span data-stu-id="2b287-112">In addition to the standard query operator methods that operate on <xref:System.Linq.IQueryable%601> objects, this class also contains a method, <xref:System.Linq.Queryable.AsQueryable%2A>, which types <xref:System.Collections.IEnumerable> objects as <xref:System.Linq.IQueryable> objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Aggregate&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TSource,TSource&gt;&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Aggregate&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TSource, !!TSource&gt;&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource) (source As IQueryable(Of TSource), func As Expression(Of Func(Of TSource, TSource, TSource))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TSource, TSource&gt; ^&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Source, 'Source&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Aggregate (source, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TSource,TSource&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-113">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-113">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-114">Sekwencja over agregacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-114">A sequence to aggregate over.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="2b287-115">Funkcję akumulatora po do zastosowania do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-115">An accumulator function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-116">Stosuje funkcję akumulatora po sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-116">Applies an accumulator function over a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-117">Wartość akumulatora końcowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-117">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-118">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-118">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-119">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-119">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-120"><xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-120">The <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-121">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-121">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-122">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-122">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-123">Oczekiwane zachowanie jest to, że określona funkcja `func`, są stosowane do każdej wartości w sekwencji źródłowej i skumulowane zwracana jest wartość.</span><span class="sxs-lookup"><span data-stu-id="2b287-123">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="2b287-124">Pierwsza wartość w `source` jest używany jako wartość początkową dla zebranych wartość, która odpowiada pierwszy parametr w `func`.</span><span class="sxs-lookup"><span data-stu-id="2b287-124">The first value in `source` is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span>  
  
 <span data-ttu-id="2b287-125">Aby uprościć typowych operacji agregacji, zestaw standardowych operatorów zapytań zawiera również dwie metody zliczania, <xref:System.Linq.Queryable.Count%2A> i <xref:System.Linq.Queryable.LongCount%2A>i cztery metody agregacji liczbowe, a mianowicie <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>i <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="2b287-125">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-126">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> tworzenie zdania z tablicy ciągów.</span><span class="sxs-lookup"><span data-stu-id="2b287-126">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> to build a sentence from an array of strings.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#1)]
 [!code-vb[System.Linq.Queryable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-127">
            <paramref name="source" /> lub <paramref name="func" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-127">
              <paramref name="source" /> or <paramref name="func" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-128">
            <paramref name="source" /> nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-128">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TSource,TAccumulate&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TAccumulate seed, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TSource, TAccumulate&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt;&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate) (source As IQueryable(Of TSource), seed As TAccumulate, func As Expression(Of Func(Of TAccumulate, TSource, TAccumulate))) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, TAccumulate seed, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TSource, TAccumulate&gt; ^&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.IQueryable&lt;'Source&gt; * 'Accumulate * System.Linq.Expressions.Expression&lt;Func&lt;'Accumulate, 'Source, 'Accumulate&gt;&gt; -&gt; 'Accumulate" Usage="System.Linq.Queryable.Aggregate (source, seed, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-129">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-129">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TAccumulate">
          <span data-ttu-id="2b287-130">Typ wartości akumulatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-130">The type of the accumulator value.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-131">Sekwencja over agregacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-131">A sequence to aggregate over.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="2b287-132">Wartość akumulatora początkowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-132">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="2b287-133">Funkcję akumulatora po do wywołania dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-133">An accumulator function to invoke on each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-134">Stosuje funkcję akumulatora po sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-134">Applies an accumulator function over a sequence.</span>
          </span>
          <span data-ttu-id="2b287-135">Wartość inicjatora określona jest używana jako wartość akumulatora początkowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-135">The specified seed value is used as the initial accumulator value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-136">Wartość akumulatora końcowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-136">The final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-137">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-137">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-138">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-138">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-139"><xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-139">The <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-140">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-140">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-141">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-141">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-142">Oczekiwane zachowanie jest to, że określona funkcja `func`, są stosowane do każdej wartości w sekwencji źródłowej i skumulowane zwracana jest wartość.</span><span class="sxs-lookup"><span data-stu-id="2b287-142">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="2b287-143">`seed` Parametr jest używany jako wartość początkową wartość skumulowana odpowiada pierwszy parametr w `func`.</span><span class="sxs-lookup"><span data-stu-id="2b287-143">The `seed` parameter is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span>  
  
 <span data-ttu-id="2b287-144">Aby uprościć typowych operacji agregacji, zestaw standardowych operatorów zapytań zawiera również dwie metody zliczania, <xref:System.Linq.Queryable.Count%2A> i <xref:System.Linq.Queryable.LongCount%2A>i cztery metody agregacji liczbowe, a mianowicie <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>i <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="2b287-144">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-145">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> zastosować funkcję akumulatora po, gdy wartość początkową została podana w funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b287-145">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> to apply an accumulator function when a seed value is provided to the function.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#2)]
 [!code-vb[System.Linq.Queryable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-146">
            <paramref name="source" /> lub <paramref name="func" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-146">
              <paramref name="source" /> or <paramref name="func" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TAccumulate seed, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt; func, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt;&gt; func, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TAccumulate, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As IQueryable(Of TSource), seed As TAccumulate, func As Expression(Of Func(Of TAccumulate, TSource, TAccumulate)), selector As Expression(Of Func(Of TAccumulate, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, TAccumulate seed, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TSource, TAccumulate&gt; ^&gt; ^ func, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.IQueryable&lt;'Source&gt; * 'Accumulate * System.Linq.Expressions.Expression&lt;Func&lt;'Accumulate, 'Source, 'Accumulate&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Accumulate, 'Result&gt;&gt; -&gt; 'Result" Usage="System.Linq.Queryable.Aggregate (source, seed, func, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-147">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-147">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TAccumulate">
          <span data-ttu-id="2b287-148">Typ wartości akumulatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-148">The type of the accumulator value.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-149">Typ wartości wynikowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-149">The type of the resulting value.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-150">Sekwencja over agregacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-150">A sequence to aggregate over.</span>
          </span>
        </param>
        <param name="seed">
          <span data-ttu-id="2b287-151">Wartość akumulatora początkowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-151">The initial accumulator value.</span>
          </span>
        </param>
        <param name="func">
          <span data-ttu-id="2b287-152">Funkcję akumulatora po do wywołania dla każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-152">An accumulator function to invoke on each element.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-153">Funkcja do przekształcania wartości końcowej akumulatora po wartości wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-153">A function to transform the final accumulator value into the result value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-154">Stosuje funkcję akumulatora po sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-154">Applies an accumulator function over a sequence.</span>
          </span>
          <span data-ttu-id="2b287-155">Wartość inicjatora określona jest używana jako wartość akumulatora początkowe i określona funkcja jest używany do wybierania wartości wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-155">The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-156">Wartość po przekształceniu akumulatora końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-156">The transformed final accumulator value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-157">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-157">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-158">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-158">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-159"><xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-159">The <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-160">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-160">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-161">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-161">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-162">Oczekiwane zachowanie jest to, że określona funkcja `func`, są stosowane do każdej wartości w sekwencji źródłowej i skumulowane zwracana jest wartość.</span><span class="sxs-lookup"><span data-stu-id="2b287-162">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="2b287-163">`seed` Parametr jest używany jako wartość początkową wartość skumulowana odpowiada pierwszy parametr w `func`.</span><span class="sxs-lookup"><span data-stu-id="2b287-163">The `seed` parameter is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span> <span data-ttu-id="2b287-164">Końcowa wartość skumulowana jest przekazywany do `selector` do uzyskiwania wartości wyniku.</span><span class="sxs-lookup"><span data-stu-id="2b287-164">The final accumulated value is passed to `selector` to obtain the result value.</span></span>  
  
 <span data-ttu-id="2b287-165">Aby uprościć typowych operacji agregacji, zestaw standardowych operatorów zapytań zawiera również dwie metody zliczania, <xref:System.Linq.Queryable.Count%2A> i <xref:System.Linq.Queryable.LongCount%2A>i cztery metody agregacji liczbowe, a mianowicie <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>i <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="2b287-165">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-166">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> stosować funkcję akumulatora po i selektor wynik.</span><span class="sxs-lookup"><span data-stu-id="2b287-166">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> to apply an accumulator function and a result selector.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#3)]
 [!code-vb[System.Linq.Queryable#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-167">
            <paramref name="source" /> lub <paramref name="func" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-167">
              <paramref name="source" /> or <paramref name="func" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="All&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; bool" Usage="System.Linq.Queryable.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-168">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-168">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-169">A sekwencji, której elementy, aby sprawdzić, czy warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-169">A sequence whose elements to test for a condition.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-170">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-170">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-171">Określa, czy wszystkie elementy w sekwencji spełniają warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-171">Determines whether all the elements of a sequence satisfy a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-172">
            <see langword="true" /> Jeśli wszystkie elementy sekwencji źródłowej przejdzie test w określony predykat lub sekwencji jest pusta. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-172">
              <see langword="true" /> if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-173">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-173">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-174">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-174">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-175"><xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-175">The <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-176">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-176">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-177">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> zależy od implementacji `source` typu parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-177">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the `source` parameter's type.</span></span> <span data-ttu-id="2b287-178">Oczekiwane zachowanie jest, że ustala, czy wszystkie elementy w `source` spełniają warunek w `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-178">The expected behavior is that it determines if all the elements in `source` satisfy the condition in `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-179">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> do określenia, czy wszystkie elementy w sekwencji spełniają warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-179">The following code example demonstrates how to use <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to determine whether all the elements in a sequence satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#4)]
 [!code-vb[System.Linq.Queryable#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#4)]  
  
 <span data-ttu-id="2b287-180">Wartość logiczna, która <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> metoda zwróci wartość jest zazwyczaj używany w predykacie `where` — klauzula (`Where` klauzuli w języku Visual Basic) lub bezpośrednie wywołanie <xref:System.Linq.Queryable.Where%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2b287-180">The Boolean value that the <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method returns is typically used in the predicate of a `where` clause (`Where` clause in Visual Basic) or a direct call to the <xref:System.Linq.Queryable.Where%2A> method.</span></span> <span data-ttu-id="2b287-181">W poniższym przykładzie pokazano użycie tego `All` metody.</span><span class="sxs-lookup"><span data-stu-id="2b287-181">The following example demonstrates this use of the `All` method.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#134](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#134)]
 [!code-vb[System.Linq.Queryable#134](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#134)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-182">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-182">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-183">Określa, czy dowolny element <see cref="T:System.Linq.IQueryable`1" /> sekwencja istnieje, lub spełnia warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-183">Determines whether any element of an <see cref="T:System.Linq.IQueryable`1" /> sequence exists or satisfies a condition.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As IQueryable(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.IQueryable&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-184">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-184">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-185">Sekwencja pod kątem jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-185">A sequence to check for being empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-186">Określa, czy sekwencja zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-186">Determines whether a sequence contains any elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-187">
            <see langword="true" /> Jeśli sekwencja źródłowa zawiera wszystkie elementy; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-187">
              <see langword="true" /> if the source sequence contains any elements; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-188"><xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-188">The <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-189">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-189">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-190">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-190">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-191">Oczekiwane zachowanie jest, że Określa ona, czy `source` zawiera wszystkie elementy.</span><span class="sxs-lookup"><span data-stu-id="2b287-191">The expected behavior is that it determines if `source` contains any elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-192">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> do określenia, czy sekwencja zawiera żadnych elementów.</span><span class="sxs-lookup"><span data-stu-id="2b287-192">The following code example demonstrates how to use <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine whether a sequence contains any elements.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#5)]
 [!code-vb[System.Linq.Queryable#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#5)]  
  
 <span data-ttu-id="2b287-193">Wartość logiczna, która <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> metoda zwróci wartość jest zazwyczaj używany w predykacie `where` — klauzula (`Where` klauzuli w języku Visual Basic) lub bezpośrednie wywołanie <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> metody.</span><span class="sxs-lookup"><span data-stu-id="2b287-193">The Boolean value that the <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method returns is typically used in the predicate of a `where` clause (`Where` clause in Visual Basic) or a direct call to the <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method.</span></span> <span data-ttu-id="2b287-194">W poniższym przykładzie pokazano użycie tego `Any` metody.</span><span class="sxs-lookup"><span data-stu-id="2b287-194">The following example demonstrates this use of the `Any` method.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#135](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#135)]
 [!code-vb[System.Linq.Queryable#135](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#135)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-195">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-195">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; bool" Usage="System.Linq.Queryable.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-196">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-196">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-197">A sekwencji, której elementy, aby sprawdzić, czy warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-197">A sequence whose elements to test for a condition.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-198">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-198">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-199">Określa, czy jakiegokolwiek elementu w sekwencji spełniają warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-199">Determines whether any element of a sequence satisfies a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-200">
            <see langword="true" /> Jeśli dowolne elementy w sekwencji źródłowej Przekaż test określony predykat; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-200">
              <see langword="true" /> if any elements in the source sequence pass the test in the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-201">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-201">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-202">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-202">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-203"><xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-203">The <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-204">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-204">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-205">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-205">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-206">Oczekiwane zachowanie jest, że ustala, czy dowolne elementy `source` spełniają warunek określony przez `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-206">The expected behavior is that it determines if any of the elements of `source` satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-207">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> do określenia, czy dowolnego elementu w sekwencji spełniają warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-207">The following code example demonstrates how to use <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to determine whether any element in a sequence satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#6)]
 [!code-vb[System.Linq.Queryable#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-208">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-208">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Append&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Append&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Append&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Append(Of TSource) (source As IQueryable(Of TSource), element As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Append(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource element);" />
      <MemberSignature Language="F#" Value="static member Append : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Append (source, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="element" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsQueryable">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable AsQueryable (this System.Collections.IEnumerable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable AsQueryable(class System.Collections.IEnumerable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsQueryable (source As IEnumerable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable ^ AsQueryable(System::Collections::IEnumerable ^ source);" />
      <MemberSignature Language="F#" Value="static member AsQueryable : System.Collections.IEnumerable -&gt; System.Linq.IQueryable" Usage="System.Linq.Queryable.AsQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.IEnumerable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-209">Sekwencja do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-209">A sequence to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-210">Konwertuje <see cref="T:System.Collections.IEnumerable" /> do <see cref="T:System.Linq.IQueryable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-210">Converts an <see cref="T:System.Collections.IEnumerable" /> to an <see cref="T:System.Linq.IQueryable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-211">
            <see cref="T:System.Linq.IQueryable" /> Reprezentujący sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-211">An <see cref="T:System.Linq.IQueryable" /> that represents the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-212">Jeśli typ `source` implementuje <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%28System.Collections.IEnumerable%29> zwraca go bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="2b287-212">If the type of `source` implements <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%28System.Collections.IEnumerable%29> returns it directly.</span></span> <span data-ttu-id="2b287-213">W przeciwnym razie zwraca <xref:System.Linq.IQueryable%601> , wykonuje zapytania, wywołując równoważne zapytania metod operatorów w <xref:System.Linq.Enumerable> zamiast znajdującymi się na <xref:System.Linq.Queryable>.</span><span class="sxs-lookup"><span data-stu-id="2b287-213">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that executes queries by calling the equivalent query operator methods in <xref:System.Linq.Enumerable> instead of those in <xref:System.Linq.Queryable>.</span></span>  
  
 <span data-ttu-id="2b287-214">Ta metoda zakłada, że `source` implementuje <xref:System.Collections.Generic.IEnumerable%601> dla niektórych `T`.</span><span class="sxs-lookup"><span data-stu-id="2b287-214">This method assumes that `source` implements <xref:System.Collections.Generic.IEnumerable%601> for some `T`.</span></span> <span data-ttu-id="2b287-215">W czasie wykonywania, wynik jest typu <xref:System.Linq.IQueryable%601> dla tego samego `T`.</span><span class="sxs-lookup"><span data-stu-id="2b287-215">At runtime, the result is of type <xref:System.Linq.IQueryable%601> for the same `T`.</span></span> <span data-ttu-id="2b287-216">Ta metoda jest przydatna funkcja w sytuacjach dynamicznych, jeśli nie znasz statycznie typ `T`.</span><span class="sxs-lookup"><span data-stu-id="2b287-216">This method is useful in dynamic scenarios when you do not statically know the type of `T`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b287-217">
            <paramref name="source" /> nie implementuje <see cref="T:System.Collections.Generic.IEnumerable`1" /> dla niektórych <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-217">
              <paramref name="source" /> does not implement <see cref="T:System.Collections.Generic.IEnumerable`1" /> for some <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-218">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-218">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsQueryable&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TElement&gt; AsQueryable&lt;TElement&gt; (this System.Collections.Generic.IEnumerable&lt;TElement&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TElement&gt; AsQueryable&lt;TElement&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsQueryable(Of TElement) (source As IEnumerable(Of TElement)) As IQueryable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TElement&gt; ^ AsQueryable(System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsQueryable : seq&lt;'Element&gt; -&gt; System.Linq.IQueryable&lt;'Element&gt;" Usage="System.Linq.Queryable.AsQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TElement&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">
          <span data-ttu-id="2b287-219">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-219">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-220">Sekwencja do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-220">A sequence to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-221">Konwertuje ogólnego <see cref="T:System.Collections.Generic.IEnumerable`1" /> jako ogólnego <see cref="T:System.Linq.IQueryable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-221">Converts a generic <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a generic <see cref="T:System.Linq.IQueryable`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-222">
            <see cref="T:System.Linq.IQueryable`1" /> Reprezentujący sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-222">An <see cref="T:System.Linq.IQueryable`1" /> that represents the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-223">Jeśli typ `source` implementuje <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> zwraca go bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="2b287-223">If the type of `source` implements <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> returns it directly.</span></span> <span data-ttu-id="2b287-224">W przeciwnym razie zwraca <xref:System.Linq.IQueryable%601> , wykonuje zapytania, wywołując równoważne zapytania metod operatorów w <xref:System.Linq.Enumerable> zamiast znajdującymi się na <xref:System.Linq.Queryable>.</span><span class="sxs-lookup"><span data-stu-id="2b287-224">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that executes queries by calling the equivalent query operator methods in <xref:System.Linq.Enumerable> instead of those in <xref:System.Linq.Queryable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-225">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> przekonwertować <xref:System.Collections.Generic.IEnumerable%601> do <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-225">The following code example demonstrates how to use <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> to convert an <xref:System.Collections.Generic.IEnumerable%601> to an <xref:System.Linq.IQueryable%601>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#125](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#125)]
 [!code-vb[System.Linq.Queryable#125](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#125)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-226">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-226">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Average">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-227">Oblicza średnią sekwencję wartości liczbowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-227">Computes the average of a sequence of numeric values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static decimal Average (this System.Linq.IQueryable&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average(class System.Linq.IQueryable`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::IQueryable&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-228">Sekwencja <see cref="T:System.Decimal" /> wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-228">A sequence of <see cref="T:System.Decimal" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-229">Oblicza średnią sekwencji <see cref="T:System.Decimal" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-229">Computes the average of a sequence of <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-230">Średnia sekwencji wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-230">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-231"><xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> sam.</span><span class="sxs-lookup"><span data-stu-id="2b287-231">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> itself.</span></span> <span data-ttu-id="2b287-232">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-232">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-233">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-233">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-234">Oczekiwane zachowanie jest obliczana średnią z wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-234">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-235">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> do obliczenia średniej je sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="2b287-235">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-236">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-236">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-237">
            <paramref name="source" /> nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-237">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;double&gt; -&gt; double" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-238">Sekwencja <see cref="T:System.Double" /> wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-238">A sequence of <see cref="T:System.Double" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-239">Oblicza średnią sekwencji <see cref="T:System.Double" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-239">Computes the average of a sequence of <see cref="T:System.Double" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-240">Średnia sekwencji wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-240">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-241"><xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> sam.</span><span class="sxs-lookup"><span data-stu-id="2b287-241">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> itself.</span></span> <span data-ttu-id="2b287-242">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-242">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-243">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-243">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-244">Oczekiwane zachowanie jest obliczana średnią z wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-244">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-245">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> do obliczenia średniej je sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="2b287-245">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-246">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-246">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-247">
            <paramref name="source" /> nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-247">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Integer)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;int&gt; -&gt; double" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-248">Sekwencja <see cref="T:System.Int32" /> wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-248">A sequence of <see cref="T:System.Int32" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-249">Oblicza średnią sekwencji <see cref="T:System.Int32" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-249">Computes the average of a sequence of <see cref="T:System.Int32" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-250">Średnia sekwencji wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-250">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-251"><xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> sam.</span><span class="sxs-lookup"><span data-stu-id="2b287-251">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> itself.</span></span> <span data-ttu-id="2b287-252">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-252">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-253">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-253">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-254">Oczekiwane zachowanie jest obliczana średnią z wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-254">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-255">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> do obliczenia średniej je sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="2b287-255">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-256">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-256">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-257">
            <paramref name="source" /> nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-257">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Long)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;int64&gt; -&gt; double" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-258">Sekwencja <see cref="T:System.Int64" /> wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-258">A sequence of <see cref="T:System.Int64" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-259">Oblicza średnią sekwencji <see cref="T:System.Int64" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-259">Computes the average of a sequence of <see cref="T:System.Int64" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-260">Średnia sekwencji wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-260">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-261"><xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> sam.</span><span class="sxs-lookup"><span data-stu-id="2b287-261">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> itself.</span></span> <span data-ttu-id="2b287-262">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-262">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-263">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-263">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-264">Oczekiwane zachowanie jest obliczana średnią z wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-264">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-265">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> do obliczenia średniej je sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="2b287-265">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-266">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-266">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-267">
            <paramref name="source" /> nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-267">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-268">Sekwencja nullable <see cref="T:System.Decimal" /> wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-268">A sequence of nullable <see cref="T:System.Decimal" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-269">Oblicza średnią sekwencji dopuszczającego wartość null <see cref="T:System.Decimal" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-269">Computes the average of a sequence of nullable <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-270">Średnia sekwencja wartości lub <see langword="null" /> Jeśli sekwencja źródłowa jest pusta lub zawiera tylko <see langword="null" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-270">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-271"><xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> sam.</span><span class="sxs-lookup"><span data-stu-id="2b287-271">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> itself.</span></span> <span data-ttu-id="2b287-272">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-272">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-273">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-273">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-274">Oczekiwane zachowanie jest obliczana średnią z wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-274">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-275">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> do obliczenia średniej je sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="2b287-275">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-276">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-276">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-277">Sekwencja nullable <see cref="T:System.Double" /> wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-277">A sequence of nullable <see cref="T:System.Double" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-278">Oblicza średnią sekwencji dopuszczającego wartość null <see cref="T:System.Double" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-278">Computes the average of a sequence of nullable <see cref="T:System.Double" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-279">Średnia sekwencja wartości lub <see langword="null" /> Jeśli sekwencja źródłowa jest pusta lub zawiera tylko <see langword="null" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-279">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-280"><xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> sam.</span><span class="sxs-lookup"><span data-stu-id="2b287-280">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> itself.</span></span> <span data-ttu-id="2b287-281">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-281">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-282">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-282">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-283">Oczekiwane zachowanie jest obliczana średnią z wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-283">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-284">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> do obliczenia średniej je sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="2b287-284">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-285">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-285">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Integer))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-286">Sekwencja nullable <see cref="T:System.Int32" /> wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-286">A sequence of nullable <see cref="T:System.Int32" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-287">Oblicza średnią sekwencji dopuszczającego wartość null <see cref="T:System.Int32" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-287">Computes the average of a sequence of nullable <see cref="T:System.Int32" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-288">Średnia sekwencja wartości lub <see langword="null" /> Jeśli sekwencja źródłowa jest pusta lub zawiera tylko <see langword="null" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-288">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-289"><xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> sam.</span><span class="sxs-lookup"><span data-stu-id="2b287-289">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> itself.</span></span> <span data-ttu-id="2b287-290">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-290">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-291">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-291">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-292">Oczekiwane zachowanie jest obliczana średnią z wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-292">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-293">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> do obliczenia średniej je sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="2b287-293">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-294">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-294">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Long))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-295">Sekwencja nullable <see cref="T:System.Int64" /> wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-295">A sequence of nullable <see cref="T:System.Int64" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-296">Oblicza średnią sekwencji dopuszczającego wartość null <see cref="T:System.Int64" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-296">Computes the average of a sequence of nullable <see cref="T:System.Int64" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-297">Średnia sekwencja wartości lub <see langword="null" /> Jeśli sekwencja źródłowa jest pusta lub zawiera tylko <see langword="null" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-297">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-298"><xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> sam.</span><span class="sxs-lookup"><span data-stu-id="2b287-298">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> itself.</span></span> <span data-ttu-id="2b287-299">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-299">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-300">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-300">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-301">Oczekiwane zachowanie jest obliczana średnią z wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-301">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-302">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> do obliczenia średniej je sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="2b287-302">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-303">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-303">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-304">Sekwencja nullable <see cref="T:System.Single" /> wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-304">A sequence of nullable <see cref="T:System.Single" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-305">Oblicza średnią sekwencji dopuszczającego wartość null <see cref="T:System.Single" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-305">Computes the average of a sequence of nullable <see cref="T:System.Single" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-306">Średnia sekwencja wartości lub <see langword="null" /> Jeśli sekwencja źródłowa jest pusta lub zawiera tylko <see langword="null" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-306">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-307"><xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> sam.</span><span class="sxs-lookup"><span data-stu-id="2b287-307">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> itself.</span></span> <span data-ttu-id="2b287-308">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-308">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-309">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-309">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-310">Oczekiwane zachowanie jest obliczana średnią z wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-310">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-311">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> do obliczenia średniej je sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="2b287-311">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-312">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-312">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static float Average (this System.Linq.IQueryable&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average(class System.Linq.IQueryable`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::IQueryable&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;single&gt; -&gt; single" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-313">Sekwencja <see cref="T:System.Single" /> wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-313">A sequence of <see cref="T:System.Single" /> values to calculate the average of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-314">Oblicza średnią sekwencji <see cref="T:System.Single" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-314">Computes the average of a sequence of <see cref="T:System.Single" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-315">Średnia sekwencji wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-315">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-316"><xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> sam.</span><span class="sxs-lookup"><span data-stu-id="2b287-316">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> itself.</span></span> <span data-ttu-id="2b287-317">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-317">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-318">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-318">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-319">Oczekiwane zachowanie jest obliczana średnią z wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-319">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-320">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> do obliczenia średniej je sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="2b287-320">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-321">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-321">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-322">
            <paramref name="source" /> nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-322">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Decimal))) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Decimal&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, decimal&gt;&gt; -&gt; decimal" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-323">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-323">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-324">Sekwencja wartości, które są używane do obliczania średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-324">A sequence of values that are used to calculate an average.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-325">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-325">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-326">Oblicza średnią sekwencji <see cref="T:System.Decimal" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-326">Computes the average of a sequence of <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-327">Średnia sekwencji wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-327">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-328">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-328">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-329">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-329">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-330"><xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-330">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-331">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-331">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-332">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-332">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-333">Oczekiwane zachowanie jest obliczana średnią z wartości w `source` po wywołaniu `selector` w każdej wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-333">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-334">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> do obliczenia średniej <xref:System.String> długości w kolejności wartości typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2b287-334">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-335">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-335">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-336">
            <paramref name="source" /> nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-336">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Double))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, double&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, double&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-337">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-337">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-338">Sekwencja wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-338">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-339">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-339">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-340">Oblicza średnią sekwencji <see cref="T:System.Double" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-340">Computes the average of a sequence of <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-341">Średnia sekwencji wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-341">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-342">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-342">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-343">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-343">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-344"><xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-344">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-345">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-345">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-346">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-346">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-347">Oczekiwane zachowanie jest obliczana średnią z wartości w `source` po wywołaniu `selector` w każdej wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-347">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-348">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> do obliczenia średniej <xref:System.String> długości w kolejności wartości typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2b287-348">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-349">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-349">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-350">
            <paramref name="source" /> nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-350">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-351">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-351">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-352">Sekwencja wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-352">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-353">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-353">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-354">Oblicza średnią sekwencji <see cref="T:System.Int32" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-354">Computes the average of a sequence of <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-355">Średnia sekwencji wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-355">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-356">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-356">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-357">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-357">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-358"><xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-358">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-359">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-359">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-360">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-360">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-361">Oczekiwane zachowanie jest obliczana średnią z wartości w `source` po wywołaniu `selector` w każdej wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-361">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-362">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> do obliczenia średniej <xref:System.String> długości w kolejności wartości typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2b287-362">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-363">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-363">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-364">
            <paramref name="source" /> nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-364">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Long))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, long&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int64&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-365">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-365">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-366">Sekwencja wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-366">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-367">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-367">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-368">Oblicza średnią sekwencji <see cref="T:System.Int64" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-368">Computes the average of a sequence of <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-369">Średnia sekwencji wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-369">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-370">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-370">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-371">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-371">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-372"><xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-372">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-373">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-373">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-374">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-374">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-375">Oczekiwane zachowanie jest obliczana średnią z wartości w `source` po wywołaniu `selector` w każdej wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-375">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-376">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> do obliczenia średniej <xref:System.String> długości w kolejności wartości typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2b287-376">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-377">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-377">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-378">
            <paramref name="source" /> nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-378">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;decimal&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Decimal)))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;decimal&gt;&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-379">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-379">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-380">Sekwencja wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-380">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-381">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-381">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-382">Oblicza średnią sekwencji dopuszczającego wartość null <see cref="T:System.Decimal" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-382">Computes the average of a sequence of nullable <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-383">Średnia sekwencja wartości lub <see langword="null" /> Jeśli <paramref name="source" /> sekwencja jest pusta lub zawiera tylko <see langword="null" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-383">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-384">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-384">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-385">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-385">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-386"><xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-386">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-387">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-387">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-388">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-388">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-389">Oczekiwane zachowanie jest obliczana średnią z wartości w `source` po wywołaniu `selector` w każdej wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-389">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-390">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> do obliczenia średniej <xref:System.String> długości w kolejności wartości typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2b287-390">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-391">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-391">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;double&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Double)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;double&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;double&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-392">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-392">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-393">Sekwencja wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-393">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-394">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-394">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-395">Oblicza średnią sekwencji dopuszczającego wartość null <see cref="T:System.Double" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-395">Computes the average of a sequence of nullable <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-396">Średnia sekwencja wartości lub <see langword="null" /> Jeśli <paramref name="source" /> sekwencja jest pusta lub zawiera tylko <see langword="null" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-396">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-397">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-397">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-398">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-398">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-399"><xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-399">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-400">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-400">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-401">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-401">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-402">Oczekiwane zachowanie jest obliczana średnią z wartości w `source` po wywołaniu `selector` w każdej wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-402">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-403">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> do obliczenia średniej <xref:System.String> długości w kolejności wartości typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2b287-403">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-404">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-404">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;int&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Integer)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;int&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-405">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-405">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-406">Sekwencja wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-406">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-407">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-407">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-408">Oblicza średnią sekwencji dopuszczającego wartość null <see cref="T:System.Int32" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-408">Computes the average of a sequence of nullable <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-409">Średnia sekwencja wartości lub <see langword="null" /> Jeśli <paramref name="source" /> sekwencja jest pusta lub zawiera tylko <see langword="null" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-409">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-410">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-410">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-411">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-411">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-412"><xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-412">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-413">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-413">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-414">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-414">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-415">Oczekiwane zachowanie jest obliczana średnią z wartości w `source` po wywołaniu `selector` w każdej wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-415">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-416">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> do obliczenia średniej <xref:System.String> długości w kolejności wartości typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2b287-416">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-417">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-417">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;long&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Long)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;long&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int64&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-418">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-418">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-419">Sekwencja wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-419">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-420">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-420">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-421">Oblicza średnią sekwencji dopuszczającego wartość null <see cref="T:System.Int64" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-421">Computes the average of a sequence of nullable <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-422">Średnia sekwencja wartości lub <see langword="null" /> Jeśli <paramref name="source" /> sekwencja jest pusta lub zawiera tylko <see langword="null" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-422">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-423">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-423">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-424">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-424">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-425"><xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-425">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-426">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-426">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-427">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-427">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-428">Oczekiwane zachowanie jest obliczana średnią z wartości w `source` po wywołaniu `selector` w każdej wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-428">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-429">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> do obliczenia średniej <xref:System.String> długości w kolejności wartości typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2b287-429">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-430">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-430">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;float&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Single)))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;float&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;single&gt;&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-431">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-431">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-432">Sekwencja wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-432">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-433">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-433">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-434">Oblicza średnią sekwencji dopuszczającego wartość null <see cref="T:System.Single" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-434">Computes the average of a sequence of nullable <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-435">Średnia sekwencja wartości lub <see langword="null" /> Jeśli <paramref name="source" /> sekwencja jest pusta lub zawiera tylko <see langword="null" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-435">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-436">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-436">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-437">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-437">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-438"><xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-438">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-439">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-439">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-440">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-440">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-441">Oczekiwane zachowanie jest obliczana średnią z wartości w `source` po wywołaniu `selector` w każdej wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-441">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-442">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> do obliczenia średniej <xref:System.String> długości w kolejności wartości typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2b287-442">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-443">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-443">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Single))) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, float&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, single&gt;&gt; -&gt; single" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-444">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-444">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-445">Sekwencja wartości do obliczenia średniej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-445">A sequence of values to calculate the average of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-446">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-446">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-447">Oblicza średnią sekwencji <see cref="T:System.Single" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-447">Computes the average of a sequence of <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-448">Średnia sekwencji wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-448">The average of the sequence of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-449">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-449">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-450">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-450">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-451"><xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-451">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-452">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-452">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-453">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-453">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-454">Oczekiwane zachowanie jest obliczana średnią z wartości w `source` po wywołaniu `selector` w każdej wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-454">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-455">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> do obliczenia średniej <xref:System.String> długości w kolejności wartości typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2b287-455">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-456">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-456">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-457">
            <paramref name="source" /> nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-457">
              <paramref name="source" /> contains no elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As IQueryable) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Cast(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Linq.IQueryable -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-458">Na typ docelowy konwersji elementy <c>źródła</c> do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-458">The type to convert the elements of <c>source</c> to.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-459">
            <see cref="T:System.Linq.IQueryable" /> Zawiera elementy, które ma zostać przekonwertowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-459">The <see cref="T:System.Linq.IQueryable" /> that contains the elements to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-460">Konwertuje elementy <see cref="T:System.Linq.IQueryable" /> do określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-460">Converts the elements of an <see cref="T:System.Linq.IQueryable" /> to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-461">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierającą każdy element przekonwertować na określony typ sekwencji źródłowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-461">An <see cref="T:System.Linq.IQueryable`1" /> that contains each element of the source sequence converted to the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-462"><xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-462">The <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-463">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-463">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-464">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-464">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-465">To oczekiwane zachowanie, konwertuje wartości w `source` na typ `TResult`.</span><span class="sxs-lookup"><span data-stu-id="2b287-465">The expected behavior is that it converts the values in `source` to type `TResult`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-466">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> do konwersji obiektów w sekwencji na typ <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="2b287-466">The following code example demonstrates how to use <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> to convert objects in a sequence to type <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#19)]
 [!code-vb[System.Linq.Queryable#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-467">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-467">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="2b287-468">Nie można rzutować elementu w sekwencji na typ <paramref name="TResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-468">An element in the sequence cannot be cast to type <paramref name="TResult" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Concat&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Concat&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Concat&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Concat(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Concat (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-469">Typ elementów sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-469">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="2b287-470">Pierwsza sekwencja do łączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-470">The first sequence to concatenate.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="2b287-471">Sekwencja do łączenia się do pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-471">The sequence to concatenate to the first sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-472">Łączy dwie sekwencje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-472">Concatenates two sequences.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-473">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierającą połączone elementy dwóch sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-473">An <see cref="T:System.Linq.IQueryable`1" /> that contains the concatenated elements of the two input sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-474"><xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-474">The <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-475">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-475">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="2b287-476">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> jest zależna od implementacji typu `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-476">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="2b287-477">Oczekiwane zachowanie jest elementów w `source2` są łączone z właściwościami `source1` do utworzenia nowej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-477">The expected behavior is that the elements in `source2` are concatenated to those of `source1` to create a new sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-478">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> do łączenia dwóch sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-478">The following code example demonstrates how to use <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to concatenate two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#20)]
 [!code-vb[System.Linq.Queryable#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-479">
            <paramref name="source1" /> lub <paramref name="source2" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-479">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-480">Określa, czy <see cref="T:System.Linq.IQueryable`1" /> zawiera określony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-480">Determines whether an <see cref="T:System.Linq.IQueryable`1" /> contains a specified element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As IQueryable(Of TSource), item As TSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource item);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; bool" Usage="System.Linq.Queryable.Contains (source, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="item" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-481">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-481">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-482">
            <see cref="T:System.Linq.IQueryable`1" /> w którym można zlokalizować <c>elementu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-482">An <see cref="T:System.Linq.IQueryable`1" /> in which to locate <c>item</c>.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2b287-483">Obiekt do zlokalizowania w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-483">The object to locate in the sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-484">Określa, czy sekwencja zawiera określony element przy użyciu domyślny moduł porównujący równość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-484">Determines whether a sequence contains a specified element by using the default equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-485">
            <see langword="true" /> Jeśli sekwencji wejściowych zawiera element, który ma określoną wartość, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-485">
              <see langword="true" /> if the input sequence contains an element that has the specified value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-486"><xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-486">The <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-487">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-487">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-488">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-488">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-489">Oczekiwane zachowanie jest, że Określa ona, czy `source` zawiera `item`.</span><span class="sxs-lookup"><span data-stu-id="2b287-489">The expected behavior is that it determines if `source` contains `item`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-490">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> do określenia, czy sekwencja zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="2b287-490">The following code example demonstrates how to use <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to determine whether a sequence contains a specific element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#21)]
 [!code-vb[System.Linq.Queryable#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-491">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-491">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource item, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource item, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As IQueryable(Of TSource), item As TSource, comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource item, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.IQueryable&lt;'Source&gt; * 'Source * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.Contains (source, item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="item" Type="TSource" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-492">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-492">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-493">
            <see cref="T:System.Linq.IQueryable`1" /> w którym można zlokalizować <c>elementu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-493">An <see cref="T:System.Linq.IQueryable`1" /> in which to locate <c>item</c>.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="2b287-494">Obiekt do zlokalizowania w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-494">The object to locate in the sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-495">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Do porównywania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-495">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-496">Określa, czy sekwencja zawiera określony element przy użyciu określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-496">Determines whether a sequence contains a specified element by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-497">
            <see langword="true" /> Jeśli sekwencji wejściowych zawiera element, który ma określoną wartość, a w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-497">
              <see langword="true" /> if the input sequence contains an element that has the specified value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-498"><xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-498">The <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-499">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-499">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-500">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-500">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-501">Oczekiwane zachowanie jest, że Określa ona, czy `source` zawiera `item` przy użyciu `comparer` do porównywania wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-501">The expected behavior is that it determines if `source` contains `item` by using `comparer` to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-502">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-502">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Count&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-503">Zwraca liczbę elementów w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-503">Returns the number of elements in a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As IQueryable(Of TSource)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.IQueryable&lt;'Source&gt; -&gt; int" Usage="System.Linq.Queryable.Count source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-504">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-504">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-505">
            <see cref="T:System.Linq.IQueryable`1" /> Zawiera elementy do zliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-505">The <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-506">Zwraca liczbę elementów w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-506">Returns the number of elements in a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-507">Liczba elementów w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-507">The number of elements in the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-508"><xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-508">The <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-509">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-509">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-510">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-510">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-511">Oczekiwane zachowanie jest liczy liczbę elementów w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-511">The expected behavior is that it counts the number of items in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-512">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> zliczania elementów w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-512">The following code example demonstrates how to use <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to count the elements in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#22)]
 [!code-vb[System.Linq.Queryable#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-513">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-513">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-514">Liczba elementów w <paramref name="source" /> jest większy niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-514">The number of elements in <paramref name="source" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; int" Usage="System.Linq.Queryable.Count (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-515">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-515">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-516">
            <see cref="T:System.Linq.IQueryable`1" /> Zawiera elementy do zliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-516">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-517">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-517">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-518">Zwraca liczbę elementów w określonej sekwencji, który spełnia warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-518">Returns the number of elements in the specified sequence that satisfies a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-519">Liczba elementów w sekwencji, który spełnia warunek w funkcji predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-519">The number of elements in the sequence that satisfies the condition in the predicate function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-520">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-520">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-521">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-521">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-522"><xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-522">The <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-523">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-523">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-524">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-524">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-525">Oczekiwane zachowanie jest liczy liczbę elementów w `source` które spełniają warunek określony przez `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-525">The expected behavior is that it counts the number of items in `source` that satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-526">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> zliczania elementów w sekwencji, które spełniają warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-526">The following code example demonstrates how to use <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to count the elements in a sequence that satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#23)]
 [!code-vb[System.Linq.Queryable#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-527">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-527">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-528">Liczba elementów w <paramref name="source" /> jest większy niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-528">The number of elements in <paramref name="source" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-529">Zwraca elementy w sekwencji lub zbierania singleton domyślne wartości, jeśli sekwencja jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-529">Returns the elements in a sequence or a default valued singleton collection if the sequence is empty.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.IQueryable&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.DefaultIfEmpty source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-530">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-530">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-531">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrócenia wartości domyślnej, jeśli puste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-531">The <see cref="T:System.Linq.IQueryable`1" /> to return a default value for if empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-532">Zwraca elementy w określonej sekwencji lub wartość domyślną parametru typu w zbierania singleton, jeśli sekwencja jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-532">Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-533">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający <see langword="default" />(<paramref name="TSource" />) Jeśli <paramref name="source" /> jest pusty; w przeciwnym razie <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-533">An <see cref="T:System.Linq.IQueryable`1" /> that contains <see langword="default" />(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-534"><xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-534">The <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-535">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-535">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-536">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-536">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-537">Oczekiwane zachowanie jest, że zwraca `source` Jeśli nie jest pusty.</span><span class="sxs-lookup"><span data-stu-id="2b287-537">The expected behavior is that it returns `source` if it is not empty.</span></span> <span data-ttu-id="2b287-538">W przeciwnym razie zwraca <xref:System.Linq.IQueryable%601> zawierający `default(TSource)`.</span><span class="sxs-lookup"><span data-stu-id="2b287-538">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that contains `default(TSource)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-539">Poniższe przykłady kodu przedstawiają sposoby użycia <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> podać wartość domyślna w przypadku, gdy sekwencja źródłowa jest pusta.</span><span class="sxs-lookup"><span data-stu-id="2b287-539">The following code examples demonstrate how to use <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to provide a default value in case the source sequence is empty.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#24)]
 [!code-vb[System.Linq.Queryable#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-540">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-540">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As IQueryable(Of TSource), defaultValue As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource defaultValue);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.DefaultIfEmpty (source, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="defaultValue" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-541">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-541">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-542">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrócenia określona wartość, jeśli jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-542">The <see cref="T:System.Linq.IQueryable`1" /> to return the specified value for if empty.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="2b287-543">Wartość zwracana, jeśli sekwencja jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-543">The value to return if the sequence is empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-544">Zwraca elementy w określonej sekwencji lub określoną wartość w zbierania singleton, jeśli sekwencja jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-544">Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-545">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający <paramref name="defaultValue" /> Jeśli <paramref name="source" /> jest pusty; w przeciwnym razie <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-545">An <see cref="T:System.Linq.IQueryable`1" /> that contains <paramref name="defaultValue" /> if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-546"><xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-546">The <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-547">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-547">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-548">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-548">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-549">Oczekiwane zachowanie jest, że zwraca `source` Jeśli nie jest pusty.</span><span class="sxs-lookup"><span data-stu-id="2b287-549">The expected behavior is that it returns `source` if it is not empty.</span></span> <span data-ttu-id="2b287-550">W przeciwnym razie zwraca <xref:System.Linq.IQueryable%601> zawierający `defaultValue`.</span><span class="sxs-lookup"><span data-stu-id="2b287-550">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that contains `defaultValue`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-551">Poniższy przykład kodu pokazuje sytuacji, w której jest przydatne do wywołania <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> w [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] zapytania.</span><span class="sxs-lookup"><span data-stu-id="2b287-551">The following code example shows a situation in which it is useful to call <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query.</span></span> <span data-ttu-id="2b287-552">Wartość domyślna jest przekazywany do <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> w tym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="2b287-552">A default value is passed to <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> in this example.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#25)]
 [!code-vb[System.Linq.Queryable#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-553">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-553">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Distinct&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-554">Zwraca odrębne elementy z sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-554">Returns distinct elements from a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Distinct(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.IQueryable&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Distinct source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-555">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-555">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-556">
            <see cref="T:System.Linq.IQueryable`1" /> Do Usuń duplikaty z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-556">The <see cref="T:System.Linq.IQueryable`1" /> to remove duplicates from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-557">Zwraca odrębne elementy z sekwencji za pomocą domyślny moduł porównujący równość do porównywania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-557">Returns distinct elements from a sequence by using the default equality comparer to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-558">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający odrębne elementy z <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-558">An <see cref="T:System.Linq.IQueryable`1" /> that contains distinct elements from <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-559"><xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-559">The <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-560">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-560">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-561">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-561">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-562">To oczekiwane zachowanie, zwraca nieuporządkowaną sekwencji unikatowych elementów `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-562">The expected behavior is that it returns an unordered sequence of the unique items in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-563">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> zwracać różne elementy z sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-563">The following code example demonstrates how to use <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return distinct elements from a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#27)]
 [!code-vb[System.Linq.Queryable#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-564">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-564">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As IQueryable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Distinct(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.IQueryable&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Distinct (source, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-565">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-565">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-566">
            <see cref="T:System.Linq.IQueryable`1" /> Do Usuń duplikaty z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-566">The <see cref="T:System.Linq.IQueryable`1" /> to remove duplicates from.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-567">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Do porównywania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-567">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-568">Zwraca odrębne elementy z sekwencji przy użyciu określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> do porównywania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-568">Returns distinct elements from a sequence by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-569">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający odrębne elementy z <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-569">An <see cref="T:System.Linq.IQueryable`1" /> that contains distinct elements from <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-570"><xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-570">The <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-571">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-571">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-572">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-572">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-573">To oczekiwane zachowanie, zwraca nieuporządkowaną sekwencji unikatowych elementów `source` przy użyciu `comparer` do porównywania wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-573">The expected behavior is that it returns an unordered sequence of the unique items in `source` by using `comparer` to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-574">
            <paramref name="source" /> lub <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-574">
              <paramref name="source" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAt&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAt&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of TSource) (source As IQueryable(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAt(System::Linq::IQueryable&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAt : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.Queryable.ElementAt (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-575">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-575">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-576">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrotu elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-576">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2b287-577">Liczony od zera indeks elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-577">The zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-578">Zwraca element z określonym indeksem w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-578">Returns the element at a specified index in a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-579">Element w określonej pozycji w <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-579">The element at the specified position in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-580"><xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-580">The <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-581">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-581">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-582">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-582">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-583">Oczekiwane zachowanie jest, że zwraca ona elementów w położeniu `index` w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-583">The expected behavior is that it returns the item at position `index` in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-584">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> do zwrotu elementu na określonej pozycji w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-584">The following code example demonstrates how to use <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to return an element at a specific position in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#28)]
 [!code-vb[System.Linq.Queryable#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-585">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-585">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b287-586">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-586">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAtOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAtOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of TSource) (source As IQueryable(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAtOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAtOrDefault : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.Queryable.ElementAtOrDefault (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-587">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-587">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-588">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrotu elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-588">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="2b287-589">Liczony od zera indeks elementu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-589">The zero-based index of the element to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-590">Zwraca element pod określonym indeksem w sekwencji lub wartość domyślną, jeśli indeks jest poza zakresem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-590">Returns the element at a specified index in a sequence or a default value if the index is out of range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-591">
            <c>domyślne</c>(<paramref name="TSource" />) Jeśli <paramref name="index" /> znajduje się poza granicami <paramref name="source" />; w przeciwnym razie element w określonej pozycji w <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-591">
              <c>default</c>(<paramref name="TSource" />) if <paramref name="index" /> is outside the bounds of <paramref name="source" />; otherwise, the element at the specified position in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-592"><xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-592">The <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-593">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-593">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-594">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-594">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-595">Oczekiwane zachowanie jest, że zwraca ona elementów w położeniu `index` w `source`, lub `default(TSource)` Jeśli `index` znajduje się poza granicami `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-595">The expected behavior is that it returns the item at position `index` in `source`, or `default(TSource)` if `index` is outside the bounds of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-596">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="2b287-596">The following code example demonstrates how to use <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29>.</span></span> <span data-ttu-id="2b287-597">W tym przykładzie użyto wartości `index` jest poza granicami sekwencji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-597">This example uses a value for `index` that is outside the bounds of the source sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#29)]
 [!code-vb[System.Linq.Queryable#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-598">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-598">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Except&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-599">Tworzy różnicy dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-599">Produces the set difference of two sequences.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Except(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Except (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-600">Typ elementów sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-600">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="2b287-601">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy, które nie znajdują się również w <c>źródło2</c> zostaną zwrócone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-601">An <see cref="T:System.Linq.IQueryable`1" /> whose elements that are not also in <c>source2</c> will be returned.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="2b287-602">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Którego elementy, które również wystąpić w pierwszej kolejności będą widoczne w zwracanej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-602">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that also occur in the first sequence will not appear in the returned sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-603">Tworzy różnicy dwóch sekwencji za pomocą domyślny moduł porównujący równość do porównywania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-603">Produces the set difference of two sequences by using the default equality comparer to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-604">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający różnicy dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-604">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set difference of the two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-605"><xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-605">The <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-606">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość`source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-606">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the`source1` parameter.</span></span>  
  
 <span data-ttu-id="2b287-607">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> jest zależna od implementacji typu `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-607">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of  the `source1` parameter.</span></span> <span data-ttu-id="2b287-608">Oczekiwane zachowanie jest, że wszystkie elementy w `source1` są zwracane z wyjątkiem tych, które są również w `source2`.</span><span class="sxs-lookup"><span data-stu-id="2b287-608">The expected behavior is that all the elements in `source1` are returned except for those that are also in `source2`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-609">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> do zwrócenia tych elementów, które są wyświetlane tylko w pierwszej sekwencji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-609">The following code example demonstrates how to use <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to return those elements that only appear in the first source sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#34)]
 [!code-vb[System.Linq.Queryable#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-610">
            <paramref name="source1" /> lub <paramref name="source2" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-610">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Except(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Except (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-611">Typ elementów sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-611">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="2b287-612">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy, które nie znajdują się również w <c>źródło2</c> zostaną zwrócone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-612">An <see cref="T:System.Linq.IQueryable`1" /> whose elements that are not also in <c>source2</c> will be returned.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="2b287-613">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Którego elementy, które również wystąpić w pierwszej kolejności będą widoczne w zwracanej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-613">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that also occur in the first sequence will not appear in the returned sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-614">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Do porównywania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-614">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-615">Tworzy różnicy dwóch sekwencji przy użyciu określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> do porównywania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-615">Produces the set difference of two sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-616">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający różnicy dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-616">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set difference of the two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-617"><xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-617">The <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-618">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość`source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-618">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the`source1` parameter.</span></span>  
  
 <span data-ttu-id="2b287-619">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> jest zależna od implementacji typu `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-619">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="2b287-620">Oczekiwane zachowanie jest, że wszystkie elementy w `source1` są zwracane z wyjątkiem tych, które są również w `source2`, i `comparer` służy do porównywania wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-620">The expected behavior is that all the elements in `source1` are returned except for those that are also in `source2`, and `comparer` is used to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-621">
            <paramref name="source1" /> lub <paramref name="source2" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-621">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="First&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-622">Zwraca pierwszy element w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-622">Returns the first element of a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.First source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-623">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-623">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-624">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrócenia pierwszego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-624">The <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-625">Zwraca pierwszy element w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-625">Returns the first element of a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-626">Pierwszy element w <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-626">The first element in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-627"><xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-627">The <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-628">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-628">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-629">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-629">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-630">To oczekiwane zachowanie, zwraca pierwszy element w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-630">The expected behavior is that it returns the first element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-631">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> aby powrócić do pierwszego elementu w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-631">The following code example demonstrates how to use <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return the first element in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#35)]
 [!code-vb[System.Linq.Queryable#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-632">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-632">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-633">Sekwencja źródłowa jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-633">The source sequence is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.First (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-634">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-634">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-635">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrotu elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-635">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-636">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-636">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-637">Zwraca pierwszy element w sekwencji która spełnia określony warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-637">Returns the first element of a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-638">Pierwszy element w <paramref name="source" /> , który przekazuje testu w <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-638">The first element in <paramref name="source" /> that passes the test in <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-639">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-639">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-640">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-640">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-641"><xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-641">The <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-642">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-642">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-643">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-643">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-644">To oczekiwane zachowanie, zwraca pierwszy element w `source` który spełnia warunek określony przez `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-644">The expected behavior is that it returns the first element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-645">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> do zwrócenia pierwszego elementu w sekwencji która spełnia warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-645">The following code example demonstrates how to use <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return the first element of a sequence that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#36](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#36)]
 [!code-vb[System.Linq.Queryable#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#36)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-646">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-646">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-647">Element nie spełnia warunku w <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-647">No element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
          <span data-ttu-id="2b287-648">- lub - sekwencja źródłowa jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-648">-or-  The source sequence is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FirstOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-649">Zwraca pierwszy element sekwencji lub wartość domyślną, jeśli zostanie znaleziony żaden element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-649">Returns the first element of a sequence, or a default value if no element is found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.FirstOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-650">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-650">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-651">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrócenia pierwszego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-651">The <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-652">Zwraca pierwszy element sekwencji lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-652">Returns the first element of a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-653">
            <c>domyślne</c>(<paramref name="TSource" />) Jeśli <paramref name="source" /> jest pusty; w przeciwnym razie pierwszy element w <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-653">
              <c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-654"><xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-654">The <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-655">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-655">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-656">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-656">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-657">To oczekiwane zachowanie, zwraca pierwszy element w `source`, lub wartość domyślną, gdy `source` jest pusty.</span><span class="sxs-lookup"><span data-stu-id="2b287-657">The expected behavior is that it returns the first element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="2b287-658"><xref:System.Linq.Queryable.FirstOrDefault%2A> Metody nie umożliwiają określenie wartości domyślnej zwracana, gdy `source` jest pusty.</span><span class="sxs-lookup"><span data-stu-id="2b287-658">The <xref:System.Linq.Queryable.FirstOrDefault%2A> method does not provide a way to specify the default value to return if `source` is empty.</span></span> <span data-ttu-id="2b287-659">Jeśli chcesz określić inne niż wartości domyślnej `default(TSource)`, użyj <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> metoda zgodnie z opisem w sekcji przykład.</span><span class="sxs-lookup"><span data-stu-id="2b287-659">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-660">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> na pustą sekwencją.</span><span class="sxs-lookup"><span data-stu-id="2b287-660">The following code example demonstrates how to use <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> on an empty sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#37)]
 [!code-vb[System.Linq.Queryable#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#37)]  
  
 <span data-ttu-id="2b287-661">Czasami wartość `default(TSource)` nie jest wartością domyślną, którego chcesz użyć, jeśli kolekcja zawiera żadnych elementów.</span><span class="sxs-lookup"><span data-stu-id="2b287-661">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="2b287-662">Zamiast sprawdzania wyników dla wartości domyślnej niepożądane, a następnie zmieniając go, jeśli to konieczne, możesz użyć <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> metodę, aby określić wartość domyślną, którą chcesz użyć, jeśli kolekcja jest pusta.</span><span class="sxs-lookup"><span data-stu-id="2b287-662">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="2b287-663">Następnie wywołaj <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> można uzyskać pierwszego elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-663">Then, call <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the first element.</span></span> <span data-ttu-id="2b287-664">Poniższy przykład kodu korzysta z obu tych technik uzyskanie domyślną wartość 1, jeśli kolekcja miesięcy liczbowych jest pusta.</span><span class="sxs-lookup"><span data-stu-id="2b287-664">The following code example uses both techniques to obtain a default value of 1 if a collection of numeric months is empty.</span></span> <span data-ttu-id="2b287-665">Całkowitą wartość domyślna to 0, co odpowiada miesiącu, wartość domyślna musi zostać określony jako 1 zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="2b287-665">Because the default value for an integer is 0, which does not correspond to any month, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="2b287-666">Pierwszy zmiennej wynikowej są sprawdzane pod kątem wartość domyślną niepożądane, po wykonaniu zapytania.</span><span class="sxs-lookup"><span data-stu-id="2b287-666">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="2b287-667">Druga zmienna wyników można uzyskać przez wywołanie <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> można określić wartość domyślną 1.</span><span class="sxs-lookup"><span data-stu-id="2b287-667">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#131](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#131)]
 [!code-vb[System.Linq.Queryable#131](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#131)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-668">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-668">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.FirstOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-669">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-669">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-670">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrotu elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-670">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-671">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-671">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-672">Zwraca pierwszy element w sekwencji która spełnia określony warunek, lub wartość domyślną, jeśli taki element nie zostanie znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-672">Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-673">
            <c>domyślne</c>(<paramref name="TSource" />) Jeśli <paramref name="source" /> są puste lub jeśli element nie przekazuje testu określonego przez <paramref name="predicate" />; w przeciwnym razie pierwszy element w <paramref name="source" /> , który przekazuje testu określonego przez <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-673">
              <c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty or if no element passes the test specified by <paramref name="predicate" />; otherwise, the first element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-674">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-674">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-675">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-675">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-676"><xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-676">The <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-677">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-677">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-678">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-678">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-679">To oczekiwane zachowanie, zwraca pierwszy element w `source` który spełnia warunek w `predicate`, lub wartość domyślną, jeśli element nie spełnia warunku.</span><span class="sxs-lookup"><span data-stu-id="2b287-679">The expected behavior is that it returns the first element in `source` that satisfies the condition in `predicate`, or a default value if no element satisfies the condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-680">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , przekazując w predykacie.</span><span class="sxs-lookup"><span data-stu-id="2b287-680">The following code example demonstrates how to use <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> by passing in a predicate.</span></span> <span data-ttu-id="2b287-681">W drugiej kwerendy nie ma żadnego elementu w sekwencji, który spełnia warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-681">In the second query, there is no element in the sequence that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#38](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#38)]
 [!code-vb[System.Linq.Queryable#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-682">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-682">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-683">Grupuje elementy sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-683">Groups the elements of a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IQueryable(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-684">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-684">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-685">Typ klucza zwróconego przez funkcję reprezentowane w <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-685">The type of the key returned by the function represented in <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-686">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy należy pogrupować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-686">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-687">Funkcja wyodrębniania klucza do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-687">A function to extract the key for each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-688">Grupuje elementy sekwencji zgodnie z funkcją określonego selektora kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-688">Groups the elements of a sequence according to a specified key selector function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-689">
            <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt; &gt; </c> w języku C# lub <c>IQueryable (Of IGrouping (Of TKey, TSource))</c> w Visual Basic gdzie każdy <see cref="T:System.Linq.IGrouping`2" /> obiektu zawiera sekwencję obiektów, jak i klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-689">An <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> object contains a sequence of objects and a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-690">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-690">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-691">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-691">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-692"><xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-692">The <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-693">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-693">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-694">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-694">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-695">Oczekiwane zachowanie polega na grup elementów `source` według wartości klucza, który jest uzyskiwany przez `keySelector` dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-695">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-696">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> do grupowania elementów w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-696">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to group the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#14)]
 [!code-vb[System.Linq.Queryable#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-697">
            <paramref name="source" /> lub <paramref name="keySelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-697">
              <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-698">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-698">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-699">Typ klucza zwróconego przez funkcję reprezentowane w <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-699">The type of the key returned by the function represented in <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-700">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy należy pogrupować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-700">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-701">Funkcja wyodrębniania klucza do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-701">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-702">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-702">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-703">Grupuje elementy sekwencji zgodnie z funkcją określonego selektora kluczy i porównuje klucze za pomocą określona funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-703">Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-704">
            <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt; &gt; </c> w języku C# lub <c>IQueryable (Of IGrouping (Of TKey, TSource))</c> w Visual Basic gdzie każdy <see cref="T:System.Linq.IGrouping`2" /> zawiera sekwencję obiektów, jak i klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-704">An <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects and a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-705">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-705">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-706">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-706">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-707"><xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-707">The <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-708">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-708">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-709">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-709">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-710">Oczekiwane zachowanie polega na grup elementów `source` przez wartość klucza.</span><span class="sxs-lookup"><span data-stu-id="2b287-710">The expected behavior is that it groups the elements of `source` by a key value.</span></span> <span data-ttu-id="2b287-711">Wartość klucza jest uzyskiwany przez `keySelector` dla każdego elementu i wartości klucza są porównywane za pomocą `comparer`.</span><span class="sxs-lookup"><span data-stu-id="2b287-711">The key value is obtained by invoking `keySelector` on each element, and key values are compared by using `comparer`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-712">
            <paramref name="source" /> lub <paramref name="keySelector" /> lub <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-712">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement))) As IQueryable(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-713">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-713">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-714">Typ klucza zwróconego przez funkcję reprezentowane w <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-714">The type of the key returned by the function represented in <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="2b287-715">Typ elementów w każdej <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-715">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-716">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy należy pogrupować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-716">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-717">Funkcja wyodrębniania klucza do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-717">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="2b287-718">Funkcja mapy każdego elementu źródłowego do elementu w <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-718">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-719">Grupuje elementy sekwencji zgodnie z projektów elementów dla każdej grupy przy użyciu określonej funkcji i funkcji określonej selektora kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-719">Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-720">
            <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt; &gt; </c> w języku C# lub <c>IQueryable (Of IGrouping (Of TKey, TElement))</c> w Visual Basic gdzie każdy <see cref="T:System.Linq.IGrouping`2" /> zawiera sekwencję obiektów typu <paramref name="TElement" /> i klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-720">An <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects of type <paramref name="TElement" /> and a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-721">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-721">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-722">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-722">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-723"><xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-723">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-724">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-724">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-725">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-725">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-726">Oczekiwane zachowanie polega na grup elementów `source` według wartości klucza, który jest uzyskiwany przez `keySelector` dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-726">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="2b287-727">Wywołuje `elementSelector` dla każdego elementu w celu uzyskania elementu wynik.</span><span class="sxs-lookup"><span data-stu-id="2b287-727">It invokes `elementSelector` on each element to obtain a result element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-728">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> do grupowania elementów w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-728">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> to group the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#39)]
 [!code-vb[System.Linq.Queryable#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-729">
            <paramref name="source" /> lub <paramref name="keySelector" /> lub <paramref name="elementSelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-729">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-730">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-730">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-731">Typ klucza zwróconego przez funkcję reprezentowane w <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-731">The type of the key returned by the function represented in <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="2b287-732">Typ elementów w każdej <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-732">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-733">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy należy pogrupować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-733">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-734">Funkcja wyodrębniania klucza do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-734">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="2b287-735">Funkcja mapy każdego elementu źródłowego do elementu w <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-735">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-736">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-736">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-737">Grupuje elementy sekwencji i projekty elementy dla każdej grupy przy użyciu określonej funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-737">Groups the elements of a sequence and projects the elements for each group by using a specified function.</span>
          </span>
          <span data-ttu-id="2b287-738">Wartości klucza są porównywane za pomocą określona funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-738">Key values are compared by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-739">
            <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt; &gt; </c> w języku C# lub <c>IQueryable (Of IGrouping (Of TKey, TElement))</c> w Visual Basic gdzie każdy <see cref="T:System.Linq.IGrouping`2" /> zawiera sekwencję obiektów typu <paramref name="TElement" /> i klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-739">An <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects of type <paramref name="TElement" /> and a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-740">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-740">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-741">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-741">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-742"><xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-742">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-743">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-743">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-744">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-744">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-745">Oczekiwane zachowanie polega na grup elementów `source` według wartości klucza, który jest uzyskiwany przez `keySelector` dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-745">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="2b287-746">Wartości klucza są porównywane za pomocą `comparer`.</span><span class="sxs-lookup"><span data-stu-id="2b287-746">Key values are compared by using `comparer`.</span></span> <span data-ttu-id="2b287-747">`elementSelector` Parametru zostanie wywołana dla każdego elementu w celu uzyskania elementu wynik.</span><span class="sxs-lookup"><span data-stu-id="2b287-747">The `elementSelector` parameter is invoked on each element to obtain a result element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-748">
            <paramref name="source" /> lub <paramref name="keySelector" /> lub <paramref name="elementSelector" /> lub <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-748">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-749">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-749">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-750">Typ klucza zwróconego przez funkcję reprezentowane w <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-750">The type of the key returned by the function represented in <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-751">Typ wartości wyników zwróconych przez <c>resultSelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-751">The type of the result value returned by <c>resultSelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-752">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy należy pogrupować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-752">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-753">Funkcja wyodrębniania klucza do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-753">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="2b287-754">Funkcja tworzenia wartości wyniku z każdej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-754">A function to create a result value from each group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-755">Grupuje elementy sekwencji zgodnie z określoną kluczową funkcją wyboru i tworzy wartość wyniku z każdej grupy i klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-755">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-756">
            <c>T:System.Linq.IQueryable'1</c> ma argument typu <paramref name="TResult" /> i gdzie każdy element przedstawia projekcję nad grupą i jego kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-756">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-757">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-757">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-758">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-758">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-759"><xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-759">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-760">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-760">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-761">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-761">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-762">Oczekiwane zachowanie polega na grup elementów `source` według wartości klucza, który jest uzyskiwany przez `keySelector` dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-762">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="2b287-763">`resultSelector` Parametr jest używany do uzyskiwania wartości wyniku z każdej grupy i klucza.</span><span class="sxs-lookup"><span data-stu-id="2b287-763">The `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-764">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> Grupuj elementy sekwencji do projektu kolejności wyników typu `TResult`.</span><span class="sxs-lookup"><span data-stu-id="2b287-764">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> to group the elements of a sequence and project a sequence of results of type `TResult`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#15)]
 [!code-vb[System.Linq.Queryable#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-765">
            <paramref name="source" /> lub <paramref name="keySelector" /> lub <paramref name="resultSelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-765">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-766">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-766">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-767">Typ klucza zwróconego przez funkcję reprezentowane w <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-767">The type of the key returned by the function represented in <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-768">Typ wartości wyników zwróconych przez <c>resultSelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-768">The type of the result value returned by <c>resultSelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-769">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy należy pogrupować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-769">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-770">Funkcja wyodrębniania klucza do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-770">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="2b287-771">Funkcja tworzenia wartości wyniku z każdej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-771">A function to create a result value from each group.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-772">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-772">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-773">Grupuje elementy sekwencji zgodnie z określoną kluczową funkcją wyboru i tworzy wartość wyniku z każdej grupy i klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-773">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
          <span data-ttu-id="2b287-774">Klucze są porównywane za pomocą określona funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-774">Keys are compared by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-775">
            <c>T:System.Linq.IQueryable'1</c> ma argument typu <paramref name="TResult" /> i gdzie każdy element przedstawia projekcję nad grupą i jego kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-775">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-776">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-776">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-777">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-777">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-778"><xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-778">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-779">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-779">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-780">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-780">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-781">Oczekiwane zachowanie polega na grup elementów `source` według wartości kluczy, które są uzyskiwane przez wywołanie `keySelector` dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-781">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="2b287-782">`comparer` Parametr jest używany do porównywania kluczy i `resultSelector` parametr jest używany do uzyskiwania wartości wyniku z każdej grupy i klucza.</span><span class="sxs-lookup"><span data-stu-id="2b287-782">The `comparer` parameter is used to compare keys and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-783">
            <paramref name="source" /> lub <paramref name="keySelector" /> lub <paramref name="resultSelector" /> lub <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-783">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="resultSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TElement), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-784">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-784">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-785">Typ klucza zwróconego przez funkcję reprezentowane w <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-785">The type of the key returned by the function represented in <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="2b287-786">Typ elementów w każdej <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-786">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-787">Typ wartości wyników zwróconych przez <c>resultSelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-787">The type of the result value returned by <c>resultSelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-788">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy należy pogrupować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-788">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-789">Funkcja wyodrębniania klucza do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-789">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="2b287-790">Funkcja mapy każdego elementu źródłowego do elementu w <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-790">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="2b287-791">Funkcja tworzenia wartości wyniku z każdej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-791">A function to create a result value from each group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-792">Grupuje elementy sekwencji zgodnie z określoną kluczową funkcją wyboru i tworzy wartość wyniku z każdej grupy i klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-792">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
          <span data-ttu-id="2b287-793">Elementów każdej grupy są pokazane przy użyciu określonej funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-793">The elements of each group are projected by using a specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-794">
            <c>T:System.Linq.IQueryable'1</c> ma argument typu <paramref name="TResult" /> i gdzie każdy element przedstawia projekcję nad grupą i jego kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-794">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-795">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-795">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-796">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-796">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-797"><xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-797">The <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-798">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-798">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-799">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-799">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-800">Oczekiwane zachowanie polega na grup elementów `source` według wartości kluczy, które są uzyskiwane przez wywołanie `keySelector` dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-800">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="2b287-801">`elementSelector` Parametr jest używany do projektu elementów każdej grupy i `resultSelector` parametr jest używany do uzyskiwania wartości wyniku z każdej grupy i klucza.</span><span class="sxs-lookup"><span data-stu-id="2b287-801">The `elementSelector` parameter is used to project the elements of each group, and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-802">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> Grupuj elementy sekwencji do projektu kolejności wyników typu `TResult`.</span><span class="sxs-lookup"><span data-stu-id="2b287-802">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> to group the elements of a sequence and project a sequence of results of type `TResult`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#130](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#130)]
 [!code-vb[System.Linq.Queryable#130](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#130)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-803">
            <paramref name="source" /> lub <paramref name="keySelector" /> lub <paramref name="elementSelector" /> lub <paramref name="resultSelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-803">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TElement), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-804">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-804">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-805">Typ klucza zwróconego przez funkcję reprezentowane w <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-805">The type of the key returned by the function represented in <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TElement">
          <span data-ttu-id="2b287-806">Typ elementów w każdej <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-806">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-807">Typ wartości wyników zwróconych przez <c>resultSelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-807">The type of the result value returned by <c>resultSelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-808">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy należy pogrupować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-808">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-809">Funkcja wyodrębniania klucza do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-809">A function to extract the key for each element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="2b287-810">Funkcja mapy każdego elementu źródłowego do elementu w <see cref="T:System.Linq.IGrouping`2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-810">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="2b287-811">Funkcja tworzenia wartości wyniku z każdej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-811">A function to create a result value from each group.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-812">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-812">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-813">Grupuje elementy sekwencji zgodnie z określoną kluczową funkcją wyboru i tworzy wartość wyniku z każdej grupy i klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-813">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span>
          </span>
          <span data-ttu-id="2b287-814">Klucze są porównywane za pomocą określona funkcja porównująca i elementów każdej grupy są pokazane przy użyciu określonej funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-814">Keys are compared by using a specified comparer and the elements of each group are projected by using a specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-815">
            <c>T:System.Linq.IQueryable'1</c> ma argument typu <paramref name="TResult" /> i gdzie każdy element przedstawia projekcję nad grupą i jego kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-815">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-816">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-816">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-817">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-817">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-818"><xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-818">The <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-819">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-819">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-820">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-820">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-821">Oczekiwane zachowanie polega na grup elementów `source` według wartości kluczy, które są uzyskiwane przez wywołanie `keySelector` dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-821">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="2b287-822">`comparer` Parametr służy do porównywania wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="2b287-822">The `comparer` parameter is used to compare key values.</span></span> <span data-ttu-id="2b287-823">`elementSelector` Parametr jest używany do projektu elementów każdej grupy i `resultSelector` parametr jest używany do uzyskiwania wartości wyniku z każdej grupy i klucza.</span><span class="sxs-lookup"><span data-stu-id="2b287-823">The `elementSelector` parameter is used to project the elements of each group, and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-824">
            <paramref name="source" /> lub <paramref name="keySelector" /> lub <paramref name="elementSelector" /> lub <paramref name="resultSelector" /> lub <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-824">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="resultSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-825">Koreluje elementy dwóch sekwencji, w oparciu o równości kluczy, a następnie grupuje wyniki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-825">Correlates the elements of two sequences based on key equality and groups the results.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupJoin(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="2b287-826">Typ elementów pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-826">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="2b287-827">Typ elementów drugiej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-827">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-828">Typ kluczy zwracanych przez funkcje przełącznika kluczowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-828">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-829">Typ elementów wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-829">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="2b287-830">Pierwsza sekwencja do przyłączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-830">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="2b287-831">Sekwencja do przyłączenia do pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-831">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="2b287-832">Funkcja wyodrębniania klucza łączenia z każdego elementu pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-832">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="2b287-833">Funkcja wyodrębniania klucza łączenia z każdego elementu drugiej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-833">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="2b287-834">Funkcja tworzenia elementu wynik z elementu pierwszej sekwencji i zbiorem pasujące elementy z drugiej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-834">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-835">Koreluje elementy dwóch sekwencji, w oparciu o równości kluczy, a następnie grupuje wyniki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-835">Correlates the elements of two sequences based on key equality and groups the results.</span>
          </span>
          <span data-ttu-id="2b287-836">Domyślny moduł porównujący równość służy do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-836">The default equality comparer is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-837">
            <see cref="T:System.Linq.IQueryable`1" /> Zawiera elementy typu <paramref name="TResult" /> uzyskać, wykonując sprzężenie pogrupowanych w dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-837">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements of type <paramref name="TResult" /> obtained by performing a grouped join on two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-838">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-838">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-839">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-839">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-840"><xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-840">The <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-841">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `outer` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-841">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="2b287-842">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> jest zależna od implementacji typu `outer` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-842">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="2b287-843">Jest to oczekiwane zachowanie, że `outerKeySelector` i `innerKeySelector` funkcji służących do wyodrębniania kluczy z `outer` i `inner`, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="2b287-843">The expected behavior is that the `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="2b287-844">Te klucze są porównywane pod kątem równości dopasować każdego elementu w `outer` przy użyciu zero lub więcej elementów `inner`.</span><span class="sxs-lookup"><span data-stu-id="2b287-844">These keys are compared for equality to match each element in `outer` with zero or more elements from `inner`.</span></span> <span data-ttu-id="2b287-845">A następnie `resultSelector` wywołaniu funkcji do projektu obiekt wyniku z każdej grupy skorelowanych elementów.</span><span class="sxs-lookup"><span data-stu-id="2b287-845">Then the `resultSelector` function is invoked to project a result object from each group of correlated elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-846">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> do wykonania sprzężenia zgrupowane w dwóch sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-846">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> to perform a grouped join on two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#40](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#40)]
 [!code-vb[System.Linq.Queryable#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-847">
            <paramref name="outer" /> lub <paramref name="inner" /> lub <paramref name="outerKeySelector" /> lub <paramref name="innerKeySelector" /> lub <paramref name="resultSelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-847">
              <paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupJoin(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="2b287-848">Typ elementów pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-848">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="2b287-849">Typ elementów drugiej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-849">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-850">Typ kluczy zwracanych przez funkcje przełącznika kluczowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-850">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-851">Typ elementów wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-851">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="2b287-852">Pierwsza sekwencja do przyłączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-852">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="2b287-853">Sekwencja do przyłączenia do pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-853">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="2b287-854">Funkcja wyodrębniania klucza łączenia z każdego elementu pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-854">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="2b287-855">Funkcja wyodrębniania klucza łączenia z każdego elementu drugiej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-855">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="2b287-856">Funkcja tworzenia elementu wynik z elementu pierwszej sekwencji i zbiorem pasujące elementy z drugiej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-856">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-857">Moduł porównujący do wyznaczania wartości skrótu i porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-857">A comparer to hash and compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-858">Koreluje elementy dwóch sekwencji, w oparciu o równości kluczy, a następnie grupuje wyniki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-858">Correlates the elements of two sequences based on key equality and groups the results.</span>
          </span>
          <span data-ttu-id="2b287-859">Określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> służy do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-859">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-860">
            <see cref="T:System.Linq.IQueryable`1" /> Zawiera elementy typu <paramref name="TResult" /> uzyskać, wykonując sprzężenie pogrupowanych w dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-860">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements of type <paramref name="TResult" /> obtained by performing a grouped join on two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-861">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-861">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-862">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-862">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-863"><xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-863">The <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-864">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `outer` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-864">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="2b287-865">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> jest zależna od implementacji typu `outer` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-865">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="2b287-866">Jest to oczekiwane zachowanie, że `outerKeySelector` i `innerKeySelector` funkcji służących do wyodrębniania kluczy z `outer` i `inner`, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="2b287-866">The expected behavior is that the `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="2b287-867">Te klucze są porównywane pod kątem równości, za pomocą `comparer`.</span><span class="sxs-lookup"><span data-stu-id="2b287-867">These keys are compared for equality by using `comparer`.</span></span> <span data-ttu-id="2b287-868">Wynik porównania jest używany do dopasowywania każdego elementu w `outer` przy użyciu zero lub więcej elementów `inner`.</span><span class="sxs-lookup"><span data-stu-id="2b287-868">The outcome of the comparisons is used to match each element in `outer` with zero or more elements from `inner`.</span></span> <span data-ttu-id="2b287-869">A następnie `resultSelector` wywołaniu funkcji do projektu obiekt wyniku z każdej grupy skorelowanych elementów.</span><span class="sxs-lookup"><span data-stu-id="2b287-869">Then the `resultSelector` function is invoked to project a result object from each group of correlated elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-870">
            <paramref name="outer" /> lub <paramref name="inner" /> lub <paramref name="outerKeySelector" /> lub <paramref name="innerKeySelector" /> lub <paramref name="resultSelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-870">
              <paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-871">Tworzy zestawu części wspólnych dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-871">Produces the set intersection of two sequences.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Intersect(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Intersect (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-872">Typ elementów sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-872">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="2b287-873">A sekwencji, których różne elementy, które są również wyświetlane w <c>źródło2</c> są zwracane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-873">A sequence whose distinct elements that also appear in <c>source2</c> are returned.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="2b287-874">Sekwencja, w których różne elementy, które są również wyświetlane w pierwszej kolejności są zwracane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-874">A sequence whose distinct elements that also appear in the first sequence are returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-875">Tworzy zestawu części wspólnych dwóch sekwencji za pomocą domyślny moduł porównujący równość do porównywania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-875">Produces the set intersection of two sequences by using the default equality comparer to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-876">Sekwencja, który zawiera zestawu części wspólnych dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-876">A sequence that contains the set intersection of the two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-877"><xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-877">The <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-878">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-878">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="2b287-879">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> jest zależna od implementacji typu `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-879">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="2b287-880">Oczekiwane zachowanie jest, że wszystkie elementy w `source1` , są również w `source2` są zwracane.</span><span class="sxs-lookup"><span data-stu-id="2b287-880">The expected behavior is that all the elements in `source1` that are also in `source2` are returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-881">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> zwracanych elementów, które pojawiają się na każdej z dwóch sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-881">The following code example demonstrates how to use <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to return the elements that appear in each of two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#41)]
 [!code-vb[System.Linq.Queryable#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-882">
            <paramref name="source1" /> lub <paramref name="source2" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-882">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Intersect(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Intersect (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-883">Typ elementów sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-883">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="2b287-884">
            <see cref="T:System.Linq.IQueryable`1" /> Którego różne elementy, które są również wyświetlane w <c>źródło2</c> są zwracane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-884">An <see cref="T:System.Linq.IQueryable`1" /> whose distinct elements that also appear in <c>source2</c> are returned.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="2b287-885">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Którego różne elementy, które są również wyświetlane w pierwszej kolejności są zwracane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-885">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose distinct elements that also appear in the first sequence are returned.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-886">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Do porównywania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-886">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-887">Tworzy zestawu części wspólnych dwóch sekwencji przy użyciu określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> do porównywania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-887">Produces the set intersection of two sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-888">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający zestawu części wspólnych dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-888">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set intersection of the two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-889"><xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-889">The <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-890">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-890">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="2b287-891">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> jest zależna od implementacji typu `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-891">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="2b287-892">Oczekiwane zachowanie jest, że wszystkie elementy w `source1` , są również w `source2` są zwracane.</span><span class="sxs-lookup"><span data-stu-id="2b287-892">The expected behavior is that all the elements in `source1` that are also in `source2` are returned.</span></span> <span data-ttu-id="2b287-893">`comparer` Parametr służy do porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="2b287-893">The `comparer` parameter is used to compare elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-894">
            <paramref name="source1" /> lub <paramref name="source2" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-894">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-895">Koreluje elementy dwóch sekwencji na podstawie kluczy dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-895">Correlates the elements of two sequences based on matching keys.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, TInner, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Join(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TInner, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Inner, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TInner,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="2b287-896">Typ elementów pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-896">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="2b287-897">Typ elementów drugiej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-897">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-898">Typ kluczy zwracanych przez funkcje przełącznika kluczowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-898">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-899">Typ elementów wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-899">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="2b287-900">Pierwsza sekwencja do przyłączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-900">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="2b287-901">Sekwencja do przyłączenia do pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-901">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="2b287-902">Funkcja wyodrębniania klucza łączenia z każdego elementu pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-902">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="2b287-903">Funkcja wyodrębniania klucza łączenia z każdego elementu drugiej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-903">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="2b287-904">Funkcja tworzenia elementu wynik z dwóch zgodnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-904">A function to create a result element from two matching elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-905">Koreluje elementy dwóch sekwencji na podstawie kluczy dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-905">Correlates the elements of two sequences based on matching keys.</span>
          </span>
          <span data-ttu-id="2b287-906">Domyślny moduł porównujący równość służy do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-906">The default equality comparer is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-907">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający elementy typu <paramref name="TResult" /> uzyskać, wykonując sprzężenie wewnętrzne na dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-907">An <see cref="T:System.Linq.IQueryable`1" /> that has elements of type <paramref name="TResult" /> obtained by performing an inner join on two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-908">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-908">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-909">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-909">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-910"><xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-910">The <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-911">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `outer` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-911">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="2b287-912">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> jest zależna od implementacji typu `outer` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-912">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="2b287-913">Oczekiwane zachowanie jest sprzężenia wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="2b287-913">The expected behavior is that of an inner join.</span></span> <span data-ttu-id="2b287-914">`outerKeySelector` i `innerKeySelector` funkcji służących do wyodrębniania kluczy z `outer` i `inner`, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="2b287-914">The `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="2b287-915">Te klucze są porównywane pod kątem równości dopasować elementy z każdej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-915">These keys are compared for equality to match elements from each sequence.</span></span> <span data-ttu-id="2b287-916">Pary elementów są przechowywane dla każdego elementu w `inner` odpowiadający element `outer`.</span><span class="sxs-lookup"><span data-stu-id="2b287-916">A pair of elements is stored for each element in `inner` that matches an element in `outer`.</span></span> <span data-ttu-id="2b287-917">A następnie `resultSelector` wywołaniu funkcji do projektu obiekt wyniku z każdej pary zgodnych elementów.</span><span class="sxs-lookup"><span data-stu-id="2b287-917">Then the `resultSelector` function is invoked to project a result object from each pair of matching elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-918">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> przeprowadzić sprzężenie wewnętrzne dwóch sekwencji na podstawie klucza wspólnego.</span><span class="sxs-lookup"><span data-stu-id="2b287-918">The following code example demonstrates how to use <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> to perform an inner join of two sequences based on a common key.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#42)]
 [!code-vb[System.Linq.Queryable#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-919">
            <paramref name="outer" /> lub <paramref name="inner" /> lub <paramref name="outerKeySelector" /> lub <paramref name="innerKeySelector" /> lub <paramref name="resultSelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-919">
              <paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, TInner, TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Join(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TInner, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Inner, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TInner,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter">
          <span data-ttu-id="2b287-920">Typ elementów pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-920">The type of the elements of the first sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TInner">
          <span data-ttu-id="2b287-921">Typ elementów drugiej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-921">The type of the elements of the second sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-922">Typ kluczy zwracanych przez funkcje przełącznika kluczowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-922">The type of the keys returned by the key selector functions.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-923">Typ elementów wyniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-923">The type of the result elements.</span>
          </span>
        </typeparam>
        <param name="outer">
          <span data-ttu-id="2b287-924">Pierwsza sekwencja do przyłączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-924">The first sequence to join.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="2b287-925">Sekwencja do przyłączenia do pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-925">The sequence to join to the first sequence.</span>
          </span>
        </param>
        <param name="outerKeySelector">
          <span data-ttu-id="2b287-926">Funkcja wyodrębniania klucza łączenia z każdego elementu pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-926">A function to extract the join key from each element of the first sequence.</span>
          </span>
        </param>
        <param name="innerKeySelector">
          <span data-ttu-id="2b287-927">Funkcja wyodrębniania klucza łączenia z każdego elementu drugiej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-927">A function to extract the join key from each element of the second sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="2b287-928">Funkcja tworzenia elementu wynik z dwóch zgodnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-928">A function to create a result element from two matching elements.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-929">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Wyznaczania wartości skrótu do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-929">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to hash and compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-930">Koreluje elementy dwóch sekwencji na podstawie kluczy dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-930">Correlates the elements of two sequences based on matching keys.</span>
          </span>
          <span data-ttu-id="2b287-931">Określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> służy do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-931">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-932">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający elementy typu <paramref name="TResult" /> uzyskać, wykonując sprzężenie wewnętrzne na dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-932">An <see cref="T:System.Linq.IQueryable`1" /> that has elements of type <paramref name="TResult" /> obtained by performing an inner join on two sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-933">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-933">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-934">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-934">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-935"><xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-935">The <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-936">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `outer` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-936">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="2b287-937">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> jest zależna od implementacji typu `outer` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-937">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="2b287-938">Oczekiwane zachowanie jest sprzężenia wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="2b287-938">The expected behavior is that of an inner join.</span></span> <span data-ttu-id="2b287-939">`outerKeySelector` i `innerKeySelector` funkcji służących do wyodrębniania kluczy z `outer` i `inner`, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="2b287-939">The `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="2b287-940">Te klucze są porównywane pod kątem równości, za pomocą `comparer`.</span><span class="sxs-lookup"><span data-stu-id="2b287-940">These keys are compared for equality by using `comparer`.</span></span> <span data-ttu-id="2b287-941">Wynik porównania jest używana do tworzenia pasującą parę dla każdego elementu w `inner` odpowiadający element `outer`.</span><span class="sxs-lookup"><span data-stu-id="2b287-941">The outcome of the comparisons is used to create a matching pair for each element in `inner` that matches an element in `outer`.</span></span> <span data-ttu-id="2b287-942">A następnie `resultSelector` wywołaniu funkcji do projektu obiekt wyniku z każdej pary zgodnych elementów.</span><span class="sxs-lookup"><span data-stu-id="2b287-942">Then the `resultSelector` function is invoked to project a result object from each pair of matching elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-943">
            <paramref name="outer" /> lub <paramref name="inner" /> lub <paramref name="outerKeySelector" /> lub <paramref name="innerKeySelector" /> lub <paramref name="resultSelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-943">
              <paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Last&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-944">Zwraca wartość ostatniego elementu w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-944">Returns the last element in a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Last source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-945">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-945">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-946">
            <see cref="T:System.Linq.IQueryable`1" /> Do ostatniego elementu do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-946">An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-947">Zwraca wartość ostatniego elementu w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-947">Returns the last element in a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-948">Wartość w ostatniej pozycji w parametrze <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-948">The value at the last position in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-949"><xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-949">The <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-950">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-950">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-951">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-951">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-952">Oczekiwane zachowanie jest, że zwraca ona po ostatnim elemencie w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-952">The expected behavior is that it returns the last element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-953">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> do ostatniego elementu w tablicy do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="2b287-953">The following code example demonstrates how to use <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return the last element of an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#43)]
 [!code-vb[System.Linq.Queryable#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-954">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-954">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-955">Sekwencja źródłowa jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-955">The source sequence is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Last (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-956">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-956">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-957">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrotu elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-957">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-958">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-958">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-959">Zwraca ostatni element sekwencji która spełnia określony warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-959">Returns the last element of a sequence that satisfies a specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-960">Po ostatnim elemencie w <paramref name="source" /> , który przekazuje testu określonego przez <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-960">The last element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-961">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-961">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-962">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-962">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-963"><xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-963">The <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-964">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-964">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-965">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-965">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-966">Oczekiwane zachowanie jest, że zwraca ona po ostatnim elemencie w `source` który spełnia warunek określony przez `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-966">The expected behavior is that it returns the last element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-967">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> do zwrócenia ostatniego elementu w tablicy, która spełnia warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-967">The following code example demonstrates how to use <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return the last element of an array that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#44)]
 [!code-vb[System.Linq.Queryable#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-968">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-968">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-969">Element nie spełnia warunku w <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-969">No element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
          <span data-ttu-id="2b287-970">- lub - sekwencja źródłowa jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-970">-or-  The source sequence is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LastOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-971">Zwraca ostatni element sekwencji lub wartość domyślną, jeśli zostanie znaleziony żaden element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-971">Returns the last element of a sequence, or a default value if no element is found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.LastOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-972">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-972">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-973">
            <see cref="T:System.Linq.IQueryable`1" /> Do ostatniego elementu do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-973">An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-974">Zwraca wartość ostatniego elementu w sekwencji, lub wartość domyślną, jeśli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-974">Returns the last element in a sequence, or a default value if the sequence contains no elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-975">
            <c>domyślne</c>(<paramref name="TSource" />) Jeśli <paramref name="source" /> jest pusty; w przeciwnym razie po ostatnim elemencie w <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-975">
              <c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, the last element in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-976"><xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-976">The <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-977">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-977">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-978">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-978">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-979">Oczekiwane zachowanie jest, że zwraca ona po ostatnim elemencie w `source`, lub wartość domyślną, gdy `source` jest pusty.</span><span class="sxs-lookup"><span data-stu-id="2b287-979">The expected behavior is that it returns the last element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="2b287-980"><xref:System.Linq.Queryable.LastOrDefault%2A> Metody nie umożliwiają określenie wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="2b287-980">The <xref:System.Linq.Queryable.LastOrDefault%2A> method does not provide a way to specify a default value.</span></span> <span data-ttu-id="2b287-981">Jeśli chcesz określić inne niż wartości domyślnej `default(TSource)`, użyj <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> metoda zgodnie z opisem w sekcji przykład.</span><span class="sxs-lookup"><span data-stu-id="2b287-981">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-982">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> na pustą tablicę.</span><span class="sxs-lookup"><span data-stu-id="2b287-982">The following code example demonstrates how to use <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> on an empty array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#45)]
 [!code-vb[System.Linq.Queryable#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#45)]  
  
 <span data-ttu-id="2b287-983">Czasami wartość `default(TSource)` nie jest wartością domyślną, którego chcesz użyć, jeśli kolekcja zawiera żadnych elementów.</span><span class="sxs-lookup"><span data-stu-id="2b287-983">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="2b287-984">Zamiast sprawdzania wyników dla wartości domyślnej niepożądane, a następnie zmieniając go, jeśli to konieczne, możesz użyć <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> metodę, aby określić wartość domyślną, którą chcesz użyć, jeśli kolekcja jest pusta.</span><span class="sxs-lookup"><span data-stu-id="2b287-984">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="2b287-985">Następnie wywołaj <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> można uzyskać po ostatnim elemencie.</span><span class="sxs-lookup"><span data-stu-id="2b287-985">Then, call <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the last element.</span></span> <span data-ttu-id="2b287-986">W poniższym przykładzie kodu użyto obu tych technik uzyskanie domyślną wartość 1, jeśli kolekcja liczbowych dni miesiąca jest pusta.</span><span class="sxs-lookup"><span data-stu-id="2b287-986">The following code example uses both techniques to obtain a default value of 1 if a collection of numeric days of the month is empty.</span></span> <span data-ttu-id="2b287-987">Całkowitą wartość domyślna to 0, co nie odpowiada każdego dnia, miesiąca, wartość domyślna musi zostać określony jako 1 zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="2b287-987">Because the default value for an integer is 0, which does not correspond to any day of the month, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="2b287-988">Pierwszy zmiennej wynikowej są sprawdzane pod kątem wartość domyślną niepożądane, po wykonaniu zapytania.</span><span class="sxs-lookup"><span data-stu-id="2b287-988">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="2b287-989">Druga zmienna wyników można uzyskać przez wywołanie <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> można określić wartość domyślną 1.</span><span class="sxs-lookup"><span data-stu-id="2b287-989">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#132](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#132)]
 [!code-vb[System.Linq.Queryable#132](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#132)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-990">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-990">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.LastOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-991">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-991">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-992">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrotu elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-992">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-993">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-993">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-994">Zwraca ostatni element sekwencji która spełnia warunek, lub wartość domyślną, jeśli taki element nie zostanie znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-994">Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-995">
            <c>domyślne</c>(<paramref name="TSource" />) Jeśli <paramref name="source" /> są puste lub jeśli żadne elementy przeszedł test w funkcji predykatu; w przeciwnym razie ostatniego elementu <paramref name="source" /> w funkcji predykatu, przejdzie test.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-995">
              <c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty or if no elements pass the test in the predicate function; otherwise, the last element of <paramref name="source" /> that passes the test in the predicate function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-996">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-996">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-997">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-997">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-998"><xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-998">The <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-999">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-999">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1000">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1000">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1001">Oczekiwane zachowanie jest, że zwraca ona po ostatnim elemencie w `source` który spełnia warunek określony przez `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1001">The expected behavior is that it returns the last element in `source` that satisfies the condition specified by `predicate`.</span></span> <span data-ttu-id="2b287-1002">Zwraca wartość domyślną, jeśli nie ma żadnego takiego elementu w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1002">It returns a default value if there is no such element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1003">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , przekazując w predykacie.</span><span class="sxs-lookup"><span data-stu-id="2b287-1003">The following code example demonstrates how to use <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> by passing in a predicate.</span></span> <span data-ttu-id="2b287-1004">W drugim wywołaniu do metody nie ma żadnego elementu w sekwencji, który spełnia warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-1004">In the second call to the method, there is no element in the sequence that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#46](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#46)]
 [!code-vb[System.Linq.Queryable#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#46)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1005">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1005">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LongCount&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1006">Zwraca <see cref="T:System.Int64" /> reprezentujący liczbę elementów w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1006">Returns an <see cref="T:System.Int64" /> that represents the number of elements in sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As IQueryable(Of TSource)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.IQueryable&lt;'Source&gt; -&gt; int64" Usage="System.Linq.Queryable.LongCount source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1007">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1007">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1008">
            <see cref="T:System.Linq.IQueryable`1" /> Zawiera elementy do zliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1008">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1009">Zwraca <see cref="T:System.Int64" /> reprezentujący całkowitą liczbę elementów w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1009">Returns an <see cref="T:System.Int64" /> that represents the total number of elements in a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1010">Liczba elementów w <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1010">The number of elements in <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1011"><xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1011">The <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1012">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1012">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1013">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1013">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1014">Oczekiwane zachowanie jest liczy liczbę elementów w `source` i zwraca <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1014">The expected behavior is that it counts the number of items in `source` and returns an <xref:System.Int64>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1015">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> zliczania elementów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2b287-1015">The following code example demonstrates how to use <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to count the elements in an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#47)]
 [!code-vb[System.Linq.Queryable#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#47)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1016">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1016">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1017">Liczba elementów przekracza <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1017">The number of elements exceeds <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; int64" Usage="System.Linq.Queryable.LongCount (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1018">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1018">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1019">
            <see cref="T:System.Linq.IQueryable`1" /> Zawiera elementy do zliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1019">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-1020">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1020">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1021">Zwraca <see cref="T:System.Int64" /> reprezentujący liczbę elementów w sekwencji, które spełniają warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1021">Returns an <see cref="T:System.Int64" /> that represents the number of elements in a sequence that satisfy a condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1022">Liczba elementów w <paramref name="source" /> które spełniają warunek w funkcji predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1022">The number of elements in <paramref name="source" /> that satisfy the condition in the predicate function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1023">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1023">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1024">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1024">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1025"><xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1025">The <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1026">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1026">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1027">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1027">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1028">Oczekiwane zachowanie jest liczy liczbę elementów w `source` które spełniają warunek określony przez `predicate` i zwraca <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1028">The expected behavior is that it counts the number of items in `source` that satisfy the condition specified by `predicate` and returns an <xref:System.Int64>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1029">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> zliczania elementów w tablicy, które spełniają warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-1029">The following code example demonstrates how to use <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to count the elements in an array that satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#48)]
 [!code-vb[System.Linq.Queryable#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#48)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1030">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1030">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1031">Liczba zgodnych elementów przekracza <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1031">The number of matching elements exceeds <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Max&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Max&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Max(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1032">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1032">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1033">Sekwencja wartości, aby określić maksymalną liczbę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1033">A sequence of values to determine the maximum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1034">Zwraca maksymalną wartość w ogólnej metodzie <see cref="T:System.Linq.IQueryable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1034">Returns the maximum value in a generic <see cref="T:System.Linq.IQueryable`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1035">Maksymalna wartość w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1035">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1036"><xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1036">The <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1037">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1037">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1038">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1038">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1039">To oczekiwane zachowanie, zwraca maksymalną wartość w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1039">The expected behavior is that it returns the maximum value in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1040">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> można określić maksymalną wartość w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1040">The following code example demonstrates how to use <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine the maximum value in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#52](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#52)]
 [!code-vb[System.Linq.Queryable#52](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1041">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1041">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Max&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Max&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Max(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Result&gt;&gt; -&gt; 'Result" Usage="System.Linq.Queryable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1042">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1042">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-1043">Typ wartości zwracanej przez funkcję, reprezentowane przez <c>selektor</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1043">The type of the value returned by the function represented by <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1044">Sekwencja wartości, aby określić maksymalną liczbę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1044">A sequence of values to determine the maximum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1045">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1045">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1046">Wywołuje funkcję projekcji na każdym elemencie ogólnego <see cref="T:System.Linq.IQueryable`1" /> i zwraca maksymalną wartość wynikową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1046">Invokes a projection function on each element of a generic <see cref="T:System.Linq.IQueryable`1" /> and returns the maximum resulting value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1047">Maksymalna wartość w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1047">The maximum value in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1048">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1048">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1049">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1049">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1050"><xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1050">The <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1051">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1051">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1052">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1052">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1053">Oczekiwane zachowanie jest, że wywołuje `selector` w każdym elemencie w `source` i zwraca wartość maksymalna.</span><span class="sxs-lookup"><span data-stu-id="2b287-1053">The expected behavior is that it invokes `selector` on each element in `source` and returns the maximum value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1054">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> można określić maksymalną wartość w sekwencji przewidywanych wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-1054">The following code example demonstrates how to use <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to determine the maximum value in a sequence of projected values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#58](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#58)]
 [!code-vb[System.Linq.Queryable#58](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1055">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1055">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Min&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Min&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Min(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1056">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1056">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1057">Sekwencja wartości do określenia wartości minimalnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1057">A sequence of values to determine the minimum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1058">Zwraca minimalną wartość ogólnego <see cref="T:System.Linq.IQueryable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1058">Returns the minimum value of a generic <see cref="T:System.Linq.IQueryable`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1059">Minimalna wartość w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1059">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1060"><xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1060">The <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1061">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1061">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1062">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1062">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1063">To oczekiwane zachowanie, zwraca minimalną wartość w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1063">The expected behavior is that it returns the minimum value in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1064">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> można określić minimalną wartość w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1064">The following code example demonstrates how to use <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine the minimum value in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#60](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#60)]
 [!code-vb[System.Linq.Queryable#60](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1065">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1065">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Min&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Min&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Min(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Result&gt;&gt; -&gt; 'Result" Usage="System.Linq.Queryable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1066">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1066">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-1067">Typ wartości zwracanej przez funkcję, reprezentowane przez <c>selektor</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1067">The type of the value returned by the function represented by <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1068">Sekwencja wartości do określenia wartości minimalnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1068">A sequence of values to determine the minimum of.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1069">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1069">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1070">Wywołuje funkcję projekcji na każdym elemencie ogólnego <see cref="T:System.Linq.IQueryable`1" /> i zwraca minimalną wartość wynikową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1070">Invokes a projection function on each element of a generic <see cref="T:System.Linq.IQueryable`1" /> and returns the minimum resulting value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1071">Minimalna wartość w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1071">The minimum value in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1072">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1072">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1073">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1073">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1074"><xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1074">The <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1075">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1075">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1076">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1076">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1077">Oczekiwane zachowanie jest, że wywołuje `selector` w każdym elemencie w `source` i zwraca wartość minimalna.</span><span class="sxs-lookup"><span data-stu-id="2b287-1077">The expected behavior is that it invokes `selector` on each element in `source` and returns the minimum value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1078">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> Aby określić minimalną wartość w sekwencji przewidywanych wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-1078">The following code example demonstrates how to use <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to determine the minimum value in a sequence of projected values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#68](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#68)]
 [!code-vb[System.Linq.Queryable#68](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#68)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1079">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1079">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; OfType&lt;TResult&gt; (this System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; OfType&lt;TResult&gt;(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType(Of TResult) (source As IQueryable) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ OfType(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Linq.IQueryable -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.OfType source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-1080">Typ do filtrowania elementów sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1080">The type to filter the elements of the sequence on.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1081">
            <see cref="T:System.Linq.IQueryable" /> Której elementy do filtrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1081">An <see cref="T:System.Linq.IQueryable" /> whose elements to filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1082">Filtruje elementy <see cref="T:System.Linq.IQueryable" /> na podstawie określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1082">Filters the elements of an <see cref="T:System.Linq.IQueryable" /> based on a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1083">Kolekcja zawierająca elementy z <paramref name="source" /> mają typ <paramref name="TResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1083">A collection that contains the elements from <paramref name="source" /> that have type <paramref name="TResult" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1084">`OfType` Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie `OfType` siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1084">The `OfType` method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling `OfType` itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1085">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1085">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1086">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie `OfType` jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1086">The query behavior that occurs as a result of executing an expression tree that represents calling `OfType` depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1087">Oczekiwane zachowanie jest, że odfiltrowuje wszystkie elementy w `source` które nie są typu `TResult`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1087">The expected behavior is that it filters out any elements in `source` that are not of type `TResult`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1088">Poniższy przykład kodu demonstruje sposób używania `OfType` Aby odfiltrować elementy, które nie mają wartości typu <xref:System.Reflection.PropertyInfo> z listy elementów typu <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1088">The following code example demonstrates how to use `OfType` to filter out elements that are not of type <xref:System.Reflection.PropertyInfo> from a list of elements of type <xref:System.Reflection.MemberInfo>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#69](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#69)]
 [!code-vb[System.Linq.Queryable#69](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1089">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1089">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1090">Sortuje elementy sekwencji w kolejności rosnącej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1090">Sorts the elements of a sequence in ascending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1091">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1091">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-1092">Rodzaj klucza zwracany przez funkcję, która jest reprezentowana przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1092">The type of the key returned by the function that is represented by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1093">Sekwencja wartości do ustawienia w kolejności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1093">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-1094">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1094">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1095">Sortuje elementy sekwencji rosnąco, zgodnie z kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1095">Sorts the elements of a sequence in ascending order according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1096">
            <see cref="T:System.Linq.IOrderedQueryable`1" /> Której elementy są sortowane według klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1096">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1097">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1097">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1098">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1098">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1099"><xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1099">The <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1100">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1100">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="2b287-1101">Wynik wywołania metody <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> jest rzutowany na typ <xref:System.Linq.IOrderedQueryable%601> i zwrócone.</span><span class="sxs-lookup"><span data-stu-id="2b287-1101">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="2b287-1102">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1102">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1103">Oczekiwane zachowanie jest Sortuje elementy `source` oparte na kluczu uzyskany przez `keySelector` na każdym elemencie `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1103">The expected behavior is that it sorts the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1104">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> elementy sekwencji sortowania.</span><span class="sxs-lookup"><span data-stu-id="2b287-1104">The following code example demonstrates how to use <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to sort the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#70](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#70)]
 [!code-vb[System.Linq.Queryable#70](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1105">
            <paramref name="source" /> lub <paramref name="keySelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1105">
              <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1106">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1106">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-1107">Rodzaj klucza zwracany przez funkcję, która jest reprezentowana przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1107">The type of the key returned by the function that is represented by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1108">Sekwencja wartości do ustawienia w kolejności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1108">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-1109">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1109">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-1110">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1110">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1111">Sortuje elementy sekwencji w kolejności rosnącej przy użyciu określona funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1111">Sorts the elements of a sequence in ascending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1112">
            <see cref="T:System.Linq.IOrderedQueryable`1" /> Której elementy są sortowane według klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1112">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1113">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1113">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1114">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1114">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1115"><xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1115">The <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1116">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1116">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="2b287-1117">Wynik wywołania metody <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> jest rzutowany na typ <xref:System.Linq.IOrderedQueryable%601> i zwrócone.</span><span class="sxs-lookup"><span data-stu-id="2b287-1117">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="2b287-1118">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1118">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1119">Oczekiwane zachowanie jest Sortuje elementy `source` oparte na kluczu uzyskany przez `keySelector` na każdym elemencie `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1119">The expected behavior is that it sorts the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="2b287-1120">`comparer` Parametr jest używany do porównywania kluczy.</span><span class="sxs-lookup"><span data-stu-id="2b287-1120">The `comparer` parameter is used to compare keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1121">
            <paramref name="source" /> lub <paramref name="keySelector" /> lub <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1121">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1122">Sortuje elementy sekwencji w kolejności malejącej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1122">Sorts the elements of a sequence in descending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderByDescending(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1123">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1123">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-1124">Rodzaj klucza zwracany przez funkcję, która jest reprezentowana przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1124">The type of the key returned by the function that is represented by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1125">Sekwencja wartości do ustawienia w kolejności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1125">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-1126">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1126">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1127">Sortuje elementy sekwencji w porządku malejącym zgodnie z kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1127">Sorts the elements of a sequence in descending order according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1128">
            <see cref="T:System.Linq.IOrderedQueryable`1" /> Której elementy są sortowane w porządku malejącym zgodnie z kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1128">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1129">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1129">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1130">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1130">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1131"><xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1131">The <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1132">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1132">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="2b287-1133">Wynik wywołania metody <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> jest rzutowany na typ <xref:System.Linq.IOrderedQueryable%601> i zwrócone.</span><span class="sxs-lookup"><span data-stu-id="2b287-1133">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="2b287-1134">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1134">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1135">Oczekiwane zachowanie jest Sortuje elementy `source` w kolejności malejącej na podstawie klucza uzyskany przez `keySelector` na każdym elemencie `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1135">The expected behavior is that it sorts the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1136">
            <paramref name="source" /> lub <paramref name="keySelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1136">
              <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderByDescending(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1137">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1137">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-1138">Rodzaj klucza zwracany przez funkcję, która jest reprezentowana przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1138">The type of the key returned by the function that is represented by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1139">Sekwencja wartości do ustawienia w kolejności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1139">A sequence of values to order.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-1140">Funkcja wyodrębniania klucza z elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1140">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-1141">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1141">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1142">Sortuje elementy sekwencji w kolejności malejącej, używając określona funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1142">Sorts the elements of a sequence in descending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1143">
            <see cref="T:System.Linq.IOrderedQueryable`1" /> Której elementy są sortowane w porządku malejącym zgodnie z kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1143">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1144">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1144">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1145">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1145">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1146"><xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1146">The <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1147">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1147">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="2b287-1148">Wynik wywołania metody <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> jest rzutowany na typ <xref:System.Linq.IOrderedQueryable%601> i zwrócone.</span><span class="sxs-lookup"><span data-stu-id="2b287-1148">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="2b287-1149">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1149">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1150">Oczekiwane zachowanie jest Sortuje elementy `source` w kolejności malejącej na podstawie klucza uzyskany przez `keySelector` na każdym elemencie `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1150">The expected behavior is that it sorts the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="2b287-1151">`comparer` Parametr jest używany do porównywania kluczy.</span><span class="sxs-lookup"><span data-stu-id="2b287-1151">The `comparer` parameter is used to compare keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1152">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> sortować elementy sekwencję w kolejności malejącej, korzystając z niestandardowego modułu porównującego.</span><span class="sxs-lookup"><span data-stu-id="2b287-1152">The following code example demonstrates how to use <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> to sort the elements of a sequence in descending order by using a custom comparer.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#71](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#71)]
 [!code-vb[System.Linq.Queryable#71](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#71)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1153">
            <paramref name="source" /> lub <paramref name="keySelector" /> lub <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1153">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Prepend&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Prepend&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Prepend&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Prepend(Of TSource) (source As IQueryable(Of TSource), element As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Prepend(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource element);" />
      <MemberSignature Language="F#" Value="static member Prepend : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Prepend (source, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="element" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Reverse&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Reverse&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Reverse(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Linq.IQueryable&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Reverse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1154">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1154">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1155">Sekwencja wartości do odwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1155">A sequence of values to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1156">Odwraca kolejność elementów w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1156">Inverts the order of the elements in a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1157">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy odpowiadają identyfikatorom sekwencji wejściowych w odwrotnej kolejności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1157">An <see cref="T:System.Linq.IQueryable`1" /> whose elements correspond to those of the input sequence in reverse order.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1158"><xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1158">The <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1159">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1159">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1160">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1160">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1161">Oczekiwane zachowanie jest, że jej Odwraca kolejność elementów w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1161">The expected behavior is that it reverses the order of the elements in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1162">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Aby odwrócić kolejność elementów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2b287-1162">The following code example demonstrates how to use <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to reverse the order of elements in an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#74](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#74)]
 [!code-vb[System.Linq.Queryable#74](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#74)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1163">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1163">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1164">Projektów każdy element obiektu sekwencji do nowego formularza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1164">Projects each element of a sequence into a new form.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Select(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1165">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1165">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-1166">Typ wartości zwracanej przez funkcję, reprezentowane przez <c>selektor</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1166">The type of the value returned by the function represented by <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1167">Sekwencja wartości do projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1167">A sequence of values to project.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1168">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1168">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1169">Projektów każdy element obiektu sekwencji do nowego formularza przez dołączenie indeks elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1169">Projects each element of a sequence into a new form by incorporating the element's index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1170">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy są wynikiem wywołania funkcji projekcji na każdym elemencie <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1170">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a projection function on each element of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1171">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1171">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1172">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1172">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1173"><xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1173">The <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1174">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1174">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1175">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> są zależne od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1175">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> depend on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1176">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` do projektu go do innej postaci.</span><span class="sxs-lookup"><span data-stu-id="2b287-1176">The expected behavior is that it invokes `selector` on each element of `source` to project it into a different form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1177">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> do projektu za pośrednictwem sekwencja wartości, a następnie użyć indeksu każdego elementu w formularzu przewidywany.</span><span class="sxs-lookup"><span data-stu-id="2b287-1177">The following code example demonstrates how to use <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> to project over a sequence of values and use the index of each element in the projected form.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#76](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#76)]
 [!code-vb[System.Linq.Queryable#76](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#76)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1178">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1178">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Select(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1179">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1179">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-1180">Typ wartości zwracanej przez funkcję, reprezentowane przez <c>selektor</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1180">The type of the value returned by the function represented by <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1181">Sekwencja wartości do projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1181">A sequence of values to project.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1182">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1182">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1183">Projektów każdy element obiektu sekwencji do nowego formularza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1183">Projects each element of a sequence into a new form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1184">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy są wynikiem wywołania funkcji projekcji na każdym elemencie <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1184">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a projection function on each element of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1185">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1185">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1186">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1186">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1187"><xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1187">The <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1188">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1188">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1189">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1189">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1190">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` do projektu go do innej postaci.</span><span class="sxs-lookup"><span data-stu-id="2b287-1190">The expected behavior is that it invokes `selector` on each element of `source` to project it into a different form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1191">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> do projektu za pośrednictwem je sekvence hodnot.</span><span class="sxs-lookup"><span data-stu-id="2b287-1191">The following code example demonstrates how to use <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to project over a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#75](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#75)]
 [!code-vb[System.Linq.Queryable#75](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#75)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1192">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1192">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectMany&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1193">Projektów każdy element sekwencji w celu <see cref="T:System.Collections.Generic.IEnumerable`1" /> i łączy wynikowy sekwencje na jednej sekwencji typu <see cref="T:System.Linq.IQueryable`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1193">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence of type <see cref="T:System.Linq.IQueryable`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, IEnumerable(Of TResult)))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, seq&lt;'Result&gt;&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1194">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1194">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-1195">Typ elementów sekwencji zwrócona przez funkcję, reprezentowane przez <c>selektor</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1195">The type of the elements of the sequence returned by the function represented by <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1196">Sekwencja wartości do projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1196">A sequence of values to project.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1197">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1197">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1198">Projektów każdy element sekwencji w celu <see cref="T:System.Collections.Generic.IEnumerable`1" /> i łączy wynikowy sekwencje na jednej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1198">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1199">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy są wynikiem wywołania funkcji projekcji jeden do wielu, dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1199">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1200">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1200">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1201">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1201">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1202"><xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1202">The <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1203">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1203">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1204">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1204">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1205">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` do projektu go w formie wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="2b287-1205">The expected behavior is that it invokes `selector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="2b287-1206">Następnie dołącza wyliczalny wyniki do jednego, jednowymiarową sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1206">It then concatenates the enumerable results into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1207">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> przeprowadzić projekcji jeden do wielu za pośrednictwem tablicy.</span><span class="sxs-lookup"><span data-stu-id="2b287-1207">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> to perform a one-to-many projection over an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#77](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#77)]
 [!code-vb[System.Linq.Queryable#77](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1208">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1208">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer, IEnumerable(Of TResult)))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, seq&lt;'Result&gt;&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1209">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1209">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-1210">Typ elementów sekwencji zwrócona przez funkcję, reprezentowane przez <c>selektor</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1210">The type of the elements of the sequence returned by the function represented by <c>selector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1211">Sekwencja wartości do projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1211">A sequence of values to project.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1212">Zastosuj do każdego elementu; funkcja projekcji drugi parametr tę funkcję, reprezentuje indeks elementu źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1212">A projection function to apply to each element; the second parameter of this function represents the index of the source element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1213">Projektów każdy element sekwencji w celu <see cref="T:System.Collections.Generic.IEnumerable`1" /> i łączy wynikowy sekwencje na jednej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1213">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence.</span>
          </span>
          <span data-ttu-id="2b287-1214">Indeks każdego elementu źródłowego jest używana w formularzu przewidywany tego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1214">The index of each source element is used in the projected form of that element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1215">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy są wynikiem wywołania funkcji projekcji jeden do wielu, dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1215">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1216">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1216">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1217">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1217">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1218"><xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1218">The <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1219">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1219">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1220">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1220">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1221">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` do projektu go w formie wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="2b287-1221">The expected behavior is that it invokes `selector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="2b287-1222">Wynik każdego wyliczalny zawiera indeks elementu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="2b287-1222">Each enumerable result incorporates the index of the source element.</span></span> <span data-ttu-id="2b287-1223">Następnie dołącza wyliczalny wyniki do jednego, jednowymiarową sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1223">It then concatenates the enumerable results into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1224">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> wykonywania projekcji jeden do wielu za pośrednictwem tablicy i użyć indeksu każdy element źródła.</span><span class="sxs-lookup"><span data-stu-id="2b287-1224">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> to perform a one-to-many projection over an array and use the index of each source element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#78](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#78)]
 [!code-vb[System.Linq.Queryable#78](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#78)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1225">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1225">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt; collectionSelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt;&gt; collectionSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As IQueryable(Of TSource), collectionSelector As Expression(Of Func(Of TSource, IEnumerable(Of TCollection))), resultSelector As Expression(Of Func(Of TSource, TCollection, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^&gt; ^ collectionSelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TCollection, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, seq&lt;'Collection&gt;&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Collection, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TCollection,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1226">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1226">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TCollection">
          <span data-ttu-id="2b287-1227">Typ elementów pośrednich zebranych przez funkcję, reprezentowane przez <c>collectionSelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1227">The type of the intermediate elements collected by the function represented by <c>collectionSelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-1228">Typ elementów sekwencji wynikowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1228">The type of the elements of the resulting sequence.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1229">Sekwencja wartości do projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1229">A sequence of values to project.</span>
          </span>
        </param>
        <param name="collectionSelector">
          <span data-ttu-id="2b287-1230">Funkcja projekcji dotyczą każdego elementu wejściowego sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1230">A projection function to apply to each element of the input sequence.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="2b287-1231">Funkcja projekcji Zastosuj do każdego elementu w każdej sekwencji pośrednich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1231">A projection function to apply to each element of each intermediate sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1232">Projektów każdy element sekwencji w celu <see cref="T:System.Collections.Generic.IEnumerable`1" /> i wywołuje funkcję selektor wyników dla każdego elementu w nim.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1232">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and invokes a result selector function on each element therein.</span>
          </span>
          <span data-ttu-id="2b287-1233">Wyniki z każdego pośrednich sekwencji są łączone w pojedynczy, jednowymiarową sekwencji i zwrócony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1233">The resulting values from each intermediate sequence are combined into a single, one-dimensional sequence and returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1234">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy są wynikiem wywołania funkcji projekcji jeden do wielu <paramref name="collectionSelector" /> na każdym elemencie <paramref name="source" /> i następnie mapowanie każdego z tych elementów w sekwencji i odpowiadające im <paramref name="source" /> element do elementu wynik .</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1234">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking the one-to-many projection function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> and then mapping each of those sequence elements and their corresponding <paramref name="source" /> element to a result element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1235">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1235">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1236">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1236">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1237"><xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1237">The <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1238">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1238">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1239">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1239">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1240">Oczekiwane zachowanie jest, że wywołuje `collectionSelector` na każdym elemencie `source` do projektu go w formie wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="2b287-1240">The expected behavior is that it invokes `collectionSelector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="2b287-1241">Następnie funkcja reprezentowany przez `resultSelector` zostanie wywołana dla każdego elementu w każdej sekwencji pośrednich.</span><span class="sxs-lookup"><span data-stu-id="2b287-1241">Then the function represented by `resultSelector` is invoked on each element in each intermediate sequence.</span></span> <span data-ttu-id="2b287-1242">Wartości wynikowe są łączone do pojedynczej, jednowymiarową sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1242">The resulting values are concatenated into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1243">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> przeprowadzić projekcji jeden do wielu za pośrednictwem tablicy.</span><span class="sxs-lookup"><span data-stu-id="2b287-1243">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> to perform a one-to-many projection over an array.</span></span> <span data-ttu-id="2b287-1244">W tym przykładzie korzysta z funkcji selektor wynik do zachowania elementu źródłowego, który odnosi się do poszczególnych pośrednich sekwencji w zakresie ostatnim wywołaniem do `Select`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1244">This example uses a result selector function to keep the source element that corresponds to each intermediate sequence in scope for the final call to `Select`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#124](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#124)]
 [!code-vb[System.Linq.Queryable#124](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#124)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1245">
            <paramref name="source" /> lub <paramref name="collectionSelector" /> lub <paramref name="resultSelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1245">
              <paramref name="source" /> or <paramref name="collectionSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt; collectionSelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt;&gt; collectionSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As IQueryable(Of TSource), collectionSelector As Expression(Of Func(Of TSource, Integer, IEnumerable(Of TCollection))), resultSelector As Expression(Of Func(Of TSource, TCollection, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^&gt; ^ collectionSelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TCollection, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, seq&lt;'Collection&gt;&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Collection, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TCollection,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1246">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1246">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TCollection">
          <span data-ttu-id="2b287-1247">Typ elementów pośrednich zebranych przez funkcję, reprezentowane przez <c>collectionSelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1247">The type of the intermediate elements collected by the function represented by <c>collectionSelector</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-1248">Typ elementów sekwencji wynikowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1248">The type of the elements of the resulting sequence.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1249">Sekwencja wartości do projektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1249">A sequence of values to project.</span>
          </span>
        </param>
        <param name="collectionSelector">
          <span data-ttu-id="2b287-1250">Funkcja projekcji dotyczą każdego elementu wejściowego sekwencji; drugi parametr tę funkcję, reprezentuje indeks elementu źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1250">A projection function to apply to each element of the input sequence; the second parameter of this function represents the index of the source element.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="2b287-1251">Funkcja projekcji Zastosuj do każdego elementu w każdej sekwencji pośrednich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1251">A projection function to apply to each element of each intermediate sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1252">Projektów każdy element sekwencji w celu <see cref="T:System.Collections.Generic.IEnumerable`1" /> która zawiera indeks elementu źródłowego, który go.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1252">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that incorporates the index of the source element that produced it.</span>
          </span>
          <span data-ttu-id="2b287-1253">Funkcja selektor wynik jest wywoływana dla każdego elementu w każdej sekwencji pośrednich i wartości wynikowe są łączone w pojedynczy, jednowymiarową sekwencji i zwracana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1253">A result selector function is invoked on each element of each intermediate sequence, and the resulting values are combined into a single, one-dimensional sequence and returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1254">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy są wynikiem wywołania funkcji projekcji jeden do wielu <paramref name="collectionSelector" /> na każdym elemencie <paramref name="source" /> i następnie mapowanie każdego z tych elementów w sekwencji i odpowiadające im <paramref name="source" /> element do elementu wynik .</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1254">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking the one-to-many projection function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> and then mapping each of those sequence elements and their corresponding <paramref name="source" /> element to a result element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1255">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1255">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1256">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1256">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1257"><xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1257">The <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1258">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1258">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1259">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1259">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1260">Oczekiwane zachowanie jest, że wywołuje `collectionSelector` na każdym elemencie `source` do projektu go w formie wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="2b287-1260">The expected behavior is that it invokes `collectionSelector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="2b287-1261">Wynik każdego wyliczalny zawiera indeks elementu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="2b287-1261">Each enumerable result incorporates the source element's index.</span></span> <span data-ttu-id="2b287-1262">Następnie funkcja reprezentowany przez `resultSelector` zostanie wywołana dla każdego elementu w każdej sekwencji pośrednich.</span><span class="sxs-lookup"><span data-stu-id="2b287-1262">Then the function represented by `resultSelector` is invoked on each element in each intermediate sequence.</span></span> <span data-ttu-id="2b287-1263">Wartości wynikowe są łączone do pojedynczej, jednowymiarową sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1263">The resulting values are concatenated into a single, one-dimensional sequence.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1264">
            <paramref name="source" /> lub <paramref name="collectionSelector" /> lub <paramref name="resultSelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1264">
              <paramref name="source" /> or <paramref name="collectionSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SequenceEqual&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1265">Określa, czy dwie sekwencje mają taki sam.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1265">Determines whether two sequences are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.SequenceEqual (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1266">Typ elementów sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1266">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="2b287-1267">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy do porównania z właściwościami <c>źródło2</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1267">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to compare to those of <c>source2</c>.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="2b287-1268">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Której elementy do porównania pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1268">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to compare to those of the first sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1269">Określa, czy dwie sekwencje są takie same, za pomocą domyślny moduł porównujący równość do porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1269">Determines whether two sequences are equal by using the default equality comparer to compare elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1270">
            <see langword="true" /> w przypadku dwóch źródłowych sekwencji równej długości i odpowiadające im elementy są sobie równe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1270">
              <see langword="true" /> if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1271"><xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1271">The <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1272">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1272">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1273">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> jest zależna od implementacji typu `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1273">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="2b287-1274">Oczekiwane zachowanie jest on określa, czy dwóch źródłowych sekwencji są równe.</span><span class="sxs-lookup"><span data-stu-id="2b287-1274">The expected behavior is that it determines if the two source sequences are equal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1275">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> do określenia, czy dwie sekwencje mają taki sam.</span><span class="sxs-lookup"><span data-stu-id="2b287-1275">The following code example demonstrates how to use <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to determine whether two sequences are equal.</span></span> <span data-ttu-id="2b287-1276">W tym przykładzie sekwencji, które są równe.</span><span class="sxs-lookup"><span data-stu-id="2b287-1276">In this example the sequences are equal.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#32)]
 [!code-vb[System.Linq.Queryable#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#32)]  
  
 <span data-ttu-id="2b287-1277">Poniższy przykład kodu porównuje dwie sekwencje, które nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="2b287-1277">The following code example compares two sequences that are not equal.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#33)]
 [!code-vb[System.Linq.Queryable#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1278">
            <paramref name="source1" /> lub <paramref name="source2" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1278">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.SequenceEqual (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1279">Typ elementów sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1279">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="2b287-1280">
            <see cref="T:System.Linq.IQueryable`1" /> Której elementy do porównania z właściwościami <c>źródło2</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1280">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to compare to those of <c>source2</c>.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="2b287-1281">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Której elementy do porównania pierwszej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1281">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to compare to those of the first sequence.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-1282">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Służące do porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1282">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to use to compare elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1283">Określa, czy dwie sekwencje mają taki sam, przy użyciu określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> do porównywania elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1283">Determines whether two sequences are equal by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1284">
            <see langword="true" /> w przypadku dwóch źródłowych sekwencji równej długości i odpowiadające im elementy są sobie równe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1284">
              <see langword="true" /> if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1285"><xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1285">The <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1286">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1286">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1287">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> jest zależna od implementacji typu `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1287">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="2b287-1288">Oczekiwane zachowanie jest on określa, czy dwóch źródłowych sekwencji są równe, za pomocą `comparer` do porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1288">The expected behavior is that it determines if the two source sequences are equal by using `comparer` to compare elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1289">
            <paramref name="source1" /> lub <paramref name="source2" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1289">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Single&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1290">Zwraca element jednej, określonej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1290">Returns a single, specific element of a sequence.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Single source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1291">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1291">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1292">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrócenia pojedynczego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1292">An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1293">Zwraca tylko element sekwencji i zgłasza wyjątek, jeśli nie istnieje dokładnie jednego elementu w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1293">Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1294">Pojedynczy element sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1294">The single element of the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1295"><xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1295">The <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1296">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1296">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1297">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1297">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1298">Oczekiwane zachowanie jest, że zwracany jest jedynym elementem w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1298">The expected behavior is that it returns the only element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1299">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> zaznacz tylko element tablicy.</span><span class="sxs-lookup"><span data-stu-id="2b287-1299">The following code example demonstrates how to use <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to select the only element of an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#79](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#79)]
 [!code-vb[System.Linq.Queryable#79](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#79)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1300">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1300">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-1301">
            <paramref name="source" /> ma więcej niż jeden element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1301">
              <paramref name="source" /> has more than one element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Single (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1302">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1302">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1303">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrócenia pojedynczego elementu z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1303">An <see cref="T:System.Linq.IQueryable`1" /> to return a single element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-1304">Funkcja testowania elementu dla warunku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1304">A function to test an element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1305">Zwraca tylko element sekwencji która spełnia określony warunek i zgłasza wyjątek, jeśli istnieje więcej niż jeden taki element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1305">Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1306">Pojedynczy element sekwencji wejściowych, który spełnia warunek w <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1306">The single element of the input sequence that satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1307">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1307">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1308">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1308">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1309"><xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1309">The <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1310">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1310">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1311">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1311">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1312">Oczekiwane zachowanie jest, że zwracany jest jedynym elementem w `source` który spełnia warunek określony przez `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1312">The expected behavior is that it returns the only element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1313">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> zaznacz tylko element w tablicy, która spełnia warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-1313">The following code example demonstrates how to use <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to select the only element of an array that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#81](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#81)]
 [!code-vb[System.Linq.Queryable#81](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#81)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1314">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1314">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-1315">Element nie spełnia warunku w <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1315">No element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
          <span data-ttu-id="2b287-1316">- lub - więcej niż jeden element spełnia warunek w <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1316">-or-  More than one element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
          <span data-ttu-id="2b287-1317">- lub - sekwencja źródłowa jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1317">-or-  The source sequence is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SingleOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1318">Zwraca element jednej, określonej sekwencji lub wartość domyślną, jeśli taki element nie zostanie znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1318">Returns a single, specific element of a sequence, or a default value if no such element is found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.SingleOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1319">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1319">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1320">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrócenia pojedynczego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1320">An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1321">Zwraca tylko element sekwencji lub wartość domyślną, jeśli sekwencja jest pusta. Ta metoda zgłasza wyjątek, jeśli istnieje więcej niż jednego elementu w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1321">Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1322">Pojedynczy element sekwencji wejściowych lub <c>domyślne</c>(<paramref name="TSource" />) Jeżeli sekwencja nie zawiera żadnych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1322">The single element of the input sequence, or <c>default</c>(<paramref name="TSource" />) if the sequence contains no elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1323"><xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1323">The <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1324">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1324">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1325">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1325">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1326">Oczekiwane zachowanie jest, że zwracany jest jedynym elementem w `source`, lub wartość domyślną, gdy `source` jest pusty.</span><span class="sxs-lookup"><span data-stu-id="2b287-1326">The expected behavior is that it returns the only element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="2b287-1327"><xref:System.Linq.Queryable.SingleOrDefault%2A> Metody nie umożliwiają określenie wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1327">The <xref:System.Linq.Queryable.SingleOrDefault%2A> method does not provide a way to specify a default value.</span></span> <span data-ttu-id="2b287-1328">Jeśli chcesz określić inne niż wartości domyślnej `default(TSource)`, użyj <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> metoda zgodnie z opisem w sekcji przykład.</span><span class="sxs-lookup"><span data-stu-id="2b287-1328">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1329">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> zaznacz tylko element tablicy.</span><span class="sxs-lookup"><span data-stu-id="2b287-1329">The following code example demonstrates how to use <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to select the only element of an array.</span></span> <span data-ttu-id="2b287-1330">Drugie zapytanie pokazuje, że <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> zwraca wartość domyślną, jeśli sekwencja nie zawiera dokładnie jeden element.</span><span class="sxs-lookup"><span data-stu-id="2b287-1330">The second query demonstrates that <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> returns a default value when the sequence does not contain exactly one element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#83](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#83)]
 [!code-vb[System.Linq.Queryable#83](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#83)]  
  
 <span data-ttu-id="2b287-1331">Czasami wartość `default(TSource)` nie jest wartością domyślną, którego chcesz użyć, jeśli kolekcja zawiera żadnych elementów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1331">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="2b287-1332">Zamiast sprawdzania wyników dla wartości domyślnej niepożądane, a następnie zmieniając go, jeśli to konieczne, możesz użyć <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> metodę, aby określić wartość domyślną, którą chcesz użyć, jeśli kolekcja jest pusta.</span><span class="sxs-lookup"><span data-stu-id="2b287-1332">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="2b287-1333">Następnie wywołaj <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> można uzyskać elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-1333">Then, call <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the element.</span></span> <span data-ttu-id="2b287-1334">Poniższy przykład kodu używa obu tych technik do uzyskania domyślną wartość 1, jeśli kolekcja numery stron jest pusta.</span><span class="sxs-lookup"><span data-stu-id="2b287-1334">The following code example uses both techniques to obtain a default value of 1 if a collection of page numbers is empty.</span></span> <span data-ttu-id="2b287-1335">Całkowitą wartość domyślna to 0, co nie jest zazwyczaj prawidłowy numer strony, wartość domyślna musi zostać określony jako 1 zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="2b287-1335">Because the default value for an integer is 0, which is not usually a valid page number, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="2b287-1336">Pierwszy zmiennej wynikowej są sprawdzane pod kątem wartość domyślną niepożądane, po wykonaniu zapytania.</span><span class="sxs-lookup"><span data-stu-id="2b287-1336">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="2b287-1337">Druga zmienna wyników można uzyskać przez wywołanie <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> można określić wartość domyślną 1.</span><span class="sxs-lookup"><span data-stu-id="2b287-1337">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#133](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#133)]
 [!code-vb[System.Linq.Queryable#133](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#133)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1338">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1338">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-1339">
            <paramref name="source" /> ma więcej niż jeden element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1339">
              <paramref name="source" /> has more than one element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.SingleOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1340">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1340">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1341">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrócenia pojedynczego elementu z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1341">An <see cref="T:System.Linq.IQueryable`1" /> to return a single element from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-1342">Funkcja testowania elementu dla warunku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1342">A function to test an element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1343">Zwraca tylko element sekwencji która spełnia określony warunek, lub wartość domyślną, jeśli taki element nie istnieje; Ta metoda zgłasza wyjątek, jeśli więcej niż jeden element spełnia warunek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1343">Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1344">Pojedynczy element sekwencji wejściowych, który spełnia warunek w <paramref name="predicate" />, lub <c>domyślne</c>(<paramref name="TSource" />) Jeśli taki element nie zostanie znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1344">The single element of the input sequence that satisfies the condition in <paramref name="predicate" />, or <c>default</c>(<paramref name="TSource" />) if no such element is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1345">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1345">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1346">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1346">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1347"><xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1347">The <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1348">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1348">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1349">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1349">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1350">Oczekiwane zachowanie jest, że zwracany jest jedynym elementem w `source` który spełnia warunek określony przez `predicate`, lub wartość domyślną, jeśli taki element nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="2b287-1350">The expected behavior is that it returns the only element in `source` that satisfies the condition specified by `predicate`, or a default value if no such element exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1351">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> zaznacz tylko element w tablicy, która spełnia warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-1351">The following code example demonstrates how to use <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to select the only element of an array that satisfies a condition.</span></span> <span data-ttu-id="2b287-1352">Drugie zapytanie pokazuje, że <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> zwraca wartość domyślną, jeśli sekwencja nie zawiera dokładnie jeden element, który spełnia warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-1352">The second query demonstrates that <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> returns a default value when the sequence does not contain exactly one element that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#85](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#85)]
 [!code-vb[System.Linq.Queryable#85](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#85)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1353">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1353">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b287-1354">Więcej niż jeden element spełnia warunek w <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1354">More than one element satisfies the condition in <paramref name="predicate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Skip&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Skip&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Skip&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Skip(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Skip (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1355">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1355">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1356">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrócenia elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1356">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2b287-1357">Liczba elementów do pominięcia przed zwróceniem pozostałe elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1357">The number of elements to skip before returning the remaining elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1358">Pomija określoną liczbę elementów w sekwencji, a następnie zwraca pozostałe elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1358">Bypasses a specified number of elements in a sequence and then returns the remaining elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1359">
            <see cref="T:System.Linq.IQueryable`1" /> Zawiera elementy, które wystąpiły po określonym indeksem sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1359">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements that occur after the specified index in the input sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1360"><xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1360">The <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1361">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1361">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1362">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1362">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1363">Oczekiwane zachowanie jest, pomija pierwszy `count` elementów w `source` i zwraca wszystkie pozostałe elementy.</span><span class="sxs-lookup"><span data-stu-id="2b287-1363">The expected behavior is that it skips the first `count` elements in `source` and returns the remaining elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1364">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> pominąć określoną liczbę elementów w posortowaną tablicę i zwraca wszystkie pozostałe elementy.</span><span class="sxs-lookup"><span data-stu-id="2b287-1364">The following code example demonstrates how to use <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to skip a specified number of elements in a sorted array and return the remaining elements.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#87](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#87)]
 [!code-vb[System.Linq.Queryable#87](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1365">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1365">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SkipLast&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipLast&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipLast&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipLast(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipLast(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member SkipLast : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.SkipLast (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1366">Pomija elementów w sekwencji, tak długo, jak długo określony warunek ma wartość true, a następnie zwraca pozostałe elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1366">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1367">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1367">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1368">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrócenia elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1368">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-1369">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1369">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1370">Pomija elementów w sekwencji, tak długo, jak długo określony warunek ma wartość true, a następnie zwraca pozostałe elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1370">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1371">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający elementy z <paramref name="source" /> zaczynając od pierwszego elementu w liniowe serie, które nie zostały spełnione testu określonego przez <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1371">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from <paramref name="source" /> starting at the first element in the linear series that does not pass the test specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1372">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1372">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1373">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1373">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1374"><xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1374">The <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1375">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1375">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1376">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1376">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1377">Oczekiwane zachowanie jest, że dotyczy `predicate` do każdego elementu w `source` aż do znalezienia elementu, dla którego `predicate` zwraca wartość false.</span><span class="sxs-lookup"><span data-stu-id="2b287-1377">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns false.</span></span> <span data-ttu-id="2b287-1378">Tego elementu, a wszystkie pozostałe elementy są zwracane.</span><span class="sxs-lookup"><span data-stu-id="2b287-1378">That element and all the remaining elements are returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1379">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> do pominięcia elementy tablicy, jak długo będzie spełniony jest warunek.</span><span class="sxs-lookup"><span data-stu-id="2b287-1379">The following code example demonstrates how to use <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to skip elements of an array as long as a condition is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#88](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#88)]
 [!code-vb[System.Linq.Queryable#88](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#88)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1380">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1380">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1381">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1381">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1382">
            <see cref="T:System.Linq.IQueryable`1" /> Do zwrócenia elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1382">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-1383">Funkcja testowania każdego elementu na stanie; drugi parametr tę funkcję, reprezentuje indeks elementu źródłowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1383">A function to test each element for a condition; the second parameter of this function represents the index of the source element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1384">Pomija elementów w sekwencji, tak długo, jak długo określony warunek ma wartość true, a następnie zwraca pozostałe elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1384">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span>
          </span>
          <span data-ttu-id="2b287-1385">Indeks elementu jest używany w logice funkcji predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1385">The element's index is used in the logic of the predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1386">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający elementy z <paramref name="source" /> zaczynając od pierwszego elementu w liniowe serie, które nie zostały spełnione testu określonego przez <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1386">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from <paramref name="source" /> starting at the first element in the linear series that does not pass the test specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1387">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1387">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1388">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1388">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1389"><xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1389">The <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1390">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1390">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1391">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1391">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1392">Oczekiwane zachowanie jest, że dotyczy `predicate` do każdego elementu w `source` aż do znalezienia elementu, dla którego `predicate` zwraca wartość false.</span><span class="sxs-lookup"><span data-stu-id="2b287-1392">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns false.</span></span> <span data-ttu-id="2b287-1393">Tego elementu, a wszystkie pozostałe elementy są zwracane.</span><span class="sxs-lookup"><span data-stu-id="2b287-1393">That element and all the remaining elements are returned.</span></span> <span data-ttu-id="2b287-1394">Indeks każdego elementu źródłowego jest dostarczana jako drugi argument `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1394">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1395">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> do pominięcia elementy tablicy, jak długo będzie spełniony jest warunek, który zależy od indeks elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-1395">The following code example demonstrates how to use <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to skip elements of an array as long as a condition that depends on the element's index is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#89](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#89)]
 [!code-vb[System.Linq.Queryable#89](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1396">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1396">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sum">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1397">Oblicza sumę sekwencję wartości liczbowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1397">Computes the sum of a sequence of numeric values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static decimal Sum (this System.Linq.IQueryable&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum(class System.Linq.IQueryable`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::IQueryable&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-1398">Sekwencja <see cref="T:System.Decimal" /> wartości, aby obliczyć sumę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1398">A sequence of <see cref="T:System.Decimal" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1399">Oblicza sumę sekwencji <see cref="T:System.Decimal" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1399">Computes the sum of a sequence of <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1400">Suma wartości w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1400">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1401"><xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1401">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1402">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1402">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1403">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1403">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1404">To oczekiwane zachowanie, zwraca sumę wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1404">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1405">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> aby zsumować wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1405">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1406">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1406">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1407">Suma jest większa niż <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1407">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static double Sum (this System.Linq.IQueryable&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum(class System.Linq.IQueryable`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::IQueryable&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;double&gt; -&gt; double" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-1408">Sekwencja <see cref="T:System.Double" /> wartości, aby obliczyć sumę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1408">A sequence of <see cref="T:System.Double" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1409">Oblicza sumę sekwencji <see cref="T:System.Double" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1409">Computes the sum of a sequence of <see cref="T:System.Double" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1410">Suma wartości w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1410">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1411"><xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1411">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1412">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1412">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1413">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1413">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1414">To oczekiwane zachowanie, zwraca sumę wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1414">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1415">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> aby zsumować wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1415">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1416">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1416">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static int Sum (this System.Linq.IQueryable&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum(class System.Linq.IQueryable`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::IQueryable&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;int&gt; -&gt; int" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-1417">Sekwencja <see cref="T:System.Int32" /> wartości, aby obliczyć sumę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1417">A sequence of <see cref="T:System.Int32" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1418">Oblicza sumę sekwencji <see cref="T:System.Int32" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1418">Computes the sum of a sequence of <see cref="T:System.Int32" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1419">Suma wartości w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1419">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1420"><xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1420">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1421">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1421">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1422">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1422">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1423">To oczekiwane zachowanie, zwraca sumę wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1423">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1424">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> aby zsumować wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1424">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1425">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1425">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1426">Suma jest większa niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1426">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static long Sum (this System.Linq.IQueryable&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum(class System.Linq.IQueryable`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::IQueryable&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;int64&gt; -&gt; int64" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-1427">Sekwencja <see cref="T:System.Int64" /> wartości, aby obliczyć sumę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1427">A sequence of <see cref="T:System.Int64" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1428">Oblicza sumę sekwencji <see cref="T:System.Int64" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1428">Computes the sum of a sequence of <see cref="T:System.Int64" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1429">Suma wartości w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1429">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1430"><xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1430">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1431">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1431">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1432">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1432">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1433">To oczekiwane zachowanie, zwraca sumę wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1433">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1434">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> aby zsumować wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1434">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1435">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1435">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1436">Suma jest większa niż <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1436">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-1437">Sekwencja nullable <see cref="T:System.Decimal" /> wartości, aby obliczyć sumę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1437">A sequence of nullable <see cref="T:System.Decimal" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1438">Oblicza sumę sekwencji nullable <see cref="T:System.Decimal" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1438">Computes the sum of a sequence of nullable <see cref="T:System.Decimal" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1439">Suma wartości w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1439">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1440"><xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1440">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1441">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1441">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1442">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1442">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1443">To oczekiwane zachowanie, zwraca sumę wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1443">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1444">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> aby zsumować wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1444">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1445">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1445">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1446">Suma jest większa niż <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1446">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-1447">Sekwencja nullable <see cref="T:System.Double" /> wartości, aby obliczyć sumę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1447">A sequence of nullable <see cref="T:System.Double" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1448">Oblicza sumę sekwencji nullable <see cref="T:System.Double" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1448">Computes the sum of a sequence of nullable <see cref="T:System.Double" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1449">Suma wartości w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1449">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1450"><xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1450">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1451">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1451">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1452">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1452">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1453">To oczekiwane zachowanie, zwraca sumę wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1453">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1454">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> aby zsumować wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1454">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1455">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1455">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-1456">Sekwencja nullable <see cref="T:System.Int32" /> wartości, aby obliczyć sumę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1456">A sequence of nullable <see cref="T:System.Int32" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1457">Oblicza sumę sekwencji nullable <see cref="T:System.Int32" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1457">Computes the sum of a sequence of nullable <see cref="T:System.Int32" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1458">Suma wartości w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1458">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1459"><xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1459">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1460">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1460">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1461">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1461">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1462">To oczekiwane zachowanie, zwraca sumę wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1462">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1463">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> aby zsumować wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1463">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1464">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1464">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1465">Suma jest większa niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1465">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-1466">Sekwencja nullable <see cref="T:System.Int64" /> wartości, aby obliczyć sumę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1466">A sequence of nullable <see cref="T:System.Int64" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1467">Oblicza sumę sekwencji nullable <see cref="T:System.Int64" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1467">Computes the sum of a sequence of nullable <see cref="T:System.Int64" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1468">Suma wartości w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1468">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1469"><xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1469">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1470">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1470">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1471">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1471">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1472">To oczekiwane zachowanie, zwraca sumę wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1472">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1473">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> aby zsumować wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1473">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1474">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1474">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1475">Suma jest większa niż <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1475">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-1476">Sekwencja nullable <see cref="T:System.Single" /> wartości, aby obliczyć sumę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1476">A sequence of nullable <see cref="T:System.Single" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1477">Oblicza sumę sekwencji nullable <see cref="T:System.Single" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1477">Computes the sum of a sequence of nullable <see cref="T:System.Single" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1478">Suma wartości w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1478">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1479"><xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1479">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1480">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1480">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1481">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1481">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1482">To oczekiwane zachowanie, zwraca sumę wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1482">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1483">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> aby zsumować wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1483">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1484">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1484">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static float Sum (this System.Linq.IQueryable&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum(class System.Linq.IQueryable`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::IQueryable&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;single&gt; -&gt; single" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="2b287-1485">Sekwencja <see cref="T:System.Single" /> wartości, aby obliczyć sumę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1485">A sequence of <see cref="T:System.Single" /> values to calculate the sum of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1486">Oblicza sumę sekwencji <see cref="T:System.Single" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1486">Computes the sum of a sequence of <see cref="T:System.Single" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1487">Suma wartości w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1487">The sum of the values in the sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1488"><xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1488">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1489">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1489">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1490">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1490">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1491">To oczekiwane zachowanie, zwraca sumę wartości w `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1491">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1492">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> aby zsumować wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1492">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1493">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1493">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Decimal))) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Decimal&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, decimal&gt;&gt; -&gt; decimal" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1494">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1494">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1495">Sekwencja wartości typu <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1495">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1496">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1496">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1497">Oblicza sumę sekwencji <see cref="T:System.Decimal" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1497">Computes the sum of the sequence of <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1498">Suma przewidywanych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1498">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1499">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1499">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1500">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1500">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1501"><xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1501">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1502">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1502">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1503">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1503">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1504">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` i zwraca sumę wartości wynikowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1504">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1505">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> aby zsumować przewidywane wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1505">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1506">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1506">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1507">Suma jest większa niż <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1507">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Double))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, double&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, double&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1508">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1508">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1509">Sekwencja wartości typu <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1509">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1510">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1510">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1511">Oblicza sumę sekwencji <see cref="T:System.Double" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1511">Computes the sum of the sequence of <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1512">Suma przewidywanych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1512">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1513">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1513">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1514">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1514">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1515"><xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1515">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1516">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1516">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1517">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> jest zależna od implementacji typu on `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1517">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depends on the implementation of the type of he `source` parameter.</span></span> <span data-ttu-id="2b287-1518">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` i zwraca sumę wartości wynikowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1518">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1519">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> aby zsumować przewidywane wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1519">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1520">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1520">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int&gt;&gt; -&gt; int" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1521">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1521">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1522">Sekwencja wartości typu <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1522">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1523">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1523">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1524">Oblicza sumę sekwencji <see cref="T:System.Int32" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1524">Computes the sum of the sequence of <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1525">Suma przewidywanych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1525">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1526">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1526">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1527">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1527">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1528"><xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1528">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1529">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1529">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1530">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1530">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1531">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` i zwraca sumę wartości wynikowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1531">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1532">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> aby zsumować przewidywane wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1532">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1533">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1533">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1534">Suma jest większa niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1534">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Long))) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, long&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int64&gt;&gt; -&gt; int64" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1535">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1535">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1536">Sekwencja wartości typu <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1536">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1537">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1537">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1538">Oblicza sumę sekwencji <see cref="T:System.Int64" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1538">Computes the sum of the sequence of <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1539">Suma przewidywanych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1539">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1540">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1540">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1541">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1541">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1542"><xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1542">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1543">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1543">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1544">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1544">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1545">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` i zwraca sumę wartości wynikowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1545">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1546">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> aby zsumować przewidywane wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1546">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1547">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1547">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1548">Suma jest większa niż <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1548">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;decimal&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Decimal)))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;decimal&gt;&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1549">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1549">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1550">Sekwencja wartości typu <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1550">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1551">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1551">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1552">Oblicza sumę sekwencji nullable <see cref="T:System.Decimal" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1552">Computes the sum of the sequence of nullable <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1553">Suma przewidywanych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1553">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1554">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1554">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1555">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1555">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1556"><xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1556">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1557">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1557">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1558">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1558">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1559">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` i zwraca sumę wartości wynikowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1559">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1560">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> aby zsumować przewidywane wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1560">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1561">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1561">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1562">Suma jest większa niż <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1562">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;double&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Double)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;double&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;double&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1563">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1563">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1564">Sekwencja wartości typu <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1564">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1565">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1565">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1566">Oblicza sumę sekwencji nullable <see cref="T:System.Double" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1566">Computes the sum of the sequence of nullable <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1567">Suma przewidywanych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1567">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1568">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1568">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1569">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1569">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1570"><xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1570">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1571">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1571">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1572">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1572">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1573">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` i zwraca sumę wartości wynikowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1573">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1574">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> aby zsumować przewidywane wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1574">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1575">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1575">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;int&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Integer)))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;int&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int&gt;&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1576">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1576">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1577">Sekwencja wartości typu <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1577">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1578">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1578">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1579">Oblicza sumę sekwencji nullable <see cref="T:System.Int32" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1579">Computes the sum of the sequence of nullable <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1580">Suma przewidywanych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1580">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1581">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1581">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1582">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1582">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1583"><xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1583">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1584">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1584">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1585">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1585">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1586">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` i zwraca sumę wartości wynikowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1586">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1587">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> aby zsumować przewidywane wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1587">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1588">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1588">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1589">Suma jest większa niż <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1589">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;long&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Long)))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;long&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int64&gt;&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1590">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1590">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1591">Sekwencja wartości typu <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1591">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1592">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1592">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1593">Oblicza sumę sekwencji nullable <see cref="T:System.Int64" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1593">Computes the sum of the sequence of nullable <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1594">Suma przewidywanych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1594">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1595">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1595">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1596">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1596">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1597"><xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1597">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1598">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1598">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1599">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1599">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1600">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` i zwraca sumę wartości wynikowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1600">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1601">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> aby zsumować przewidywane wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1601">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1602">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1602">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="2b287-1603">Suma jest większa niż <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1603">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;float&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Single)))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;float&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;single&gt;&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1604">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1604">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1605">Sekwencja wartości typu <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1605">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1606">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1606">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1607">Oblicza sumę sekwencji nullable <see cref="T:System.Single" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1607">Computes the sum of the sequence of nullable <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1608">Suma przewidywanych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1608">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1609">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1609">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1610">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1610">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1611"><xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1611">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1612">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1612">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1613">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1613">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1614">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` i zwraca sumę wartości wynikowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1614">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1615">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> aby zsumować przewidywane wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1615">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1616">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1616">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Single))) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, float&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, single&gt;&gt; -&gt; single" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1617">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1617">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1618">Sekwencja wartości typu <c>TSource</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1618">A sequence of values of type <c>TSource</c>.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="2b287-1619">Funkcja projekcji Zastosuj do każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1619">A projection function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1620">Oblicza sumę sekwencji <see cref="T:System.Single" /> wartości, które uzyskuje się za pomocą funkcji projekcji dla każdego elementu w sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1620">Computes the sum of the sequence of <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1621">Suma przewidywanych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1621">The sum of the projected values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1622">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1622">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1623">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1623">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1624"><xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1624">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1625">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1625">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1626">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1626">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1627">Oczekiwane zachowanie jest, że wywołuje `selector` na każdym elemencie `source` i zwraca sumę wartości wynikowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1627">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1628">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> aby zsumować przewidywane wartości sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1628">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1629">
            <paramref name="source" /> lub <paramref name="selector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1629">
              <paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Take&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Take&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Take&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Take(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Take (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1630">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1630">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1631">Sekwencja do zwrócenia elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1631">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2b287-1632">Liczba elementów do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1632">The number of elements to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1633">Zwraca określoną liczbę elementów sąsiadujących z początku sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1633">Returns a specified number of contiguous elements from the start of a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1634">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający określoną liczbę elementów od początku <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1634">An <see cref="T:System.Linq.IQueryable`1" /> that contains the specified number of elements from the start of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1635"><xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1635">The <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1636">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1636">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1637">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1637">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1638">Oczekiwane zachowanie jest, że zajmuje pierwsze `count` elementy od początku `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1638">The expected behavior is that it takes the first `count` elements from the start of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1639">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> do zwrócenia elementy od początku sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1639">The following code example demonstrates how to use <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to return elements from the start of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#99](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#99)]
 [!code-vb[System.Linq.Queryable#99](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1640">
            <paramref name="source" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1640">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TakeLast&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeLast&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeLast&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeLast(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeLast(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member TakeLast : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.TakeLast (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TakeWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1641">Zwraca elementy z sekwencji, tak długo, jak długo określony warunek ma wartość true, a następnie pomija pozostałe elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1641">Returns elements from a sequence as long as a specified condition is true, and then skips the remaining elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1642">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1642">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1643">Sekwencja do zwrócenia elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1643">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-1644">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1644">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1645">Zwraca elementy z sekwencji, tak długo, jak długo określony warunek ma wartość true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1645">Returns elements from a sequence as long as a specified condition is true.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1646">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający elementy z sekwencji wejściowych pojawiają się przed jakim testu określony przez element <paramref name="predicate" /> już przekazuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1646">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence occurring before the element at which the test specified by <paramref name="predicate" /> no longer passes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1647">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1647">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1648">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1648">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1649"><xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1649">The <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1650">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1650">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1651">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1651">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1652">Oczekiwane zachowanie jest, że dotyczy `predicate` do każdego elementu w `source` aż do znalezienia elementu, dla którego `predicate` zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1652">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns `false`.</span></span> <span data-ttu-id="2b287-1653">Zwraca wszystkie elementy aż na tym etapie.</span><span class="sxs-lookup"><span data-stu-id="2b287-1653">It returns all the elements up until that point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1654">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> do zwrócenia elementy od początku sekwencji, tak długo, jak warunek jest spełniony.</span><span class="sxs-lookup"><span data-stu-id="2b287-1654">The following code example demonstrates how to use <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return elements from the start of a sequence as long as a condition is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#100](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#100)]
 [!code-vb[System.Linq.Queryable#100](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#100)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1655">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1655">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1656">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1656">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1657">Sekwencja do zwrócenia elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1657">The sequence to return elements from.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-1658">Funkcja testowania każdego elementu na stanie; drugi parametr funkcji reprezentuje indeks elementu w sekwencji źródłowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1658">A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1659">Zwraca elementy z sekwencji, tak długo, jak długo określony warunek ma wartość true.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1659">Returns elements from a sequence as long as a specified condition is true.</span>
          </span>
          <span data-ttu-id="2b287-1660">Indeks elementu jest używany w logice funkcji predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1660">The element's index is used in the logic of the predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1661">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający elementy z sekwencji wejściowych pojawiają się przed jakim testu określony przez element <paramref name="predicate" /> już przekazuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1661">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence occurring before the element at which the test specified by <paramref name="predicate" /> no longer passes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1662">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1662">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1663">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1663">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1664"><xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1664">The <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1665">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1665">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1666">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1666">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1667">Oczekiwane zachowanie jest, że dotyczy `predicate` do każdego elementu w `source` aż do znalezienia elementu, dla którego `predicate` zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1667">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns `false`.</span></span> <span data-ttu-id="2b287-1668">Zwraca wszystkie elementy aż na tym etapie.</span><span class="sxs-lookup"><span data-stu-id="2b287-1668">It returns all the elements up until that point.</span></span> <span data-ttu-id="2b287-1669">Indeks każdego elementu źródłowego jest dostarczana jako drugi argument `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1669">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1670">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> do zwrócenia elementy od początku sekwencji, dopóki spełniony jest warunek, który używa indeks elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-1670">The following code example demonstrates how to use <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to return elements from the start of a sequence as long as a condition that uses the index of the element is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#101](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#101)]
 [!code-vb[System.Linq.Queryable#101](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1671">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1671">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1672">Wykonuje kolejne kolejność elementów w sekwencji w kolejności rosnącej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1672">Performs a subsequent ordering of the elements in a sequence in ascending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenBy(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1673">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1673">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-1674">Typ klucza zwróconego przez funkcję, reprezentowane przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1674">The type of the key returned by the function represented by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1675">
            <see cref="T:System.Linq.IOrderedQueryable`1" /> Zawiera elementy do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1675">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-1676">Funkcja wyodrębniania klucza z każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1676">A function to extract a key from each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1677">Wykonuje kolejne kolejność elementów w sekwencji rosnąco, zgodnie z kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1677">Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1678">
            <see cref="T:System.Linq.IOrderedQueryable`1" /> Której elementy są sortowane według klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1678">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1679">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1679">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1680">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1680">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1681"><xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1681">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1682">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1682">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="2b287-1683">Wynik wywołania metody <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> jest rzutowany na typ <xref:System.Linq.IOrderedQueryable%601> i zwrócone.</span><span class="sxs-lookup"><span data-stu-id="2b287-1683">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="2b287-1684">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1684">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1685">To oczekiwane zachowanie, wykonuje dodatkowej sortowania elementów `source` oparte na kluczu uzyskany przez `keySelector` na każdym elemencie `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1685">The expected behavior is that it performs a secondary sort of the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="2b287-1686">Wszystkie wcześniej ustanowione, porządek sortowania są zachowywane.</span><span class="sxs-lookup"><span data-stu-id="2b287-1686">All previously established sort orders are preserved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1687">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> przeprowadzenie dodatkowej kolejność elementów w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1687">The following code example demonstrates how to use <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to perform a secondary ordering of the elements in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#102](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#102)]
 [!code-vb[System.Linq.Queryable#102](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1688">
            <paramref name="source" /> lub <paramref name="keySelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1688">
              <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenBy(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1689">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1689">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-1690">Typ klucza zwróconego przez funkcję, reprezentowane przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1690">The type of the key returned by the function represented by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1691">
            <see cref="T:System.Linq.IOrderedQueryable`1" /> Zawiera elementy do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1691">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-1692">Funkcja wyodrębniania klucza z każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1692">A function to extract a key from each element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-1693">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1693">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1694">Wykonuje kolejne kolejność elementów w sekwencji w kolejności rosnącej przy użyciu określona funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1694">Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1695">
            <see cref="T:System.Linq.IOrderedQueryable`1" /> Której elementy są sortowane według klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1695">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1696">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1696">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1697">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1697">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1698"><xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1698">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1699">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1699">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="2b287-1700">Wynik wywołania metody <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> jest rzutowany na typ <xref:System.Linq.IOrderedQueryable%601> i zwrócone.</span><span class="sxs-lookup"><span data-stu-id="2b287-1700">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="2b287-1701">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1701">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1702">To oczekiwane zachowanie, wykonuje dodatkowej sortowania elementów `source` oparte na kluczu uzyskany przez `keySelector` na każdym elemencie `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1702">The expected behavior is that it performs a secondary sort of the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="2b287-1703">Wszystkie wcześniej ustanowione, porządek sortowania są zachowywane.</span><span class="sxs-lookup"><span data-stu-id="2b287-1703">All previously established sort orders are preserved.</span></span> <span data-ttu-id="2b287-1704">`comparer` Parametr służy do porównywania wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="2b287-1704">The `comparer` parameter is used to compare key values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1705">
            <paramref name="source" /> lub <paramref name="keySelector" /> lub <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1705">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1706">Wykonuje kolejne kolejność elementów w sekwencji w kolejności malejącej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1706">Performs a subsequent ordering of the elements in a sequence in descending order.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenByDescending(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1707">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1707">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-1708">Typ klucza zwróconego przez funkcję, reprezentowane przez <c>keySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1708">The type of the key returned by the function represented by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1709">
            <see cref="T:System.Linq.IOrderedQueryable`1" /> Zawiera elementy do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1709">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-1710">Funkcja wyodrębniania klucza z każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1710">A function to extract a key from each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1711">Wykonuje kolejne kolejność elementów w sekwencji w porządku malejącym zgodnie z kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1711">Performs a subsequent ordering of the elements in a sequence in descending order, according to a key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1712">
            <see cref="T:System.Linq.IOrderedQueryable`1" /> Której elementy są sortowane w porządku malejącym zgodnie z kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1712">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1713">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1713">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1714">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1714">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1715"><xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1715">The <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1716">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1716">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="2b287-1717">Wynik wywołania metody <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> jest rzutowany na typ <xref:System.Linq.IOrderedQueryable%601> i zwrócone.</span><span class="sxs-lookup"><span data-stu-id="2b287-1717">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="2b287-1718">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1718">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1719">To oczekiwane zachowanie, wykonuje dodatkowej sortowania elementów `source` w kolejności malejącej na podstawie klucza uzyskany przez `keySelector` na każdym elemencie `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1719">The expected behavior is that it performs a secondary sort of the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="2b287-1720">Wszystkie wcześniej ustanowione, porządek sortowania są zachowywane.</span><span class="sxs-lookup"><span data-stu-id="2b287-1720">All previously established sort orders are preserved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1721">
            <paramref name="source" /> lub <paramref name="keySelector" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1721">
              <paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenByDescending(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1722">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1722">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="2b287-1723">Typ klucza, który jest zwracany przez <c>keySelector</c> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1723">The type of the key that is returned by the <c>keySelector</c> function.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1724">
            <see cref="T:System.Linq.IOrderedQueryable`1" /> Zawiera elementy do sortowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1724">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="2b287-1725">Funkcja wyodrębniania klucza z każdego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1725">A function to extract a key from each element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-1726">
            <see cref="T:System.Collections.Generic.IComparer`1" /> Do porównywania kluczy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1726">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1727">Wykonuje kolejne kolejność elementów w sekwencji w kolejności malejącej, używając określona funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1727">Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1728">Kolekcja, której elementy są sortowane w porządku malejącym zgodnie z kluczem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1728">A collection whose elements are sorted in descending order according to a key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1729">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1729">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1730">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1730">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1731"><xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1731">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1732">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1732">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="2b287-1733">Wynik wywołania metody <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> jest rzutowany na typ <xref:System.Linq.IOrderedQueryable%601> i zwrócone.</span><span class="sxs-lookup"><span data-stu-id="2b287-1733">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="2b287-1734">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1734">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1735">To oczekiwane zachowanie, wykonuje dodatkowej sortowania elementów `source` w kolejności malejącej na podstawie klucza uzyskany przez `keySelector` na każdym elemencie `source`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1735">The expected behavior is that it performs a secondary sort of the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="2b287-1736">Wszystkie wcześniej ustanowione, porządek sortowania są zachowywane.</span><span class="sxs-lookup"><span data-stu-id="2b287-1736">All previously established sort orders are preserved.</span></span> <span data-ttu-id="2b287-1737">`comparer` Parametr służy do porównywania wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="2b287-1737">The `comparer` parameter is used to compare key values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1738">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> przeprowadzenie dodatkowej kolejność elementów w sekwencji w kolejności malejącej, korzystając z niestandardowego modułu porównującego.</span><span class="sxs-lookup"><span data-stu-id="2b287-1738">The following code example demonstrates how to use <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> to perform a secondary ordering of the elements in a sequence in descending order by using a custom comparer.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#103](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#103)]
 [!code-vb[System.Linq.Queryable#103](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1739">
            <paramref name="source" /> lub <paramref name="keySelector" /> lub <paramref name="comparer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1739">
              <paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1740">Tworzy zbiorów dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1740">Produces the set union of two sequences.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Union(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Union (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1741">Typ elementów sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1741">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="2b287-1742">Sekwencja, w których różne elementy stanowią pierwszy zestaw operacji union.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1742">A sequence whose distinct elements form the first set for the union operation.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="2b287-1743">Sekwencja, w których różne elementy tworzą drugi zestaw operacji union.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1743">A sequence whose distinct elements form the second set for the union operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1744">Tworzy zbiorów dwóch sekwencji za pomocą domyślny moduł porównujący równość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1744">Produces the set union of two sequences by using the default equality comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1745">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający elementy z obu sekwencji wejściowych, z wyłączeniem duplikaty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1745">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements from both input sequences, excluding duplicates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1746"><xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1746">The <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1747">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1747">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1748">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> jest zależna od implementacji typu `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1748">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="2b287-1749">Oczekiwane zachowanie jest zbiorów elementów w `source1` i `source2` jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="2b287-1749">The expected behavior is that the set union of the elements in `source1` and `source2` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1750">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> uzyskać zbiorów dwóch sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1750">The following code example demonstrates how to use <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to obtain the set union of two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#109](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#109)]
 [!code-vb[System.Linq.Queryable#109](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#109)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1751">
            <paramref name="source1" /> lub <paramref name="source2" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1751">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Union(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Union (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1752">Typ elementów sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1752">The type of the elements of the input sequences.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="2b287-1753">Sekwencja, w których różne elementy stanowią pierwszy zestaw operacji union.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1753">A sequence whose distinct elements form the first set for the union operation.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="2b287-1754">Sekwencja, w których różne elementy tworzą drugi zestaw operacji union.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1754">A sequence whose distinct elements form the second set for the union operation.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="2b287-1755">
            <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> Do porównywania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1755">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1756">Tworzy zbiorów dwóch sekwencji przy użyciu określonego <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1756">Produces the set union of two sequences by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1757">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający elementy z obu sekwencji wejściowych, z wyłączeniem duplikaty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1757">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements from both input sequences, excluding duplicates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1758"><xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1758">The <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1759">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1759">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1760">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> jest zależna od implementacji typu `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1760">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="2b287-1761">Oczekiwane zachowanie jest zbiorów elementów w `source1` i `source2` jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="2b287-1761">The expected behavior is that the set union of the elements in `source1` and `source2` is returned.</span></span> <span data-ttu-id="2b287-1762">`comparer` Parametr jest używany do porównywania wartości.</span><span class="sxs-lookup"><span data-stu-id="2b287-1762">The `comparer` parameter is used to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1763">
            <paramref name="source1" /> lub <paramref name="source2" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1763">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Where&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b287-1764">Służy do przefiltrowania kolejność wartości na podstawie predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1764">Filters a sequence of values based on a predicate.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Where(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1765">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1765">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1766">
            <see cref="T:System.Linq.IQueryable`1" /> Do filtrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1766">An <see cref="T:System.Linq.IQueryable`1" /> to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-1767">Funkcja testowania każdego elementu na stanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1767">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1768">Służy do przefiltrowania kolejność wartości na podstawie predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1768">Filters a sequence of values based on a predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1769">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający elementy z sekwencji wejściowych, które spełniają warunek określony przez <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1769">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence that satisfy the condition specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1770">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1770">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1771">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1771">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1772"><xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1772">The <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1773">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1773">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1774">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1774">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1775">To oczekiwane zachowanie, zwraca elementy z `source` które spełniają warunek określony przez `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1775">The expected behavior is that it returns the elements from `source` that satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1776">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> do filtrowania sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1776">The following code example demonstrates how to use <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to filter a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#110](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#110)]
 [!code-vb[System.Linq.Queryable#110](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1777">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1777">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Where(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="2b287-1778">Typ elementów <c>źródła</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1778">The type of the elements of <c>source</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="2b287-1779">
            <see cref="T:System.Linq.IQueryable`1" /> Do filtrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1779">An <see cref="T:System.Linq.IQueryable`1" /> to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="2b287-1780">Funkcja testowania każdego elementu na stanie; drugi parametr funkcji reprezentuje indeks elementu w sekwencji źródłowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1780">A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1781">Służy do przefiltrowania kolejność wartości na podstawie predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1781">Filters a sequence of values based on a predicate.</span>
          </span>
          <span data-ttu-id="2b287-1782">Indeks każdy element jest używany w logice funkcji predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1782">Each element's index is used in the logic of the predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1783">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający elementy z sekwencji wejściowych, które spełniają warunek określony przez <paramref name="predicate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1783">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence that satisfy the condition specified by <paramref name="predicate" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1784">Ta metoda ma co najmniej jeden parametr typu <xref:System.Linq.Expressions.Expression%601> którego argument typu jest jednym z <xref:System.Func%602> typów.</span><span class="sxs-lookup"><span data-stu-id="2b287-1784">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="2b287-1785">Dla tych parametrów można przekazać wyrażenia lambda i będzie kompilowana do <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="2b287-1785">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="2b287-1786"><xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1786">The <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1787">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1787">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1788">Zachowania kwerendy, który występuje w wyniku wykonywania drzewo wyrażenia, który reprezentuje wywołanie <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> jest zależna od implementacji typu `source` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1788">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="2b287-1789">To oczekiwane zachowanie, zwraca elementy z `source` które spełniają warunek określony przez `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1789">The expected behavior is that it returns the elements from `source` that satisfy the condition specified by `predicate`.</span></span> <span data-ttu-id="2b287-1790">Indeks każdego elementu źródłowego jest dostarczana jako drugi argument `predicate`.</span><span class="sxs-lookup"><span data-stu-id="2b287-1790">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1791">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> do filtrowania sekwencji na podstawie predykatu, która zawiera indeks każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="2b287-1791">The following code example demonstrates how to use <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to filter a sequence based on a predicate that incorporates the index of each element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#111](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#111)]
 [!code-vb[System.Linq.Queryable#111](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1792">
            <paramref name="source" /> lub <paramref name="predicate" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1792">
              <paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Zip&lt;TFirst,TSecond,TResult&gt; (this System.Linq.IQueryable&lt;TFirst&gt; source1, System.Collections.Generic.IEnumerable&lt;TSecond&gt; source2, System.Linq.Expressions.Expression&lt;Func&lt;TFirst,TSecond,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Zip&lt;TFirst, TSecond, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TFirst&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSecond&gt; source2, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TFirst, !!TSecond, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip(Of TFirst, TSecond, TResult) (source1 As IQueryable(Of TFirst), source2 As IEnumerable(Of TSecond), resultSelector As Expression(Of Func(Of TFirst, TSecond, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFirst, typename TSecond, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Zip(System::Linq::IQueryable&lt;TFirst&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSecond&gt; ^ source2, System::Linq::Expressions::Expression&lt;Func&lt;TFirst, TSecond, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Zip : System.Linq.IQueryable&lt;'First&gt; * seq&lt;'Second&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'First, 'Second, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Zip (source1, source2, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFirst" />
        <TypeParameter Name="TSecond" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TFirst&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSecond&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TFirst,TSecond,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFirst">
          <span data-ttu-id="2b287-1793">Typ elementów pierwszej sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1793">The type of the elements of the first input sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TSecond">
          <span data-ttu-id="2b287-1794">Typ elementów drugiej sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1794">The type of the elements of the second input sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TResult">
          <span data-ttu-id="2b287-1795">Typ elementów sekwencji wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1795">The type of the elements of the result sequence.</span>
          </span>
        </typeparam>
        <param name="source1">
          <span data-ttu-id="2b287-1796">Pierwsza sekwencja do scalenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1796">The first sequence to merge.</span>
          </span>
        </param>
        <param name="source2">
          <span data-ttu-id="2b287-1797">Drugiej sekwencji do scalenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1797">The second sequence to merge.</span>
          </span>
        </param>
        <param name="resultSelector">
          <span data-ttu-id="2b287-1798">Funkcja, która określa sposób scalania elementów z dwóch sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1798">A function that specifies how to merge the elements from the two sequences.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b287-1799">Scala dwie sekwencje przy użyciu określonej funkcji predykatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1799">Merges two sequences by using the specified predicate function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b287-1800">
            <see cref="T:System.Linq.IQueryable`1" /> Zawierający scalone elementy dwóch sekwencji wejściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1800">An <see cref="T:System.Linq.IQueryable`1" /> that contains merged elements of two input sequences.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b287-1801"><xref:System.Linq.Queryable.Zip%2A> Metoda generuje <xref:System.Linq.Expressions.MethodCallExpression> reprezentujący wywołanie <xref:System.Linq.Queryable.Zip%2A> siebie jako skonstruowany metody rodzajowej.</span><span class="sxs-lookup"><span data-stu-id="2b287-1801">The <xref:System.Linq.Queryable.Zip%2A> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Zip%2A> itself as a constructed generic method.</span></span> <span data-ttu-id="2b287-1802">Następnie przekazuje <xref:System.Linq.Expressions.MethodCallExpression> do <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> metody <xref:System.Linq.IQueryProvider> reprezentowany przez <xref:System.Linq.IQueryable.Provider%2A> właściwość `source1` parametru.</span><span class="sxs-lookup"><span data-stu-id="2b287-1802">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="2b287-1803">Metoda scala każdego elementu pierwszej sekwencji z elementu, który ma ten sam indeks w drugiej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1803">The method merges each element of the first sequence with an element that has the same index in the second sequence.</span></span> <span data-ttu-id="2b287-1804">Jeżeli sekwencje mają taką samą liczbę elementów metody scala sekwencji, dopóki nie zostanie osiągnięty koniec jeden z nich.</span><span class="sxs-lookup"><span data-stu-id="2b287-1804">If the sequences do not have the same number of elements, the method merges sequences until it reaches the end of one of them.</span></span> <span data-ttu-id="2b287-1805">Na przykład jeśli jednej sekwencji ma trzy elementy, a druga ma cztery, wynikowa sekwencja będzie miał tylko trzy elementy.</span><span class="sxs-lookup"><span data-stu-id="2b287-1805">For example, if one sequence has three elements and the other one has four, the resulting sequence will have only three elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b287-1806">Poniższy przykład kodu demonstruje sposób używania <xref:System.Linq.Queryable.Zip%2A> metodę, aby scalić dwóch sekwencji.</span><span class="sxs-lookup"><span data-stu-id="2b287-1806">The following code example demonstrates how to use the <xref:System.Linq.Queryable.Zip%2A> method to merge two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#200](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#200)]
 [!code-vb[System.Linq.Queryable#200](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#200)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b287-1807">
            <paramref name="source1" /> lub <paramref name="source2" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b287-1807">
              <paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>