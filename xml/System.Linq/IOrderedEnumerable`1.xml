<Type Name="IOrderedEnumerable&lt;TElement&gt;" FullName="System.Linq.IOrderedEnumerable&lt;TElement&gt;">
  <TypeSignature Language="C#" Value="public interface IOrderedEnumerable&lt;TElement&gt; : System.Collections.Generic.IEnumerable&lt;TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOrderedEnumerable`1&lt;TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IOrderedEnumerable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOrderedEnumerable(Of TElement)&#xA;Implements IEnumerable(Of TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TElement&gt;&#xA;public interface class IOrderedEnumerable : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TElement" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TElement"><span data-ttu-id="066d5-101">Typ elementów w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="066d5-101">The type of the elements of the sequence.</span></span></typeparam>
    <summary><span data-ttu-id="066d5-102">Reprezentuje posortowane sekwencji.</span><span class="sxs-lookup"><span data-stu-id="066d5-102">Represents a sorted sequence.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="066d5-103">Ten typ jest wyliczalny, ponieważ dziedziczy on z <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="066d5-103">This type is enumerable because it inherits from <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="066d5-104">Metody rozszerzenia <xref:System.Linq.Enumerable.ThenBy%2A> i <xref:System.Linq.Enumerable.ThenByDescending%2A> działanie na obiektach typu <xref:System.Linq.IOrderedEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="066d5-104">The extension methods <xref:System.Linq.Enumerable.ThenBy%2A> and <xref:System.Linq.Enumerable.ThenByDescending%2A> operate on objects of type <xref:System.Linq.IOrderedEnumerable%601>.</span></span> <span data-ttu-id="066d5-105">Obiekt typu <xref:System.Linq.IOrderedEnumerable%601> można uzyskać przez wywoływanie jednej z metod sortowania podstawowego <xref:System.Linq.Enumerable.OrderBy%2A> lub <xref:System.Linq.Enumerable.OrderByDescending%2A>, które powrotu <xref:System.Linq.IOrderedEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="066d5-105">An object of type <xref:System.Linq.IOrderedEnumerable%601> can be obtained by calling one of the primary sort methods, <xref:System.Linq.Enumerable.OrderBy%2A> or <xref:System.Linq.Enumerable.OrderByDescending%2A>, which return an <xref:System.Linq.IOrderedEnumerable%601>.</span></span> <span data-ttu-id="066d5-106"><xref:System.Linq.Enumerable.ThenBy%2A> i <xref:System.Linq.Enumerable.ThenByDescending%2A>, metody sortowania podrzędnego z kolei także zwracać obiekt typu <xref:System.Linq.IOrderedEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="066d5-106"><xref:System.Linq.Enumerable.ThenBy%2A> and <xref:System.Linq.Enumerable.ThenByDescending%2A>, the subordinate sort methods, in turn also return an object of type <xref:System.Linq.IOrderedEnumerable%601>.</span></span> <span data-ttu-id="066d5-107">Ten projekt umożliwia dowolną liczbę kolejnych wywołań <xref:System.Linq.Enumerable.ThenBy%2A> lub <xref:System.Linq.Enumerable.ThenByDescending%2A>, gdzie każde wywołanie wykonuje podrzędnego porządkowanie dla posortowanych danych zwróconych z poprzedniego wywołania.</span><span class="sxs-lookup"><span data-stu-id="066d5-107">This design allows for any number of consecutive calls to <xref:System.Linq.Enumerable.ThenBy%2A> or <xref:System.Linq.Enumerable.ThenByDescending%2A>, where each call performs a subordinate ordering on the sorted data returned from the previous call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="066d5-108">W poniższym przykładzie pokazano, jak wykonać podstawowe i pomocnicze kolejność na tablicę ciągów.</span><span class="sxs-lookup"><span data-stu-id="066d5-108">The following example demonstrates how to perform a primary and secondary ordering on an array of strings.</span></span> <span data-ttu-id="066d5-109">On również wykaże, że powstałe w ten sposób <xref:System.Linq.IOrderedEnumerable%601> jest wyliczalny.</span><span class="sxs-lookup"><span data-stu-id="066d5-109">It also demonstrates that the resulting <xref:System.Linq.IOrderedEnumerable%601> is enumerable.</span></span>  
  
 [!code-csharp[System.Linq.IOrderedEnumerable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IOrderedEnumerable/CS/IOrderedEnumerable.cs#1)]
 [!code-vb[System.Linq.IOrderedEnumerable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IOrderedEnumerable/VB/IOrderedEnumerable.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateOrderedEnumerable&lt;TKey&gt;">
      <MemberSignature Language="C#" Value="public System.Linq.IOrderedEnumerable&lt;TElement&gt; CreateOrderedEnumerable&lt;TKey&gt; (Func&lt;TElement,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer, bool descending);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IOrderedEnumerable`1&lt;!TElement&gt; CreateOrderedEnumerable&lt;TKey&gt;(class System.Func`2&lt;!TElement, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer, bool descending) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateOrderedEnumerable(Of TKey) (keySelector As Func(Of TElement, TKey), comparer As IComparer(Of TKey), descending As Boolean) As IOrderedEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey&gt;&#xA; System::Linq::IOrderedEnumerable&lt;TElement&gt; ^ CreateOrderedEnumerable(Func&lt;TElement, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer, bool descending);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keySelector" Type="System.Func&lt;TElement,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
        <Parameter Name="descending" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="066d5-110">Typ klucza utworzonego przez <c>keySelector</c>.</span><span class="sxs-lookup"><span data-stu-id="066d5-110">The type of the key produced by <c>keySelector</c>.</span></span></typeparam>
        <param name="keySelector"><span data-ttu-id="066d5-111"><see cref="T:System.Func`2" /> Używany do wyodrębnienia klucza dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="066d5-111">The <see cref="T:System.Func`2" /> used to extract the key for each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="066d5-112"><see cref="T:System.Collections.Generic.IComparer`1" /> Użyty do porównania klucze do umieszczenia w sekwencji zwrócony.</span><span class="sxs-lookup"><span data-stu-id="066d5-112">The <see cref="T:System.Collections.Generic.IComparer`1" /> used to compare keys for placement in the returned sequence.</span></span></param>
        <param name="descending">
          <span data-ttu-id="066d5-113"><see langword="true" /> Aby posortować elementy w porządku malejącym; <see langword="false" /> Aby posortować elementy w kolejności rosnącej.</span><span class="sxs-lookup"><span data-stu-id="066d5-113"><see langword="true" /> to sort the elements in descending order; <see langword="false" /> to sort the elements in ascending order.</span></span></param>
        <summary><span data-ttu-id="066d5-114">Wykonuje kolejne porządkowanie dla elementów <see cref="T:System.Linq.IOrderedEnumerable`1" /> według klucza.</span><span class="sxs-lookup"><span data-stu-id="066d5-114">Performs a subsequent ordering on the elements of an <see cref="T:System.Linq.IOrderedEnumerable`1" /> according to a key.</span></span></summary>
        <returns><span data-ttu-id="066d5-115"><see cref="T:System.Linq.IOrderedEnumerable`1" /> Której elementy są sortowane według klucza.</span><span class="sxs-lookup"><span data-stu-id="066d5-115">An <see cref="T:System.Linq.IOrderedEnumerable`1" /> whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="066d5-116">Funkcje zapewniane przez tę metodę, tak jak odbywa się przy <xref:System.Linq.Enumerable.ThenBy%2A> lub <xref:System.Linq.Enumerable.ThenByDescending%2A>w zależności od tego, czy `descending` jest `true` lub `false`.</span><span class="sxs-lookup"><span data-stu-id="066d5-116">The functionality provided by this method is like that provided by <xref:System.Linq.Enumerable.ThenBy%2A> or <xref:System.Linq.Enumerable.ThenByDescending%2A>, depending on whether `descending` is `true` or `false`.</span></span> <span data-ttu-id="066d5-117">Zarówno wykonują kolejności podrzędne już posortowane sekwencji typu <xref:System.Linq.IOrderedEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="066d5-117">They both perform a subordinate ordering of an already sorted sequence of type <xref:System.Linq.IOrderedEnumerable%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="066d5-118">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable*> do przeprowadzenia dodatkowej kolejność na <xref:System.Linq.IOrderedEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="066d5-118">The following code example demonstrates how to use <xref:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable*> to perform a secondary ordering on an <xref:System.Linq.IOrderedEnumerable%601>.</span></span>  
  
 [!code-csharp[System.Linq.IOrderedEnumerable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IOrderedEnumerable/CS/IOrderedEnumerable.cs#2)]
 [!code-vb[System.Linq.IOrderedEnumerable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IOrderedEnumerable/VB/IOrderedEnumerable.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>