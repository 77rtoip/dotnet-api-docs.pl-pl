<Type Name="ILease" FullName="System.Runtime.Remoting.Lifetime.ILease">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f826344ad518f09811adf2b10c3fd65b0727d9de" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36535810" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ILease" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILease" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Lifetime.ILease" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILease" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILease" />
  <TypeSignature Language="F#" Value="type ILease = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje obiekt dzierżawy okres istnienia, który jest używany przez usługę okres istnienia komunikacji zdalnej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rozproszone odzyskiwanie kolekcji formantów, usunięcie aplikacji serwera. Tradycyjnym rozproszonej wyrzucanie elementów bezużytecznych używa liczby odwołań i polecenie ping dla formantu. Działa to również w przypadku kilku klientów dla każdego obiektu, ale nie działa dobrze w przypadku, gdy istnieją tysiące klientów dla każdego obiektu. Okres istnienia usługi można założyć funkcja tradycyjnych rozproszonej moduł Garbage Collector i skale sytuacji, gdy zwiększa liczby klientów.  
  
 Okres istnienia usługi kojarzy dzierżawy z każdego obiektu zdalnie aktywowane. Gdy dzierżawa wygaśnie, obiekt jest usunięty. Dzierżawę można określić, że obiekt ma nieograniczony okres istnienia.  
  
 Każdy <xref:System.AppDomain> zawiera Menedżera dzierżawy, który zarządza dzierżawy w domenie. Menedżer dzierżawy okresowo sprawdza dzierżawy do czasu wygaśnięcia. Jeśli Dzierżawa wygasła, możesz albo można anulowane przez usunięcie jego odwołanie do dzierżawy lub odnowiony, wywołując jedną lub więcej sponsorzy dzierżawy.  
  
 Dzierżawa zawiera właściwości, które określają jego zasad i metod, które odnowić czas trwania dzierżawy. Przedstawia dzierżawy <xref:System.Runtime.Remoting.Lifetime.ILease> interfejsu.  
  
 Na przykład przedstawiający sposób użycia <xref:System.Runtime.Remoting.Lifetime.ILease> interfejs zobacz [okresy istnienia](http://msdn.microsoft.com/library/334a30e5-33cb-4f0f-a38a-ed4abc5560fa).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentLeaseTime">
      <MemberSignature Language="C#" Value="public TimeSpan CurrentLeaseTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CurrentLeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentLeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CurrentLeaseTime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentLeaseTime : TimeSpan" Usage="System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czas pozostały dzierżawy.</summary>
        <value>Ilość czasu na dzierżawę.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Lifetime.LeaseState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Remoting.Lifetime.LeaseState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As LeaseState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Lifetime::LeaseState CurrentState { System::Runtime::Remoting::Lifetime::LeaseState get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Runtime.Remoting.Lifetime.LeaseState" Usage="System.Runtime.Remoting.Lifetime.ILease.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Lifetime.LeaseState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" /> dzierżawy.</summary>
        <value>Bieżący <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" /> dzierżawy.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
        <altmember cref="T:System.Runtime.Remoting.Lifetime.LeaseState" />
      </Docs>
    </Member>
    <Member MemberName="InitialLeaseTime">
      <MemberSignature Language="C#" Value="public TimeSpan InitialLeaseTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InitialLeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialLeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InitialLeaseTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InitialLeaseTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia początkową czasu dzierżawy.</summary>
        <value>Początkowy czas dzierżawy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime%2A> właściwość jest ustawiona na <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, dzierżawy nigdy nie będzie limit czasu i skojarzonych z nim obiekt ma nieograniczony okres istnienia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Register">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rejestruje sponsor dzierżawy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(class System.Runtime.Remoting.Lifetime.ISponsor obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (obj As ISponsor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(System::Runtime::Remoting::Lifetime::ISponsor ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Register : System.Runtime.Remoting.Lifetime.ISponsor -&gt; unit" Usage="iLease.Register obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
      </Parameters>
      <Docs>
        <param name="obj">Wywołanie zwrotne obiektu sponsor.</param>
        <summary>Rejestruje sponsor dzierżawy bez odnawiania dzierżawy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie zarejestrowano sponsor z bieżącej metody, nie zostanie odnowiony dzierżawy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj, TimeSpan renewalTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(class System.Runtime.Remoting.Lifetime.ISponsor obj, valuetype System.TimeSpan renewalTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (obj As ISponsor, renewalTime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(System::Runtime::Remoting::Lifetime::ISponsor ^ obj, TimeSpan renewalTime);" />
      <MemberSignature Language="F#" Value="abstract member Register : System.Runtime.Remoting.Lifetime.ISponsor * TimeSpan -&gt; unit" Usage="iLease.Register (obj, renewalTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
        <Parameter Name="renewalTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="obj">Wywołanie zwrotne obiektu sponsor.</param>
        <param name="renewalTime">Limit czasu na odnawianie dzierżawy przez.</param>
        <summary>Rejestruje sponsor dzierżawy i jest odnawiana go przez określony <see cref="T:System.TimeSpan" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public TimeSpan Renew (TimeSpan renewalTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan Renew(valuetype System.TimeSpan renewalTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Renew(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Renew (renewalTime As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Renew(TimeSpan renewalTime);" />
      <MemberSignature Language="F#" Value="abstract member Renew : TimeSpan -&gt; TimeSpan" Usage="iLease.Renew renewalTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renewalTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="renewalTime">Limit czasu na odnawianie dzierżawy przez.</param>
        <summary>Odnawia dzierżawę na określoną godzinę.</summary>
        <returns>Czas wygaśnięcia nowej dzierżawy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czas trwania dzierżawy jest równa wartości maksymalnej <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> lub bieżący czas i czas przedłużenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RenewOnCallTime">
      <MemberSignature Language="C#" Value="public TimeSpan RenewOnCallTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RenewOnCallTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime" />
      <MemberSignature Language="VB.NET" Value="Public Property RenewOnCallTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RenewOnCallTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RenewOnCallTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, przez który odnawia wywołania obiektu zdalnego <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />.</summary>
        <value>Ilość czasu, przez który odnawia wywołania obiektu zdalnego <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wprowadzeniu wywołania do obiektu zdalnego dodaje usługę okres istnienia <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> do <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> tylko wtedy, gdy <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> spadła poniżej <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A>. Kolejne wywołania w związku z tym nie zwiększają <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> bez powiązanych z. Zamiast tego natychmiast po każde wywołanie <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> gwarantuje to <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> lub dłużej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SponsorshipTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SponsorshipTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SponsorshipTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SponsorshipTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SponsorshipTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SponsorshipTimeout : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas oczekiwania sponsor mają być zwracane z czas przedłużenia dzierżawy.</summary>
        <value>Ilość czasu oczekiwania na sponsor mają być zwracane z czas przedłużenia dzierżawy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout%2A> jest <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, a następnie tej dzierżawy nie podejmie sponsorzy.  
  
 Jeśli sponsor nie odpowiada wywołaniu odnawiania dzierżawy, w tym czasie, zakłada, że martwy i zostanie usunięty z listy sponsorzy dla bieżącej dzierżawy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public void Unregister (System.Runtime.Remoting.Lifetime.ISponsor obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class System.Runtime.Remoting.Lifetime.ISponsor obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unregister (obj As ISponsor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unregister(System::Runtime::Remoting::Lifetime::ISponsor ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Unregister : System.Runtime.Remoting.Lifetime.ISponsor -&gt; unit" Usage="iLease.Unregister obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
      </Parameters>
      <Docs>
        <param name="obj">Sponsor dzierżawy wyrejestrować.</param>
        <summary>Usuwa sponsor z listy rozdzielonej.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Bezpośredniego obiektu wywołującego wykonuje wywołanie przez odwołanie do interfejsu i nie ma uprawnienia infrastruktury.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem infrastruktury. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wartość uprawnienia: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>