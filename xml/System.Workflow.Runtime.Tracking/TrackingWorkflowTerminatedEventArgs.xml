<Type Name="TrackingWorkflowTerminatedEventArgs" FullName="System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47d507bb010a51307ad1c0fdfa0c5a843a678137" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69441276" /></Metadata><TypeSignature Language="C#" Value="public class TrackingWorkflowTerminatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TrackingWorkflowTerminatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackingWorkflowTerminatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingWorkflowTerminatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type TrackingWorkflowTerminatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera dane skojarzone z zakończeniem wystąpienia przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs> Jest generowany przez infrastrukturę śledzenia środowiska uruchomieniowego w momencie zakończenia wystąpienia przepływu pracy. <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs> <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent.Terminated> <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent>Jeśli skojarzenie z wystąpieniem przepływu pracy zawiera skonfigurowany dla programu, Infrastruktura śledzenia przepływów pracy umieszcza element w w, który wysyła do <xref:System.Workflow.Runtime.Tracking.TrackingProfile> Usługa śledzenia.  
  
 Wystąpienie przepływu pracy może zostać zakończone na jeden z trzech sposobów: host może być wywoływany <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=nameWithType> <xref:System.Workflow.ComponentModel.TerminateActivity> ; działanie może być wywoływane z wnętrza wystąpienia przepływu pracy lub wystąpił nieobsługiwany wyjątek. Jeśli przepływ pracy zostanie <xref:System.Workflow.ComponentModel.TerminateActivity> zakończony przez hosta lub działanie, zestaw <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> <xref:System.Exception.Message%2A> infrastruktury monitorowania środowiska uruchomieniowego ma ustawioną właściwość na opis przyczyny zakończenia. Jeśli przepływ pracy został przerwany z powodu nieobsługiwanego wyjątku, Infrastruktura śledzenia środowiska uruchomieniowego przekazuje nieobsłużony wyjątek w programie <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A>.  
  
> [!NOTE]
>  <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs>jest używany tylko przez usługę śledzenia środowiska uruchomieniowego do przekazywania informacji w <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>. Dane dla <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=nameWithType> zdarzenia są przesyłane <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>w.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje metodę o nazwie `WriteTerminatedEventArgs`, która <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs>przechwytuje. Kod sprawdza, <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> czy właściwość jest `null` (`Nothing` w Visual Basic). Jeśli tak nie jest, kod zapisuje komunikat skojarzony z <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> właściwością w konsoli programu. Jeśli <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> jest `null` (`Nothing`), kod nie zapisuje żadnych informacji o wyjątku w konsoli programu.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK śledzenia EventArgs z pliku Program.cs. Aby uzyskać więcej informacji, zobacz [przykład śledzenia EventArgs](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)).  
  
 [!code-csharp[WF_Samples#288](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#288)]
 [!code-vb[WF_Samples#288](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#288)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)">Przykład śledzenia EventArgs</related>
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyjątek, który spowodował przerwanie wystąpienia przepływu pracy.</summary>
        <value><see cref="T:System.Exception" /> Spowodowało przerwanie wystąpienia przepływu pracy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wystąpienie przepływu pracy zostanie zakończone z powodu nieobsługiwanego wyjątku, <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> zawiera nieobsługiwany wyjątek.  
  
 Gdy wystąpienie przepływu pracy jest przerywane przez wywołanie hosta do <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=nameWithType> lub <xref:System.Workflow.ComponentModel.TerminateActivity> przez działanie, <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> zawiera <xref:System.Workflow.ComponentModel.WorkflowTerminatedException> <xref:System.Exception.Message%2A> właściwość, która ma ustawioną wartość w opisie przyczyny zakończenia. Jeśli host kończy wystąpienie przepływu pracy, dostarcza `string` ten opis w parametrze do <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=nameWithType>; Jeśli <xref:System.Workflow.ComponentModel.TerminateActivity>wystąpienie przepływu pracy zostanie zakończone przez, opis jest dostarczany przez <xref:System.Workflow.ComponentModel.TerminateActivity.Error%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje metodę o nazwie `WriteTerminatedEventArgs`, która <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs>przechwytuje. Kod sprawdza, <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> czy właściwość jest `null` (`Nothing` w Visual Basic). Jeśli tak nie jest, kod zapisuje komunikat skojarzony z <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> właściwością w konsoli programu. Jeśli <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> jest `null` (`Nothing`), kod nie zapisuje żadnych informacji o wyjątku w konsoli programu.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK śledzenia EventArgs z pliku Program.cs. Aby uzyskać więcej informacji, zobacz [przykład śledzenia EventArgs](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)).  
  
 [!code-csharp[WF_Samples#288](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#288)]
 [!code-vb[WF_Samples#288](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#288)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)">Przykład śledzenia EventArgs</related>
      </Docs>
    </Member>
  </Members>
</Type>
