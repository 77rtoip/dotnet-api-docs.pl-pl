<Type Name="TrackingService" FullName="System.Workflow.Runtime.Tracking.TrackingService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="931d7533220943ba73c8cebdb36dcf44bbcc1d9f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69428166" /></Metadata><TypeSignature Language="C#" Value="public abstract class TrackingService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type TrackingService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia podstawowy interfejs między usługą śledzenia i infrastrukturą śledzenia w czasie wykonywania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Usługa śledzenia jest odpowiedzialna za dostarczanie kanałów śledzenia i śledzenie profilów do aparatu czasu wykonywania przepływu pracy. Aparat czasu wykonywania przepływu pracy żąda jednego <xref:System.Workflow.Runtime.Tracking.TrackingChannel> z usługi śledzenia dla każdego wystąpienia przepływu pracy, dla którego <xref:System.Workflow.Runtime.Tracking.TrackingProfile>ma. Aparat czasu wykonywania przepływu pracy używa tego <xref:System.Workflow.Runtime.Tracking.TrackingChannel> do wysyłania rekordów śledzenia skojarzonych z tym wystąpieniem przepływu pracy. <xref:System.Workflow.Runtime.Tracking.TrackingProfile> Zawiera punkty śledzenia, które określają zestaw zdarzeń śledzenia, dla których Infrastruktura śledzenia w czasie wykonywania powinna wysyłać rekordy śledzenia. <xref:System.Workflow.Runtime.Tracking.TrackingProfile> Może także określić dane, które mają zostać wyodrębnione z wystąpienia przepływu pracy, gdy wystąpi jedno z tych zdarzeń śledzenia.  
  
 Infrastruktura śledzenia w czasie wykonywania używa <xref:System.Workflow.Runtime.Tracking.TrackingProfile> do filtrowania zdarzeń śledzenia emitowanych przez wystąpienie przepływu pracy. W przypadku emisji zdarzenia śledzenia zgodnego z punktem śledzenia w programie Infrastruktura śledzenia <xref:System.Workflow.Runtime.Tracking.TrackingProfile>w czasie wykonywania wyodrębnia wszystkie dane określone <xref:System.Workflow.Runtime.Tracking.TrackingProfile> w ramach wystąpienia przepływu pracy i hermetyzuje te dane oraz informacje o śledzeniu zdarzenie w rekordzie śledzenia. Ten rekord śledzenia jest następnie wysyłany <xref:System.Workflow.Runtime.Tracking.TrackingChannel> przy użyciu skojarzonego z wystąpieniem przepływu pracy. Rekord śledzenia może być jednym z następujących rodzajów:  
  
 <xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.UserTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>  
  
 Aplikacja hosta może używać rekordu śledzenia w dowolny sposób. Na przykład aplikacja hosta może przechowywać informacje o śledzeniu w bazie danych i używać ich do implementowania zaawansowanego interfejsu użytkownika lub może użyć tych informacji do informowania administratora o warunku wymagającym pewnej akcji. Usługę śledzenia można zarejestrować za pomocą aparatu czasu wykonywania przepływu pracy, wywołując <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A?displayProperty=nameWithType> lub dołączając odpowiedni wpis w pliku konfiguracyjnym aplikacji.  
  
 Wszystkie usługi śledzenia muszą dziedziczyć z <xref:System.Workflow.Runtime.Tracking.TrackingService> klasy abstrakcyjnej. Ta klasa definiuje podstawowy interfejs między usługą śledzenia i infrastrukturą śledzenia w czasie wykonywania. Aparat czasu wykonywania <xref:System.Workflow.Runtime.Tracking.TrackingProfile> przepływu pracy żąda dla określonego wystąpienia przepływu pracy lub przepływu pracy <xref:System.Type> przez wywołanie jednej z przeciążonych <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> metod lub <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> metody. Aparat czasu wykonywania przepływu pracy wywołuje <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A> <xref:System.Workflow.Runtime.Tracking.TrackingChannel>żądanie.  
  
 Środowisko uruchomieniowe śledzenia przepływu pracy <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> wywołuje <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> metody i za każdym razem, gdy wystąpienie przepływu pracy zostanie utworzone lub załadowane z magazynu trwałości. Obciążenie związane z tymi wywołaniami może być kosztowne dla usługi śledzenia (na przykład wiele wywołań bazy danych). Możesz zaimplementować <xref:System.Workflow.Runtime.Tracking.IProfileNotification> interfejs w usłudze śledzenia, aby obejść ten mechanizm oparty na wywołaniach i użyć zdarzeń do powiadomienia aparatu środowiska uruchomieniowego przepływu pracy o zmianach <xref:System.Workflow.Runtime.Tracking.TrackingProfile>na. W przypadku usług śledzenia, które <xref:System.Workflow.Runtime.Tracking.IProfileNotification> implementują interfejs, aparat czasu wykonywania przepływu pracy subskrybuje <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileUpdated> zdarzenia i <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileRemoved> . Usługa śledzenia może zgłosić odpowiednie zdarzenie, gdy następuje zmiana jednego z jego profilów śledzenia. <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> Klasa implementuje ten interfejs.  
  
 Aparat czasu wykonywania przepływu pracy wywołuje <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> metodę w celu sprawdzenia, <xref:System.Workflow.Runtime.Tracking.TrackingProfile> czy program został zaktualizowany czy usunięty w wyniku jawnego wywołania przez hosta lub usługę do <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A> wystąpienia przepływu pracy. Ten proces umożliwia hostowi lub usłudze dynamiczne Zmienianie profilu śledzenia używanego dla określonego wystąpienia przepływu pracy.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>— W przypadku dziedziczenia <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" />z należy zastąpić następujące elementy członkowskie:<see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" /></para></block>
    <altmember cref="T:System.Workflow.Runtime.Tracking.IProfileNotification" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Po zaimplementowaniu w klasie pochodnej inicjuje nowe wystąpienie <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć nowe wystąpienie `TerminationTrackingService` obiektu o typie, który pochodzi od. `TrackingService` Ten przykład pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia. Aby uzyskać więcej informacji, zobacz [przykład usługi zakończenia śledzenia](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#111](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#111)]
 [!code-vb[WF_Samples#111](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProfile">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Musi zostać zastąpiony w klasie pochodnej i po zaimplementowaniu pobiera profil śledzenia dla określonego wystąpienia przepływu pracy lub typu przepływu pracy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługa śledzenia jest odpowiedzialna za zarządzanie profilami śledzenia dostępnymi dla określonych typów przepływów pracy i określonych wystąpień przepływu pracy. Możesz zaimplementować to zarządzanie w dowolny sposób. Można na przykład zwrócić te <xref:System.Workflow.Runtime.Tracking.TrackingProfile> same dla każdego przepływu pracy <xref:System.Type> i wystąpienia przepływu pracy. można też zarządzać zaawansowanym magazynem profilów śledzenia, do których odwołuje się wystąpienie przepływu pracy <xref:System.Version>, przepływ pracy <xref:System.Type>i.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowInstanceId As Guid) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member GetProfile : Guid -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingService.GetProfile workflowInstanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowInstanceId"><see cref="T:System.Guid" /> Wystąpienia przepływu pracy.</param>
        <summary>Musi zostać zastąpiony w klasie pochodnej, a po zaimplementowaniu zwraca profil śledzenia dla określonego wystąpienia przepływu pracy.</summary>
        <returns>Profil śledzenia określonego wystąpienia przepływu pracy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługa śledzenia jest odpowiedzialna za zarządzanie profilami śledzenia dostępnymi dla określonych typów przepływów pracy i określonych wystąpień przepływu pracy. Możesz zaimplementować to zarządzanie w dowolny sposób. Można na przykład zwrócić te <xref:System.Workflow.Runtime.Tracking.TrackingProfile> same dla każdego przepływu pracy <xref:System.Type> i wystąpienia przepływu pracy. można też zarządzać zaawansowanym magazynem profilów śledzenia, do których odwołuje się wystąpienie przepływu pracy <xref:System.Version>, przepływ pracy <xref:System.Type>i.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono implementację `GetProfile` metody. W tym przykładzie kilka przeciążeń `GetProfile` metody wywołuje pojedynczą metodę prywatną `GetProfile` , która zwraca trwale zakodowany profil śledzenia. Ten przykład pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia. Aby uzyskać więcej informacji, zobacz [przykład usługi zakończenia śledzenia](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#115](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#115)]
 [!code-vb[WF_Samples#115](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Type workflowType, Version profileVersionId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(class System.Type workflowType, class System.Version profileVersionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowType As Type, profileVersionId As Version) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Type ^ workflowType, Version ^ profileVersionId);" />
      <MemberSignature Language="F#" Value="abstract member GetProfile : Type * Version -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingService.GetProfile (workflowType, profileVersionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profileVersionId" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="workflowType"><see cref="T:System.Type" /> Przepływu pracy.</param>
        <param name="profileVersionId"><see cref="T:System.Version" /> Profil śledzenia.</param>
        <summary>Musi zostać zastąpiony w klasie pochodnej, a po zaimplementowaniu zwraca profil śledzenia, który jest kwalifikowany przez wersję dla określonego przepływu <see cref="T:System.Type" />pracy.</summary>
        <returns>Profil śledzenia określonego typu przepływu pracy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługa śledzenia jest odpowiedzialna za zarządzanie profilami śledzenia dostępnymi dla określonych typów przepływów pracy i określonych wystąpień przepływu pracy. Możesz zaimplementować to zarządzanie w dowolny sposób. Można na przykład zwrócić te <xref:System.Workflow.Runtime.Tracking.TrackingProfile> same dla każdego przepływu pracy <xref:System.Type> i wystąpienia przepływu pracy. można też zarządzać zaawansowanym magazynem profilów śledzenia, do których odwołuje się wystąpienie przepływu pracy <xref:System.Version>, przepływ pracy <xref:System.Type>i.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrackingChannel">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel (System.Workflow.Runtime.Tracking.TrackingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel(class System.Workflow.Runtime.Tracking.TrackingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetTrackingChannel (parameters As TrackingParameters) As TrackingChannel" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingChannel ^ GetTrackingChannel(System::Workflow::Runtime::Tracking::TrackingParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member GetTrackingChannel : System.Workflow.Runtime.Tracking.TrackingParameters -&gt; System.Workflow.Runtime.Tracking.TrackingChannel" Usage="trackingService.GetTrackingChannel parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Workflow.Runtime.Tracking.TrackingParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><see cref="T:System.Workflow.Runtime.Tracking.TrackingParameters" /> Skojarzone z wystąpieniem przepływu pracy.</param>
        <summary>Musi zostać zastąpiony w klasie pochodnej, a po zaimplementowaniu zwraca kanał, którego używa Infrastruktura śledzenia w czasie wykonywania do wysyłania rekordów śledzenia do usługi śledzenia.</summary>
        <returns><see cref="T:System.Workflow.Runtime.Tracking.TrackingChannel" /> Służy do wysyłania rekordów śledzenia do usługi śledzenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Infrastruktura śledzenia w czasie wykonywania używa jednej <xref:System.Workflow.Runtime.Tracking.TrackingChannel> dla każdej usługi śledzenia dla każdego wystąpienia przepływu pracy. Aparat czasu wykonywania przepływu pracy wywołuje <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A> wszystkie usługi śledzenia, aby <xref:System.Workflow.Runtime.Tracking.TrackingChannel> uzyskać dostęp do tej usługi. Możesz użyć przekazywanych informacji w <xref:System.Workflow.Runtime.Tracking.TrackingParameters> celu skojarzenia danych śledzenia wysłanych <xref:System.Workflow.Runtime.Tracking.TrackingChannel> w usłudze dla usługi śledzenia z określonym głównym wystąpieniem przepływu pracy.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono implementację `GetTrackingChannel` metody. Ten przykład pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia. Aby uzyskać więcej informacji, zobacz [przykład usługi zakończenia śledzenia](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#113](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#113)]
 [!code-vb[WF_Samples#113](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#113)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryGetProfile (Type workflowType, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryGetProfile(class System.Type workflowType, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryGetProfile (workflowType As Type, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryGetProfile(Type ^ workflowType, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberSignature Language="F#" Value="abstract member TryGetProfile : Type *  -&gt; bool" Usage="trackingService.TryGetProfile (workflowType, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType"><see cref="T:System.Type" /> Przepływ pracy, dla którego ma zostać pobrany profil śledzenia.</param>
        <param name="profile">Gdy ta metoda zwraca, zawiera <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> do załadowania. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Musi zostać zastąpiony w klasie pochodnej i po zaimplementowaniu pobiera profil śledzenia dla określonego typu przepływu pracy, jeśli jest dostępny.</summary>
        <returns><see langword="true" />Jeśli jest dostępny <see cref="T:System.Type" />dlaokreślonego przepływu pracy; w przeciwnym razie. <see langword="false" /> <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> Jeśli <see langword="true" /> <paramref name="profile" />, jestzwracanaw.<see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługa śledzenia jest odpowiedzialna za zarządzanie profilami śledzenia dostępnymi dla określonych typów przepływów pracy i określonych wystąpień przepływu pracy. Możesz zaimplementować to zarządzanie w dowolny sposób. Można na przykład zwrócić te <xref:System.Workflow.Runtime.Tracking.TrackingProfile> same dla każdego przepływu pracy <xref:System.Type> i wystąpienia przepływu pracy. można też zarządzać zaawansowanym magazynem profilów śledzenia, do których odwołuje się wystąpienie przepływu pracy <xref:System.Version>, przepływ pracy <xref:System.Type>i.  
  
   
  
## Examples  
 Poniższy przykład ilustruje implementację `TryGetProfile` metody, która wywołuje metodę prywatną. `GetProfile` Ten przykład pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia. Aby uzyskać więcej informacji, zobacz [przykład usługi zakończenia śledzenia](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[Wf_samples#209](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#209)]
 [!code-vb[Wf_samples#209](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#209)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReloadProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryReloadProfile (Type workflowType, Guid workflowInstanceId, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryReloadProfile(class System.Type workflowType, valuetype System.Guid workflowInstanceId, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryReloadProfile (workflowType As Type, workflowInstanceId As Guid, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryReloadProfile(Type ^ workflowType, Guid workflowInstanceId, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberSignature Language="F#" Value="abstract member TryReloadProfile : Type * Guid *  -&gt; bool" Usage="trackingService.TryReloadProfile (workflowType, workflowInstanceId, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType"><see cref="T:System.Type" /> Wystąpienia przepływu pracy.</param>
        <param name="workflowInstanceId"><see cref="T:System.Guid" /> Wystąpienia przepływu pracy.</param>
        <param name="profile">Gdy ta metoda zwraca, zawiera <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> do załadowania. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Musi zostać zastąpiony w klasie pochodnej i po zaimplementowaniu Pobiera nowy profil śledzenia dla określonego wystąpienia przepływu pracy, jeśli profil śledzenia został zmieniony od czasu ostatniego załadowania.</summary>
        <returns><see langword="true" />Jeśli nowy <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> powinien zostać załadowany; <see langword="false" />w przeciwnym razie. Jeśli <see langword="true" /> <paramref name="profile" />, jestzwracanaw.<see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A>jest wywoływany przez infrastrukturę śledzenia w czasie wykonywania, aby określić, <xref:System.Workflow.Runtime.Tracking.TrackingProfile> czy należy załadować nowy dla określonego wystąpienia przepływu pracy. Jeśli jest wymagana <xref:System.Workflow.Runtime.Tracking.TrackingProfile> nowa, jest zwracana w. `profile` Jeśli chcesz, aby Infrastruktura śledzenia w czasie wykonywania nie mogła śledzić wystąpienia przepływu pracy, Usługa śledzenia powinna zwrócić `true` i ustawić `profile` równe odwołanie o wartości null (`Nothing` w Visual Basic). Usługa śledzenia może korzystać `workflowType` z usługi lub `workflowInstanceId` w dowolny sposób, aby określić, czy profil śledzenia powinien zostać ponownie załadowany. Na przykład <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> jedynym zastosowaniem `workflowInstanceId` jest podjęcie decyzji o tym, czy profil śledzenia powinien zostać ponownie załadowany. <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A>jest wywoływany przez infrastrukturę śledzenia w czasie wykonywania zgodnie z własną semantyką śledzenia lub w odpowiedzi na hosta lub usługę wywołującą <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A?displayProperty=nameWithType> wystąpienie przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład przedstawia podstawową implementację `TryReloadProfile` metody. Ten przykład pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia. Aby uzyskać więcej informacji, zobacz [przykład usługi zakończenia śledzenia](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#116](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#116)]
 [!code-vb[WF_Samples#116](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#116)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
