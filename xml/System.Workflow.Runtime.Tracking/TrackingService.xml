<Type Name="TrackingService" FullName="System.Workflow.Runtime.Tracking.TrackingService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9373e323744498669b0bf0e86ac35613e3afaad3" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51871213" /></Metadata><TypeSignature Language="C#" Value="public abstract class TrackingService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type TrackingService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dostarcza podstawowy interfejs między usługą śledzenia i Infrastruktura śledzenia czasu wykonywania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Usługa śledzenia jest odpowiedzialny za dostarczania śledzenia kanałów i śledzenie profile do aparatu przepływu pracy w czasie wykonywania. Aparat przepływu pracy w czasie wykonywania zażąda <xref:System.Workflow.Runtime.Tracking.TrackingChannel> przy użyciu usługi śledzenia dla każdego wystąpienia przepływu pracy, dla których ma <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. Używa aparatu środowiska wykonawczego przepływów pracy, to <xref:System.Workflow.Runtime.Tracking.TrackingChannel> wysyłać rekordy śledzenia skojarzony z tym wystąpieniem przepływu pracy. Element <xref:System.Workflow.Runtime.Tracking.TrackingProfile> zawiera punkty śledzenia, które określają zestaw śledzenia zdarzeń, dla których Infrastruktura śledzenia czasu wykonywania powinien wysyłać rekordów śledzenia. Element <xref:System.Workflow.Runtime.Tracking.TrackingProfile> może również określić dane, które ma zostać wyodrębniony z wystąpienia przepływu pracy, gdy wystąpi jedno z tych śledzenia zdarzeń.  
  
 Infrastruktura śledzenia czasu wykonywania używa <xref:System.Workflow.Runtime.Tracking.TrackingProfile> do filtru śledzenia zdarzeń wyemitowane przez wystąpienie przepływu pracy. Gdy zdarzenie śledzenia jest emitowane zgodną punkt śledzenia w <xref:System.Workflow.Runtime.Tracking.TrackingProfile>, Infrastruktura śledzenia czasu wykonywania wyodrębnia wszystkie dane określone w <xref:System.Workflow.Runtime.Tracking.TrackingProfile> z wystąpienia przepływu pracy i hermetyzuje tych danych i informacji na temat śledzenia Zdarzenie rekord śledzenia. Ten rekord śledzenia jest następnie wysyłany za pośrednictwem <xref:System.Workflow.Runtime.Tracking.TrackingChannel> skojarzony z wystąpieniem przepływu pracy. Rekord śledzenia może być jedną z następujących typów:  
  
 <xref:System.Workflow.Runtime.Tracking.ActivityTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.UserTrackingRecord>  
  
 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>  
  
 W sposób, który wybiera aplikacji hosta służy rekordem śledzenia. Na przykład aplikacja hosta może przechowywać informacje o śledzeniu w bazie danych i korzystać z niego do implementacji interfejsu użytkownika zaawansowane lub go może używać informacji do informowania administratora warunek, który wymaga pewnych działań. Za pomocą aparatu środowiska wykonawczego przepływów pracy można rejestrować usługi śledzenia, wywołując <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A?displayProperty=nameWithType> albo załączając odpowiedni wpis w pliku konfiguracyjnym aplikacji.  
  
 Wszystkie usługi śledzenia musi dziedziczyć <xref:System.Workflow.Runtime.Tracking.TrackingService> klasy abstrakcyjnej. Ta klasa definiuje podstawowy interfejs między usługą śledzenia i Infrastruktura śledzenia czasu wykonywania. Żądania aparat środowiska wykonawczego przepływów pracy <xref:System.Workflow.Runtime.Tracking.TrackingProfile> wystąpienia określonego przepływu pracy lub przepływu pracy <xref:System.Type> przez wywołanie jednej z przeciążonych <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> metody lub <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> metody. Wywołuje aparat środowiska wykonawczego przepływów pracy <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A> żądanie <xref:System.Workflow.Runtime.Tracking.TrackingChannel>.  
  
 Środowisko uruchomieniowe wywołuje śledzenia przepływu pracy <xref:System.Workflow.Runtime.Tracking.TrackingService.GetProfile%2A> i <xref:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile%2A> metody zawsze wtedy, gdy wystąpienie przepływu pracy jest utworzony lub załadowany w trwałości sklepie. Obciążenia związanego z tych wywołań może być kosztowne w usłudze śledzenia (wiele baz danych wywołań, na przykład). Możesz zaimplementować <xref:System.Workflow.Runtime.Tracking.IProfileNotification> interfejsu usługi śledzenia w celu obejścia tego mechanizmu opartego na wywołanie i powiadomić aparatu wykonawczego przepływów pracy, zmian za pomocą zdarzenia <xref:System.Workflow.Runtime.Tracking.TrackingProfile>. Do śledzenia usług, które implementują <xref:System.Workflow.Runtime.Tracking.IProfileNotification> interfejsu, aparatu środowiska wykonawczego przepływów pracy subskrybuje <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileUpdated> i <xref:System.Workflow.Runtime.Tracking.IProfileNotification.ProfileRemoved> zdarzenia. Usługa śledzenia można podnieść odpowiedniego zdarzenia po zmianie do jednej z jego profile śledzenia. <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> Klasa implementuje ten interfejs.  
  
 Wywołuje aparat środowiska wykonawczego przepływów pracy <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> metody do testowania czy <xref:System.Workflow.Runtime.Tracking.TrackingProfile> zostały zaktualizowane lub usunięte w wyniku jawnym wywołaniem przez hosta lub usługi <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A> w wystąpieniu przepływu pracy. Ten proces umożliwia dynamiczną zmianę profilu śledzenia, który jest używany dla wystąpienia określonego przepływu pracy, hosta lub usługi.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>— W przypadku dziedziczą z <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" />, konieczne jest przesłonięcie następujących składowych: <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />  
  
-   <see cref="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" /></para></block>
    <altmember cref="T:System.Workflow.Runtime.Tracking.IProfileNotification" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Po zaimplementowaniu w klasie pochodnej, inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Runtime.Tracking.TrackingService" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć nowe wystąpienie klasy `TerminationTrackingService` obiektu typu, który pochodzi od klasy `TrackingService`. W tym przykładzie pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia. Aby uzyskać więcej informacji, zobacz [zakończenia usługi próbka danych do śledzenia](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#111](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#111)]
 [!code-vb[WF_Samples#111](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#111)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProfile">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Musi zostać zastąpiona w klasie pochodnej, a w przypadku zaimplementowania, pobiera profilu śledzenia dla wystąpienia określonego przepływu pracy lub przepływu pracy typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługa śledzenia jest odpowiedzialny za zarządzanie profile śledzenia dostępne dla typów określonego przepływu pracy i wystąpienia określonego przepływu pracy. Zarządzania można zaimplementować w jakikolwiek sposób, możesz wybrać. Na przykład takie same zwrócić <xref:System.Workflow.Runtime.Tracking.TrackingProfile> dla każdego przepływu pracy <xref:System.Type> i wystąpienia przepływu pracy; można także zarządzać zaawansowanych magazynu śledzenia profile odwołuje się wystąpienia przepływu pracy, przepływ pracy <xref:System.Type>, i <xref:System.Version>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowInstanceId As Guid) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member GetProfile : Guid -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingService.GetProfile workflowInstanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowInstanceId"><see cref="T:System.Guid" /> Wystąpienia przepływu pracy.</param>
        <summary>Musi zostać zastąpiona w klasie pochodnej, a w przypadku zaimplementowania, zwraca profilu śledzenia dla wystąpienia określonego przepływu pracy.</summary>
        <returns>Profil śledzenia dla wystąpienia określonego przepływu pracy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługa śledzenia jest odpowiedzialny za zarządzanie profile śledzenia dostępne dla typów określonego przepływu pracy i wystąpienia określonego przepływu pracy. Zarządzania można zaimplementować w jakikolwiek sposób, możesz wybrać. Na przykład takie same zwrócić <xref:System.Workflow.Runtime.Tracking.TrackingProfile> dla każdego przepływu pracy <xref:System.Type> i wystąpienia przepływu pracy; można także zarządzać zaawansowanych magazynu śledzenia profile odwołuje się wystąpienia przepływu pracy, przepływ pracy <xref:System.Type>, i <xref:System.Version>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano implementację `GetProfile` metody. W tym przykładzie kilka przeciążenia `GetProfile` metody wywołania jednej prywatnej `GetProfile` metody, która zwraca ustaloną, domyślny profil śledzenia. W tym przykładzie pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia. Aby uzyskać więcej informacji, zobacz [zakończenia usługi próbka danych do śledzenia](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#115](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#115)]
 [!code-vb[WF_Samples#115](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingProfile GetProfile (Type workflowType, Version profileVersionId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingProfile GetProfile(class System.Type workflowType, class System.Version profileVersionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetProfile(System.Type,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetProfile (workflowType As Type, profileVersionId As Version) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingProfile ^ GetProfile(Type ^ workflowType, Version ^ profileVersionId);" />
      <MemberSignature Language="F#" Value="abstract member GetProfile : Type * Version -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingService.GetProfile (workflowType, profileVersionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profileVersionId" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="workflowType"><see cref="T:System.Type" /> Przepływu pracy.</param>
        <param name="profileVersionId"><see cref="T:System.Version" /> Profilu śledzenia.</param>
        <summary>Musi zostać zastąpiona w klasie pochodnej, a w przypadku zaimplementowania, zwraca profilu śledzenia kwalifikowana przez wersję dla określonego przepływu pracy <see cref="T:System.Type" />.</summary>
        <returns>Profil śledzenia dla typu określonego przepływu pracy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługa śledzenia jest odpowiedzialny za zarządzanie profile śledzenia dostępne dla typów określonego przepływu pracy i wystąpienia określonego przepływu pracy. Zarządzania można zaimplementować w jakikolwiek sposób, możesz wybrać. Na przykład takie same zwrócić <xref:System.Workflow.Runtime.Tracking.TrackingProfile> dla każdego przepływu pracy <xref:System.Type> i wystąpienia przepływu pracy; można także zarządzać zaawansowanych magazynu śledzenia profile odwołuje się wystąpienia przepływu pracy, przepływ pracy <xref:System.Type>, i <xref:System.Version>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTrackingChannel">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel (System.Workflow.Runtime.Tracking.TrackingParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.Runtime.Tracking.TrackingChannel GetTrackingChannel(class System.Workflow.Runtime.Tracking.TrackingParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel(System.Workflow.Runtime.Tracking.TrackingParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetTrackingChannel (parameters As TrackingParameters) As TrackingChannel" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::Runtime::Tracking::TrackingChannel ^ GetTrackingChannel(System::Workflow::Runtime::Tracking::TrackingParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member GetTrackingChannel : System.Workflow.Runtime.Tracking.TrackingParameters -&gt; System.Workflow.Runtime.Tracking.TrackingChannel" Usage="trackingService.GetTrackingChannel parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Workflow.Runtime.Tracking.TrackingParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><see cref="T:System.Workflow.Runtime.Tracking.TrackingParameters" /> Skojarzony z wystąpieniem przepływu pracy.</param>
        <summary>Musi zostać zastąpiona w klasie pochodnej, a w przypadku zaimplementowania, zwraca kanału, który Infrastruktura śledzenia czasu wykonywania używa do wysyłania rekordów śledzenia w usłudze śledzenia.</summary>
        <returns><see cref="T:System.Workflow.Runtime.Tracking.TrackingChannel" /> Używany do wysyłania rekordów śledzenia w usłudze śledzenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Infrastruktura śledzenia czasu wykonywania używa jednego <xref:System.Workflow.Runtime.Tracking.TrackingChannel> dla każdej usługi śledzenia dla każdego wystąpienia przepływu pracy. Wywołuje aparat środowiska wykonawczego przepływów pracy <xref:System.Workflow.Runtime.Tracking.TrackingService.GetTrackingChannel%2A> na każdej usługi śledzenia, aby uzyskać <xref:System.Workflow.Runtime.Tracking.TrackingChannel> za daną usługę. Możesz użyć informacji przekazanej <xref:System.Workflow.Runtime.Tracking.TrackingParameters> do skojarzenia danych śledzenia wysyłanych <xref:System.Workflow.Runtime.Tracking.TrackingChannel> usługi śledzenia z wystąpieniem przepływu pracy określonego katalogu głównego.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano implementację `GetTrackingChannel` metody. W tym przykładzie pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia. Aby uzyskać więcej informacji, zobacz [zakończenia usługi próbka danych do śledzenia](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#113](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#113)]
 [!code-vb[WF_Samples#113](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#113)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryGetProfile (Type workflowType, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryGetProfile(class System.Type workflowType, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryGetProfile(System.Type,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryGetProfile (workflowType As Type, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryGetProfile(Type ^ workflowType, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberSignature Language="F#" Value="abstract member TryGetProfile : Type *  -&gt; bool" Usage="trackingService.TryGetProfile (workflowType, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType"><see cref="T:System.Type" /> Przepływu pracy, dla którego należy pobrać profilu śledzenia.</param>
        <param name="profile">Po powrocie z tej metody zawiera <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> do załadowania. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Musi zostać zastąpiona w klasie pochodnej, a w przypadku zaimplementowania, pobiera profilu śledzenia dla typu określonego przepływu pracy, jeśli jest dostępny.</summary>
        <returns><see langword="true" /> Jeśli <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> dla określonego przepływu pracy <see cref="T:System.Type" /> jest dostępna; w przeciwnym razie <see langword="false" />. Jeśli <see langword="true" />, <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> jest zwracany w <paramref name="profile" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługa śledzenia jest odpowiedzialny za zarządzanie profile śledzenia dostępne dla typów określonego przepływu pracy i wystąpienia określonego przepływu pracy. Zarządzania można zaimplementować w jakikolwiek sposób, możesz wybrać. Na przykład takie same zwrócić <xref:System.Workflow.Runtime.Tracking.TrackingProfile> dla każdego przepływu pracy <xref:System.Type> i wystąpienia przepływu pracy; można także zarządzać zaawansowanych magazynu śledzenia profile odwołuje się wystąpienia przepływu pracy, przepływ pracy <xref:System.Type>, i <xref:System.Version>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano implementację `TryGetProfile` metody, która wywołuje prywatną `GetProfile` metody. W tym przykładzie pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia. Aby uzyskać więcej informacji, zobacz [zakończenia usługi próbka danych do śledzenia](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[Wf_samples#209](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#209)]
 [!code-vb[Wf_samples#209](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#209)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReloadProfile">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryReloadProfile (Type workflowType, Guid workflowInstanceId, out System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryReloadProfile(class System.Type workflowType, valuetype System.Guid workflowInstanceId, [out] class System.Workflow.Runtime.Tracking.TrackingProfile&amp; profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile(System.Type,System.Guid,System.Workflow.Runtime.Tracking.TrackingProfile@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryReloadProfile (workflowType As Type, workflowInstanceId As Guid, ByRef profile As TrackingProfile) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryReloadProfile(Type ^ workflowType, Guid workflowInstanceId, [Runtime::InteropServices::Out] System::Workflow::Runtime::Tracking::TrackingProfile ^ % profile);" />
      <MemberSignature Language="F#" Value="abstract member TryReloadProfile : Type * Guid *  -&gt; bool" Usage="trackingService.TryReloadProfile (workflowType, workflowInstanceId, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile" RefType="out" />
      </Parameters>
      <Docs>
        <param name="workflowType"><see cref="T:System.Type" /> Wystąpienia przepływu pracy.</param>
        <param name="workflowInstanceId"><see cref="T:System.Guid" /> Wystąpienia przepływu pracy.</param>
        <param name="profile">Po powrocie z tej metody zawiera <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> do załadowania. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Musi zostać zastąpiona w klasie pochodnej, a po wdrożeniu, pobierane są ładowane nowego profilu śledzenia dla tego wystąpienia określonego przepływu pracy, jeśli profil śledzenia uległ zmianie od momentu jego ostatniego.</summary>
        <returns><see langword="true" /> Jeśli nowy <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> powinny być załadowane; w przeciwnym razie <see langword="false" />. Jeśli <see langword="true" />, <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" /> jest zwracany w <paramref name="profile" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> jest wywoływana przez infrastrukturę śledzenie czasu wykonywania, aby określić, czy nowy <xref:System.Workflow.Runtime.Tracking.TrackingProfile> powinny być załadowane do wystąpienia określonego przepływu pracy. Jeśli nowy <xref:System.Workflow.Runtime.Tracking.TrackingProfile> jest wymagane, jest zwracana w `profile`. Jeśli chcesz, aby Infrastruktura śledzenia środowiska wykonawczego, aby zatrzymać śledzenie wystąpienia przepływu pracy, usługi śledzenia powinna zwrócić `true` i ustaw `profile` równa odwołanie o wartości null (`Nothing` w języku Visual Basic). Można użyć usługi śledzenia `workflowType` lub `workflowInstanceId` w jakikolwiek sposób, istnieje możliwość określenia, czy należy ponownie załadować profilu śledzenia. Na przykład <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> używa tylko `workflowInstanceId` zdecydować, czy należy ponownie załadować profilu śledzenia. <xref:System.Workflow.Runtime.Tracking.TrackingService.TryReloadProfile%2A> jest wywoływana przez infrastrukturę śledzenie czasu wykonywania, zgodnie z własną semantyki śledzenia lub w odpowiedzi na hoście lub wywoływania usługi <xref:System.Workflow.Runtime.WorkflowInstance.ReloadTrackingProfiles%2A?displayProperty=nameWithType> w wystąpieniu przepływu pracy.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono podstawową implementację `TryReloadProfile` metody. W tym przykładzie pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia. Aby uzyskać więcej informacji, zobacz [zakończenia usługi próbka danych do śledzenia](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#116](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#116)]
 [!code-vb[WF_Samples#116](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#116)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>