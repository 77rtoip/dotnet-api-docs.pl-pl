<Type Name="TrackingWorkflowExceptionEventArgs" FullName="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44cc90474af4de45fea8bcef9175ba1320a94c11" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69441290" /></Metadata><TypeSignature Language="C#" Value="public class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TrackingWorkflowExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackingWorkflowExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type TrackingWorkflowExceptionEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera dane skojarzone z wyjątkiem, który występuje podczas wykonywania wystąpienia przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Gdy wystąpi wyjątek podczas wykonywania wystąpienia przepływu <xref:System.Workflow.Runtime.Tracking.TrackingProfile> pracy, a skojarzony z wystąpieniem przepływu pracy <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> obejmuje skonfigurowany dla <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent.Exception?displayProperty=nameWithType>, Infrastruktura śledzenia przepływów pracy ustawia <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> w wysyłanych<xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> do usługi śledzenia.  
  
> [!NOTE]
>  <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>jest używany tylko przez usługę śledzenia środowiska uruchomieniowego do przekazywania informacji w <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje metodę o nazwie `WriteExceptionEventArgs`, która <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>przechwytuje. Kod sprawdza, <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> czy właściwość jest `null` (`Nothing` w Visual Basic).  
  
 Jeśli tak nie jest, kod zapisuje komunikat skojarzony z <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> właściwością w konsoli programu. Ponadto kod konwertuje wartość <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> właściwości na ciąg i zapisuje ją w konsoli programu.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK śledzenia EventArgs z pliku Program.cs. Aby uzyskać więcej informacji, zobacz [przykład śledzenia EventArgs](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)">Przykład śledzenia EventArgs</related>
  </Docs>
  <Members>
    <Member MemberName="ContextGuid">
      <MemberSignature Language="C#" Value="public Guid ContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContextGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextGuid : Guid" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator kontekstu skojarzonego działania.</summary>
        <value>A <see cref="T:System.Guid" /> , który zawiera identyfikator <see cref="T:System.Workflow.ComponentModel.Activity" />kontekstu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentActivityPath">
      <MemberSignature Language="C#" Value="public string CurrentActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentActivityPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentActivityPath : string" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> Pobiera działanie, które aktualnie zgłasza wyjątek.</summary>
        <value><see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> Działanie aktualnie zgłasza wyjątek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątki są przenoszone w łańcuchu działań programu obsługi wyjątków. Program obsługi wyjątków może zdecydować się na ponowne zgłoszenie wyjątku. Gdy procedura obsługi wyjątków ponownie zgłosi wyjątek, nowe zdarzenie śledzenia wyjątków zawierające nowy <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> zostanie podniesiony do infrastruktury śledzenia środowiska uruchomieniowego. <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath%2A>odwołuje się do działania, które aktualnie zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Exception" /> Pobiera, który jest zgłaszany przez wystąpienie przepływu pracy.</summary>
        <value>Wyjątek, który jest generowany przez wystąpienie przepływu pracy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje metodę o nazwie `WriteExceptionEventArgs`, która <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>przechwytuje. Kod sprawdza, <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> czy właściwość jest `null` (`Nothing` w Visual Basic). Jeśli tak nie jest, kod zapisuje komunikat skojarzony z <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> właściwością w konsoli programu. Jeśli wyjątek to `null` (`Nothing`), kod <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> konwertuje wartość właściwości na ciąg i zapisuje ją w konsoli programu.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK śledzenia EventArgs z pliku Program.cs. Aby uzyskać więcej informacji, zobacz [przykład śledzenia EventArgs](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)">Przykład śledzenia EventArgs</related>
      </Docs>
    </Member>
    <Member MemberName="OriginalActivityPath">
      <MemberSignature Language="C#" Value="public string OriginalActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalActivityPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalActivityPath : string" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> Pobiera działanie, które pierwotnie wywołało wyjątek.</summary>
        <value><see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> Działanie, które pierwotnie wywołało wyjątek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątki są przenoszone w łańcuchu działań programu obsługi wyjątków. Program obsługi wyjątków może zdecydować się na ponowne zgłoszenie wyjątku. Gdy procedura obsługi wyjątków ponownie zgłosi wyjątek, nowe zdarzenie śledzenia wyjątków zawierające nowy <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> zostanie podniesiony do infrastruktury śledzenia środowiska uruchomieniowego. <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A>odwołuje się do działania, które pierwotnie wywołało wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje metodę o nazwie `WriteExceptionEventArgs`, która <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>przechwytuje. Kod sprawdza, <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> czy właściwość jest `null` (`Nothing` w Visual Basic). Jeśli tak nie jest, kod zapisuje komunikat skojarzony z <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> właściwością w konsoli programu. Jeśli <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> jest `null` ()`Nothing` ,kodkonwertujewartośćwłaściwościnaciągizapisujeją<xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> w konsoli programu.  
  
 Ten przykład kodu jest częścią przykładu zestawu SDK śledzenia EventArgs z pliku Program.cs. Aby uzyskać więcej informacji, zobacz [przykład śledzenia EventArgs](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)">Przykład śledzenia EventArgs</related>
      </Docs>
    </Member>
    <Member MemberName="ParentContextGuid">
      <MemberSignature Language="C#" Value="public Guid ParentContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ParentContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ParentContextGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentContextGuid : Guid" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator kontekstu działania nadrzędnego.</summary>
        <value>A <see cref="T:System.Guid" /> , który zawiera identyfikator kontekstu elementu nadrzędnego <see cref="T:System.Workflow.ComponentModel.Activity" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
