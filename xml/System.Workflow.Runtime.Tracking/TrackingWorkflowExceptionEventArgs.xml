<Type Name="TrackingWorkflowExceptionEventArgs" FullName="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="52617aa641ee54b4345bab3f8ce535d5d2709e91" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37487036" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TrackingWorkflowExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackingWorkflowExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type TrackingWorkflowExceptionEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera dane skojarzone z powodu wyjątku, który występuje podczas wykonywania wystąpienia przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Gdy wystąpi wyjątek podczas wykonywania wystąpienia przepływu pracy i <xref:System.Workflow.Runtime.Tracking.TrackingProfile> , która jest skojarzona z przepływem pracy wystąpienie zawiera <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> skonfigurowany dla <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent.Exception?displayProperty=nameWithType>, zestawy Infrastruktura śledzenia przepływu pracy <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> do <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> w <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> wysyłanych do usługi śledzenia.  
  
> [!NOTE]
>  <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> jest używany tylko przez środowisko uruchomieniowe usługi śledzenia do przekazywania informacji w <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia metodę o nazwie `WriteExceptionEventArgs`, które przechwytywania <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. Sprawdzanie kodu czy <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> właściwość `null` (`Nothing` w języku Visual Basic).  
  
 Jeśli nie jest, kod zapisuje komunikat skojarzony z <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> właściwości do konsoli. Ponadto kod konwertuje wartość <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> właściwości na ciąg i zapisuje go w konsoli.  
  
 Ten przykład kodu jest częścią przykładowe EventArgs śledzenia SDK z pliku Program.cs. Aby uzyskać więcej informacji, zobacz [przykładowe śledzenia EventArgs](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContextGuid">
      <MemberSignature Language="C#" Value="public Guid ContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContextGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextGuid : Guid" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator kontekstu skojarzone działanie.</summary>
        <value>A <see cref="T:System.Guid" /> zawierający identyfikator kontekstu <see cref="T:System.Workflow.ComponentModel.Activity" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentActivityPath">
      <MemberSignature Language="C#" Value="public string CurrentActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentActivityPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentActivityPath : string" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> działania obecnie zostanie zgłoszony wyjątek.</summary>
        <value>
          <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> Działania obecnie zostanie zgłoszony wyjątek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątki są przekazywane łańcuch działania programu obsługi wyjątków. Program obsługi wyjątku może wybrać ponownie zgłasza wyjątku. Podczas obsługi wyjątków zgłasza wyjątek, ponownie nowe zdarzenie śledzenia wyjątek zawierającą nową <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> zostanie zaokrąglona do środowiska uruchomieniowego śledzenia infrastruktury. <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath%2A> odnosi się do działania, które jest aktualnie zostanie zgłoszony wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Exception" /> który został zgłoszony przez wystąpienie przepływu pracy.</summary>
        <value>Wyjątek, który został zgłoszony przez wystąpienie przepływu pracy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu przedstawia metodę o nazwie `WriteExceptionEventArgs`, które przechwytywania <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. Sprawdzanie kodu czy <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> właściwość `null` (`Nothing` w języku Visual Basic). Jeśli nie jest, kod zapisuje komunikat skojarzony z <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> właściwości do konsoli. Jeśli wyjątek jest `null` (`Nothing`), kod konwertuje wartość <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> właściwości na ciąg i zapisuje go w konsoli.  
  
 Ten przykład kodu jest częścią EventArgs SDK próbka danych do śledzenia z pliku Program.cs. Aby uzyskać więcej informacji, zobacz [przykładowe śledzenia EventArgs](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalActivityPath">
      <MemberSignature Language="C#" Value="public string OriginalActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalActivityPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalActivityPath : string" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> działanie, które pierwotnie zgłosiła wyjątek.</summary>
        <value>
          <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" /> Działanie, które pierwotnie zgłosiła wyjątek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątki są przekazywane łańcuch działania programu obsługi wyjątków. Program obsługi wyjątku może wybrać ponownie zgłasza wyjątku. Gdy program obsługi wyjątku zgłasza wyjątek, ponownie nowe zdarzenie śledzenia wyjątek zawierającą nową <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> zostanie zaokrąglona do środowiska uruchomieniowego śledzenia infrastruktury. <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> Odwołanie do działań, która pierwotnie zgłosiła wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia metodę o nazwie `WriteExceptionEventArgs`, które przechwytywania <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>. Sprawdzanie kodu czy <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> właściwość `null` (`Nothing` w języku Visual Basic). Jeśli nie jest, kod zapisuje komunikat skojarzony z <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> właściwości do konsoli. Jeśli <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> jest `null` (`Nothing`), kod konwertuje wartość <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> właściwości na ciąg i zapisuje go w konsoli.  
  
 Ten przykład kodu jest częścią EventArgs SDK próbka danych do śledzenia z pliku Program.cs. Aby uzyskać więcej informacji, zobacz [przykładowe śledzenia EventArgs](http://msdn.microsoft.com/library/94818da2-c3c4-4a13-b47a-a0fb30dbbf1c).  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentContextGuid">
      <MemberSignature Language="C#" Value="public Guid ParentContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ParentContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ParentContextGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentContextGuid : Guid" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator kontekstu działanie nadrzędne.</summary>
        <value>A <see cref="T:System.Guid" /> zawierający identyfikator kontekstu nadrzędnej <see cref="T:System.Workflow.ComponentModel.Activity" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>