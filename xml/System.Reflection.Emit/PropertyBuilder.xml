<Type Name="PropertyBuilder" FullName="System.Reflection.Emit.PropertyBuilder">
  <TypeSignature Language="C#" Value="public sealed class PropertyBuilder : System.Reflection.PropertyInfo, System.Runtime.InteropServices._PropertyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit PropertyBuilder extends System.Reflection.PropertyInfo implements class System.Runtime.InteropServices._PropertyBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.PropertyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyBuilder&#xA;Inherits PropertyInfo&#xA;Implements _PropertyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyBuilder sealed : System::Reflection::PropertyInfo, System::Runtime::InteropServices::_PropertyBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.PropertyInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._PropertyBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._PropertyBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3f9ff-101">Definiuje właściwości dla typu.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-101">Defines the properties for a type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-102">A `PropertyBuilder` zawsze jest skojarzony z `TypeBuilder`.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-102">A `PropertyBuilder` is always associated with a `TypeBuilder`.</span></span> <span data-ttu-id="3f9ff-103">`TypeBuilder`.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-103">The `TypeBuilder`.</span></span> <span data-ttu-id="3f9ff-104">`DefineProperty` metoda zwróci nowy `PropertyBuilder` do klienta.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-104">`DefineProperty` method will return a new `PropertyBuilder` to a client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f9ff-105">Poniższy przykładowy kod przedstawia sposób zaimplementowane właściwości dynamicznych typu przy użyciu `PropertyBuilder` uzyskany za pośrednictwem <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A?displayProperty=nameWithType> do tworzenia w ramach właściwości i skojarzone <xref:System.Reflection.Emit.MethodBuilder> wdrożyć logikę IL w ramach właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-105">The following code sample demonstrates how to implement properties in a dynamic type using a `PropertyBuilder` obtained via <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A?displayProperty=nameWithType> to create the property framework and an associated <xref:System.Reflection.Emit.MethodBuilder> to implement the IL logic within the property.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOtherMethod">
      <MemberSignature Language="C#" Value="public void AddOtherMethod (System.Reflection.Emit.MethodBuilder mdBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOtherMethod(class System.Reflection.Emit.MethodBuilder mdBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOtherMethod (mdBuilder As MethodBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOtherMethod(System::Reflection::Emit::MethodBuilder ^ mdBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
      </Parameters>
      <Docs>
        <param name="mdBuilder"><span data-ttu-id="3f9ff-106">A <see langword="MethodBuilder" /> obiekt, który reprezentuje innej metody.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-106">A <see langword="MethodBuilder" /> object that represents the other method.</span></span></param>
        <summary><span data-ttu-id="3f9ff-107">Dodaje jednej z metod, skojarzone z tą właściwością.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-107">Adds one of the other methods associated with this property.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f9ff-108"><paramref name="mdBuilder" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-108"><paramref name="mdBuilder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3f9ff-109"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> została wywołana dla typu otaczającego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-109"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f9ff-110">Pobiera atrybuty dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-110">Gets the attributes for this property.</span></span></summary>
        <value><span data-ttu-id="3f9ff-111">Atrybuty tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-111">Attributes of this property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f9ff-112">Pobiera wartość wskazującą, czy właściwość może zostać odczytany.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-112">Gets a value indicating whether the property can be read.</span></span></summary>
        <value>
          <span data-ttu-id="3f9ff-113"><see langword="true" /> Jeśli ta właściwość może zostać odczytany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-113"><see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-114">Właściwości typu Boolean wskazującą, czy właściwość może zostać odczytany.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-114">Boolean property indicating if the property can be read.</span></span> <span data-ttu-id="3f9ff-115">Jeśli właściwość nie ma metody dostępu get, nie można odczytać.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-115">If the property does not have a get accessor, it cannot be read.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f9ff-116">Pobiera wartość wskazującą, czy właściwość może być zapisywane.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-116">Gets a value indicating whether the property can be written to.</span></span></summary>
        <value>
          <span data-ttu-id="3f9ff-117"><see langword="true" /> Jeśli ta właściwość może zostać zapisana na; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-117"><see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-118">Właściwości typu Boolean wskazującą, czy można zapisać właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-118">Boolean property indicating if the property can be written to.</span></span> <span data-ttu-id="3f9ff-119">Jeśli właściwość nie ma metody dostępu set, nie można zapisać w.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-119">If the property does not have a set accessor, it cannot be written to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f9ff-120">Pobiera klasę, która deklaruje tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-120">Gets the class that declares this member.</span></span></summary>
        <value><span data-ttu-id="3f9ff-121"><see langword="Type" /> Obiektu klasy, która deklaruje tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-121">The <see langword="Type" /> object for the class that declares this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="3f9ff-122">Wskazuje, czy metody niepublicznej powinny być zwracane w <see langword="MethodInfo" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-122">Indicates whether non-public methods should be returned in the <see langword="MethodInfo" /> array.</span></span> <span data-ttu-id="3f9ff-123"><see langword="true" /> Jeśli metody niepublicznej mają zostać uwzględnione; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-123"><see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3f9ff-124">Zwraca tablicę publicznych i niepublicznych <see langword="get" /> i <see langword="set" /> metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-124">Returns an array of the public and non-public <see langword="get" /> and <see langword="set" /> accessors on this property.</span></span></summary>
        <returns><span data-ttu-id="3f9ff-125">Tablica typu <see langword="MethodInfo" /> zawierający pasujących metod dostępu publicznego lub niepubliczne lub pusta tablica, jeśli nie istnieją zgodne metody dostępu dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-125">An array of type <see langword="MethodInfo" /> containing the matching public or non-public accessors, or an empty array if matching accessors do not exist on this property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-126">Metody dostępu właściwości get odzwierciedlać na typ nadrzędny właściwości przy użyciu Type.GetType lub Assembly.GetType, Pobierz obiekt właściwość odbicia z typem i wywołać PropertyInfo.GetAccessors.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-126">To get the accessors of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetAccessors.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3f9ff-127">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-127">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f9ff-128">Zwraca wszystkie atrybuty niestandardowe zdefiniowane dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-128">Returns all the custom attributes defined on this property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="3f9ff-129">Jeśli <see langword="true" />, przeprowadza się łańcuch dziedziczenia tej właściwości w celu znalezienia atrybutów niestandardowych</span><span class="sxs-lookup"><span data-stu-id="3f9ff-129">If <see langword="true" />, walks up this property's inheritance chain to find the custom attributes</span></span></param>
        <summary><span data-ttu-id="3f9ff-130">Zwraca tablicę atrybutów niestandardowych dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-130">Returns an array of all the custom attributes for this property.</span></span></summary>
        <returns><span data-ttu-id="3f9ff-131">Tablica atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-131">An array of all the custom attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-132">Odzwierciedlać na typ nadrzędny właściwości przy użyciu Type.GetType lub Assembly.GetType, Pobierz obiekt właściwość odbicia z typem i wywołać PropertyInfo.GetCustomAttributes.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-132">Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetCustomAttributes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3f9ff-133">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-133">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="3f9ff-134">Tablicę identyfikowanych według typu atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-134">An array of custom attributes identified by type.</span></span></param>
        <param name="inherit"><span data-ttu-id="3f9ff-135">Jeśli <see langword="true" />, przeprowadza się łańcuch dziedziczenia tej właściwości w celu znalezienia atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-135">If <see langword="true" />, walks up this property's inheritance chain to find the custom attributes.</span></span></param>
        <summary><span data-ttu-id="3f9ff-136">Zwraca tablicę atrybutów niestandardowych identyfikowane przez <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-136">Returns an array of custom attributes identified by <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="3f9ff-137">Tablica z atrybutami niestandardowymi zdefiniowanymi dla tego elementu członkowskiego odbite, lub <see langword="null" /> Jeśli atrybuty nie są zdefiniowane w tym elemencie członkowskim.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-137">An array of custom attributes defined on this reflected member, or <see langword="null" /> if no attributes are defined on this member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-138">Odzwierciedlać na typ nadrzędny właściwości przy użyciu Type.GetType lub Assembly.GetType, Pobierz obiekt właściwość odbicia z typem i wywołać PropertyInfo.GetCustomAttributes.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-138">Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetCustomAttributes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3f9ff-139">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-139">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="3f9ff-140">Wskazuje, czy ma zostać zwrócony metody dostępu get niepubliczne.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-140">Indicates whether non-public get accessors should be returned.</span></span> <span data-ttu-id="3f9ff-141"><see langword="true" /> Jeśli metody niepublicznej mają zostać uwzględnione; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-141"><see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3f9ff-142">Zwraca publicznych i niepublicznych Uzyskaj dostęp do tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-142">Returns the public and non-public get accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="3f9ff-143">A <see langword="MethodInfo" /> obiekt reprezentujący metody dostępu get tej właściwości, jeśli <paramref name="nonPublic" /> jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-143">A <see langword="MethodInfo" /> object representing the get accessor for this property, if <paramref name="nonPublic" /> is <see langword="true" />.</span></span> <span data-ttu-id="3f9ff-144">Zwraca <see langword="null" /> Jeśli <paramref name="nonPublic" /> jest <see langword="false" /> i metody dostępu get jest niepubliczne, lub jeśli <paramref name="nonPublic" /> jest <see langword="true" /> , ale istnieje nie metody dostępu get.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-144">Returns <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the get accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no get accessors exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-145">Aby uzyskać metody pobierającej właściwości, odzwierciedlać na typ nadrzędny właściwości przy użyciu Type.GetType lub Assembly.GetType, pobrać obiektu odbicia właściwości z typu i wywołać PropertyInfo.GetGetMethod.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-145">To get the getter of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetGetMethod.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public override System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3f9ff-146">Zwraca tablicę wszystkich parametrów indeksu dla właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-146">Returns an array of all the index parameters for the property.</span></span></summary>
        <returns><span data-ttu-id="3f9ff-147">Tablica typu <see langword="ParameterInfo" /> zawierających parametry dla indeksów.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-147">An array of type <see langword="ParameterInfo" /> containing the parameters for the indexes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-148">Pobranie parametrów indeksu właściwości odzwierciedlać na typ nadrzędny właściwości przy użyciu Type.GetType lub Assembly.GetType, Pobierz obiekt właściwość odbicia z typem i wywołać PropertyInfo.GetIndexParameters.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-148">To get the index parameters of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetIndexParameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3f9ff-149">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-149">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="3f9ff-150">Wskazuje, czy akcesor ma zostać zwrócony, jeśli jest niepubliczny.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-150">Indicates whether the accessor should be returned if it is non-public.</span></span> <span data-ttu-id="3f9ff-151"><see langword="true" /> Jeśli metody niepublicznej mają zostać uwzględnione; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-151"><see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3f9ff-152">Zwraca metody dostępu set tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-152">Returns the set accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="3f9ff-153">Właściwość <see langword="Set" /> metody, lub <see langword="null" />, jak pokazano w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-153">The property's <see langword="Set" /> method, or <see langword="null" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="3f9ff-154"><list type="table"><listheader><term> Wartość</span><span class="sxs-lookup"><span data-stu-id="3f9ff-154"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="3f9ff-155"></term><description> Warunek</span><span class="sxs-lookup"><span data-stu-id="3f9ff-155"></term><description> Condition</span></span>  
  
 <span data-ttu-id="3f9ff-156"></description></listheader><item><term> A <see cref="T:System.Reflection.MethodInfo" /> obiekt reprezentujący metody Set dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-156"></description></listheader><item><term> A <see cref="T:System.Reflection.MethodInfo" /> object representing the Set method for this property.</span></span>  
  
 <span data-ttu-id="3f9ff-157"></term><description> Metody dostępu set jest publiczny.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-157"></term><description> The set accessor is public.</span></span>  
  
 <span data-ttu-id="3f9ff-158"><paramref name="nonPublic" /> ma wartość true i niepublicznych metody może być zwracany.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-158"><paramref name="nonPublic" /> is true and non-public methods can be returned.</span></span>  
  
 <span data-ttu-id="3f9ff-159"></description></item><item><term> null</span><span class="sxs-lookup"><span data-stu-id="3f9ff-159"></description></item><item><term> null</span></span>  
  
 <span data-ttu-id="3f9ff-160"></term><description><paramref name="nonPublic" /> ma wartość true, ale właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-160"></term><description><paramref name="nonPublic" /> is true, but the property is read-only.</span></span>  
  
 <span data-ttu-id="3f9ff-161"><paramref name="nonPublic" /> jest wartość FAŁSZ i zestawu akcesora jest niepubliczny.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-161"><paramref name="nonPublic" /> is false and the set accessor is non-public.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-162">Aby uzyskać metody ustawiającej właściwości, odzwierciedlać na typ nadrzędny właściwości przy użyciu Type.GetType lub Assembly.GetType, pobrać obiektu odbicia właściwości z typu i wywołać PropertyInfo.GetSetMethod.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-162">To get the setter of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetSetMethod.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f9ff-163">Pobiera wartość właściwości przez wywołanie metody pobierającej.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-163">Gets the value of the property by calling the getter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3f9ff-164">Obiekt, którego wartość właściwości zostanie zwrócony.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-164">The object whose property value will be returned.</span></span></param>
        <param name="index"><span data-ttu-id="3f9ff-165">Opcjonalne indeks wartości dla właściwości indeksowane.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-165">Optional index values for indexed properties.</span></span> <span data-ttu-id="3f9ff-166">Ta wartość powinna być <see langword="null" /> nieindeksowanych właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-166">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="3f9ff-167">Pobiera wartość właściwości indeksowanych przez wywołanie metody pobierającej właściwość.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-167">Gets the value of the indexed property by calling the property's getter method.</span></span></summary>
        <returns><span data-ttu-id="3f9ff-168">Wartość określonej właściwości indeksowanych.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-168">The value of the specified indexed property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-169">Można pobrać wartości właściwości, odzwierciedlają typ właściwości przy użyciu Type.GetType lub Assembly.GetType, pobrać `Reflection` właściwości obiektu na podstawie typu i wywołania `PropertyInfo.GetValue`.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-169">To get the value of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the `Reflection` property object from the type, and call `PropertyInfo.GetValue`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3f9ff-170">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-170">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3f9ff-171">Obiekt, którego wartość właściwości zostanie zwrócony.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-171">The object whose property value will be returned.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="3f9ff-172">Atrybut wywołania.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-172">The invocation attribute.</span></span> <span data-ttu-id="3f9ff-173">Musi to być flagę z bitowego <see langword="BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, lub <see langword="SetProperty" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-173">This must be a bit flag from <see langword="BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="3f9ff-174">Należy określić atrybut odpowiedniego wywołania.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-174">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="3f9ff-175">Jeśli statyczny element członkowski ma zostać wywołana, <see langword="Static" /> flagę <see langword="BindingFlags" /> musi być ustawiona.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-175">If a static member is to be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span></span></param>
        <param name="binder"><span data-ttu-id="3f9ff-176">Obiekt, który umożliwia powiązanie koercja argumentu typy wywołania elementów członkowskich i pobieranie <see langword="MemberInfo" /> obiektów za pomocą odbicia.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-176">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span></span> <span data-ttu-id="3f9ff-177">Jeśli <c>integratora</c> jest <see langword="null" />, używany jest domyślny integrator.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-177">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="3f9ff-178">Opcjonalne indeks wartości dla właściwości indeksowane.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-178">Optional index values for indexed properties.</span></span> <span data-ttu-id="3f9ff-179">Ta wartość powinna być <see langword="null" /> nieindeksowanych właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-179">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="3f9ff-180"><see langword="CultureInfo" /> Obiekt, który reprezentuje kultury, dla którego ma zostać zlokalizowany zasób.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-180">The <see langword="CultureInfo" /> object that represents the culture for which the resource is to be localized.</span></span> <span data-ttu-id="3f9ff-181">Należy pamiętać, że jeśli zasób nie jest lokalizowany tej kultury, <see langword="CultureInfo.Parent" /> metoda zostanie wywołana kolejno w poszukiwaniu dopasowania.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-181">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span></span> <span data-ttu-id="3f9ff-182">Jeśli ta wartość jest <see langword="null" />, <see langword="CultureInfo" /> są uzyskiwane z <see langword="CultureInfo.CurrentUICulture" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-182">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="3f9ff-183">Pobiera wartość właściwości o określonym powiązanie, indeksu i <see langword="CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-183">Gets the value of a property having the specified binding, index, and <see langword="CultureInfo" />.</span></span></summary>
        <returns><span data-ttu-id="3f9ff-184">Wartość właściwości <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-184">The property value for <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-185">Można pobrać wartości właściwości, odzwierciedlać na typ nadrzędny właściwości przy użyciu Type.GetType lub Assembly.GetType, Pobierz obiekt właściwość odbicia z typem i wywołać PropertyInfo.GetValue.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-185">To get the value of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetValue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3f9ff-186">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-186">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="3f9ff-187"><see langword="Type" /> Obiektów, dla których są stosowane atrybuty niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-187">The <see langword="Type" /> object to which the custom attributes are applied.</span></span></param>
        <param name="inherit"><span data-ttu-id="3f9ff-188">Określa, czy podejść łańcuch dziedziczenia tej właściwości w celu znalezienia atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-188">Specifies whether to walk up this property's inheritance chain to find the custom attributes.</span></span></param>
        <summary><span data-ttu-id="3f9ff-189">Wskazuje, czy jest to jeden lub więcej wystąpienie <paramref name="attributeType" /> jest zdefiniowany dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-189">Indicates whether one or more instance of <paramref name="attributeType" /> is defined on this property.</span></span></summary>
        <returns>
          <span data-ttu-id="3f9ff-190"><see langword="true" /> Jeśli jeden lub więcej wystąpienie <paramref name="attributeType" /> jest zdefiniowana dla tej właściwości, a w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-190"><see langword="true" /> if one or more instance of <paramref name="attributeType" /> is defined on this property; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-191">Odzwierciedlać na typ nadrzędny właściwości przy użyciu Type.GetType lub Assembly.GetType, Pobierz obiekt właściwość odbicia z typem i wywołać PropertyInfo.IsDefined.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-191">Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.IsDefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3f9ff-192">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-192">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f9ff-193">Pobiera moduł, w którym jest zdefiniowany typ, który deklaruje bieżącej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-193">Gets the module in which the type that declares the current property is being defined.</span></span></summary>
        <value><span data-ttu-id="3f9ff-194"><see cref="T:System.Reflection.Module" /> w jest zdefiniowany typ, który deklaruje bieżącej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-194">The <see cref="T:System.Reflection.Module" /> in which the type that declares the current property is defined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-195">Ta właściwość jest udostępniana dla wygody użytkownika.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-195">This property is provided as a convenience for the user.</span></span> <span data-ttu-id="3f9ff-196">Jest to równoważne przy użyciu <xref:System.Reflection.Emit.PropertyBuilder.DeclaringType%2A> właściwości można pobrać typu, w którym zadeklarowany jest właściwością, a następnie wywołania <xref:System.Type.Module%2A> właściwość powstałe w ten sposób <xref:System.Type> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-196">It is equivalent to using the <xref:System.Reflection.Emit.PropertyBuilder.DeclaringType%2A> property to get the type in which the property is declared, and then calling the <xref:System.Type.Module%2A> property of the resulting <xref:System.Type> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f9ff-197">Pobiera nazwę tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-197">Gets the name of this member.</span></span></summary>
        <value><span data-ttu-id="3f9ff-198">A <see cref="T:System.String" /> zawierającego nazwę tego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-198">A <see cref="T:System.String" /> containing the name of this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.PropertyToken PropertyToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.PropertyToken PropertyToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.PropertyToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyToken As PropertyToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::PropertyToken PropertyToken { System::Reflection::Emit::PropertyToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.PropertyToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f9ff-199">Pobiera token dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-199">Retrieves the token for this property.</span></span></summary>
        <value><span data-ttu-id="3f9ff-200">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-200">Read-only.</span></span> <span data-ttu-id="3f9ff-201">Pobiera token dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-201">Retrieves the token for this property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public override Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f9ff-202">Pobiera typ pola tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-202">Gets the type of the field of this property.</span></span></summary>
        <value><span data-ttu-id="3f9ff-203">Typ tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-203">The type of this property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f9ff-204">Pobiera obiekt klasy, które zostało użyte do uzyskania tego wystąpienia <see langword="MemberInfo" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-204">Gets the class object that was used to obtain this instance of <see langword="MemberInfo" />.</span></span></summary>
        <value><span data-ttu-id="3f9ff-205"><see langword="Type" /> Obiektu, do której ta <see langword="MemberInfo" /> obiekt został uzyskany.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-205">The <see langword="Type" /> object through which this <see langword="MemberInfo" /> object was obtained.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConstant">
      <MemberSignature Language="C#" Value="public void SetConstant (object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConstant(object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetConstant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetConstant (defaultValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetConstant(System::Object ^ defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="defaultValue"><span data-ttu-id="3f9ff-206">Wartość domyślna tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-206">The default value of this property.</span></span></param>
        <summary><span data-ttu-id="3f9ff-207">Ustawia wartość domyślna tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-207">Sets the default value of this property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-208">`defaultValue` jest ograniczone do następujących typów: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime` , `Char`, `String`, i `Enum`.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-208">`defaultValue` is restricted to the following types: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime`, `Char`, `String`, and `Enum`.</span></span> <span data-ttu-id="3f9ff-209">Jeśli typ właściwości jest typem referencyjnym, wymaga zgodności ze specyfikacją CLS `defaultValue` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-209">If the property type is a reference type, CLS compliance requires `defaultValue` to be `null`.</span></span> <span data-ttu-id="3f9ff-210">Jednak począwszy [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` może mieć wartości null dla typów odniesienia tak długo, jak można przypisać wartości do tego typu odwołania.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-210">However, starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` can be non-null for reference types as long as the value can be assigned to that reference type.</span></span> <span data-ttu-id="3f9ff-211">Na przykład `Int32` można przypisać wartości do właściwości typu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-211">For example, an `Int32` value can be assigned to a property of type <xref:System.Object>.</span></span> <span data-ttu-id="3f9ff-212">To nie jest zgodne ze specyfikacją CLS, ale może być przydatne w scenariuszach międzyoperacyjnego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-212">This is not CLS-compliant, but it can be useful in interop scenarios.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3f9ff-213"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> została wywołana dla typu otaczającego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-213"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3f9ff-214">Właściwość nie jest jednym z obsługiwanych typów.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-214">The property is not one of the supported types.</span></span>  
  
 <span data-ttu-id="3f9ff-215">—lub—</span><span class="sxs-lookup"><span data-stu-id="3f9ff-215">-or-</span></span>  
  
 <span data-ttu-id="3f9ff-216">Typ <paramref name="defaultValue" /> nie jest zgodny z typem właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-216">The type of <paramref name="defaultValue" /> does not match the type of the property.</span></span>  
  
 <span data-ttu-id="3f9ff-217">—lub—</span><span class="sxs-lookup"><span data-stu-id="3f9ff-217">-or-</span></span>  
  
 <span data-ttu-id="3f9ff-218">Właściwość jest typu <see cref="T:System.Object" /> lub innych typów referencyjnych <paramref name="defaultValue" /> nie jest <see langword="null" />, i nie można przypisać wartości na typ referencyjny.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-218">The property is of type <see cref="T:System.Object" /> or other reference type, <paramref name="defaultValue" /> is not <see langword="null" />, and the value cannot be assigned to the reference type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f9ff-219">Ustawia atrybut niestandardowy.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-219">Sets a custom attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="3f9ff-220">Wystąpienia klasy pomocnika do definiowania atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-220">An instance of a helper class to define the custom attribute.</span></span></param>
        <summary><span data-ttu-id="3f9ff-221">Wartość atrybutu niestandardowego za pomocą konstruktora atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-221">Set a custom attribute using a custom attribute builder.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f9ff-222"><paramref name="customBuilder" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-222"><paramref name="customBuilder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3f9ff-223">Jeśli <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> została wywołana dla typu otaczającego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-223">if <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="3f9ff-224">Konstruktor atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-224">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="3f9ff-225">Obiekt blob bajtów reprezentujących atrybuty.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-225">A byte blob representing the attributes.</span></span></param>
        <summary><span data-ttu-id="3f9ff-226">Ustaw przy użyciu określonego atrybutu niestandardowego obiektu blob atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-226">Set a custom attribute using a specified custom attribute blob.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-227">Zobacz specyfikację metadanych w dokumentacji ECMA II partycji, aby uzyskać więcej informacji na temat formatu `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-227">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="3f9ff-228">Dokumentacja II partycji jest dostępna online w witrynie MSDN ([ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?linkid=65555) strony sieci Web) oraz w witrynie sieci Web ECMA ([standardowe ECMA-335 wspólną infrastrukturę języka](http://go.microsoft.com/fwlink/?linkid=65552) dokument).</span><span class="sxs-lookup"><span data-stu-id="3f9ff-228">The Partition II documentation is available online on MSDN ([ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?linkid=65555) Web page) and on the ECMA Web site ([Standard ECMA-335 Common Language Infrastructure](http://go.microsoft.com/fwlink/?linkid=65552) document).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f9ff-229"><paramref name="con" /> lub <paramref name="binaryAttribute" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-229"><paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3f9ff-230"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> została wywołana dla typu otaczającego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-230"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetGetMethod">
      <MemberSignature Language="C#" Value="public void SetGetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGetMethod(class System.Reflection.Emit.MethodBuilder mdBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGetMethod (mdBuilder As MethodBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGetMethod(System::Reflection::Emit::MethodBuilder ^ mdBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
      </Parameters>
      <Docs>
        <param name="mdBuilder"><span data-ttu-id="3f9ff-231">A <see langword="MethodBuilder" /> obiekt, który reprezentuje metodę, która pobiera wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-231">A <see langword="MethodBuilder" /> object that represents the method that gets the property value.</span></span></param>
        <summary><span data-ttu-id="3f9ff-232">Ustawia metodę, która umożliwia pobieranie wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-232">Sets the method that gets the property value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3f9ff-233">Poniższy przykład kodu pokazuje, jak dołączyć dynamiczne metodę `get` utworzone za pomocą właściwości `PropertyBuilder` przy użyciu `SetGetMethod`.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-233">The following code sample demonstrates how to attach a dynamic method to a `get` property created with `PropertyBuilder` using `SetGetMethod`.</span></span>  
  
 [!code-cpp[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CPP/propertybuilder_setgetmethod_4.cpp#1)]
 [!code-csharp[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CS/propertybuilder_setgetmethod_4.cs#1)]
 [!code-vb[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/VB/propertybuilder_setgetmethod_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f9ff-234"><paramref name="mdBuilder" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-234"><paramref name="mdBuilder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3f9ff-235"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> została wywołana dla typu otaczającego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-235"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSetMethod">
      <MemberSignature Language="C#" Value="public void SetSetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSetMethod(class System.Reflection.Emit.MethodBuilder mdBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSetMethod (mdBuilder As MethodBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSetMethod(System::Reflection::Emit::MethodBuilder ^ mdBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
      </Parameters>
      <Docs>
        <param name="mdBuilder"><span data-ttu-id="3f9ff-236">A <see langword="MethodBuilder" /> obiekt, który reprezentuje metodę, która ustawia wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-236">A <see langword="MethodBuilder" /> object that represents the method that sets the property value.</span></span></param>
        <summary><span data-ttu-id="3f9ff-237">Ustawia metodę, która ustawia wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-237">Sets the method that sets the property value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3f9ff-238">Poniższy przykład kodu pokazuje, jak dołączyć dynamiczne metodę `set` utworzone za pomocą właściwości `PropertyBuilder` przy użyciu `SetSetMethod`.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-238">The following code sample demonstrates how to attach a dynamic method to a `set` property created with `PropertyBuilder` using `SetSetMethod`.</span></span>  
  
 [!code-cpp[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CPP/propertybuilder_setgetmethod_4.cpp#2)]
 [!code-csharp[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CS/propertybuilder_setgetmethod_4.cs#2)]
 [!code-vb[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/VB/propertybuilder_setgetmethod_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3f9ff-239"><paramref name="mdBuilder" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-239"><paramref name="mdBuilder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3f9ff-240"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> została wywołana dla typu otaczającego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-240"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f9ff-241">Ustawia wartości właściwości dla danego obiektu do danej wartości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-241">Sets the property value for the given object to the given value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3f9ff-242">Obiekt, którego właściwość zostanie ustawiona.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-242">The object whose property value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="3f9ff-243">Nowa wartość dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-243">The new value for this property.</span></span></param>
        <param name="index"><span data-ttu-id="3f9ff-244">Opcjonalne indeks wartości dla właściwości indeksowane.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-244">Optional index values for indexed properties.</span></span> <span data-ttu-id="3f9ff-245">Ta wartość powinna być <see langword="null" /> nieindeksowanych właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-245">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="3f9ff-246">Ustawia wartości właściwości, za pomocą wartości indeksu opcjonalne dla właściwości indeksu.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-246">Sets the value of the property with optional index values for index properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-247">Można ustawić wartości właściwości, odzwierciedlają na właściwości nadrzędnego typu przy użyciu <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>, pobrać <xref:System.Reflection.PropertyInfo> obiektu na podstawie typu i wywołania <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-247">To set the value of a property, reflect on the property's parent type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>, retrieve the <xref:System.Reflection.PropertyInfo> object from the type, and call <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3f9ff-248">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-248">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3f9ff-249">Obiekt, którego wartość właściwości zostanie zwrócony.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-249">The object whose property value will be returned.</span></span></param>
        <param name="value"><span data-ttu-id="3f9ff-250">Nowa wartość dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-250">The new value for this property.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="3f9ff-251">Atrybut wywołania.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-251">The invocation attribute.</span></span> <span data-ttu-id="3f9ff-252">Musi to być flagę z bitowego <see langword="BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, lub <see langword="SetProperty" />.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-252">This must be a bit flag from <see langword="BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="3f9ff-253">Należy określić atrybut odpowiedniego wywołania.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-253">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="3f9ff-254">Jeśli statyczny element członkowski ma zostać wywołana, <see langword="Static" /> flagę <see langword="BindingFlags" /> musi być ustawiona.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-254">If a static member is to be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span></span></param>
        <param name="binder"><span data-ttu-id="3f9ff-255">Obiekt, który umożliwia powiązanie koercja argumentu typy wywołania elementów członkowskich i pobieranie <see langword="MemberInfo" /> obiektów za pomocą odbicia.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-255">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span></span> <span data-ttu-id="3f9ff-256">Jeśli <c>integratora</c> jest <see langword="null" />, używany jest domyślny integrator.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-256">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="3f9ff-257">Opcjonalne indeks wartości dla właściwości indeksowane.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-257">Optional index values for indexed properties.</span></span> <span data-ttu-id="3f9ff-258">Ta wartość powinna być <see langword="null" /> nieindeksowanych właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-258">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="3f9ff-259"><see langword="CultureInfo" /> Obiekt, który reprezentuje kultury, dla którego ma zostać zlokalizowany zasób.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-259">The <see langword="CultureInfo" /> object that represents the culture for which the resource is to be localized.</span></span> <span data-ttu-id="3f9ff-260">Należy pamiętać, że jeśli zasób nie jest lokalizowany tej kultury, <see langword="CultureInfo.Parent" /> metoda zostanie wywołana kolejno w poszukiwaniu dopasowania.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-260">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span></span> <span data-ttu-id="3f9ff-261">Jeśli ta wartość jest <see langword="null" />, <see langword="CultureInfo" /> są uzyskiwane z <see langword="CultureInfo.CurrentUICulture" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-261">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="3f9ff-262">Ustawia wartości właściwości dla danego obiektu do danej wartości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-262">Sets the property value for the given object to the given value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-263">Można ustawić wartości właściwości, odzwierciedlają na właściwości nadrzędnego typu przy użyciu <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>, pobrać <xref:System.Reflection.PropertyInfo> obiektu na podstawie typu i wywołania <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-263">To set the value of a property, reflect on the property's parent type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>, retrieve the <xref:System.Reflection.PropertyInfo> object from the type, and call <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3f9ff-264">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-264">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _PropertyBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_PropertyBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="3f9ff-265">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-265">Reserved for future use.</span></span> <span data-ttu-id="3f9ff-266">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-266">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="3f9ff-267">Przekazana tablica nazw ma być mapowana.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-267">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="3f9ff-268">Liczba nazw, które mają być mapowane.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-268">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="3f9ff-269">Ustawienia regionalne kontekstu, w którym można interpretować nazwy.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-269">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="3f9ff-270">Tablica przydzielana przez obiekt wywołujący, który otrzymuje numery identyfikacyjne odpowiadających nazw.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-270">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="3f9ff-271">Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-271">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-272">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-272">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="3f9ff-273">Aby uzyskać więcej informacji na temat `IDispatch::GetIDsOfNames`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-273">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="3f9ff-274">Metoda jest wywoływana z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-274">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _PropertyBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_PropertyBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="3f9ff-275">Informacje o typie, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-275">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="3f9ff-276">Identyfikator regionalny dla informacji o typie.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-276">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="3f9ff-277">Otrzymuje wskaźnik do obiektu informacji żądanego typu.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-277">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="3f9ff-278">Pobiera informacje o typie dla obiektu, których następnie można użyć do uzyskania informacji o typie interfejsu.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-278">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-279">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-279">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="3f9ff-280">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfo`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-280">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="3f9ff-281">Metoda jest wywoływana z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-281">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _PropertyBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_PropertyBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="3f9ff-282">Wskazuje lokalizację, która odbiera informację o liczbie typów dostarczanych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-282">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="3f9ff-283">Pobiera informację o liczbie typów interfejsów, jakie zawiera obiekt (0 lub 1).</span><span class="sxs-lookup"><span data-stu-id="3f9ff-283">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-284">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-284">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="3f9ff-285">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfoCount`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-285">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="3f9ff-286">Metoda jest wywoływana z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-286">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _PropertyBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_PropertyBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="3f9ff-287">Określa element członkowski.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-287">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="3f9ff-288">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-288">Reserved for future use.</span></span> <span data-ttu-id="3f9ff-289">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-289">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="3f9ff-290">Ustawienia regionalne kontekstu, w którym można interpretować argumenty.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-290">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="3f9ff-291">Flagi opisujące kontekst wywołania.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-291">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="3f9ff-292">Wskaźnik do struktury zawiera tablicę argumentów, tablicę identyfikatorów DISPID argumentu dla nazwanych argumentów i zlicza liczbę elementów w tablicach.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-292">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="3f9ff-293">Wskaźnik miejsca, gdzie ma być przechowywany wynik.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-293">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="3f9ff-294">Wskaźnik do struktury, która zawiera informacje o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-294">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="3f9ff-295">Indeks pierwszego argumentu, który zawiera błąd.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-295">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="3f9ff-296">Umożliwia dostęp do właściwości i metod udostępnianych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-296">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f9ff-297">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-297">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="3f9ff-298">Aby uzyskać więcej informacji na temat `IDispatch::Invoke`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-298">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="3f9ff-299">Metoda jest wywoływana z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="3f9ff-299">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>