<Type Name="TypeBuilder" FullName="System.Reflection.Emit.TypeBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5fbdedaa1a85e966a52f9b091e12543eed170658" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68399249" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeBuilder : System.Reflection.TypeInfo, System.Runtime.InteropServices._TypeBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TypeBuilder extends System.Reflection.TypeInfo implements class System.Runtime.InteropServices._TypeBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.TypeBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeBuilder&#xA;Inherits TypeInfo&#xA;Implements _TypeBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeBuilder sealed : System::Reflection::TypeInfo, System::Runtime::InteropServices::_TypeBuilder" />
  <TypeSignature Language="F#" Value="type TypeBuilder = class&#xA;    inherit TypeInfo&#xA;    interface _TypeBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.TypeInfo</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-2.0">System.Type</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._TypeBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._TypeBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fed4f-101">Definiuje i tworzy nowe wystąpienia klas w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-101">Defines and creates new instances of classes during run time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-102"><xref:System.Reflection.Emit.TypeBuilder>jest klasą główną służącą do kontrolowania tworzenia klas dynamicznych w środowisku uruchomieniowym.</span><span class="sxs-lookup"><span data-stu-id="fed4f-102"><xref:System.Reflection.Emit.TypeBuilder> is the root class used to control the creation of dynamic classes in the runtime.</span></span> <span data-ttu-id="fed4f-103">Zawiera zestaw procedur, które są używane do definiowania klas, dodawania metod i pól oraz tworzenia klasy wewnątrz modułu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-103">It provides a set of routines that are used to define classes, add methods and fields, and create the class inside a module.</span></span> <span data-ttu-id="fed4f-104">Nową <xref:System.Reflection.Emit.TypeBuilder> metodęmożna<xref:System.Reflection.Emit.ModuleBuilder.DefineType%2A?displayProperty=nameWithType> utworzyć na podstawie modułu dynamicznego przez wywołanie metody, która zwraca obiekt.<xref:System.Reflection.Emit.TypeBuilder></span><span class="sxs-lookup"><span data-stu-id="fed4f-104">A new <xref:System.Reflection.Emit.TypeBuilder> can be created from a dynamic module by calling the <xref:System.Reflection.Emit.ModuleBuilder.DefineType%2A?displayProperty=nameWithType> method, which returns a <xref:System.Reflection.Emit.TypeBuilder> object.</span></span>  
  
 <span data-ttu-id="fed4f-105">Emisja odbicia udostępnia następujące opcje definiowania typów:</span><span class="sxs-lookup"><span data-stu-id="fed4f-105">Reflection emit provides the following options for defining types:</span></span>  
  
-   <span data-ttu-id="fed4f-106">Zdefiniuj klasę lub interfejs o podaną nazwę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-106">Define a class or interface with the given name.</span></span>  
  
-   <span data-ttu-id="fed4f-107">Zdefiniuj klasę lub interfejs o podaną nazwę i atrybuty.</span><span class="sxs-lookup"><span data-stu-id="fed4f-107">Define a class or interface with the given name and attributes.</span></span>  
  
-   <span data-ttu-id="fed4f-108">Zdefiniuj klasę o danej nazwie, atrybutach i klasie bazowej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-108">Define a class with the given name, attributes, and base class.</span></span>  
  
-   <span data-ttu-id="fed4f-109">Zdefiniuj klasę z podaną nazwą, atrybutami, klasą bazową i zestawem interfejsów, które implementuje Klasa.</span><span class="sxs-lookup"><span data-stu-id="fed4f-109">Define a class with the given name, attributes, base class, and the set of interfaces that the class implements.</span></span>  
  
-   <span data-ttu-id="fed4f-110">Zdefiniuj klasę z podaną nazwą, atrybutami, klasą bazową i rozmiarem pakowania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-110">Define a class with the given name, attributes, base class, and packing size.</span></span>  
  
-   <span data-ttu-id="fed4f-111">Zdefiniuj klasę z podaną nazwą, atrybutami, klasą bazową i rozmiarem klasy jako całości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-111">Define a class with the given name, attributes, base class, and the class size as a whole.</span></span>  
  
-   <span data-ttu-id="fed4f-112">Zdefiniuj klasę o danej nazwie, atrybutach, klasie bazowej, rozmiarze pakowania i rozmiarze klasy jako całości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-112">Define a class with the given name, attributes, base class, packing size, and the class size as a whole.</span></span>  
  
 <span data-ttu-id="fed4f-113">Aby utworzyć typ tablicy, typ wskaźnika lub typ ByRef dla niekompletnego <xref:System.Reflection.Emit.TypeBuilder> typu reprezentowanego przez obiekt, <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A> Użyj odpowiednio metody, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A> metody lub <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-113">To create an array type, pointer type, or byref type for an incomplete type that is represented by a <xref:System.Reflection.Emit.TypeBuilder> object, use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A> method, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A> method, or <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="fed4f-114">Przed użyciem <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> typu należy wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-114">Before a type is used, the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> method must be called.</span></span> <span data-ttu-id="fed4f-115">Typ **kończy tworzenie** typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-115">**CreateType** completes the creation of the type.</span></span> <span data-ttu-id="fed4f-116">Po wywołaniu metody ustawiającej obiekt wywołujący może utworzyć wystąpienie typu przy użyciu \*\*\*\* <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> metod i wywoływać elementy członkowskie <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> typu za pomocą metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-116">Following the call to **CreateType**, the caller can instantiate the type by using the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method, and invoke members of the type by using the <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fed4f-117">Wystąpił błąd podczas wywoływania metod, które zmieniają implementację typu po wywołaniu metody **ontype** .</span><span class="sxs-lookup"><span data-stu-id="fed4f-117">It is an error to invoke methods that change the implementation of a type after **CreateType** has been called.</span></span> <span data-ttu-id="fed4f-118">Na przykład środowisko uruchomieniowe języka wspólnego zgłasza wyjątek, jeśli obiekt wywołujący próbuje dodać nowych członków do typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-118">For example, the common language runtime throws an exception if the caller tries to add new members to a type.</span></span>  
  
 <span data-ttu-id="fed4f-119">Inicjator klasy jest tworzony przy użyciu <xref:System.Reflection.Emit.TypeBuilder.DefineTypeInitializer%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-119">A class initializer is created by using the <xref:System.Reflection.Emit.TypeBuilder.DefineTypeInitializer%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fed4f-120">**DefineTypeInitializer** zwraca <xref:System.Reflection.Emit.ConstructorBuilder> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fed4f-120">**DefineTypeInitializer** returns a <xref:System.Reflection.Emit.ConstructorBuilder> object.</span></span>  
  
 <span data-ttu-id="fed4f-121">Zagnieżdżone typy są definiowane przez wywołanie jednej z <xref:System.Reflection.Emit.TypeBuilder.DefineNestedType%2A?displayProperty=nameWithType> metod.</span><span class="sxs-lookup"><span data-stu-id="fed4f-121">Nested types are defined by calling one of the <xref:System.Reflection.Emit.TypeBuilder.DefineNestedType%2A?displayProperty=nameWithType> methods.</span></span>  
  
## <a name="attributes"></a><span data-ttu-id="fed4f-122">Atrybuty</span><span class="sxs-lookup"><span data-stu-id="fed4f-122">Attributes</span></span>  
 <span data-ttu-id="fed4f-123"><xref:System.Reflection.Emit.TypeBuilder> Klasa<xref:System.Reflection.TypeAttributes> używa wyliczenia, aby bardziej określić charakterystykę typu, który ma zostać utworzony:</span><span class="sxs-lookup"><span data-stu-id="fed4f-123">The <xref:System.Reflection.Emit.TypeBuilder> class uses the <xref:System.Reflection.TypeAttributes> enumeration to further specify the characteristics of the type to be created:</span></span>  
  
-   <span data-ttu-id="fed4f-124">Interfejsy są określane przy użyciu <xref:System.Reflection.TypeAttributes.Interface?displayProperty=nameWithType> atrybutów <xref:System.Reflection.TypeAttributes.Abstract?displayProperty=nameWithType> i.</span><span class="sxs-lookup"><span data-stu-id="fed4f-124">Interfaces are specified using the <xref:System.Reflection.TypeAttributes.Interface?displayProperty=nameWithType> and <xref:System.Reflection.TypeAttributes.Abstract?displayProperty=nameWithType> attributes.</span></span>  
  
-   <span data-ttu-id="fed4f-125">Konkretne klasy (klasy, które nie mogą być rozszerzone) są określane <xref:System.Reflection.TypeAttributes.Sealed?displayProperty=nameWithType> przy użyciu atrybutu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-125">Concrete classes (classes that cannot be extended) are specified using the <xref:System.Reflection.TypeAttributes.Sealed?displayProperty=nameWithType> attribute.</span></span>  
  
-   <span data-ttu-id="fed4f-126">Kilka atrybutów określa widoczność typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-126">Several attributes determine type visibility.</span></span> <span data-ttu-id="fed4f-127">Zobacz opis <xref:System.Reflection.TypeAttributes> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-127">See the description of the <xref:System.Reflection.TypeAttributes> enumeration.</span></span>  
  
-   <span data-ttu-id="fed4f-128">Jeśli <xref:System.Reflection.TypeAttributes.SequentialLayout?displayProperty=nameWithType> jest określony, moduł ładujący klasy układa pola w kolejności, w której są odczytywane z metadanych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-128">If <xref:System.Reflection.TypeAttributes.SequentialLayout?displayProperty=nameWithType> is specified, the class loader lays out fields in the order they are read from metadata.</span></span> <span data-ttu-id="fed4f-129">Moduł ładujący klasy traktuje określony rozmiar pakowania, ale ignoruje wszystkie określone przesunięcia pól.</span><span class="sxs-lookup"><span data-stu-id="fed4f-129">The class loader considers the specified packing size but ignores any specified field offsets.</span></span> <span data-ttu-id="fed4f-130">Metadane zachowują kolejność, w jakiej są emitowane definicje pól.</span><span class="sxs-lookup"><span data-stu-id="fed4f-130">The metadata preserves the order in which the field definitions are emitted.</span></span> <span data-ttu-id="fed4f-131">Nawet w przypadku scalania metadane nie zmienią kolejności definicji pól.</span><span class="sxs-lookup"><span data-stu-id="fed4f-131">Even across a merge, the metadata will not reorder the field definitions.</span></span> <span data-ttu-id="fed4f-132">Moduł ładujący będzie przestrzegać określonych przesunięć pól tylko wtedy <xref:System.Reflection.TypeAttributes.ExplicitLayout?displayProperty=nameWithType> , gdy jest określony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-132">The loader will honor the specified field offsets only if <xref:System.Reflection.TypeAttributes.ExplicitLayout?displayProperty=nameWithType> is specified.</span></span>  
  
## <a name="known-issues"></a><span data-ttu-id="fed4f-133">Znane problemy</span><span class="sxs-lookup"><span data-stu-id="fed4f-133">Known Issues</span></span>  
  
-   <span data-ttu-id="fed4f-134">Emitowanie odbicia nie sprawdza, czy Klasa nieabstrakcyjna implementująca interfejs zaimplementował wszystkie metody zadeklarowane w interfejsie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-134">Reflection emit does not verify whether a non-abstract class that implements an interface has implemented all the methods declared in the interface.</span></span> <span data-ttu-id="fed4f-135">Jeśli jednak Klasa nie implementuje wszystkich metod zadeklarowanych w interfejsie, środowisko uruchomieniowe nie ładuje klasy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-135">However, if the class does not implement all the methods declared in an interface, the runtime does not load the class.</span></span>  
  
-   <span data-ttu-id="fed4f-136">Chociaż <xref:System.Reflection.Emit.TypeBuilder> pochodzi od <xref:System.Type>, niektóre metody <xref:System.Type> abstrakcyjne zdefiniowane w klasie nie są w pełni zaimplementowane w <xref:System.Reflection.Emit.TypeBuilder> klasie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-136">Although <xref:System.Reflection.Emit.TypeBuilder> is derived from <xref:System.Type>, some of the abstract methods defined in the <xref:System.Type> class are not fully implemented in the <xref:System.Reflection.Emit.TypeBuilder> class.</span></span> <span data-ttu-id="fed4f-137">Wywołania tych <xref:System.Reflection.Emit.TypeBuilder> metod powodują <xref:System.NotSupportedException> zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="fed4f-137">Calls to these <xref:System.Reflection.Emit.TypeBuilder> methods throw a <xref:System.NotSupportedException> exception.</span></span> <span data-ttu-id="fed4f-138">Odpowiednie funkcje można uzyskać przez pobranie utworzonego typu przy użyciu <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i odbicie na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-138">The desired functionality can be obtained by retrieving the created type using the <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and reflecting on the retrieved type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-139">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-139">This section contains two code examples.</span></span> <span data-ttu-id="fed4f-140">Pierwszy przykład pokazuje, jak utworzyć typ dynamiczny przy użyciu pola, konstruktora, właściwości i metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-140">The first example shows how to create a dynamic type with a field, constructor, property, and method.</span></span> <span data-ttu-id="fed4f-141">Drugi przykład kompiluje metodę dynamicznie z danych wejściowych użytkownika.</span><span class="sxs-lookup"><span data-stu-id="fed4f-141">The second example builds a method dynamically from user input.</span></span>  
  
 <span data-ttu-id="fed4f-142">**Przykład jeden**</span><span class="sxs-lookup"><span data-stu-id="fed4f-142">**Example one**</span></span>  
  
 <span data-ttu-id="fed4f-143">Poniższy przykład kodu pokazuje, jak zdefiniować zestaw dynamiczny przy użyciu jednego modułu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-143">The following code example shows how to define a dynamic assembly with one module.</span></span> <span data-ttu-id="fed4f-144">Moduł w przykładowym zestawie zawiera jeden typ, `MyDynamicType`który ma pole prywatne, które pobiera i ustawia pole prywatne, konstruktory, które inicjują pole prywatne, oraz metodę, która mnoży liczbę dostarczoną przez użytkownika przez pole prywatne wartość i zwraca wynik.</span><span class="sxs-lookup"><span data-stu-id="fed4f-144">The module in the example assembly contains one type, `MyDynamicType`, which has a private field, a property that gets and sets the private field, constructors that initialize the private field, and a method that multiplies a user-supplied number by the private field value and returns the result.</span></span>  
  
 <span data-ttu-id="fed4f-145"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> Pole jest określane podczas tworzenia zestawu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-145">The <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> field is specified when the assembly is created.</span></span> <span data-ttu-id="fed4f-146">Kod zestawu jest używany natychmiast, a zestaw jest również zapisywany na dysku, aby można go było sprawdzić za pomocą [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) lub użyć w innym programie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-146">The assembly code is used immediately, and the assembly is also saved to disk so that it can be examined with [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) or used in another program.</span></span>  
  
 [!code-cpp[AssemblyBuilderClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilderClass/cpp/24895.cpp#1)]
 [!code-csharp[AssemblyBuilderClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilderClass/cs/24895.cs#1)]
 [!code-vb[AssemblyBuilderClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilderClass/vb/24895.vb#1)]  
  
 <span data-ttu-id="fed4f-147">**Przykład dwa**</span><span class="sxs-lookup"><span data-stu-id="fed4f-147">**Example two**</span></span>  
  
 <span data-ttu-id="fed4f-148">Poniższy przykład kodu demonstruje sposób tworzenia typu dynamicznego przy użyciu `TypeBuilder`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-148">The following code sample demonstrates how to build a dynamic type by using `TypeBuilder`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit ILGenerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit ILGenerator Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit ILGenerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit ILGenerator Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit ILGenerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit ILGenerator Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/07d5f01a-7b5b-40ea-9b15-f21561098fe4"><span data-ttu-id="fed4f-149">Instrukcje: Definiowanie typu ogólnego przy użyciu emisji odbicia</span><span class="sxs-lookup"><span data-stu-id="fed4f-149">How to: Define a Generic Type with Reflection Emit</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeclarativeSecurity">
      <MemberSignature Language="C#" Value="public void AddDeclarativeSecurity (System.Security.Permissions.SecurityAction action, System.Security.PermissionSet pset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDeclarativeSecurity(valuetype System.Security.Permissions.SecurityAction action, class System.Security.PermissionSet pset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDeclarativeSecurity (action As SecurityAction, pset As PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDeclarativeSecurity(System::Security::Permissions::SecurityAction action, System::Security::PermissionSet ^ pset);" />
      <MemberSignature Language="F#" Value="member this.AddDeclarativeSecurity : System.Security.Permissions.SecurityAction * System.Security.PermissionSet -&gt; unit" Usage="typeBuilder.AddDeclarativeSecurity (action, pset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pset" Type="System.Security.PermissionSet" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="fed4f-150">Akcja zabezpieczeń, która ma zostać podjęta, taka jak zapotrzebowanie, potwierdzenie i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-150">The security action to be taken such as Demand, Assert, and so on.</span></span></param>
        <param name="pset"><span data-ttu-id="fed4f-151">Zestaw uprawnień, do których odnosi się akcja.</span><span class="sxs-lookup"><span data-stu-id="fed4f-151">The set of permissions the action applies to.</span></span></param>
        <summary><span data-ttu-id="fed4f-152">Dodaje deklaratywne zabezpieczenia do tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-152">Adds declarative security to this type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-153">`AddDeclarativeSecurity`może być wywoływana kilka razy dla każdego wywołania określającego akcję zabezpieczeń (na przykład żądanie, potwierdzenie lub Odmów) oraz zestaw uprawnień, które są stosowane do akcji.</span><span class="sxs-lookup"><span data-stu-id="fed4f-153">`AddDeclarativeSecurity` may be called several times with each call specifying a security action (such as Demand, Assert, or Deny) and a set of permissions that apply to the action.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-154">W .NET Framework wersje 1,0, 1,1 i 2,0, deklaratywne atrybuty zabezpieczeń stosowane do typu za pomocą tej metody są przechowywane w starym formacie metadanych XML.</span><span class="sxs-lookup"><span data-stu-id="fed4f-154">In the .NET Framework versions 1.0, 1.1, and 2.0, the declarative security attributes applied to a type by using this method are stored in the old XML metadata format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-155">Poniższy przykład ilustruje `AddDeclarativeSecurity` użycie metody w celu dodania żądania zabezpieczeń dla <xref:System.Security.Permissions.SecurityPermission> <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> flagi do typu dynamicznego o nazwie `MyDynamicClass`, w zestawie o nazwie EmittedExample. dll.</span><span class="sxs-lookup"><span data-stu-id="fed4f-155">The following example demonstrates the use of the `AddDeclarativeSecurity` method to add a security demand for <xref:System.Security.Permissions.SecurityPermission> with the <xref:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence?displayProperty=nameWithType> flag to a dynamic type named `MyDynamicClass`, in an assembly named EmittedExample.dll.</span></span> <span data-ttu-id="fed4f-156">Przykład nie generuje danych wyjściowych konsoli; Po uruchomieniu programu można użyć programu [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) do sprawdzenia EmittedExample. dll.</span><span class="sxs-lookup"><span data-stu-id="fed4f-156">The example produces no console output; after you run it, you can use [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine EmittedExample.dll.</span></span> <span data-ttu-id="fed4f-157">W `MyDynamicClass` programie`.class public auto ansi` Otwórz instrukcję, aby wyświetlić uprawnienie deklaratywne.</span><span class="sxs-lookup"><span data-stu-id="fed4f-157">In `MyDynamicClass`, open the `.class public auto ansi` statement to see the declarative permission.</span></span>  
  
 [!code-cpp[TypeBuilder_AddDeclarativeSecurity#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder_AddDeclarativeSecurity/CPP/typebuilder_adddeclarativesecurity.cpp#1)]
 [!code-csharp[TypeBuilder_AddDeclarativeSecurity#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder_AddDeclarativeSecurity/CS/typebuilder_adddeclarativesecurity.cs#1)]
 [!code-vb[TypeBuilder_AddDeclarativeSecurity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder_AddDeclarativeSecurity/VB/typebuilder_adddeclarativesecurity.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fed4f-158">Jest nieprawidłowy (<see langword="RequestMinimum" />, <see langword="RequestOptional" />, i<see langword="RequestRefuse" /> jest nieprawidłowy). <paramref name="action" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-158">The <paramref name="action" /> is invalid (<see langword="RequestMinimum" />, <see langword="RequestOptional" />, and <see langword="RequestRefuse" /> are invalid).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-159">Typ zawierający został utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-159">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="fed4f-160">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-160">-or-</span></span> 
<span data-ttu-id="fed4f-161">Zestaw <paramref name="pset" /> uprawnień zawiera akcję, która została dodana wcześniej przez <see langword="AddDeclarativeSecurity" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-161">The permission set <paramref name="pset" /> contains an action that was added earlier by <see langword="AddDeclarativeSecurity" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-162"><paramref name="pset" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-162"><paramref name="pset" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddInterfaceImplementation">
      <MemberSignature Language="C#" Value="public void AddInterfaceImplementation (Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInterfaceImplementation(class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInterfaceImplementation (interfaceType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInterfaceImplementation(Type ^ interfaceType);" />
      <MemberSignature Language="F#" Value="member this.AddInterfaceImplementation : Type -&gt; unit" Usage="typeBuilder.AddInterfaceImplementation interfaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="interfaceType"><span data-ttu-id="fed4f-163">Interfejs, który implementuje ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-163">The interface that this type implements.</span></span></param>
        <summary><span data-ttu-id="fed4f-164">Dodaje interfejs, który implementuje ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-164">Adds an interface that this type implements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fed4f-165">Poniższy przykład kodu demonstruje implementację interfejsu dla dynamicznie utworzonego typu przy użyciu `AddInterfaceImplementation`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-165">The following code sample demonstrates the implementation of an interface on a dynamically created type using `AddInterfaceImplementation`.</span></span>  
  
 [!code-cpp[TypeBuilder_Sample_4#3](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder_Sample_4/CPP/typebuilder_sample_4.cpp#3)]
 [!code-csharp[TypeBuilder_Sample_4#3](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder_Sample_4/CS/typebuilder_sample_4.cs#3)]
 [!code-vb[TypeBuilder_Sample_4#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder_Sample_4/VB/typebuilder_sample_4.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-166"><paramref name="interfaceType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-166"><paramref name="interfaceType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-167">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-167">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Reflection.Emit.TypeBuilder.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-168">Pobiera dynamiczny zestaw, który zawiera definicję tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-168">Retrieves the dynamic assembly that contains this type definition.</span></span></summary>
        <value><span data-ttu-id="fed4f-169">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-169">Read-only.</span></span> <span data-ttu-id="fed4f-170">Pobiera dynamiczny zestaw, który zawiera definicję tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-170">Retrieves the dynamic assembly that contains this type definition.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyQualifiedName">
      <MemberSignature Language="C#" Value="public override string AssemblyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AssemblyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AssemblyQualifiedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyQualifiedName : string" Usage="System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-171">Zwraca pełną nazwę tego typu kwalifikowana przez nazwę wyświetlaną zestawu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-171">Returns the full name of this type qualified by the display name of the assembly.</span></span></summary>
        <value><span data-ttu-id="fed4f-172">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-172">Read-only.</span></span> <span data-ttu-id="fed4f-173">Pełna nazwa tego typu kwalifikowana przez nazwę wyświetlaną zestawu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-173">The full name of this type qualified by the display name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-174">Format zwracanego ciągu jest połączeniem pełnej nazwy typu (<xref:System.Reflection.Emit.TypeBuilder.FullName%2A>) i nazwy wyświetlanej zestawu (<xref:System.Reflection.AssemblyName.FullName%2A?displayProperty=nameWithType>), oddzielone przecinkiem i spacją.</span><span class="sxs-lookup"><span data-stu-id="fed4f-174">The format of the returned string is the concatenation of the full name of the type (<xref:System.Reflection.Emit.TypeBuilder.FullName%2A>) and the display name of the assembly (<xref:System.Reflection.AssemblyName.FullName%2A?displayProperty=nameWithType>), separated by a comma and a space.</span></span>  
  
 <span data-ttu-id="fed4f-175">Zobacz <xref:System.Reflection.AssemblyName> , aby uzyskać opis formatu nazwy wyświetlanej zestawu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-175">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
## <a name="version-information"></a><span data-ttu-id="fed4f-176">Informacje o wersji</span><span class="sxs-lookup"><span data-stu-id="fed4f-176">Version Information</span></span>  
 <span data-ttu-id="fed4f-177">W .NET Framework wersje 1,0 i 1,1 wartość tej właściwości nie obejmuje kultury ani klucza publicznego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-177">In the .NET Framework versions 1.0 and 1.1, the value of this property does not include the culture or public key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.TypeAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::TypeAttributes Attributes { System::Reflection::TypeAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.TypeAttributes" Usage="System.Reflection.Emit.TypeBuilder.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public override Type BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BaseType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : Type" Usage="System.Reflection.Emit.TypeBuilder.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-178">Pobiera typ podstawowy tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-178">Retrieves the base type of this type.</span></span></summary>
        <value><span data-ttu-id="fed4f-179">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-179">Read-only.</span></span> <span data-ttu-id="fed4f-180">Pobiera typ podstawowy tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-180">Retrieves the base type of this type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsGenericParameters">
      <MemberSignature Language="C#" Value="public override bool ContainsGenericParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsGenericParameters" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.ContainsGenericParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ContainsGenericParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ContainsGenericParameters { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainsGenericParameters : bool" Usage="System.Reflection.Emit.TypeBuilder.ContainsGenericParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateType">
      <MemberSignature Language="C#" Value="public Type CreateType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type CreateType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.CreateType" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ CreateType();" />
      <MemberSignature Language="F#" Value="member this.CreateType : unit -&gt; Type" Usage="typeBuilder.CreateType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-181"><see cref="T:System.Type" /> Tworzy obiekt dla klasy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-181">Creates a <see cref="T:System.Type" /> object for the class.</span></span> <span data-ttu-id="fed4f-182">Po zdefiniowaniu pól i metod w klasie <see langword="CreateType" /> jest wywoływana w celu <see langword="Type" /> załadowania obiektu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-182">After defining fields and methods on the class, <see langword="CreateType" /> is called in order to load its <see langword="Type" /> object.</span></span></summary>
        <returns><span data-ttu-id="fed4f-183">Zwraca nowy <see cref="T:System.Type" /> obiekt dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-183">Returns the new <see cref="T:System.Type" /> object for this class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-184">Jeśli ten typ jest typem zagnieżdżonym, <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> Metoda musi zostać wywołana w typie otaczającym, zanim zostanie wywołana dla typu zagnieżdżonego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-184">If this type is a nested type, the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method must be called on the enclosing type before it is called on the nested type.</span></span>  
  
 <span data-ttu-id="fed4f-185">Jeśli bieżący typ pochodzi z niekompletnego typu lub implementuje interfejsy niekompletne, wywołaj <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> metodę dla typu nadrzędnego i typów interfejsów przed wywołaniem go w bieżącym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-185">If the current type derives from an incomplete type or implements incomplete interfaces, call the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method on the parent type and the interface types before calling it on the current type.</span></span>  
  
 <span data-ttu-id="fed4f-186">Jeśli typ otaczający zawiera pole, które jest typem wartości zdefiniowanym jako typ zagnieżdżony (na przykład pole, które jest wyliczeniem zdefiniowanym jako typ zagnieżdżony), wywołanie <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> metody w typie otaczającym spowoduje <xref:System.AppDomain.TypeResolve?displayProperty=nameWithType> wygenerowanie zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-186">If the enclosing type contains a field that is a value type defined as a nested type (for example, a field that is an enumeration defined as a nested type), calling the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method on the enclosing type will generate a <xref:System.AppDomain.TypeResolve?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="fed4f-187">Wynika to z faktu, że moduł ładujący nie może określić rozmiaru otaczającego typu, dopóki nie zostanie ukończony Typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-187">This is because the loader cannot determine the size of the enclosing type until the nested type has been completed.</span></span> <span data-ttu-id="fed4f-188">Obiekt wywołujący powinien zdefiniować procedurę obsługi dla <xref:System.AppDomain.TypeResolve> zdarzenia, aby zakończyć definicję typu zagnieżdżonego przez wywołanie <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> <xref:System.Reflection.Emit.TypeBuilder> obiektu, który reprezentuje typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-188">The caller should define a handler for the <xref:System.AppDomain.TypeResolve> event to complete the definition of the nested type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> on the <xref:System.Reflection.Emit.TypeBuilder> object that represents the nested type.</span></span> <span data-ttu-id="fed4f-189">Przykład kodu dla tego tematu pokazuje, jak zdefiniować ten program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fed4f-189">The code example for this topic shows how to define such an event handler.</span></span>  
  
 <span data-ttu-id="fed4f-190">Typ jest tworzony tylko raz, niezależnie od tego <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> , ile razy Metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-190">A type is created only once, no matter how many times the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method is called.</span></span> <span data-ttu-id="fed4f-191">Wszystkie wywołania zwracają ten sam <xref:System.Type> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fed4f-191">All calls return the same <xref:System.Type> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-192">Poniższy przykład kodu pokazuje, jak zdefiniować procedurę obsługi zdarzeń dla <xref:System.AppDomain.TypeResolve?displayProperty=nameWithType> zdarzenia, aby <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> wywołać metodę dla typu zagnieżdżonego podczas <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> wywołania typu otaczającego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-192">The following code example shows how to define an event handler for the <xref:System.AppDomain.TypeResolve?displayProperty=nameWithType> event, in order to call the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method on a nested type during a <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> call on the enclosing type.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.TypeBuilder.CreateType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.TypeBuilder.CreateType Example/CPP/nestedenum.cpp#1)]
 [!code-csharp[System.Reflection.Emit.TypeBuilder.CreateType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.TypeBuilder.CreateType Example/CS/nestedenum.cs#1)]
 [!code-vb[System.Reflection.Emit.TypeBuilder.CreateType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.TypeBuilder.CreateType Example/VB/nestedenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-193">Typ otaczający nie został utworzony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-193">The enclosing type has not been created.</span></span>  
  
 <span data-ttu-id="fed4f-194">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-194">-or-</span></span>  
  
 <span data-ttu-id="fed4f-195">Ten typ nie jest abstrakcyjny i zawiera metodę abstrakcyjną.</span><span class="sxs-lookup"><span data-stu-id="fed4f-195">This type is non-abstract and contains an abstract method.</span></span>  
  
 <span data-ttu-id="fed4f-196">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-196">-or-</span></span>  
  
 <span data-ttu-id="fed4f-197">Ten typ nie jest klasą abstrakcyjną ani interfejsem i ma metodę bez treści metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-197">This type is not an abstract class or an interface and has a method without a method body.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-198">Typ zawiera nieprawidłowy kod języka pośredniego firmy Microsoft (MSIL).</span><span class="sxs-lookup"><span data-stu-id="fed4f-198">The type contains invalid Microsoft intermediate language (MSIL) code.</span></span>  
  
 <span data-ttu-id="fed4f-199">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-199">-or-</span></span>  
  
 <span data-ttu-id="fed4f-200">Cel rozgałęzienia jest określany przy użyciu 1-bajtowego przesunięcia, ale obiekt docelowy jest w odległości większej niż 127 bajtów od gałęzi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-200">The branch target is specified using a 1-byte offset, but the target is at a distance greater than 127 bytes from the branch.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="fed4f-201">Nie można załadować typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-201">The type cannot be loaded.</span></span> <span data-ttu-id="fed4f-202">Na przykład zawiera <see langword="static" /> metodę, która ma konwencję <see cref="F:System.Reflection.CallingConventions.HasThis" />wywoływania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-202">For example, it contains a <see langword="static" /> method that has the calling convention <see cref="F:System.Reflection.CallingConventions.HasThis" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTypeInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.TypeInfo CreateTypeInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.TypeInfo CreateTypeInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.CreateTypeInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTypeInfo () As TypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::TypeInfo ^ CreateTypeInfo();" />
      <MemberSignature Language="F#" Value="member this.CreateTypeInfo : unit -&gt; System.Reflection.TypeInfo" Usage="typeBuilder.CreateTypeInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-203"><see cref="T:System.Reflection.TypeInfo" /> Pobiera obiekt, który reprezentuje ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-203">Gets a <see cref="T:System.Reflection.TypeInfo" /> object that represents this type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-204">Obiekt reprezentujący ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-204">An object that represents this type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodBase DeclaringMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase DeclaringMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.DeclaringMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringMethod As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodBase ^ DeclaringMethod { System::Reflection::MethodBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringMethod : System.Reflection.MethodBase" Usage="System.Reflection.Emit.TypeBuilder.DeclaringMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-205">Pobiera metodę, która deklaruje bieżący parametr typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-205">Gets the method that declared the current generic type parameter.</span></span></summary>
        <value><span data-ttu-id="fed4f-206">Reprezentuje metodę, która deklaruje bieżący typ, jeśli bieżący typ jest parametrem typu ogólnego; <see langword="null" />w przeciwnym razie. <see cref="T:System.Reflection.MethodBase" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-206">A <see cref="T:System.Reflection.MethodBase" /> that represents the method that declared the current type, if the current type is a generic type parameter; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-207">Podczas emitowania kodu, parametr typu ogólnego jest reprezentowany przez <xref:System.Reflection.Emit.GenericTypeParameterBuilder> obiekt, a nie <xref:System.Reflection.Emit.TypeBuilder> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fed4f-207">When emitting code, a generic type parameter is represented by a <xref:System.Reflection.Emit.GenericTypeParameterBuilder> object rather than by a <xref:System.Reflection.Emit.TypeBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Reflection.Emit.TypeBuilder.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-208">Zwraca typ, który zadeklaruje ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-208">Returns the type that declared this type.</span></span></summary>
        <value><span data-ttu-id="fed4f-209">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-209">Read-only.</span></span> <span data-ttu-id="fed4f-210">Typ, który zadeklaruje ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-210">The type that declared this type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineConstructor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-211">Dodaje nowy Konstruktor do typu dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-211">Adds a new constructor to the dynamic type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ConstructorBuilder DefineConstructor (System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ConstructorBuilder DefineConstructor(valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineConstructor (attributes As MethodAttributes, callingConvention As CallingConventions, parameterTypes As Type()) As ConstructorBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ConstructorBuilder ^ DefineConstructor(System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineConstructor : System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type[] -&gt; System.Reflection.Emit.ConstructorBuilder" Usage="typeBuilder.DefineConstructor (attributes, callingConvention, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ConstructorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="fed4f-212">Atrybuty konstruktora.</span><span class="sxs-lookup"><span data-stu-id="fed4f-212">The attributes of the constructor.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="fed4f-213">Konwencja wywoływania konstruktora.</span><span class="sxs-lookup"><span data-stu-id="fed4f-213">The calling convention of the constructor.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-214">Typy parametrów konstruktora.</span><span class="sxs-lookup"><span data-stu-id="fed4f-214">The parameter types of the constructor.</span></span></param>
        <summary><span data-ttu-id="fed4f-215">Dodaje nowy Konstruktor do typu o podanych atrybutach i podpisie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-215">Adds a new constructor to the type, with the given attributes and signature.</span></span></summary>
        <returns><span data-ttu-id="fed4f-216">Zdefiniowany Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="fed4f-216">The defined constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-217">Jeśli nie zdefiniujesz konstruktora dla typu dynamicznego, Konstruktor bez parametrów zostanie dostarczony automatycznie i wywoła konstruktora bez parametrów klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-217">If you do not define a constructor for your dynamic type, a parameterless constructor is provided automatically, and it calls the parameterless constructor of the base class.</span></span>  
  
 <span data-ttu-id="fed4f-218">Jeśli zdefiniujesz konstruktora dla typu dynamicznego, nie zostanie podany Konstruktor bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-218">If you define a constructor for your dynamic type, a parameterless constructor is not provided.</span></span> <span data-ttu-id="fed4f-219">Dostępne są następujące opcje dla udostępniania konstruktora bez parametrów oprócz zdefiniowanego konstruktora:</span><span class="sxs-lookup"><span data-stu-id="fed4f-219">You have the following options for providing a parameterless constructor in addition to the constructor you defined:</span></span>  
  
-   <span data-ttu-id="fed4f-220">Jeśli potrzebujesz konstruktora bez parametrów, który po prostu wywołuje konstruktora bez parametrów klasy bazowej, możesz użyć <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A> metody, aby utworzyć jeden (i opcjonalnie ograniczyć dostęp do niego).</span><span class="sxs-lookup"><span data-stu-id="fed4f-220">If you want a parameterless constructor that simply calls the parameterless constructor of the base class, you can use the <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A> method to create one (and optionally restrict access to it).</span></span> <span data-ttu-id="fed4f-221">Nie dostarczaj implementacji dla tego konstruktora bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-221">Do not provide an implementation for this parameterless constructor.</span></span> <span data-ttu-id="fed4f-222">Jeśli to zrobisz, wyjątek jest zgłaszany podczas próby użycia konstruktora.</span><span class="sxs-lookup"><span data-stu-id="fed4f-222">If you do, an exception is thrown when you try to use the constructor.</span></span> <span data-ttu-id="fed4f-223">Podczas <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> wywoływania metody nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="fed4f-223">No exception is thrown when the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method is called.</span></span>  
  
-   <span data-ttu-id="fed4f-224">Jeśli chcesz, aby Konstruktor bez parametrów, który wykonuje coś więcej niż po prostu wywołuje konstruktora bez parametrów klasy bazowej lub wywołuje innego konstruktora klasy bazowej lub który wykonuje coś innego w całości, musisz użyć metody, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=nameWithType> aby Utwórz je i podaj własną implementację.</span><span class="sxs-lookup"><span data-stu-id="fed4f-224">If you want a parameterless constructor that does something more than simply calling the parameterless constructor of the base class, or that calls another constructor of the base class, or that does something else entirely, you must use the <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=nameWithType> method to create one, and provide your own implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-225">Poniższy przykład kodu demonstruje użycie `DefineConstructor` , aby ustawić określony podpis konstruktora i atrybuty w typie dynamicznym i zwrócić odpowiadające <xref:System.Reflection.Emit.ConstructorBuilder> populacji MSIL.</span><span class="sxs-lookup"><span data-stu-id="fed4f-225">The following code sample demonstrates the use of `DefineConstructor` to set a constructor's particular signature and attributes on a dynamic type and return a corresponding <xref:System.Reflection.Emit.ConstructorBuilder> for MSIL population.</span></span>  
  
 [!code-cpp[TypeBuilder_Sample_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder_Sample_4/CPP/typebuilder_sample_4.cpp#2)]
 [!code-csharp[TypeBuilder_Sample_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder_Sample_4/CS/typebuilder_sample_4.cs#2)]
 [!code-vb[TypeBuilder_Sample_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder_Sample_4/VB/typebuilder_sample_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-226">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-226">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ConstructorBuilder DefineConstructor (System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type[] parameterTypes, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ConstructorBuilder DefineConstructor(valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type[] parameterTypes, class System.Type[][] requiredCustomModifiers, class System.Type[][] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineConstructor (attributes As MethodAttributes, callingConvention As CallingConventions, parameterTypes As Type(), requiredCustomModifiers As Type()(), optionalCustomModifiers As Type()()) As ConstructorBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ConstructorBuilder ^ DefineConstructor(System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.DefineConstructor : System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.ConstructorBuilder" Usage="typeBuilder.DefineConstructor (attributes, callingConvention, parameterTypes, requiredCustomModifiers, optionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ConstructorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[][]" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[][]" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="fed4f-227">Atrybuty konstruktora.</span><span class="sxs-lookup"><span data-stu-id="fed4f-227">The attributes of the constructor.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="fed4f-228">Konwencja wywoływania konstruktora.</span><span class="sxs-lookup"><span data-stu-id="fed4f-228">The calling convention of the constructor.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-229">Typy parametrów konstruktora.</span><span class="sxs-lookup"><span data-stu-id="fed4f-229">The parameter types of the constructor.</span></span></param>
        <param name="requiredCustomModifiers"><span data-ttu-id="fed4f-230">Tablica tablic typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-230">An array of arrays of types.</span></span> <span data-ttu-id="fed4f-231">Każda tablica typów reprezentuje wymagane Modyfikatory niestandardowe dla odpowiadającego parametru, <see cref="T:System.Runtime.CompilerServices.IsConst" />na przykład.</span><span class="sxs-lookup"><span data-stu-id="fed4f-231">Each array of types represents the required custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="fed4f-232">Jeśli określony parametr nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-232">If a particular parameter has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="fed4f-233">Jeśli żaden z parametrów nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="fed4f-233">If none of the parameters have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalCustomModifiers"><span data-ttu-id="fed4f-234">Tablica tablic typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-234">An array of arrays of types.</span></span> <span data-ttu-id="fed4f-235">Każda tablica typów reprezentuje opcjonalne Modyfikatory niestandardowe dla odpowiedniego parametru, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-235">Each array of types represents the optional custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="fed4f-236">Jeśli określony parametr nie ma opcjonalnych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-236">If a particular parameter has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="fed4f-237">Jeśli żaden z parametrów nie ma opcjonalnych modyfikatorów niestandardowych, <see langword="null" /> Określ zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="fed4f-237">If none of the parameters have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="fed4f-238">Dodaje nowy Konstruktor do typu z podanym atrybutami, sygnaturą i modyfikatorami niestandardowymi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-238">Adds a new constructor to the type, with the given attributes, signature, and custom modifiers.</span></span></summary>
        <returns><span data-ttu-id="fed4f-239">Zdefiniowany Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="fed4f-239">The defined constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-240">To Przeciążenie zapewnia projektantom zarządzanych kompilatorów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-240">This overload is provided for designers of managed compilers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-241">Aby uzyskać więcej informacji na temat modyfikatorów niestandardowych, zobacz dokumentację dotyczącą metadanych ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="fed4f-241">For more information on custom modifiers, see the ECMA Partition II Metadata documentation.</span></span> <span data-ttu-id="fed4f-242">Dokumentacja jest dostępna w trybie online; Zobacz [standardy C# ECMA i Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) w MSDN i [Standard ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) w międzynarodowej witrynie sieci Web ECMA.</span><span class="sxs-lookup"><span data-stu-id="fed4f-242">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-243">Rozmiar <paramref name="requiredCustomModifiers" /> <paramref name="parameterTypes" />lub <paramref name="optionalCustomModifiers" /> nie jest równy rozmiarowi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-243">The size of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-244">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-244">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="fed4f-245">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-245">-or-</span></span> 
<span data-ttu-id="fed4f-246">Dla bieżącego typu <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> dynamicznego właściwość jest <see langword="true" />, ale <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> właściwość jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-246">For the current dynamic type, the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDefaultConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ConstructorBuilder DefineDefaultConstructor (System.Reflection.MethodAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ConstructorBuilder DefineDefaultConstructor(valuetype System.Reflection.MethodAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDefaultConstructor (attributes As MethodAttributes) As ConstructorBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ConstructorBuilder ^ DefineDefaultConstructor(System::Reflection::MethodAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineDefaultConstructor : System.Reflection.MethodAttributes -&gt; System.Reflection.Emit.ConstructorBuilder" Usage="typeBuilder.DefineDefaultConstructor attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ConstructorBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="fed4f-247"><see langword="MethodAttributes" /> Obiekt reprezentujący atrybuty, które mają być zastosowane do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="fed4f-247">A <see langword="MethodAttributes" /> object representing the attributes to be applied to the constructor.</span></span></param>
        <summary><span data-ttu-id="fed4f-248">Definiuje Konstruktor bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-248">Defines the parameterless constructor.</span></span> <span data-ttu-id="fed4f-249">Konstruktor zdefiniowany w tym miejscu będzie po prostu wywołać konstruktora bez parametrów elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-249">The constructor defined here will simply call the parameterless constructor of the parent.</span></span></summary>
        <returns><span data-ttu-id="fed4f-250">Zwraca Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="fed4f-250">Returns the constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-251">Ponieważ Konstruktor bez parametrów jest definiowany automatycznie, należy wywołać tę metodę tylko w następujących sytuacjach:</span><span class="sxs-lookup"><span data-stu-id="fed4f-251">Because the parameterless constructor is automatically defined, it is necessary to call this method only in the following situations:</span></span>  
  
-   <span data-ttu-id="fed4f-252">Zdefiniowano innego konstruktora i należy również użyć konstruktora bez parametrów, który po prostu wywołuje konstruktora klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-252">You have defined another constructor and you also want a parameterless constructor that simply calls the base class constructor.</span></span>  
  
-   <span data-ttu-id="fed4f-253">Chcesz ustawić atrybuty konstruktora bez parametrów na coś innego niż <xref:System.Reflection.MethodAttributes.PrivateScope> <xref:System.Reflection.MethodAttributes.HideBySig>, <xref:System.Reflection.MethodAttributes.Public>,, <xref:System.Reflection.MethodAttributes.SpecialName>, i <xref:System.Reflection.MethodAttributes.RTSpecialName>.</span><span class="sxs-lookup"><span data-stu-id="fed4f-253">You want to set the attributes on the parameterless constructor to something other than <xref:System.Reflection.MethodAttributes.PrivateScope>, <xref:System.Reflection.MethodAttributes.Public>, <xref:System.Reflection.MethodAttributes.HideBySig>, <xref:System.Reflection.MethodAttributes.SpecialName>, and <xref:System.Reflection.MethodAttributes.RTSpecialName>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-254">Poniższy przykład kodu demonstruje użycie `DefineConstructor` , aby ustawić określony podpis konstruktora i atrybuty w typie dynamicznym i zwrócić odpowiadające <xref:System.Reflection.Emit.ConstructorBuilder> populacji MSIL.</span><span class="sxs-lookup"><span data-stu-id="fed4f-254">The following code sample demonstrates the use of `DefineConstructor` to set a constructor's particular signature and attributes on a dynamic type and return a corresponding <xref:System.Reflection.Emit.ConstructorBuilder> for MSIL population.</span></span>  
  
 [!code-cpp[TypeBuilder_Sample_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder_Sample_4/CPP/typebuilder_sample_4.cpp#2)]
 [!code-csharp[TypeBuilder_Sample_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder_Sample_4/CS/typebuilder_sample_4.cs#2)]
 [!code-vb[TypeBuilder_Sample_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder_Sample_4/VB/typebuilder_sample_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-255">Typ nadrzędny (typ podstawowy) nie ma konstruktora bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-255">The parent type (base type) does not have a parameterless constructor.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-256">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-256">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="fed4f-257">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-257">-or-</span></span> 
<span data-ttu-id="fed4f-258">Dla bieżącego typu <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> dynamicznego właściwość jest <see langword="true" />, ale <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> właściwość jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-258">For the current dynamic type, the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineEvent">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.EventBuilder DefineEvent (string name, System.Reflection.EventAttributes attributes, Type eventtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.EventBuilder DefineEvent(string name, valuetype System.Reflection.EventAttributes attributes, class System.Type eventtype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineEvent (name As String, attributes As EventAttributes, eventtype As Type) As EventBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::EventBuilder ^ DefineEvent(System::String ^ name, System::Reflection::EventAttributes attributes, Type ^ eventtype);" />
      <MemberSignature Language="F#" Value="member this.DefineEvent : string * System.Reflection.EventAttributes * Type -&gt; System.Reflection.Emit.EventBuilder" Usage="typeBuilder.DefineEvent (name, attributes, eventtype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.EventBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.EventAttributes" />
        <Parameter Name="eventtype" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-259">Nazwa zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-259">The name of the event.</span></span> <span data-ttu-id="fed4f-260"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-260"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-261">Atrybuty zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-261">The attributes of the event.</span></span></param>
        <param name="eventtype"><span data-ttu-id="fed4f-262">Typ zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-262">The type of the event.</span></span></param>
        <summary><span data-ttu-id="fed4f-263">Dodaje nowe zdarzenie do typu o danej nazwie, atrybutach i typie zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-263">Adds a new event to the type, with the given name, attributes and event type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-264">Zdefiniowane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-264">The defined event.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-265">Długość <paramref name="name" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-265">The length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-266"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-266"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fed4f-267">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-267">-or-</span></span> 
 <span data-ttu-id="fed4f-268"><paramref name="eventtype" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-268"><paramref name="eventtype" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-269">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-269">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineField">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-270">Dodaje nowe pole do typu dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-270">Adds a new field to the dynamic type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineField">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineField (string fieldName, Type type, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineField(string fieldName, class System.Type type, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineField(System::String ^ fieldName, Type ^ type, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineField : string * Type * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="typeBuilder.DefineField (fieldName, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
      </Parameters>
      <Docs>
        <param name="fieldName"><span data-ttu-id="fed4f-271">Nazwa pola.</span><span class="sxs-lookup"><span data-stu-id="fed4f-271">The name of the field.</span></span> <span data-ttu-id="fed4f-272"><paramref name="fieldName" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-272"><paramref name="fieldName" /> cannot contain embedded nulls.</span></span></param>
        <param name="type"><span data-ttu-id="fed4f-273">Typ pola</span><span class="sxs-lookup"><span data-stu-id="fed4f-273">The type of the field</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-274">Atrybuty pola.</span><span class="sxs-lookup"><span data-stu-id="fed4f-274">The attributes of the field.</span></span></param>
        <summary><span data-ttu-id="fed4f-275">Dodaje nowe pole do typu o danej nazwie, atrybutach i typie pola.</span><span class="sxs-lookup"><span data-stu-id="fed4f-275">Adds a new field to the type, with the given name, attributes, and field type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-276">Zdefiniowane pole.</span><span class="sxs-lookup"><span data-stu-id="fed4f-276">The defined field.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-277">Długość <paramref name="fieldName" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-277">The length of <paramref name="fieldName" /> is zero.</span></span>  
  
<span data-ttu-id="fed4f-278">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-278">-or-</span></span> 
 <span data-ttu-id="fed4f-279"><paramref name="type" />jest system. void.</span><span class="sxs-lookup"><span data-stu-id="fed4f-279"><paramref name="type" /> is System.Void.</span></span>  
  
<span data-ttu-id="fed4f-280">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-280">-or-</span></span> 
<span data-ttu-id="fed4f-281">Określono całkowity rozmiar klasy nadrzędnej tego pola.</span><span class="sxs-lookup"><span data-stu-id="fed4f-281">A total size was specified for the parent class of this field.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-282"><paramref name="fieldName" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-282"><paramref name="fieldName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-283">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-283">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineField">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineField (string fieldName, Type type, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineField(string fieldName, class System.Type type, class System.Type[] requiredCustomModifiers, class System.Type[] optionalCustomModifiers, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineField(System::String ^ fieldName, Type ^ type, cli::array &lt;Type ^&gt; ^ requiredCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalCustomModifiers, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineField : string * Type * Type[] * Type[] * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="typeBuilder.DefineField (fieldName, type, requiredCustomModifiers, optionalCustomModifiers, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[]" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fieldName"><span data-ttu-id="fed4f-284">Nazwa pola.</span><span class="sxs-lookup"><span data-stu-id="fed4f-284">The name of the field.</span></span> <span data-ttu-id="fed4f-285"><paramref name="fieldName" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-285"><paramref name="fieldName" /> cannot contain embedded nulls.</span></span></param>
        <param name="type"><span data-ttu-id="fed4f-286">Typ pola</span><span class="sxs-lookup"><span data-stu-id="fed4f-286">The type of the field</span></span></param>
        <param name="requiredCustomModifiers"><span data-ttu-id="fed4f-287">Tablica typów reprezentująca wymagane Modyfikatory niestandardowe dla pola, na przykład <see cref="T:Microsoft.VisualC.IsConstModifier" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-287">An array of types representing the required custom modifiers for the field, such as <see cref="T:Microsoft.VisualC.IsConstModifier" />.</span></span></param>
        <param name="optionalCustomModifiers"><span data-ttu-id="fed4f-288">Tablica typów reprezentująca opcjonalne Modyfikatory niestandardowe dla pola, na przykład <see cref="T:Microsoft.VisualC.IsConstModifier" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-288">An array of types representing the optional custom modifiers for the field, such as <see cref="T:Microsoft.VisualC.IsConstModifier" />.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-289">Atrybuty pola.</span><span class="sxs-lookup"><span data-stu-id="fed4f-289">The attributes of the field.</span></span></param>
        <summary><span data-ttu-id="fed4f-290">Dodaje nowe pole do typu z podaną nazwą, atrybutami, typem pola i modyfikatorami niestandardowymi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-290">Adds a new field to the type, with the given name, attributes, field type, and custom modifiers.</span></span></summary>
        <returns><span data-ttu-id="fed4f-291">Zdefiniowane pole.</span><span class="sxs-lookup"><span data-stu-id="fed4f-291">The defined field.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-292">To Przeciążenie zapewnia projektantom zarządzanych kompilatorów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-292">This overload is provided for designers of managed compilers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-293">Długość <paramref name="fieldName" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-293">The length of <paramref name="fieldName" /> is zero.</span></span>  
  
<span data-ttu-id="fed4f-294">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-294">-or-</span></span> 
 <span data-ttu-id="fed4f-295"><paramref name="type" />jest system. void.</span><span class="sxs-lookup"><span data-stu-id="fed4f-295"><paramref name="type" /> is System.Void.</span></span>  
  
<span data-ttu-id="fed4f-296">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-296">-or-</span></span> 
<span data-ttu-id="fed4f-297">Określono całkowity rozmiar klasy nadrzędnej tego pola.</span><span class="sxs-lookup"><span data-stu-id="fed4f-297">A total size was specified for the parent class of this field.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-298"><paramref name="fieldName" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-298"><paramref name="fieldName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-299">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-299">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGenericParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.GenericTypeParameterBuilder[] DefineGenericParameters (params string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.GenericTypeParameterBuilder[] DefineGenericParameters(string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGenericParameters (ParamArray names As String()) As GenericTypeParameterBuilder()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Emit::GenericTypeParameterBuilder ^&gt; ^ DefineGenericParameters(... cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.DefineGenericParameters : string[] -&gt; System.Reflection.Emit.GenericTypeParameterBuilder[]" Usage="typeBuilder.DefineGenericParameters names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.GenericTypeParameterBuilder[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="names"><span data-ttu-id="fed4f-300">Tablica nazw dla parametrów typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-300">An array of names for the generic type parameters.</span></span></param>
        <summary><span data-ttu-id="fed4f-301">Definiuje parametry typu ogólnego dla bieżącego typu, określając ich liczbę i ich nazwy, i zwraca tablicę <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> obiektów, których można użyć do ustawiania ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="fed4f-301">Defines the generic type parameters for the current type, specifying their number and their names, and returns an array of <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> objects that can be used to set their constraints.</span></span></summary>
        <returns><span data-ttu-id="fed4f-302">Tablica <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> obiektów, których można użyć do zdefiniowania ograniczeń parametrów typu ogólnego dla bieżącego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-302">An array of <see cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" /> objects that can be used to define the constraints of the generic type parameters for the current type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-303">Wywołanie tej metody powoduje, że bieżącym typem jest typ ogólny.</span><span class="sxs-lookup"><span data-stu-id="fed4f-303">Calling this method makes the current type a generic type.</span></span> <span data-ttu-id="fed4f-304">Jeśli metoda zostanie ponownie wywołana dla tego samego typu, <xref:System.InvalidOperationException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-304">If the method is called again on the same type, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-305">Poniższy przykład kodu tworzy typ ogólny z dwoma parametrami typu i zapisuje je w zestawie GenericEmitExample1. dll.</span><span class="sxs-lookup"><span data-stu-id="fed4f-305">The following code example creates a generic type with two type parameters and saves them in the assembly GenericEmitExample1.dll.</span></span> <span data-ttu-id="fed4f-306">Aby wyświetlić wygenerowane typy, można użyć [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) .</span><span class="sxs-lookup"><span data-stu-id="fed4f-306">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the generated types.</span></span> <span data-ttu-id="fed4f-307">Aby uzyskać bardziej szczegółowy opis kroków związanych z definiowaniem dynamicznego typu ogólnego, zobacz [How to: Zdefiniuj typ ogólny przy użyciu emisji](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md)odbicia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-307">For a more detailed explanation of the steps involved in defining a dynamic generic type, see [How to: Define a Generic Type with Reflection Emit](~/docs/framework/reflection-and-codedom/how-to-define-a-generic-type-with-reflection-emit.md).</span></span>  
  
 [!code-cpp[EmitGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR/EmitGenericType/CPP/source.cpp#1)]
 [!code-csharp[EmitGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR/EmitGenericType/CS/source.cs#1)]
 [!code-vb[EmitGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EmitGenericType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-308">Parametry typu ogólnego zostały już zdefiniowane dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-308">Generic type parameters have already been defined for this type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-309"><paramref name="names" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-309"><paramref name="names" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fed4f-310">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-310">-or-</span></span> 
<span data-ttu-id="fed4f-311">Element <paramref name="names" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-311">An element of <paramref name="names" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-312"><paramref name="names" />jest pustą tablicą.</span><span class="sxs-lookup"><span data-stu-id="fed4f-312"><paramref name="names" /> is an empty array.</span></span></exception>
        <altmember cref="T:System.Reflection.Emit.GenericTypeParameterBuilder" />
        <altmember cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" />
        <related type="Article" href="https://msdn.microsoft.com/library/07d5f01a-7b5b-40ea-9b15-f21561098fe4"><span data-ttu-id="fed4f-313">Instrukcje: Definiowanie typu ogólnego przy użyciu emisji odbicia</span><span class="sxs-lookup"><span data-stu-id="fed4f-313">How to: Define a Generic Type with Reflection Emit</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefineInitializedData">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineInitializedData (string name, byte[] data, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineInitializedData(string name, unsigned int8[] data, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineInitializedData (name As String, data As Byte(), attributes As FieldAttributes) As FieldBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineInitializedData(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineInitializedData : string * byte[] * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="typeBuilder.DefineInitializedData (name, data, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-314">Nazwa używana do odwoływania się do danych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-314">The name used to refer to the data.</span></span> <span data-ttu-id="fed4f-315"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-315"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="data"><span data-ttu-id="fed4f-316">Obiekt BLOB danych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-316">The blob of data.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-317">Atrybuty dla pola.</span><span class="sxs-lookup"><span data-stu-id="fed4f-317">The attributes for the field.</span></span></param>
        <summary><span data-ttu-id="fed4f-318">Definiuje pole zainicjowanych danych w sekcji. sdata przenośnego pliku wykonywalnego (PE).</span><span class="sxs-lookup"><span data-stu-id="fed4f-318">Defines initialized data field in the .sdata section of the portable executable (PE) file.</span></span></summary>
        <returns><span data-ttu-id="fed4f-319">Pole, w którym można odwoływać się do danych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-319">A field to reference the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-320">Pole utworzone za pomocą tej metody będzie miało `static`wartość, nawet jeśli nie dołączysz `FieldAttributes.Static` go do `attributes` parametru.</span><span class="sxs-lookup"><span data-stu-id="fed4f-320">The field that you create with this method will be `static`, even if you do not include `FieldAttributes.Static` in the `attributes` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-321"><paramref name="name" /> Długość wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-321">Length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="fed4f-322">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-322">-or-</span></span> 
<span data-ttu-id="fed4f-323">Rozmiar danych jest mniejszy niż lub równy zero lub większy lub równy 0x3f0000.</span><span class="sxs-lookup"><span data-stu-id="fed4f-323">The size of the data is less than or equal to zero, or greater than or equal to 0x3f0000.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-324"><paramref name="name" />lub <paramref name="data" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-324"><paramref name="name" /> or <paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-325"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />została wcześniej wywołana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-325"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-326">Dodaje metodę do typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-326">Adds a method to the type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineMethod (string name, System.Reflection.MethodAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineMethod(string name, valuetype System.Reflection.MethodAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineMethod (name As String, attributes As MethodAttributes) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineMethod(System::String ^ name, System::Reflection::MethodAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineMethod : string * System.Reflection.MethodAttributes -&gt; System.Reflection.Emit.MethodBuilder" Usage="typeBuilder.DefineMethod (name, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-327">Nazwa metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-327">The name of the method.</span></span> <span data-ttu-id="fed4f-328"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-328"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-329">Atrybuty metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-329">The attributes of the method.</span></span></param>
        <summary><span data-ttu-id="fed4f-330">Dodaje nową metodę do typu z określoną nazwą i atrybutami metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-330">Adds a new method to the type, with the specified name and method attributes.</span></span></summary>
        <returns><span data-ttu-id="fed4f-331"><see cref="T:System.Reflection.Emit.MethodBuilder" /> Reprezentuje nowo zdefiniowaną metodę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-331">A <see cref="T:System.Reflection.Emit.MethodBuilder" /> representing the newly defined method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-332">Użyj tego przeciążenia metody, jeśli nie znasz sygnatury metody w czasie definiowania metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-332">Use this method overload when you do not know the method signature at the time you define the method.</span></span> <span data-ttu-id="fed4f-333">Na przykład typy parametrów i typ zwracany metody generycznej mogą być określone przez parametry typu ogólnego metody, które muszą być zdefiniowane po dodaniu metody do typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-333">For example, the parameter types and return type of a generic method might be specified by the method's generic type parameters, which must be defined after the method has been added to the type.</span></span> <span data-ttu-id="fed4f-334">Parametry i zwracany typ metody można ustawić później przy użyciu <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-334">The parameters and return type of the method can be set later using the <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="fed4f-335">To Przeciążenie metody definiuje metodę z <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fed4f-335">This method overload defines a method with <xref:System.Reflection.CallingConventions.Standard?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fed4f-336">Jeśli musisz zdefiniować metodę bez podpisu z inną konwencją wywoływania, użyj <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%28System.String%2CSystem.Reflection.MethodAttributes%2CSystem.Reflection.CallingConventions%29> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-336">If you need to define a method without a signature, with a different calling convention, use the <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%28System.String%2CSystem.Reflection.MethodAttributes%2CSystem.Reflection.CallingConventions%29> method overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-337">Poniższy przykład kodu definiuje metodę rodzajową o nazwie `DemoMethod` , której typ parametru i zwracany typ są określone przez parametry typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-337">The following code example defines a generic method named `DemoMethod` whose parameter type and return type are specified by its generic type parameters.</span></span> <span data-ttu-id="fed4f-338">Metoda jest definiowana bez podpisu przy użyciu standardowej konwencji wywoływania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-338">The method is defined without a signature, using the standard calling convention.</span></span> <span data-ttu-id="fed4f-339">Metoda jest używana do wprowadzania `DemoMethod` metody ogólnej, a nowo zdefiniowane parametry typu są następnie używane dla sygnatury i zwracanego typu. <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="fed4f-339">The <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> method is used to make `DemoMethod` a generic method, and the newly defined type parameters are then used for the signature and return type.</span></span>  
  
 <span data-ttu-id="fed4f-340">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-340">This code example is part of a larger example provided for the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A> method.</span></span>  
  
 [!code-cpp[GenericMethodBuilder#4](~/samples/snippets/cpp/VS_Snippets_CLR/GenericMethodBuilder/cpp/source.cpp#4)]
 [!code-csharp[GenericMethodBuilder#4](~/samples/snippets/csharp/VS_Snippets_CLR/GenericMethodBuilder/CS/source.cs#4)]
 [!code-vb[GenericMethodBuilder#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GenericMethodBuilder/VB/source.vb#4)]  
[!code-cpp[GenericMethodBuilder#3](~/samples/snippets/cpp/VS_Snippets_CLR/GenericMethodBuilder/cpp/source.cpp#3)]
[!code-csharp[GenericMethodBuilder#3](~/samples/snippets/csharp/VS_Snippets_CLR/GenericMethodBuilder/CS/source.cs#3)]
[!code-vb[GenericMethodBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/GenericMethodBuilder/VB/source.vb#3)]  
[!code-cpp[GenericMethodBuilder#5](~/samples/snippets/cpp/VS_Snippets_CLR/GenericMethodBuilder/cpp/source.cpp#5)]
[!code-csharp[GenericMethodBuilder#5](~/samples/snippets/csharp/VS_Snippets_CLR/GenericMethodBuilder/CS/source.cs#5)]
[!code-vb[GenericMethodBuilder#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GenericMethodBuilder/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-341">Długość <paramref name="name" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-341">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="fed4f-342">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-342">-or-</span></span> 
<span data-ttu-id="fed4f-343">Typ elementu nadrzędnego tej metody jest interfejsem, a ta metoda nie jest wirtualna (<see langword="Overridable" /> w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fed4f-343">The type of the parent of this method is an interface, and this method is not virtual (<see langword="Overridable" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-344"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-344"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-345">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-345">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="fed4f-346">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-346">-or-</span></span> 
<span data-ttu-id="fed4f-347">Dla bieżącego typu <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> dynamicznego właściwość jest <see langword="true" />, ale <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> właściwość jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-347">For the current dynamic type, the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="DefineMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineMethod(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineMethod (name As String, attributes As MethodAttributes, callingConvention As CallingConventions) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention);" />
      <MemberSignature Language="F#" Value="member this.DefineMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions -&gt; System.Reflection.Emit.MethodBuilder" Usage="typeBuilder.DefineMethod (name, attributes, callingConvention)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-348">Nazwa metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-348">The name of the method.</span></span> <span data-ttu-id="fed4f-349"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-349"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-350">Atrybuty metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-350">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="fed4f-351">Konwencja wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-351">The calling convention of the method.</span></span></param>
        <summary><span data-ttu-id="fed4f-352">Dodaje nową metodę do typu, z określoną nazwą, atrybutami metody i konwencją wywoływania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-352">Adds a new method to the type, with the specified name, method attributes, and calling convention.</span></span></summary>
        <returns><span data-ttu-id="fed4f-353"><see cref="T:System.Reflection.Emit.MethodBuilder" /> Reprezentuje nowo zdefiniowaną metodę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-353">A <see cref="T:System.Reflection.Emit.MethodBuilder" /> representing the newly defined method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-354">Użyj tego przeciążenia metody, jeśli nie znasz sygnatury metody w czasie definiowania metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-354">Use this method overload when you do not know the method signature at the time you define the method.</span></span> <span data-ttu-id="fed4f-355">Na przykład typy parametrów i typ zwracany metody generycznej mogą być określone przez parametry typu ogólnego metody, które muszą być zdefiniowane po dodaniu metody do typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-355">For example, the parameter types and return type of a generic method might be specified by the method's generic type parameters, which must be defined after the method has been added to the type.</span></span> <span data-ttu-id="fed4f-356">Parametry i zwracany typ metody można ustawić później przy użyciu <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-356">The parameters and return type of the method can be set later using the <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-357">Długość <paramref name="name" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-357">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="fed4f-358">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-358">-or-</span></span> 
<span data-ttu-id="fed4f-359">Typ elementu nadrzędnego tej metody jest interfejsem, a ta metoda nie jest wirtualna (<see langword="Overridable" /> w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fed4f-359">The type of the parent of this method is an interface and this method is not virtual (<see langword="Overridable" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-360"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-360"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-361">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-361">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="fed4f-362">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-362">-or-</span></span> 
<span data-ttu-id="fed4f-363">Dla bieżącego typu <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> dynamicznego właściwość jest <see langword="true" />, ale <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> właściwość jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-363">For the current dynamic type, the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="DefineMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineMethod (string name, System.Reflection.MethodAttributes attributes, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineMethod(string name, valuetype System.Reflection.MethodAttributes attributes, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineMethod (name As String, attributes As MethodAttributes, returnType As Type, parameterTypes As Type()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineMethod : string * System.Reflection.MethodAttributes * Type * Type[] -&gt; System.Reflection.Emit.MethodBuilder" Usage="typeBuilder.DefineMethod (name, attributes, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-364">Nazwa metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-364">The name of the method.</span></span> <span data-ttu-id="fed4f-365"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-365"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-366">Atrybuty metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-366">The attributes of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="fed4f-367">Zwracany typ metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-367">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-368">Typy parametrów metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-368">The types of the parameters of the method.</span></span></param>
        <summary><span data-ttu-id="fed4f-369">Dodaje nową metodę do typu, z określoną nazwą, atrybutami metody i sygnaturą metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-369">Adds a new method to the type, with the specified name, method attributes, and method signature.</span></span></summary>
        <returns><span data-ttu-id="fed4f-370">Zdefiniowana Metoda.</span><span class="sxs-lookup"><span data-stu-id="fed4f-370">The defined method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fed4f-371">Poniższy przykład kodu demonstruje użycie `DefineMethod` , aby ustawić określony podpis konstruktora i atrybuty w typie dynamicznym i zwrócić odpowiadające <xref:System.Reflection.Emit.MethodBuilder> populacji MSIL.</span><span class="sxs-lookup"><span data-stu-id="fed4f-371">The following code sample demonstrates the use of `DefineMethod` to set a constructor's particular signature and attributes on a dynamic type and to return a corresponding <xref:System.Reflection.Emit.MethodBuilder> for MSIL population.</span></span>  
  
 [!code-cpp[TypeBuilder_DefineNestedType1#2](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder_DefineNestedType1/CPP/typebuilder_definenestedtype1.cpp#2)]
 [!code-csharp[TypeBuilder_DefineNestedType1#2](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder_DefineNestedType1/CS/typebuilder_definenestedtype1.cs#2)]
 [!code-vb[TypeBuilder_DefineNestedType1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder_DefineNestedType1/VB/typebuilder_definenestedtype1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-372">Długość <paramref name="name" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-372">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="fed4f-373">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-373">-or-</span></span> 
<span data-ttu-id="fed4f-374">Typ elementu nadrzędnego tej metody jest interfejsem, a ta metoda nie jest wirtualna (<see langword="Overridable" /> w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fed4f-374">The type of the parent of this method is an interface, and this method is not virtual (<see langword="Overridable" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-375"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-375"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-376">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-376">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="fed4f-377">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-377">-or-</span></span> 
<span data-ttu-id="fed4f-378">Dla bieżącego typu <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> dynamicznego właściwość jest <see langword="true" />, ale <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> właściwość jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-378">For the current dynamic type, the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineMethod(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineMethod (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.Emit.MethodBuilder" Usage="typeBuilder.DefineMethod (name, attributes, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-379">Nazwa metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-379">The name of the method.</span></span> <span data-ttu-id="fed4f-380"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-380"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-381">Atrybuty metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-381">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="fed4f-382">Konwencja wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-382">The calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="fed4f-383">Zwracany typ metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-383">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-384">Typy parametrów metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-384">The types of the parameters of the method.</span></span></param>
        <summary><span data-ttu-id="fed4f-385">Dodaje nową metodę do typu, z określoną nazwą, atrybutami metody, konwencją wywoływania i sygnaturą metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-385">Adds a new method to the type, with the specified name, method attributes, calling convention, and method signature.</span></span></summary>
        <returns><span data-ttu-id="fed4f-386"><see cref="T:System.Reflection.Emit.MethodBuilder" /> Reprezentuje nowo zdefiniowaną metodę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-386">A <see cref="T:System.Reflection.Emit.MethodBuilder" /> representing the newly defined method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fed4f-387">Poniższy przykład kodu demonstruje użycie `DefineMethod` , aby ustawić określony podpis konstruktora i atrybuty w typie dynamicznym i zwrócić odpowiadające <xref:System.Reflection.Emit.MethodBuilder> populacji MSIL.</span><span class="sxs-lookup"><span data-stu-id="fed4f-387">The following code sample demonstrates the use of `DefineMethod` to set a constructor's particular signature and attributes on a dynamic type and to return a corresponding <xref:System.Reflection.Emit.MethodBuilder> for MSIL population.</span></span>  
  
 [!code-cpp[TypeBuilder_DefineNestedType1#2](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder_DefineNestedType1/CPP/typebuilder_definenestedtype1.cpp#2)]
 [!code-csharp[TypeBuilder_DefineNestedType1#2](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder_DefineNestedType1/CS/typebuilder_definenestedtype1.cs#2)]
 [!code-vb[TypeBuilder_DefineNestedType1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder_DefineNestedType1/VB/typebuilder_definenestedtype1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-388">Długość <paramref name="name" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-388">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="fed4f-389">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-389">-or-</span></span> 
<span data-ttu-id="fed4f-390">Typ elementu nadrzędnego tej metody jest interfejsem, a ta metoda nie jest wirtualna (<see langword="Overridable" /> w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fed4f-390">The type of the parent of this method is an interface, and this method is not virtual (<see langword="Overridable" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-391"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-391"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-392">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-392">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="fed4f-393">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-393">-or-</span></span> 
<span data-ttu-id="fed4f-394">Dla bieżącego typu <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> dynamicznego właściwość jest <see langword="true" />, ale <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> właściwość jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-394">For the current dynamic type, the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineMethod(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] returnTypeRequiredCustomModifiers, class System.Type[] returnTypeOptionalCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] parameterTypeRequiredCustomModifiers, class System.Type[][] parameterTypeOptionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineMethod (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ returnTypeRequiredCustomModifiers, cli::array &lt;Type ^&gt; ^ returnTypeOptionalCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ parameterTypeRequiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ parameterTypeOptionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.DefineMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.MethodBuilder" Usage="typeBuilder.DefineMethod (name, attributes, callingConvention, returnType, returnTypeRequiredCustomModifiers, returnTypeOptionalCustomModifiers, parameterTypes, parameterTypeRequiredCustomModifiers, parameterTypeOptionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnType" Type="System.Type" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Type[]" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Type[]" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="6" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Type[][]" Index="7" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Type[][]" Index="8" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-395">Nazwa metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-395">The name of the method.</span></span> <span data-ttu-id="fed4f-396"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-396"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-397">Atrybuty metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-397">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="fed4f-398">Konwencja wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-398">The calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="fed4f-399">Zwracany typ metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-399">The return type of the method.</span></span></param>
        <param name="returnTypeRequiredCustomModifiers"><span data-ttu-id="fed4f-400">Tablica typów reprezentująca wymagane Modyfikatory niestandardowe, takie jak <see cref="T:System.Runtime.CompilerServices.IsConst" />, dla zwracanego typu metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-400">An array of types representing the required custom modifiers, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />, for the return type of the method.</span></span> <span data-ttu-id="fed4f-401">Jeśli typ zwracany nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-401">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="returnTypeOptionalCustomModifiers"><span data-ttu-id="fed4f-402">Tablica typów reprezentująca opcjonalne Modyfikatory niestandardowe, takie jak <see cref="T:System.Runtime.CompilerServices.IsConst" />, dla zwracanego typu metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-402">An array of types representing the optional custom modifiers, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />, for the return type of the method.</span></span> <span data-ttu-id="fed4f-403">Jeśli typ zwracany nie ma opcjonalnych modyfikatorów niestandardowych, określ <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-403">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-404">Typy parametrów metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-404">The types of the parameters of the method.</span></span></param>
        <param name="parameterTypeRequiredCustomModifiers"><span data-ttu-id="fed4f-405">Tablica tablic typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-405">An array of arrays of types.</span></span> <span data-ttu-id="fed4f-406">Każda tablica typów reprezentuje wymagane Modyfikatory niestandardowe dla odpowiadającego parametru, <see cref="T:System.Runtime.CompilerServices.IsConst" />na przykład.</span><span class="sxs-lookup"><span data-stu-id="fed4f-406">Each array of types represents the required custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="fed4f-407">Jeśli określony parametr nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-407">If a particular parameter has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="fed4f-408">Jeśli żaden z parametrów nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="fed4f-408">If none of the parameters have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="parameterTypeOptionalCustomModifiers"><span data-ttu-id="fed4f-409">Tablica tablic typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-409">An array of arrays of types.</span></span> <span data-ttu-id="fed4f-410">Każda tablica typów reprezentuje opcjonalne Modyfikatory niestandardowe dla odpowiedniego parametru, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-410">Each array of types represents the optional custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="fed4f-411">Jeśli określony parametr nie ma opcjonalnych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-411">If a particular parameter has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="fed4f-412">Jeśli żaden z parametrów nie ma opcjonalnych modyfikatorów niestandardowych, <see langword="null" /> Określ zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="fed4f-412">If none of the parameters have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="fed4f-413">Dodaje nową metodę do typu, z określoną nazwą, atrybutami metody, konwencją wywoływania, sygnaturą metody i modyfikatorami niestandardowymi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-413">Adds a new method to the type, with the specified name, method attributes, calling convention, method signature, and custom modifiers.</span></span></summary>
        <returns><span data-ttu-id="fed4f-414"><see cref="T:System.Reflection.Emit.MethodBuilder" /> Obiekt reprezentujący nowo dodaną metodę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-414">A <see cref="T:System.Reflection.Emit.MethodBuilder" /> object representing the newly added method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-415">Użyj tego przeciążenia, jeśli chcesz określić Modyfikatory niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="fed4f-415">Use this overload if you need to specify custom modifiers.</span></span> <span data-ttu-id="fed4f-416">Jeśli musisz określić Modyfikatory niestandardowe po utworzeniu metody, jak na przykład za pomocą metody ogólnej, której typy parametrów są określone przez parametry typu ogólnego, możesz użyć <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%28System.String%2CSystem.Reflection.MethodAttributes%29> przeciążenia metody lub <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%28System.String%2CSystem.Reflection.MethodAttributes%2CSystem.Reflection.CallingConventions%29> do definiowania Metoda, a następnie użyj <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> metody do definiowania parametrów i zwracanych typów z modyfikatorami niestandardowymi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-416">If you need to specify custom modifiers after the method has been created, as you would, for example, with a generic method whose parameter types are specified by its generic type parameters, you can use the <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%28System.String%2CSystem.Reflection.MethodAttributes%29> or <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%28System.String%2CSystem.Reflection.MethodAttributes%2CSystem.Reflection.CallingConventions%29> method overloads to define the method and then use the <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> method to define the parameter and return types with custom modifiers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-417">Aby uzyskać więcej informacji na temat modyfikatorów niestandardowych, zobacz dokumentację dotyczącą metadanych ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="fed4f-417">For more information on custom modifiers, see the ECMA Partition II Metadata documentation.</span></span> <span data-ttu-id="fed4f-418">Dokumentacja jest dostępna w trybie online; Zobacz [standardy C# ECMA i Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) w MSDN i [Standard ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) w międzynarodowej witrynie sieci Web ECMA.</span><span class="sxs-lookup"><span data-stu-id="fed4f-418">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-419">Długość <paramref name="name" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-419">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="fed4f-420">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-420">-or-</span></span> 
<span data-ttu-id="fed4f-421">Typ elementu nadrzędnego tej metody jest interfejsem, a ta metoda nie jest wirtualna (<see langword="Overridable" /> w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fed4f-421">The type of the parent of this method is an interface, and this method is not virtual (<see langword="Overridable" /> in Visual Basic).</span></span>  
  
<span data-ttu-id="fed4f-422">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-422">-or-</span></span> 
<span data-ttu-id="fed4f-423">Rozmiar <paramref name="parameterTypeRequiredCustomModifiers" /> <paramref name="parameterTypes" />lub <paramref name="parameterTypeOptionalCustomModifiers" /> nie jest równy rozmiarowi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-423">The size of <paramref name="parameterTypeRequiredCustomModifiers" /> or <paramref name="parameterTypeOptionalCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-424"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-424"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-425">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-425">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="fed4f-426">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-426">-or-</span></span> 
<span data-ttu-id="fed4f-427">Dla bieżącego typu <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> dynamicznego właściwość jest <see langword="true" />, ale <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> właściwość jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-427">For the current dynamic type, the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineMethodOverride">
      <MemberSignature Language="C#" Value="public void DefineMethodOverride (System.Reflection.MethodInfo methodInfoBody, System.Reflection.MethodInfo methodInfoDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineMethodOverride(class System.Reflection.MethodInfo methodInfoBody, class System.Reflection.MethodInfo methodInfoDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineMethodOverride (methodInfoBody As MethodInfo, methodInfoDeclaration As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineMethodOverride(System::Reflection::MethodInfo ^ methodInfoBody, System::Reflection::MethodInfo ^ methodInfoDeclaration);" />
      <MemberSignature Language="F#" Value="member this.DefineMethodOverride : System.Reflection.MethodInfo * System.Reflection.MethodInfo -&gt; unit" Usage="typeBuilder.DefineMethodOverride (methodInfoBody, methodInfoDeclaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfoBody" Type="System.Reflection.MethodInfo" />
        <Parameter Name="methodInfoDeclaration" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfoBody"><span data-ttu-id="fed4f-428">Treść metody do użycia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-428">The method body to be used.</span></span> <span data-ttu-id="fed4f-429">Powinien to być <see langword="MethodBuilder" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fed4f-429">This should be a <see langword="MethodBuilder" /> object.</span></span></param>
        <param name="methodInfoDeclaration"><span data-ttu-id="fed4f-430">Metoda, której deklaracja ma być używana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-430">The method whose declaration is to be used.</span></span></param>
        <summary><span data-ttu-id="fed4f-431">Określa treść metody, która implementuje daną deklarację metody, potencjalnie z inną nazwą.</span><span class="sxs-lookup"><span data-stu-id="fed4f-431">Specifies a given method body that implements a given method declaration, potentially with a different name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-432">Nie należy używać tej metody do emitowania zastąpień metod lub implementacji interfejsów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-432">Do not use this method to emit method overrides or interface implementations.</span></span> <span data-ttu-id="fed4f-433">Aby zastąpić metodę klasy bazowej lub zaimplementować metodę interfejsu, po prostu Emituj metodę o tej samej nazwie i podpisie, co metoda do zastąpienia lub zaimplementowania, jak pokazano w przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-433">To override a method of a base class or to implement a method of an interface, simply emit a method with the same name and signature as the method to be overridden or implemented, as demonstrated in the code example.</span></span>  
  
 <span data-ttu-id="fed4f-434">Metoda <xref:System.Reflection.Emit.TypeBuilder.DefineMethodOverride%2A> jest używana, gdy treść metody i Deklaracja metody mają różne nazwy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-434">The <xref:System.Reflection.Emit.TypeBuilder.DefineMethodOverride%2A> method is used when a method body and a method declaration have different names.</span></span> <span data-ttu-id="fed4f-435">Na przykład Klasa może przesłonić metodę klasy bazowej, a także utworzyć oddzielną implementację dla składowej interfejsu o tej samej nazwie, jak pokazano w przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-435">For example, a class might override a base class method and also provide a separate implementation for an interface member with the same name, as demonstrated in the code example.</span></span>  
  
 <span data-ttu-id="fed4f-436">`DefineMethodOverride``methodimpl`definiuje, która składa się z pary tokenów metadanych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-436">`DefineMethodOverride` defines a `methodimpl`, which consists of a pair of metadata tokens.</span></span> <span data-ttu-id="fed4f-437">Jeden token wskazuje na implementację, a drugi token wskazuje deklarację, którą implementuje treść.</span><span class="sxs-lookup"><span data-stu-id="fed4f-437">One token points to an implementation, and the other token points to a declaration that the body implements.</span></span> <span data-ttu-id="fed4f-438">Treść musi być zdefiniowana w typie, w którym jest zdefiniowana Metoda Impl, a treść musi być wirtualna (`Overridable` w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fed4f-438">The body must be defined on the type the method impl is defined on, and the body must be virtual (`Overridable` in Visual Basic).</span></span> <span data-ttu-id="fed4f-439">Deklarację można wykonać do metody zdefiniowanej w interfejsie zaimplementowanym przez typ, metodę klasy pochodnej lub metodę zdefiniowaną w typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-439">The declaration can be made to a method defined on an interface implemented by the type, a method on a derived class, or a method defined in the type.</span></span> <span data-ttu-id="fed4f-440">Jeśli deklaracja jest tylko w interfejsie, gniazdo zdefiniowane dla interfejsu jest zmieniane.</span><span class="sxs-lookup"><span data-stu-id="fed4f-440">If the declaration is on an interface only, the slot defined for the interface is altered.</span></span> <span data-ttu-id="fed4f-441">Jeśli deklaracja jest wykonywana w metodzie w typie podstawowym, miejsce dla metody jest zastępowane i wszystkie duplikaty dla zastąpionej metody są również zastępowane.</span><span class="sxs-lookup"><span data-stu-id="fed4f-441">If the declaration is made to a method on a base type, the slot for the method is overridden and any duplicates for the overridden method are also replaced.</span></span> <span data-ttu-id="fed4f-442">Zastąpiona metoda nie może być rzeczywistą metodą zadeklarowaną.</span><span class="sxs-lookup"><span data-stu-id="fed4f-442">The overridden method cannot be the actual method that is declared.</span></span> <span data-ttu-id="fed4f-443">Jeśli metoda jest tego samego typu, gniazdo jest zastępowane, a wszystkie duplikaty dla zastąpionych metod są zastępowane.</span><span class="sxs-lookup"><span data-stu-id="fed4f-443">If the method is on the same type, the slot is replaced and any duplicates for the replaced methods are overridden.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-444">Więcej informacji o metodzie Impls można znaleźć `MethodImpl` w dokumentacji metadanych ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="fed4f-444">For more information about method impls, see `MethodImpl` in the ECMA Partition II Metadata documentation.</span></span> <span data-ttu-id="fed4f-445">Dokumentacja jest dostępna w trybie online; Zobacz [standardy C# ECMA i Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) w MSDN i [Standard ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) w międzynarodowej witrynie sieci Web ECMA.</span><span class="sxs-lookup"><span data-stu-id="fed4f-445">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fed4f-446">Po wywołaniu `methodInfoBody` metody nie można zmienić niektórych funkcji programu. <xref:System.Reflection.Emit.TypeBuilder.DefineMethodOverride%2A></span><span class="sxs-lookup"><span data-stu-id="fed4f-446">After the <xref:System.Reflection.Emit.TypeBuilder.DefineMethodOverride%2A> method is called, some features of `methodInfoBody` cannot be changed.</span></span> <span data-ttu-id="fed4f-447">Na przykład nie można zastosować atrybutu do parametru `methodInfoBody` typu ogólnego przy <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes%2A> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-447">For example, you cannot apply an attribute to a generic type parameter of `methodInfoBody` by using the <xref:System.Reflection.Emit.GenericTypeParameterBuilder.SetGenericParameterAttributes%2A> method.</span></span> <span data-ttu-id="fed4f-448">Jeśli musisz użyć <xref:System.Reflection.Emit.TypeBuilder.DefineMethodOverride%2A> metody, zrób to po zdefiniowaniu wszystkich `methodInfoBody` cech.</span><span class="sxs-lookup"><span data-stu-id="fed4f-448">If you must use the <xref:System.Reflection.Emit.TypeBuilder.DefineMethodOverride%2A> method, do so after all characteristics of `methodInfoBody` have been defined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-449">Poniższy `I` przykład kodu zawiera interfejs z metodą `M()`, klasę `A` bazową, która implementuje interfejs, i `M()` klasę `C` pochodną, która zastępuje implementację klasy bazowej, a także zapewnia oddzielną jawną `I.M()`implementację programu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-449">The following code example contains an interface `I` with a method `M()`, a base class `A` that implements the interface, and a derived class `C` that overrides the base class implementation of `M()` and also provides a separate explicit implementation of `I.M()`.</span></span>  
  
 <span data-ttu-id="fed4f-450">Metoda przykładu kodu pokazuje, jak emitować klasę `C`pochodną. `main()`</span><span class="sxs-lookup"><span data-stu-id="fed4f-450">The `main()` method of the code example shows how to emit the derived class `C`.</span></span> <span data-ttu-id="fed4f-451">Przesłonięcie `A.M()` jest wykonywane po prostu przez emitowanie metody `M()` z tą samą sygnaturą.</span><span class="sxs-lookup"><span data-stu-id="fed4f-451">The override of `A.M()` is accomplished simply by emitting a method `M()` with the same signature.</span></span> <span data-ttu-id="fed4f-452">Aby `I.M()`jednak zapewnić osobną implementację, należy zdefiniować treść metody, a następnie <xref:System.Reflection.Emit.TypeBuilder.DefineMethodOverride%2A> użyć metody do skojarzenia tej treści metody z elementem <xref:System.Reflection.MethodInfo> reprezentującym `I.M()`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-452">However, to provide a separate implementation of `I.M()`, you must define a method body and then use the <xref:System.Reflection.Emit.TypeBuilder.DefineMethodOverride%2A> method to associate that method body with a <xref:System.Reflection.MethodInfo> representing `I.M()`.</span></span> <span data-ttu-id="fed4f-453">Nazwa treści metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-453">The name of the method body does not matter.</span></span>  
  
 <span data-ttu-id="fed4f-454">Przykładowy kod tworzy wystąpienie wyemitowanej klasy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-454">The code example creates an instance of the emitted class.</span></span> <span data-ttu-id="fed4f-455">Uzyskuje <xref:System.Reflection.MethodInfo> obiekt dla `I.M()`i używa go do wywołania jawnej implementacji interfejsu klasy emitowanej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-455">It obtains a <xref:System.Reflection.MethodInfo> object for `I.M()`, and uses it to invoke the emitted class's explicit interface implementation.</span></span> <span data-ttu-id="fed4f-456">Następnie uzyskuje <xref:System.Reflection.MethodInfo> obiekt dla `A.M()`i używa go do wywołania zastąpienia wyemitowanej klasy tej metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-456">It then obtains a <xref:System.Reflection.MethodInfo> object for `A.M()`, and uses it to invoke the emitted class's override of that method.</span></span>  
  
 [!code-cpp[TypeBuilder.DefineMethodOverride#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder.DefineMethodOverride/cpp/source.cpp#1)]
 [!code-csharp[TypeBuilder.DefineMethodOverride#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder.DefineMethodOverride/cs/source.cs#1)]
 [!code-vb[TypeBuilder.DefineMethodOverride#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder.DefineMethodOverride/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-457"><paramref name="methodInfoBody" />nie należy do tej klasy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-457"><paramref name="methodInfoBody" /> does not belong to this class.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-458"><paramref name="methodInfoBody" />lub <paramref name="methodInfoDeclaration" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-458"><paramref name="methodInfoBody" /> or <paramref name="methodInfoDeclaration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-459">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-459">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="fed4f-460">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-460">-or-</span></span> 
<span data-ttu-id="fed4f-461">Typ <paramref name="methodInfoBody" /> deklarujący nie jest typem reprezentowanym przez ten <see cref="T:System.Reflection.Emit.TypeBuilder" />typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-461">The declaring type of <paramref name="methodInfoBody" /> is not the type represented by this <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineNestedType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-462">Definiuje typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-462">Defines a nested type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineNestedType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineNestedType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineNestedType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineNestedType (name As String) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineNestedType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.DefineNestedType : string -&gt; System.Reflection.Emit.TypeBuilder" Usage="typeBuilder.DefineNestedType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-463">Krótka nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-463">The short name of the type.</span></span> <span data-ttu-id="fed4f-464"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-464"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <summary><span data-ttu-id="fed4f-465">Definiuje typ zagnieżdżony pod nazwą.</span><span class="sxs-lookup"><span data-stu-id="fed4f-465">Defines a nested type, given its name.</span></span></summary>
        <returns><span data-ttu-id="fed4f-466">Zdefiniowany typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-466">The defined nested type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-467">Ta metoda może służyć do tworzenia zagnieżdżonych typów nawet po <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> wywołaniu metody w typie otaczającym.</span><span class="sxs-lookup"><span data-stu-id="fed4f-467">This method can be used to create nested types even after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method has been called on the enclosing type.</span></span>  
  
 <span data-ttu-id="fed4f-468">Zagnieżdżony typ musi być zakończony, aby można było go odzwierciedlić przy <xref:System.Type.GetMembers%2A>użyciu <xref:System.Type.GetNestedType%2A>, lub <xref:System.Type.GetNestedTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed4f-468">The nested type needs to be complete before you can reflect on it using <xref:System.Type.GetMembers%2A>, <xref:System.Type.GetNestedType%2A>, or <xref:System.Type.GetNestedTypes%2A>.</span></span>  
  
 <span data-ttu-id="fed4f-469">Zobacz opis <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> kolejności, w której typy zagnieżdżone i typy zagnieżdżania mają zostać ukończone.</span><span class="sxs-lookup"><span data-stu-id="fed4f-469">See the description of <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> for the order in which nested types and nesting types should be completed.</span></span>  
  
 <span data-ttu-id="fed4f-470">Zduplikowana nazwa nie musi być tworzona, `name` jeśli jest taka sama jak nazwa wcześniej zdefiniowanego typu lub typu zagnieżdżonego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-470">A duplicate name is not necessarily created if `name` is identical to the name of a previously defined type or nested type.</span></span> <span data-ttu-id="fed4f-471">Aby można było duplikować, pełne nazwy muszą być takie same, włącznie z przestrzenią nazw i wszystkimi typami zagnieżdżenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-471">To be duplicates, the full names must be the same, including the namespace and all nesting types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-472"><paramref name="name" /> Długość jest równa zero lub większa niż 1023.</span><span class="sxs-lookup"><span data-stu-id="fed4f-472">Length of <paramref name="name" /> is zero or greater than 1023.</span></span>  
  
<span data-ttu-id="fed4f-473">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-473">-or-</span></span> 
<span data-ttu-id="fed4f-474">Ta operacja spowoduje utworzenie typu z duplikatem <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> w bieżącym zestawie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-474">This operation would create a type with a duplicate <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> in the current assembly.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-475"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-475"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineNestedType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineNestedType(string name, valuetype System.Reflection.TypeAttributes attr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineNestedType (name As String, attr As TypeAttributes) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineNestedType(System::String ^ name, System::Reflection::TypeAttributes attr);" />
      <MemberSignature Language="F#" Value="member this.DefineNestedType : string * System.Reflection.TypeAttributes -&gt; System.Reflection.Emit.TypeBuilder" Usage="typeBuilder.DefineNestedType (name, attr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-476">Krótka nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-476">The short name of the type.</span></span> <span data-ttu-id="fed4f-477"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-477"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="fed4f-478">Atrybuty typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-478">The attributes of the type.</span></span></param>
        <summary><span data-ttu-id="fed4f-479">Definiuje typ zagnieżdżony, uwzględniając jego nazwę i atrybuty.</span><span class="sxs-lookup"><span data-stu-id="fed4f-479">Defines a nested type, given its name and attributes.</span></span></summary>
        <returns><span data-ttu-id="fed4f-480">Zdefiniowany typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-480">The defined nested type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-481">Ta metoda może służyć do tworzenia zagnieżdżonych typów nawet po <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> wywołaniu metody w typie otaczającym.</span><span class="sxs-lookup"><span data-stu-id="fed4f-481">This method can be used to create nested types even after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method has been called on the enclosing type.</span></span>  
  
 <span data-ttu-id="fed4f-482">Zagnieżdżony typ musi być zakończony, aby można było go odzwierciedlić przy <xref:System.Type.GetMembers%2A>użyciu <xref:System.Type.GetNestedType%2A>, lub <xref:System.Type.GetNestedTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed4f-482">The nested type needs to be complete before you can reflect on it using <xref:System.Type.GetMembers%2A>, <xref:System.Type.GetNestedType%2A>, or <xref:System.Type.GetNestedTypes%2A>.</span></span>  
  
 <span data-ttu-id="fed4f-483">Zobacz opis <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> kolejności, w której typy zagnieżdżone i typy zagnieżdżania mają zostać ukończone.</span><span class="sxs-lookup"><span data-stu-id="fed4f-483">See the description of <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> for the order in which nested types and nesting types should be completed.</span></span>  
  
 <span data-ttu-id="fed4f-484">Zduplikowana nazwa nie musi być tworzona, `name` jeśli jest taka sama jak nazwa wcześniej zdefiniowanego typu lub typu zagnieżdżonego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-484">A duplicate name is not necessarily created if `name` is identical to the name of a previously defined type or nested type.</span></span> <span data-ttu-id="fed4f-485">Aby można było duplikować, pełne nazwy muszą być takie same, włącznie z przestrzenią nazw i wszystkimi typami zagnieżdżenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-485">To be duplicates, the full names must be the same, including the namespace and all nesting types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-486">Atrybut zagnieżdżony nie został określony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-486">The nested attribute is not specified.</span></span>  
  
<span data-ttu-id="fed4f-487">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-487">-or-</span></span> 
<span data-ttu-id="fed4f-488">Ten typ jest zapieczętowany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-488">This type is sealed.</span></span>  
  
<span data-ttu-id="fed4f-489">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-489">-or-</span></span> 
<span data-ttu-id="fed4f-490">Ten typ jest tablicą.</span><span class="sxs-lookup"><span data-stu-id="fed4f-490">This type is an array.</span></span>  
  
<span data-ttu-id="fed4f-491">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-491">-or-</span></span> 
<span data-ttu-id="fed4f-492">Ten typ jest interfejsem, ale zagnieżdżony typ nie jest interfejsem.</span><span class="sxs-lookup"><span data-stu-id="fed4f-492">This type is an interface, but the nested type is not an interface.</span></span>  
  
<span data-ttu-id="fed4f-493">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-493">-or-</span></span> 
<span data-ttu-id="fed4f-494">Długość <paramref name="name" /> jest równa zero lub większa niż 1023.</span><span class="sxs-lookup"><span data-stu-id="fed4f-494">The length of <paramref name="name" /> is zero or greater than 1023.</span></span>  
  
<span data-ttu-id="fed4f-495">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-495">-or-</span></span> 
<span data-ttu-id="fed4f-496">Ta operacja spowoduje utworzenie typu z duplikatem <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> w bieżącym zestawie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-496">This operation would create a type with a duplicate <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> in the current assembly.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-497"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-497"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineNestedType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr, Type parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineNestedType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineNestedType (name As String, attr As TypeAttributes, parent As Type) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineNestedType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent);" />
      <MemberSignature Language="F#" Value="member this.DefineNestedType : string * System.Reflection.TypeAttributes * Type -&gt; System.Reflection.Emit.TypeBuilder" Usage="typeBuilder.DefineNestedType (name, attr, parent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-498">Krótka nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-498">The short name of the type.</span></span> <span data-ttu-id="fed4f-499"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-499"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="fed4f-500">Atrybuty typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-500">The attributes of the type.</span></span></param>
        <param name="parent"><span data-ttu-id="fed4f-501">Typ, który rozszerza typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-501">The type that the nested type extends.</span></span></param>
        <summary><span data-ttu-id="fed4f-502">Definiuje typ zagnieżdżony, uwzględniając jego nazwę, atrybuty i typ, który rozszerza.</span><span class="sxs-lookup"><span data-stu-id="fed4f-502">Defines a nested type, given its name, attributes, and the type that it extends.</span></span></summary>
        <returns><span data-ttu-id="fed4f-503">Zdefiniowany typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-503">The defined nested type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-504">Ta metoda może służyć do tworzenia zagnieżdżonych typów nawet po <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> wywołaniu metody w typie otaczającym.</span><span class="sxs-lookup"><span data-stu-id="fed4f-504">This method can be used to create nested types even after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method has been called on the enclosing type.</span></span>  
  
 <span data-ttu-id="fed4f-505">Zagnieżdżony typ musi być zakończony, aby można było go odzwierciedlić przy <xref:System.Type.GetMembers%2A>użyciu <xref:System.Type.GetNestedType%2A>, lub <xref:System.Type.GetNestedTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed4f-505">The nested type needs to be complete before you can reflect on it using <xref:System.Type.GetMembers%2A>, <xref:System.Type.GetNestedType%2A>, or <xref:System.Type.GetNestedTypes%2A>.</span></span>  
  
 <span data-ttu-id="fed4f-506">Zobacz opis <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> kolejności, w której typy zagnieżdżone i typy zagnieżdżania mają zostać ukończone.</span><span class="sxs-lookup"><span data-stu-id="fed4f-506">See the description of <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> for the order in which nested types and nesting types should be completed.</span></span>  
  
 <span data-ttu-id="fed4f-507">Zduplikowana nazwa nie musi być tworzona, `name` jeśli jest taka sama jak nazwa wcześniej zdefiniowanego typu lub typu zagnieżdżonego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-507">A duplicate name is not necessarily created if `name` is identical to the name of a previously defined type or nested type.</span></span> <span data-ttu-id="fed4f-508">Aby można było duplikować, pełne nazwy muszą być takie same, włącznie z przestrzenią nazw i wszystkimi typami zagnieżdżenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-508">To be duplicates, the full names must be the same, including the namespace and all nesting types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-509">Atrybut zagnieżdżony nie został określony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-509">The nested attribute is not specified.</span></span>  
  
<span data-ttu-id="fed4f-510">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-510">-or-</span></span> 
<span data-ttu-id="fed4f-511">Ten typ jest zapieczętowany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-511">This type is sealed.</span></span>  
  
<span data-ttu-id="fed4f-512">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-512">-or-</span></span> 
<span data-ttu-id="fed4f-513">Ten typ jest tablicą.</span><span class="sxs-lookup"><span data-stu-id="fed4f-513">This type is an array.</span></span>  
  
<span data-ttu-id="fed4f-514">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-514">-or-</span></span> 
<span data-ttu-id="fed4f-515">Ten typ jest interfejsem, ale zagnieżdżony typ nie jest interfejsem.</span><span class="sxs-lookup"><span data-stu-id="fed4f-515">This type is an interface, but the nested type is not an interface.</span></span>  
  
<span data-ttu-id="fed4f-516">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-516">-or-</span></span> 
<span data-ttu-id="fed4f-517">Długość <paramref name="name" /> jest równa zero lub większa niż 1023.</span><span class="sxs-lookup"><span data-stu-id="fed4f-517">The length of <paramref name="name" /> is zero or greater than 1023.</span></span>  
  
<span data-ttu-id="fed4f-518">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-518">-or-</span></span> 
<span data-ttu-id="fed4f-519">Ta operacja spowoduje utworzenie typu z duplikatem <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> w bieżącym zestawie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-519">This operation would create a type with a duplicate <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> in the current assembly.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-520"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-520"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineNestedType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr, Type parent, int typeSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineNestedType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, int32 typeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineNestedType (name As String, attr As TypeAttributes, parent As Type, typeSize As Integer) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineNestedType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, int typeSize);" />
      <MemberSignature Language="F#" Value="member this.DefineNestedType : string * System.Reflection.TypeAttributes * Type * int -&gt; System.Reflection.Emit.TypeBuilder" Usage="typeBuilder.DefineNestedType (name, attr, parent, typeSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="typeSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-521">Krótka nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-521">The short name of the type.</span></span> <span data-ttu-id="fed4f-522"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-522"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="fed4f-523">Atrybuty typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-523">The attributes of the type.</span></span></param>
        <param name="parent"><span data-ttu-id="fed4f-524">Typ, który rozszerza typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-524">The type that the nested type extends.</span></span></param>
        <param name="typeSize"><span data-ttu-id="fed4f-525">Łączny rozmiar typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-525">The total size of the type.</span></span></param>
        <summary><span data-ttu-id="fed4f-526">Definiuje typ zagnieżdżony, uwzględniając jego nazwę, atrybuty, łączny rozmiar typu i typ, który rozszerza.</span><span class="sxs-lookup"><span data-stu-id="fed4f-526">Defines a nested type, given its name, attributes, the total size of the type, and the type that it extends.</span></span></summary>
        <returns><span data-ttu-id="fed4f-527">Zdefiniowany typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-527">The defined nested type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-528">Ta metoda może służyć do tworzenia zagnieżdżonych typów nawet po <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> wywołaniu metody w typie otaczającym.</span><span class="sxs-lookup"><span data-stu-id="fed4f-528">This method can be used to create nested types even after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method has been called on the enclosing type.</span></span>  
  
 <span data-ttu-id="fed4f-529">Zagnieżdżony typ musi być zakończony, aby można było go odzwierciedlić przy <xref:System.Type.GetMembers%2A>użyciu <xref:System.Type.GetNestedType%2A>, lub <xref:System.Type.GetNestedTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed4f-529">The nested type needs to be complete before you can reflect on it using <xref:System.Type.GetMembers%2A>, <xref:System.Type.GetNestedType%2A>, or <xref:System.Type.GetNestedTypes%2A>.</span></span>  
  
 <span data-ttu-id="fed4f-530">Zobacz opis <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> kolejności, w której typy zagnieżdżone i typy zagnieżdżania mają zostać ukończone.</span><span class="sxs-lookup"><span data-stu-id="fed4f-530">See the description of <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> for the order in which nested types and nesting types should be completed.</span></span>  
  
 <span data-ttu-id="fed4f-531">Zduplikowana nazwa nie musi być tworzona, `name` jeśli jest taka sama jak nazwa wcześniej zdefiniowanego typu lub typu zagnieżdżonego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-531">A duplicate name is not necessarily created if `name` is identical to the name of a previously defined type or nested type.</span></span> <span data-ttu-id="fed4f-532">Aby można było duplikować, pełne nazwy muszą być takie same, włącznie z przestrzenią nazw i wszystkimi typami zagnieżdżenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-532">To be duplicates, the full names must be the same, including the namespace and all nesting types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-533">Atrybut zagnieżdżony nie został określony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-533">The nested attribute is not specified.</span></span>  
  
<span data-ttu-id="fed4f-534">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-534">-or-</span></span> 
<span data-ttu-id="fed4f-535">Ten typ jest zapieczętowany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-535">This type is sealed.</span></span>  
  
<span data-ttu-id="fed4f-536">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-536">-or-</span></span> 
<span data-ttu-id="fed4f-537">Ten typ jest tablicą.</span><span class="sxs-lookup"><span data-stu-id="fed4f-537">This type is an array.</span></span>  
  
<span data-ttu-id="fed4f-538">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-538">-or-</span></span> 
<span data-ttu-id="fed4f-539">Ten typ jest interfejsem, ale zagnieżdżony typ nie jest interfejsem.</span><span class="sxs-lookup"><span data-stu-id="fed4f-539">This type is an interface, but the nested type is not an interface.</span></span>  
  
<span data-ttu-id="fed4f-540">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-540">-or-</span></span> 
<span data-ttu-id="fed4f-541">Długość <paramref name="name" /> jest równa zero lub większa niż 1023.</span><span class="sxs-lookup"><span data-stu-id="fed4f-541">The length of <paramref name="name" /> is zero or greater than 1023.</span></span>  
  
<span data-ttu-id="fed4f-542">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-542">-or-</span></span> 
<span data-ttu-id="fed4f-543">Ta operacja spowoduje utworzenie typu z duplikatem <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> w bieżącym zestawie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-543">This operation would create a type with a duplicate <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> in the current assembly.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-544"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-544"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineNestedType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineNestedType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, valuetype System.Reflection.Emit.PackingSize packSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineNestedType (name As String, attr As TypeAttributes, parent As Type, packSize As PackingSize) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineNestedType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, System::Reflection::Emit::PackingSize packSize);" />
      <MemberSignature Language="F#" Value="member this.DefineNestedType : string * System.Reflection.TypeAttributes * Type * System.Reflection.Emit.PackingSize -&gt; System.Reflection.Emit.TypeBuilder" Usage="typeBuilder.DefineNestedType (name, attr, parent, packSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="packSize" Type="System.Reflection.Emit.PackingSize" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-545">Krótka nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-545">The short name of the type.</span></span> <span data-ttu-id="fed4f-546"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-546"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="fed4f-547">Atrybuty typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-547">The attributes of the type.</span></span></param>
        <param name="parent"><span data-ttu-id="fed4f-548">Typ, który rozszerza typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-548">The type that the nested type extends.</span></span></param>
        <param name="packSize"><span data-ttu-id="fed4f-549">Rozmiar opakowania typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-549">The packing size of the type.</span></span></param>
        <summary><span data-ttu-id="fed4f-550">Definiuje typ zagnieżdżony, uwzględniając jego nazwę, atrybuty, typ, który rozszerza, oraz rozmiar pakowania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-550">Defines a nested type, given its name, attributes, the type that it extends, and the packing size.</span></span></summary>
        <returns><span data-ttu-id="fed4f-551">Zdefiniowany typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-551">The defined nested type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-552">Ta metoda może służyć do tworzenia zagnieżdżonych typów nawet po <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> wywołaniu metody w typie otaczającym.</span><span class="sxs-lookup"><span data-stu-id="fed4f-552">This method can be used to create nested types even after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method has been called on the enclosing type.</span></span>  
  
 <span data-ttu-id="fed4f-553">Zagnieżdżony typ musi być zakończony, aby można było go odzwierciedlić przy <xref:System.Type.GetMembers%2A>użyciu <xref:System.Type.GetNestedType%2A>, lub <xref:System.Type.GetNestedTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed4f-553">The nested type needs to be complete before you can reflect on it using <xref:System.Type.GetMembers%2A>, <xref:System.Type.GetNestedType%2A>, or <xref:System.Type.GetNestedTypes%2A>.</span></span>  
  
 <span data-ttu-id="fed4f-554">Zobacz opis <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> kolejności, w której typy zagnieżdżone i typy zagnieżdżania mają zostać ukończone.</span><span class="sxs-lookup"><span data-stu-id="fed4f-554">See the description of <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> for the order in which nested types and nesting types should be completed.</span></span>  
  
 <span data-ttu-id="fed4f-555">Zduplikowana nazwa nie musi być tworzona, `name` jeśli jest taka sama jak nazwa wcześniej zdefiniowanego typu lub typu zagnieżdżonego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-555">A duplicate name is not necessarily created if `name` is identical to the name of a previously defined type or nested type.</span></span> <span data-ttu-id="fed4f-556">Aby można było duplikować, pełne nazwy muszą być takie same, włącznie z przestrzenią nazw i wszystkimi typami zagnieżdżenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-556">To be duplicates, the full names must be the same, including the namespace and all nesting types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-557">Atrybut zagnieżdżony nie został określony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-557">The nested attribute is not specified.</span></span>  
  
<span data-ttu-id="fed4f-558">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-558">-or-</span></span> 
<span data-ttu-id="fed4f-559">Ten typ jest zapieczętowany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-559">This type is sealed.</span></span>  
  
<span data-ttu-id="fed4f-560">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-560">-or-</span></span> 
<span data-ttu-id="fed4f-561">Ten typ jest tablicą.</span><span class="sxs-lookup"><span data-stu-id="fed4f-561">This type is an array.</span></span>  
  
<span data-ttu-id="fed4f-562">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-562">-or-</span></span> 
<span data-ttu-id="fed4f-563">Ten typ jest interfejsem, ale zagnieżdżony typ nie jest interfejsem.</span><span class="sxs-lookup"><span data-stu-id="fed4f-563">This type is an interface, but the nested type is not an interface.</span></span>  
  
<span data-ttu-id="fed4f-564">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-564">-or-</span></span> 
<span data-ttu-id="fed4f-565">Długość <paramref name="name" /> jest równa zero lub większa niż 1023.</span><span class="sxs-lookup"><span data-stu-id="fed4f-565">The length of <paramref name="name" /> is zero or greater than 1023.</span></span>  
  
<span data-ttu-id="fed4f-566">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-566">-or-</span></span> 
<span data-ttu-id="fed4f-567">Ta operacja spowoduje utworzenie typu z duplikatem <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> w bieżącym zestawie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-567">This operation would create a type with a duplicate <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> in the current assembly.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-568"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-568"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineNestedType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr, Type parent, Type[] interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineNestedType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, class System.Type[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineNestedType (name As String, attr As TypeAttributes, parent As Type, interfaces As Type()) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineNestedType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, cli::array &lt;Type ^&gt; ^ interfaces);" />
      <MemberSignature Language="F#" Value="member this.DefineNestedType : string * System.Reflection.TypeAttributes * Type * Type[] -&gt; System.Reflection.Emit.TypeBuilder" Usage="typeBuilder.DefineNestedType (name, attr, parent, interfaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="interfaces" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-569">Krótka nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-569">The short name of the type.</span></span> <span data-ttu-id="fed4f-570"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-570"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="fed4f-571">Atrybuty typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-571">The attributes of the type.</span></span></param>
        <param name="parent"><span data-ttu-id="fed4f-572">Typ, który rozszerza typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-572">The type that the nested type extends.</span></span></param>
        <param name="interfaces"><span data-ttu-id="fed4f-573">Interfejsy implementowane przez zagnieżdżony typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-573">The interfaces that the nested type implements.</span></span></param>
        <summary><span data-ttu-id="fed4f-574">Definiuje typ zagnieżdżony, z uwzględnieniem jego nazwy, atrybutów, typu, który rozszerza, i interfejsów, które implementuje.</span><span class="sxs-lookup"><span data-stu-id="fed4f-574">Defines a nested type, given its name, attributes, the type that it extends, and the interfaces that it implements.</span></span></summary>
        <returns><span data-ttu-id="fed4f-575">Zdefiniowany typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-575">The defined nested type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-576">Ta metoda może służyć do tworzenia zagnieżdżonych typów nawet po <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> wywołaniu metody w typie otaczającym.</span><span class="sxs-lookup"><span data-stu-id="fed4f-576">This method can be used to create nested types even after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method has been called on the enclosing type.</span></span>  
  
 <span data-ttu-id="fed4f-577">Zagnieżdżony typ musi być zakończony, aby można było go odzwierciedlić przy <xref:System.Type.GetMembers%2A>użyciu <xref:System.Type.GetNestedType%2A>, lub <xref:System.Type.GetNestedTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed4f-577">The nested type needs to be complete before you can reflect on it using <xref:System.Type.GetMembers%2A>, <xref:System.Type.GetNestedType%2A>, or <xref:System.Type.GetNestedTypes%2A>.</span></span>  
  
 <span data-ttu-id="fed4f-578">Zobacz opis <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> kolejności, w której typy zagnieżdżone i typy zagnieżdżania mają zostać ukończone.</span><span class="sxs-lookup"><span data-stu-id="fed4f-578">See the description of <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> for the order in which nested types and nesting types should be completed.</span></span>  
  
 <span data-ttu-id="fed4f-579">Zduplikowana nazwa nie musi być tworzona, `name` jeśli jest taka sama jak nazwa wcześniej zdefiniowanego typu lub typu zagnieżdżonego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-579">A duplicate name is not necessarily created if `name` is identical to the name of a previously defined type or nested type.</span></span> <span data-ttu-id="fed4f-580">Aby można było duplikować, pełne nazwy muszą być takie same, włącznie z przestrzenią nazw i wszystkimi typami zagnieżdżenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-580">To be duplicates, the full names must be the same, including the namespace and all nesting types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-581">Atrybut zagnieżdżony nie został określony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-581">The nested attribute is not specified.</span></span>  
  
<span data-ttu-id="fed4f-582">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-582">-or-</span></span> 
<span data-ttu-id="fed4f-583">Ten typ jest zapieczętowany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-583">This type is sealed.</span></span>  
  
<span data-ttu-id="fed4f-584">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-584">-or-</span></span> 
<span data-ttu-id="fed4f-585">Ten typ jest tablicą.</span><span class="sxs-lookup"><span data-stu-id="fed4f-585">This type is an array.</span></span>  
  
<span data-ttu-id="fed4f-586">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-586">-or-</span></span> 
<span data-ttu-id="fed4f-587">Ten typ jest interfejsem, ale zagnieżdżony typ nie jest interfejsem.</span><span class="sxs-lookup"><span data-stu-id="fed4f-587">This type is an interface, but the nested type is not an interface.</span></span>  
  
<span data-ttu-id="fed4f-588">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-588">-or-</span></span> 
<span data-ttu-id="fed4f-589">Długość <paramref name="name" /> jest równa zero lub większa niż 1023.</span><span class="sxs-lookup"><span data-stu-id="fed4f-589">The length of <paramref name="name" /> is zero or greater than 1023.</span></span>  
  
<span data-ttu-id="fed4f-590">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-590">-or-</span></span> 
<span data-ttu-id="fed4f-591">Ta operacja spowoduje utworzenie typu z duplikatem <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> w bieżącym zestawie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-591">This operation would create a type with a duplicate <see cref="P:System.Reflection.Emit.TypeBuilder.FullName" /> in the current assembly.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-592"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-592"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fed4f-593">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-593">-or-</span></span> 
<span data-ttu-id="fed4f-594">Element <paramref name="interfaces" /> tablicy to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-594">An element of the <paramref name="interfaces" /> array is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineNestedType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineNestedType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packSize, int typeSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineNestedType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, valuetype System.Reflection.Emit.PackingSize packSize, int32 typeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineNestedType (name As String, attr As TypeAttributes, parent As Type, packSize As PackingSize, typeSize As Integer) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineNestedType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, System::Reflection::Emit::PackingSize packSize, int typeSize);" />
      <MemberSignature Language="F#" Value="member this.DefineNestedType : string * System.Reflection.TypeAttributes * Type * System.Reflection.Emit.PackingSize * int -&gt; System.Reflection.Emit.TypeBuilder" Usage="typeBuilder.DefineNestedType (name, attr, parent, packSize, typeSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parent" Type="System.Type" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="packSize" Type="System.Reflection.Emit.PackingSize" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeSize" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-595">Krótka nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-595">The short name of the type.</span></span> <span data-ttu-id="fed4f-596"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-596"><paramref name="name" /> cannot contain embedded null values.</span></span></param>
        <param name="attr"><span data-ttu-id="fed4f-597">Atrybuty typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-597">The attributes of the type.</span></span></param>
        <param name="parent"><span data-ttu-id="fed4f-598">Typ, który rozszerza typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-598">The type that the nested type extends.</span></span></param>
        <param name="packSize"><span data-ttu-id="fed4f-599">Rozmiar opakowania typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-599">The packing size of the type.</span></span></param>
        <param name="typeSize"><span data-ttu-id="fed4f-600">Łączny rozmiar typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-600">The total size of the type.</span></span></param>
        <summary><span data-ttu-id="fed4f-601">Definiuje typ zagnieżdżony, uwzględniając jego nazwę, atrybuty, rozmiar i typ, który rozszerza.</span><span class="sxs-lookup"><span data-stu-id="fed4f-601">Defines a nested type, given its name, attributes, size, and the type that it extends.</span></span></summary>
        <returns><span data-ttu-id="fed4f-602">Zdefiniowany typ zagnieżdżony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-602">The defined nested type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefinePInvokeMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-603"><see langword="PInvoke" /> Definiuje metodę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-603">Defines a <see langword="PInvoke" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefinePInvokeMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefinePInvokeMethod(string name, string dllName, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, valuetype System.Runtime.InteropServices.CallingConvention nativeCallConv, valuetype System.Runtime.InteropServices.CharSet nativeCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefinePInvokeMethod(System::String ^ name, System::String ^ dllName, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Runtime::InteropServices::CallingConvention nativeCallConv, System::Runtime::InteropServices::CharSet nativeCharSet);" />
      <MemberSignature Language="F#" Value="member this.DefinePInvokeMethod : string * string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * System.Runtime.InteropServices.CallingConvention * System.Runtime.InteropServices.CharSet -&gt; System.Reflection.Emit.MethodBuilder" Usage="typeBuilder.DefinePInvokeMethod (name, dllName, attributes, callingConvention, returnType, parameterTypes, nativeCallConv, nativeCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dllName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="4" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="5" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" Index="6" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" Index="7" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-604">Nazwa <see langword="PInvoke" /> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-604">The name of the <see langword="PInvoke" /> method.</span></span> <span data-ttu-id="fed4f-605"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-605"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="dllName"><span data-ttu-id="fed4f-606">Nazwa biblioteki DLL, w której <see langword="PInvoke" /> jest zdefiniowana Metoda.</span><span class="sxs-lookup"><span data-stu-id="fed4f-606">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-607">Atrybuty metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-607">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="fed4f-608">Konwencja wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-608">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="fed4f-609">Zwracany typ metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-609">The method's return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-610">Typy parametrów metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-610">The types of the method's parameters.</span></span></param>
        <param name="nativeCallConv"><span data-ttu-id="fed4f-611">Natywna Konwencja wywoływania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-611">The native calling convention.</span></span></param>
        <param name="nativeCharSet"><span data-ttu-id="fed4f-612">Natywny zestaw znaków metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-612">The method's native character set.</span></span></param>
        <summary><span data-ttu-id="fed4f-613">Definiuje metodę, która ma nazwę, nazwę biblioteki DLL, w której jest zdefiniowana Metoda, atrybuty metody, konwencję wywoływania metody, zwracany typ metody, typy parametrów metody <see langword="PInvoke" /> i flagi... <see langword="PInvoke" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-613">Defines a <see langword="PInvoke" /> method given its name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span></span></summary>
        <returns><span data-ttu-id="fed4f-614">Zdefiniowana <see langword="PInvoke" /> Metoda.</span><span class="sxs-lookup"><span data-stu-id="fed4f-614">The defined <see langword="PInvoke" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-615">Nie można określić niektórych atrybutów importu biblioteki DLL ( <xref:System.Runtime.InteropServices.DllImportAttribute>Zobacz opis) jako argumentów tej metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-615">Some DLL import attributes (see the description of <xref:System.Runtime.InteropServices.DllImportAttribute>) cannot be specified as arguments to this method.</span></span> <span data-ttu-id="fed4f-616">Na przykład, atrybut <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> import dll należy dodać `PInvoke` po utworzeniu metody, jeśli metoda zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-616">For example, the DLL import attribute <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> must be added after the `PInvoke` method is created, if the method returns a value.</span></span> <span data-ttu-id="fed4f-617">W przykładzie pokazano, jak to zrobić.</span><span class="sxs-lookup"><span data-stu-id="fed4f-617">The example shows how to do this.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-618">Poniższy <xref:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod%2A> przykład ilustruje sposób użycia metody do `PInvoke` tworzenia metody <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> i dodawania flagi do flag implementacji metody <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> po utworzeniu <xref:System.Reflection.Emit.MethodBuilder>, przy użyciu i <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType>metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-618">The following example demonstrates how to use the <xref:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod%2A> method to create a `PInvoke` method, and how to add the <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> flag to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fed4f-619">Aby uzyskać wartość zwracaną różną od zera, należy dodać <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> flagę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-619">To get a non-zero return value, you must add the <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="fed4f-620">Przykład tworzy dynamiczny zestaw z jednym modułem dynamicznym i pojedynczym typem, `MyType`który `PInvoke` zawiera metodę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-620">The example creates a dynamic assembly with one dynamic module and a single type, `MyType`, that contains the `PInvoke` method.</span></span> <span data-ttu-id="fed4f-621">Metoda reprezentuje funkcję Win32 `GetTickCount`. `PInvoke`</span><span class="sxs-lookup"><span data-stu-id="fed4f-621">The `PInvoke` method represents the Win32 `GetTickCount` function.</span></span>  
  
 <span data-ttu-id="fed4f-622">Po uruchomieniu przykładu jest wykonywana `PInvoke` Metoda.</span><span class="sxs-lookup"><span data-stu-id="fed4f-622">When the example is run, it executes the `PInvoke` method.</span></span> <span data-ttu-id="fed4f-623">Zapisuje również dynamiczny zestaw jako PInvokeTest. dll.</span><span class="sxs-lookup"><span data-stu-id="fed4f-623">It also saves the dynamic assembly as PInvokeTest.dll.</span></span> <span data-ttu-id="fed4f-624">Można użyć [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) do sprawdzenia `MyType` klasy i `static` metody (`Shared` w Visual Basic) `PInvoke` , która zawiera.</span><span class="sxs-lookup"><span data-stu-id="fed4f-624">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the `MyType` class and the `static` (`Shared` in Visual Basic) `PInvoke` method it contains.</span></span> <span data-ttu-id="fed4f-625">Można skompilować Visual Basic lub C# program, który używa metody statycznej `MyType.GetTickCount` przez dołączenie odwołania do biblioteki dll podczas uruchamiania CSC. exe lub VBC. exe `/r:PInvokeTest.dll`; na przykład.</span><span class="sxs-lookup"><span data-stu-id="fed4f-625">You can compile a Visual Basic or C# program that uses the static `MyType.GetTickCount` method by including a reference to the DLL when you run csc.exe or vbc.exe; for example, `/r:PInvokeTest.dll`.</span></span>  
  
 [!code-cpp[TypeBuilder_DefinePInvokeMethod_Fix#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder_DefinePInvokeMethod_Fix/cpp/100656_fix.cpp#1)]
 [!code-csharp[TypeBuilder_DefinePInvokeMethod_Fix#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder_DefinePInvokeMethod_Fix/CS/100656_fix.cs#1)]
 [!code-vb[TypeBuilder_DefinePInvokeMethod_Fix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder_DefinePInvokeMethod_Fix/VB/100656_fix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-626">Metoda nie jest statyczna.</span><span class="sxs-lookup"><span data-stu-id="fed4f-626">The method is not static.</span></span>  
  
<span data-ttu-id="fed4f-627">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-627">-or-</span></span> 
<span data-ttu-id="fed4f-628">Typ nadrzędny jest interfejsem.</span><span class="sxs-lookup"><span data-stu-id="fed4f-628">The parent type is an interface.</span></span>  
  
<span data-ttu-id="fed4f-629">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-629">-or-</span></span> 
<span data-ttu-id="fed4f-630">Metoda jest abstrakcyjna.</span><span class="sxs-lookup"><span data-stu-id="fed4f-630">The method is abstract.</span></span>  
  
<span data-ttu-id="fed4f-631">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-631">-or-</span></span> 
<span data-ttu-id="fed4f-632">Metoda została wcześniej zdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-632">The method was previously defined.</span></span>  
  
<span data-ttu-id="fed4f-633">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-633">-or-</span></span> 
<span data-ttu-id="fed4f-634">Długość <paramref name="name" /> lub<paramref name="dllName" /> równa zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-634">The length of <paramref name="name" /> or <paramref name="dllName" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-635"><paramref name="name" />lub <paramref name="dllName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-635"><paramref name="name" /> or <paramref name="dllName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-636">Typ zawierający został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-636">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefinePInvokeMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, string entryName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefinePInvokeMethod(string name, string dllName, string entryName, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, valuetype System.Runtime.InteropServices.CallingConvention nativeCallConv, valuetype System.Runtime.InteropServices.CharSet nativeCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefinePInvokeMethod(System::String ^ name, System::String ^ dllName, System::String ^ entryName, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Runtime::InteropServices::CallingConvention nativeCallConv, System::Runtime::InteropServices::CharSet nativeCharSet);" />
      <MemberSignature Language="F#" Value="member this.DefinePInvokeMethod : string * string * string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * System.Runtime.InteropServices.CallingConvention * System.Runtime.InteropServices.CharSet -&gt; System.Reflection.Emit.MethodBuilder" Usage="typeBuilder.DefinePInvokeMethod (name, dllName, entryName, attributes, callingConvention, returnType, parameterTypes, nativeCallConv, nativeCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dllName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="entryName" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="3" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="4" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="5" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="6" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" Index="7" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" Index="8" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-637">Nazwa <see langword="PInvoke" /> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-637">The name of the <see langword="PInvoke" /> method.</span></span> <span data-ttu-id="fed4f-638"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-638"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="dllName"><span data-ttu-id="fed4f-639">Nazwa biblioteki DLL, w której <see langword="PInvoke" /> jest zdefiniowana Metoda.</span><span class="sxs-lookup"><span data-stu-id="fed4f-639">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span></span></param>
        <param name="entryName"><span data-ttu-id="fed4f-640">Nazwa punktu wejścia w bibliotece DLL.</span><span class="sxs-lookup"><span data-stu-id="fed4f-640">The name of the entry point in the DLL.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-641">Atrybuty metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-641">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="fed4f-642">Konwencja wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-642">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="fed4f-643">Zwracany typ metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-643">The method's return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-644">Typy parametrów metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-644">The types of the method's parameters.</span></span></param>
        <param name="nativeCallConv"><span data-ttu-id="fed4f-645">Natywna Konwencja wywoływania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-645">The native calling convention.</span></span></param>
        <param name="nativeCharSet"><span data-ttu-id="fed4f-646">Natywny zestaw znaków metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-646">The method's native character set.</span></span></param>
        <summary><span data-ttu-id="fed4f-647"><see langword="PInvoke" /> Definiuje metodę, która ma nazwę, nazwę biblioteki DLL, w której jest zdefiniowana Metoda, nazwę punktu wejścia, atrybuty metody, konwencję wywoływania metody, zwracany typ metody, typy parametrów metody. i <see langword="PInvoke" /> flagi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-647">Defines a <see langword="PInvoke" /> method given its name, the name of the DLL in which the method is defined, the name of the entry point, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span></span></summary>
        <returns><span data-ttu-id="fed4f-648">Zdefiniowana <see langword="PInvoke" /> Metoda.</span><span class="sxs-lookup"><span data-stu-id="fed4f-648">The defined <see langword="PInvoke" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-649">Nie można określić niektórych atrybutów importu biblioteki DLL ( <xref:System.Runtime.InteropServices.DllImportAttribute>Zobacz opis) jako argumentów tej metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-649">Some DLL import attributes (see the description of <xref:System.Runtime.InteropServices.DllImportAttribute>) cannot be specified as arguments to this method.</span></span> <span data-ttu-id="fed4f-650">Na przykład, atrybut <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> import dll należy dodać `PInvoke` po utworzeniu metody, jeśli metoda zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-650">For example, the DLL import attribute <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> must be added after the `PInvoke` method is created, if the method returns a value.</span></span> <span data-ttu-id="fed4f-651">W przykładzie pokazano, jak to zrobić.</span><span class="sxs-lookup"><span data-stu-id="fed4f-651">The example shows how to do this.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-652">Poniższy przykład kodu demonstruje, jak za pomocą <xref:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod%2A> metody `PInvoke` utworzyć metodę <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> i jak dodać flagę do flag implementacji metody <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> po utworzeniu <xref:System.Reflection.Emit.MethodBuilder>, za pomocą i <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-652">The following code example demonstrates how to use the <xref:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod%2A> method to create a `PInvoke` method, and how to add the <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> flag to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fed4f-653">Aby uzyskać wartość zwracaną różną od zera, należy dodać <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> flagę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-653">To get a non-zero return value, you must add the <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="fed4f-654">Przykład tworzy dynamiczny zestaw z jednym modułem dynamicznym i pojedynczym typem, `MyType`który `PInvoke` zawiera metodę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-654">The example creates a dynamic assembly with one dynamic module and a single type, `MyType`, that contains the `PInvoke` method.</span></span> <span data-ttu-id="fed4f-655">Metoda reprezentuje funkcję Win32 `GetTickCount`. `PInvoke`</span><span class="sxs-lookup"><span data-stu-id="fed4f-655">The `PInvoke` method represents the Win32 `GetTickCount` function.</span></span>  
  
 <span data-ttu-id="fed4f-656">Po uruchomieniu przykładu jest wykonywana `PInvoke` Metoda.</span><span class="sxs-lookup"><span data-stu-id="fed4f-656">When the example is run, it executes the `PInvoke` method.</span></span> <span data-ttu-id="fed4f-657">Zapisuje również dynamiczny zestaw jako PInvokeTest. dll.</span><span class="sxs-lookup"><span data-stu-id="fed4f-657">It also saves the dynamic assembly as PInvokeTest.dll.</span></span> <span data-ttu-id="fed4f-658">Można użyć [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) do sprawdzenia `MyType` klasy i `static` metody (`Shared` w Visual Basic) `PInvoke` , która zawiera.</span><span class="sxs-lookup"><span data-stu-id="fed4f-658">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the `MyType` class and the `static` (`Shared` in Visual Basic) `PInvoke` method it contains.</span></span> <span data-ttu-id="fed4f-659">Można skompilować Visual Basic lub C# program, który używa metody statycznej `MyType.GetTickCount` przez dołączenie odwołania do biblioteki dll podczas uruchamiania CSC. exe lub VBC. exe `/r:PInvokeTest.dll`; na przykład.</span><span class="sxs-lookup"><span data-stu-id="fed4f-659">You can compile a Visual Basic or C# program that uses the static `MyType.GetTickCount` method by including a reference to the DLL when you run csc.exe or vbc.exe; for example, `/r:PInvokeTest.dll`.</span></span>  
  
 [!code-cpp[TypeBuilder_DefinePInvokeMethod_Fix#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder_DefinePInvokeMethod_Fix/cpp/100656_fix.cpp#1)]
 [!code-csharp[TypeBuilder_DefinePInvokeMethod_Fix#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder_DefinePInvokeMethod_Fix/CS/100656_fix.cs#1)]
 [!code-vb[TypeBuilder_DefinePInvokeMethod_Fix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder_DefinePInvokeMethod_Fix/VB/100656_fix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-660">Metoda nie jest statyczna.</span><span class="sxs-lookup"><span data-stu-id="fed4f-660">The method is not static.</span></span>  
  
<span data-ttu-id="fed4f-661">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-661">-or-</span></span> 
<span data-ttu-id="fed4f-662">Typ nadrzędny jest interfejsem.</span><span class="sxs-lookup"><span data-stu-id="fed4f-662">The parent type is an interface.</span></span>  
  
<span data-ttu-id="fed4f-663">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-663">-or-</span></span> 
<span data-ttu-id="fed4f-664">Metoda jest abstrakcyjna.</span><span class="sxs-lookup"><span data-stu-id="fed4f-664">The method is abstract.</span></span>  
  
<span data-ttu-id="fed4f-665">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-665">-or-</span></span> 
<span data-ttu-id="fed4f-666">Metoda została wcześniej zdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-666">The method was previously defined.</span></span>  
  
<span data-ttu-id="fed4f-667">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-667">-or-</span></span> 
<span data-ttu-id="fed4f-668">Długość <paramref name="name" />, <paramref name="dllName" />, lub<paramref name="entryName" /> jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-668">The length of <paramref name="name" />, <paramref name="dllName" />, or <paramref name="entryName" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-669"><paramref name="name" />, <paramref name="dllName" />, lub <paramref name="entryName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-669"><paramref name="name" />, <paramref name="dllName" />, or <paramref name="entryName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-670">Typ zawierający został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-670">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefinePInvokeMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, string entryName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefinePInvokeMethod(string name, string dllName, string entryName, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] returnTypeRequiredCustomModifiers, class System.Type[] returnTypeOptionalCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] parameterTypeRequiredCustomModifiers, class System.Type[][] parameterTypeOptionalCustomModifiers, valuetype System.Runtime.InteropServices.CallingConvention nativeCallConv, valuetype System.Runtime.InteropServices.CharSet nativeCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefinePInvokeMethod(System::String ^ name, System::String ^ dllName, System::String ^ entryName, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ returnTypeRequiredCustomModifiers, cli::array &lt;Type ^&gt; ^ returnTypeOptionalCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ parameterTypeRequiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ parameterTypeOptionalCustomModifiers, System::Runtime::InteropServices::CallingConvention nativeCallConv, System::Runtime::InteropServices::CharSet nativeCharSet);" />
      <MemberSignature Language="F#" Value="member this.DefinePInvokeMethod : string * string * string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] * System.Runtime.InteropServices.CallingConvention * System.Runtime.InteropServices.CharSet -&gt; System.Reflection.Emit.MethodBuilder" Usage="typeBuilder.DefinePInvokeMethod (name, dllName, entryName, attributes, callingConvention, returnType, returnTypeRequiredCustomModifiers, returnTypeOptionalCustomModifiers, parameterTypes, parameterTypeRequiredCustomModifiers, parameterTypeOptionalCustomModifiers, nativeCallConv, nativeCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dllName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="entryName" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="5" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Type[]" Index="6" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Type[]" Index="7" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="8" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Type[][]" Index="9" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Type[][]" Index="10" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" Index="11" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" Index="12" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-671">Nazwa <see langword="PInvoke" /> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-671">The name of the <see langword="PInvoke" /> method.</span></span> <span data-ttu-id="fed4f-672"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-672"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="dllName"><span data-ttu-id="fed4f-673">Nazwa biblioteki DLL, w której <see langword="PInvoke" /> jest zdefiniowana Metoda.</span><span class="sxs-lookup"><span data-stu-id="fed4f-673">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span></span></param>
        <param name="entryName"><span data-ttu-id="fed4f-674">Nazwa punktu wejścia w bibliotece DLL.</span><span class="sxs-lookup"><span data-stu-id="fed4f-674">The name of the entry point in the DLL.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-675">Atrybuty metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-675">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="fed4f-676">Konwencja wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-676">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="fed4f-677">Zwracany typ metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-677">The method's return type.</span></span></param>
        <param name="returnTypeRequiredCustomModifiers"><span data-ttu-id="fed4f-678">Tablica typów reprezentująca wymagane Modyfikatory niestandardowe, takie jak <see cref="T:System.Runtime.CompilerServices.IsConst" />, dla zwracanego typu metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-678">An array of types representing the required custom modifiers, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />, for the return type of the method.</span></span> <span data-ttu-id="fed4f-679">Jeśli typ zwracany nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-679">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="returnTypeOptionalCustomModifiers"><span data-ttu-id="fed4f-680">Tablica typów reprezentująca opcjonalne Modyfikatory niestandardowe, takie jak <see cref="T:System.Runtime.CompilerServices.IsConst" />, dla zwracanego typu metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-680">An array of types representing the optional custom modifiers, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />, for the return type of the method.</span></span> <span data-ttu-id="fed4f-681">Jeśli typ zwracany nie ma opcjonalnych modyfikatorów niestandardowych, określ <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-681">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-682">Typy parametrów metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-682">The types of the method's parameters.</span></span></param>
        <param name="parameterTypeRequiredCustomModifiers"><span data-ttu-id="fed4f-683">Tablica tablic typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-683">An array of arrays of types.</span></span> <span data-ttu-id="fed4f-684">Każda tablica typów reprezentuje wymagane Modyfikatory niestandardowe dla odpowiadającego parametru, <see cref="T:System.Runtime.CompilerServices.IsConst" />na przykład.</span><span class="sxs-lookup"><span data-stu-id="fed4f-684">Each array of types represents the required custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="fed4f-685">Jeśli określony parametr nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-685">If a particular parameter has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="fed4f-686">Jeśli żaden z parametrów nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="fed4f-686">If none of the parameters have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="parameterTypeOptionalCustomModifiers"><span data-ttu-id="fed4f-687">Tablica tablic typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-687">An array of arrays of types.</span></span> <span data-ttu-id="fed4f-688">Każda tablica typów reprezentuje opcjonalne Modyfikatory niestandardowe dla odpowiedniego parametru, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-688">Each array of types represents the optional custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="fed4f-689">Jeśli określony parametr nie ma opcjonalnych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-689">If a particular parameter has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="fed4f-690">Jeśli żaden z parametrów nie ma opcjonalnych modyfikatorów niestandardowych, <see langword="null" /> Określ zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="fed4f-690">If none of the parameters have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="nativeCallConv"><span data-ttu-id="fed4f-691">Natywna Konwencja wywoływania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-691">The native calling convention.</span></span></param>
        <param name="nativeCharSet"><span data-ttu-id="fed4f-692">Natywny zestaw znaków metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-692">The method's native character set.</span></span></param>
        <summary><span data-ttu-id="fed4f-693"><see langword="PInvoke" /> Definiuje metodę, która ma nazwę, nazwę biblioteki DLL, w której jest zdefiniowana Metoda, nazwę punktu wejścia, atrybuty metody, konwencję wywoływania metody, zwracany typ metody, typy parametrów metody. <see langword="PInvoke" /> , flagi i Modyfikatory niestandardowe dla parametrów i zwracanego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-693">Defines a <see langword="PInvoke" /> method given its name, the name of the DLL in which the method is defined, the name of the entry point, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, the <see langword="PInvoke" /> flags, and custom modifiers for the parameters and return type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-694">Reprezentujący zdefiniowaną <see langword="PInvoke" />metodę. <see cref="T:System.Reflection.Emit.MethodBuilder" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-694">A <see cref="T:System.Reflection.Emit.MethodBuilder" /> representing the defined <see langword="PInvoke" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-695">Nie można określić niektórych atrybutów importu biblioteki DLL ( <xref:System.Runtime.InteropServices.DllImportAttribute>Zobacz opis) jako argumentów tej metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-695">Some DLL import attributes (see the description of <xref:System.Runtime.InteropServices.DllImportAttribute>) cannot be specified as arguments to this method.</span></span> <span data-ttu-id="fed4f-696">Na przykład, atrybut <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> import dll należy dodać `PInvoke` po utworzeniu metody, jeśli metoda zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-696">For example, the DLL import attribute <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> must be added after the `PInvoke` method is created, if the method returns a value.</span></span> <span data-ttu-id="fed4f-697">W przykładzie pokazano, jak to zrobić.</span><span class="sxs-lookup"><span data-stu-id="fed4f-697">The example shows how to do this.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-698">Aby uzyskać więcej informacji na temat modyfikatorów niestandardowych, zobacz dokumentację dotyczącą metadanych ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="fed4f-698">For more information on custom modifiers, see the ECMA Partition II Metadata documentation.</span></span> <span data-ttu-id="fed4f-699">Dokumentacja jest dostępna w trybie online; Zobacz [standardy C# ECMA i Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) w MSDN i [Standard ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) w międzynarodowej witrynie sieci Web ECMA.</span><span class="sxs-lookup"><span data-stu-id="fed4f-699">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-700">Poniższy przykład kodu ilustruje sposób użycia typu [\], Type\]\[\[,Type\],Type\[ , Type\[\[\]\] linki XREF: System. odbicie. Emituj. TypeBuilder. DefinePInvokeMethod% 2a `PInvoke` > metoda tworzenia metody i sposób dodawania <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> flagi do flag implementacji metody po utworzeniu \] \< przy użyciu metod<xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> i. <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> <xref:System.Reflection.Emit.MethodBuilder></span><span class="sxs-lookup"><span data-stu-id="fed4f-700">The following code example demonstrates how to use the [\], Type\[\], Type\[\], Type\[\]\[\], Type\[\]\<xref:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod%2A> method to create a `PInvoke` method, and how to add the <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> flag to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="fed4f-701">Przykład tworzy dynamiczny zestaw z jednym modułem dynamicznym i pojedynczym typem, `MyType`który `PInvoke` zawiera metodę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-701">The example creates a dynamic assembly with one dynamic module and a single type, `MyType`, that contains the `PInvoke` method.</span></span> <span data-ttu-id="fed4f-702">Metoda reprezentuje funkcję Win32 `GetTickCount`. `PInvoke`</span><span class="sxs-lookup"><span data-stu-id="fed4f-702">The `PInvoke` method represents the Win32 `GetTickCount` function.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fed4f-703">Aby uzyskać wartość zwracaną różną od zera, należy dodać <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> flagę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-703">To get a non-zero return value, you must add the <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> flag.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-704">W przykładzie używane jest Przeciążenie, które nie określa modyfikatorów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-704">The example uses an overload that does not specify custom modifiers.</span></span> <span data-ttu-id="fed4f-705">Aby określić Modyfikatory niestandardowe, należy zmienić przykładowy kod, aby użyć tego przeciążenia metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-705">To specify custom modifiers, change the example code to use this method overload instead.</span></span>  
  
 <span data-ttu-id="fed4f-706">Po uruchomieniu przykładu jest wykonywana `PInvoke` Metoda.</span><span class="sxs-lookup"><span data-stu-id="fed4f-706">When the example is run, it executes the `PInvoke` method.</span></span> <span data-ttu-id="fed4f-707">Zapisuje również dynamiczny zestaw jako PInvokeTest. dll.</span><span class="sxs-lookup"><span data-stu-id="fed4f-707">It also saves the dynamic assembly as PInvokeTest.dll.</span></span> <span data-ttu-id="fed4f-708">Można użyć [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) do sprawdzenia `MyType` klasy i `static` metody (`Shared` w Visual Basic) `PInvoke` , która zawiera.</span><span class="sxs-lookup"><span data-stu-id="fed4f-708">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the `MyType` class and the `static` (`Shared` in Visual Basic) `PInvoke` method it contains.</span></span> <span data-ttu-id="fed4f-709">Można skompilować Visual Basic lub C# program, który używa metody statycznej `MyType.GetTickCount` przez dołączenie odwołania do biblioteki dll podczas uruchamiania CSC. exe lub VBC. exe `/r:PInvokeTest.dll`; na przykład.</span><span class="sxs-lookup"><span data-stu-id="fed4f-709">You can compile a Visual Basic or C# program that uses the static `MyType.GetTickCount` method by including a reference to the DLL when you run csc.exe or vbc.exe; for example, `/r:PInvokeTest.dll`.</span></span>  
  
 [!code-cpp[TypeBuilder_DefinePInvokeMethod_Fix#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder_DefinePInvokeMethod_Fix/cpp/100656_fix.cpp#1)]
 [!code-csharp[TypeBuilder_DefinePInvokeMethod_Fix#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder_DefinePInvokeMethod_Fix/CS/100656_fix.cs#1)]
 [!code-vb[TypeBuilder_DefinePInvokeMethod_Fix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder_DefinePInvokeMethod_Fix/VB/100656_fix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-710">Metoda nie jest statyczna.</span><span class="sxs-lookup"><span data-stu-id="fed4f-710">The method is not static.</span></span>  
  
<span data-ttu-id="fed4f-711">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-711">-or-</span></span> 
<span data-ttu-id="fed4f-712">Typ nadrzędny jest interfejsem.</span><span class="sxs-lookup"><span data-stu-id="fed4f-712">The parent type is an interface.</span></span>  
  
<span data-ttu-id="fed4f-713">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-713">-or-</span></span> 
<span data-ttu-id="fed4f-714">Metoda jest abstrakcyjna.</span><span class="sxs-lookup"><span data-stu-id="fed4f-714">The method is abstract.</span></span>  
  
<span data-ttu-id="fed4f-715">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-715">-or-</span></span> 
<span data-ttu-id="fed4f-716">Metoda została wcześniej zdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-716">The method was previously defined.</span></span>  
  
<span data-ttu-id="fed4f-717">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-717">-or-</span></span> 
<span data-ttu-id="fed4f-718">Długość <paramref name="name" />, <paramref name="dllName" />, lub<paramref name="entryName" /> jest równa zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-718">The length of <paramref name="name" />, <paramref name="dllName" />, or <paramref name="entryName" /> is zero.</span></span>  
  
<span data-ttu-id="fed4f-719">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-719">-or-</span></span> 
<span data-ttu-id="fed4f-720">Rozmiar <paramref name="parameterTypeRequiredCustomModifiers" /> <paramref name="parameterTypes" />lub <paramref name="parameterTypeOptionalCustomModifiers" /> nie jest równy rozmiarowi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-720">The size of <paramref name="parameterTypeRequiredCustomModifiers" /> or <paramref name="parameterTypeOptionalCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-721"><paramref name="name" />, <paramref name="dllName" />, lub <paramref name="entryName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-721"><paramref name="name" />, <paramref name="dllName" />, or <paramref name="entryName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-722">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-722">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="fed4f-723">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-723">-or-</span></span> 
<span data-ttu-id="fed4f-724">Dla bieżącego typu <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> dynamicznego właściwość jest <see langword="true" />, ale <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> właściwość jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-724">For the current dynamic type, the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineProperty">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-725">Dodaje nową właściwość do typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-725">Adds a new property to the type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.PropertyBuilder DefineProperty (string name, System.Reflection.PropertyAttributes attributes, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.PropertyBuilder DefineProperty(string name, valuetype System.Reflection.PropertyAttributes attributes, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineProperty (name As String, attributes As PropertyAttributes, returnType As Type, parameterTypes As Type()) As PropertyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::PropertyBuilder ^ DefineProperty(System::String ^ name, System::Reflection::PropertyAttributes attributes, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineProperty : string * System.Reflection.PropertyAttributes * Type * Type[] -&gt; System.Reflection.Emit.PropertyBuilder" Usage="typeBuilder.DefineProperty (name, attributes, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.PropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.PropertyAttributes" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-726">Nazwa właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-726">The name of the property.</span></span> <span data-ttu-id="fed4f-727"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-727"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-728">Atrybuty właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-728">The attributes of the property.</span></span></param>
        <param name="returnType"><span data-ttu-id="fed4f-729">Zwracany typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-729">The return type of the property.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-730">Typy parametrów właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-730">The types of the parameters of the property.</span></span></param>
        <summary><span data-ttu-id="fed4f-731">Dodaje nową właściwość do typu z podaną nazwą i podpisem właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-731">Adds a new property to the type, with the given name and property signature.</span></span></summary>
        <returns><span data-ttu-id="fed4f-732">Zdefiniowana właściwość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-732">The defined property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fed4f-733">Poniższy przykład kodu demonstruje, jak zdefiniować Właściwość dynamiczną i uzyskać <xref:System.Reflection.Emit.PropertyBuilder> dla specyfikacji.</span><span class="sxs-lookup"><span data-stu-id="fed4f-733">The following code sample demonstrates how to define a dynamic property and obtain a <xref:System.Reflection.Emit.PropertyBuilder> for specification.</span></span> <span data-ttu-id="fed4f-734">Należy pamiętać, `PropertyBuilder` że element a musi również <xref:System.Reflection.Emit.MethodBuilder>mieć odpowiednie, która będzie zawierała logikę Il dla właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-734">Note that a `PropertyBuilder` must also have a corresponding <xref:System.Reflection.Emit.MethodBuilder>, which will house the IL logic for the property.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-735">Długość <paramref name="name" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-735">The length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-736"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-736"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fed4f-737">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-737">-or-</span></span> 
<span data-ttu-id="fed4f-738">Każdy element <paramref name="parameterTypes" /> tablicy ma <see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-738">Any of the elements of the <paramref name="parameterTypes" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-739">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-739">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.PropertyBuilder DefineProperty (string name, System.Reflection.PropertyAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.PropertyBuilder DefineProperty(string name, valuetype System.Reflection.PropertyAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineProperty (name As String, attributes As PropertyAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As PropertyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::PropertyBuilder ^ DefineProperty(System::String ^ name, System::Reflection::PropertyAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineProperty : string * System.Reflection.PropertyAttributes * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.Emit.PropertyBuilder" Usage="typeBuilder.DefineProperty (name, attributes, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.PropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.PropertyAttributes" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnType" Type="System.Type" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-740">Nazwa właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-740">The name of the property.</span></span> <span data-ttu-id="fed4f-741"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-741"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-742">Atrybuty właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-742">The attributes of the property.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="fed4f-743">Konwencja wywoływania metod dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-743">The calling convention of the property accessors.</span></span></param>
        <param name="returnType"><span data-ttu-id="fed4f-744">Zwracany typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-744">The return type of the property.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-745">Typy parametrów właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-745">The types of the parameters of the property.</span></span></param>
        <summary><span data-ttu-id="fed4f-746">Dodaje nową właściwość do typu z podaną nazwą, atrybutami, konwencją wywoływania i podpisem właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-746">Adds a new property to the type, with the given name, attributes, calling convention, and property signature.</span></span></summary>
        <returns><span data-ttu-id="fed4f-747">Zdefiniowana właściwość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-747">The defined property.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-748">Długość <paramref name="name" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-748">The length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-749"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-749"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fed4f-750">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-750">-or-</span></span> 
<span data-ttu-id="fed4f-751">Każdy element <paramref name="parameterTypes" /> tablicy ma <see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-751">Any of the elements of the <paramref name="parameterTypes" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-752">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-752">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.PropertyBuilder DefineProperty (string name, System.Reflection.PropertyAttributes attributes, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.PropertyBuilder DefineProperty(string name, valuetype System.Reflection.PropertyAttributes attributes, class System.Type returnType, class System.Type[] returnTypeRequiredCustomModifiers, class System.Type[] returnTypeOptionalCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] parameterTypeRequiredCustomModifiers, class System.Type[][] parameterTypeOptionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineProperty (name As String, attributes As PropertyAttributes, returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()()) As PropertyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::PropertyBuilder ^ DefineProperty(System::String ^ name, System::Reflection::PropertyAttributes attributes, Type ^ returnType, cli::array &lt;Type ^&gt; ^ returnTypeRequiredCustomModifiers, cli::array &lt;Type ^&gt; ^ returnTypeOptionalCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ parameterTypeRequiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ parameterTypeOptionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.DefineProperty : string * System.Reflection.PropertyAttributes * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.PropertyBuilder" Usage="typeBuilder.DefineProperty (name, attributes, returnType, returnTypeRequiredCustomModifiers, returnTypeOptionalCustomModifiers, parameterTypes, parameterTypeRequiredCustomModifiers, parameterTypeOptionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.PropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.PropertyAttributes" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnType" Type="System.Type" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Type[]" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Type[]" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Type[][]" Index="6" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Type[][]" Index="7" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-753">Nazwa właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-753">The name of the property.</span></span> <span data-ttu-id="fed4f-754"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-754"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-755">Atrybuty właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-755">The attributes of the property.</span></span></param>
        <param name="returnType"><span data-ttu-id="fed4f-756">Zwracany typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-756">The return type of the property.</span></span></param>
        <param name="returnTypeRequiredCustomModifiers"><span data-ttu-id="fed4f-757">Tablica typów reprezentująca wymagane Modyfikatory niestandardowe, takie jak <see cref="T:System.Runtime.CompilerServices.IsConst" />, dla zwracanego typu właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-757">An array of types representing the required custom modifiers, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />, for the return type of the property.</span></span> <span data-ttu-id="fed4f-758">Jeśli typ zwracany nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-758">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="returnTypeOptionalCustomModifiers"><span data-ttu-id="fed4f-759">Tablica typów reprezentująca opcjonalne Modyfikatory niestandardowe, takie jak <see cref="T:System.Runtime.CompilerServices.IsConst" />, dla zwracanego typu właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-759">An array of types representing the optional custom modifiers, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />, for the return type of the property.</span></span> <span data-ttu-id="fed4f-760">Jeśli typ zwracany nie ma opcjonalnych modyfikatorów niestandardowych, określ <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-760">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-761">Typy parametrów właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-761">The types of the parameters of the property.</span></span></param>
        <param name="parameterTypeRequiredCustomModifiers"><span data-ttu-id="fed4f-762">Tablica tablic typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-762">An array of arrays of types.</span></span> <span data-ttu-id="fed4f-763">Każda tablica typów reprezentuje wymagane Modyfikatory niestandardowe dla odpowiadającego parametru, <see cref="T:System.Runtime.CompilerServices.IsConst" />na przykład.</span><span class="sxs-lookup"><span data-stu-id="fed4f-763">Each array of types represents the required custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="fed4f-764">Jeśli określony parametr nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-764">If a particular parameter has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="fed4f-765">Jeśli żaden z parametrów nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="fed4f-765">If none of the parameters have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="parameterTypeOptionalCustomModifiers"><span data-ttu-id="fed4f-766">Tablica tablic typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-766">An array of arrays of types.</span></span> <span data-ttu-id="fed4f-767">Każda tablica typów reprezentuje opcjonalne Modyfikatory niestandardowe dla odpowiedniego parametru, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-767">Each array of types represents the optional custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="fed4f-768">Jeśli określony parametr nie ma opcjonalnych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-768">If a particular parameter has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="fed4f-769">Jeśli żaden z parametrów nie ma opcjonalnych modyfikatorów niestandardowych, <see langword="null" /> Określ zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="fed4f-769">If none of the parameters have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="fed4f-770">Dodaje nową właściwość do typu o podaną nazwę, podpis właściwości i Modyfikatory niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="fed4f-770">Adds a new property to the type, with the given name, property signature, and custom modifiers.</span></span></summary>
        <returns><span data-ttu-id="fed4f-771">Zdefiniowana właściwość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-771">The defined property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-772">To Przeciążenie zapewnia projektantom zarządzanych kompilatorów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-772">This overload is provided for designers of managed compilers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-773">Aby uzyskać więcej informacji na temat modyfikatorów niestandardowych, zobacz dokumentację dotyczącą metadanych ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="fed4f-773">For more information on custom modifiers, see the ECMA Partition II Metadata documentation.</span></span> <span data-ttu-id="fed4f-774">Dokumentacja jest dostępna w trybie online; Zobacz [standardy C# ECMA i Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) w MSDN i [Standard ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) w międzynarodowej witrynie sieci Web ECMA.</span><span class="sxs-lookup"><span data-stu-id="fed4f-774">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-775">Długość <paramref name="name" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-775">The length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-776"><paramref name="name" />była<see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-776"><paramref name="name" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="fed4f-777">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-777">-or-</span></span> 
<span data-ttu-id="fed4f-778">Każdy element <paramref name="parameterTypes" /> tablicy jest<see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-778">Any of the elements of the <paramref name="parameterTypes" /> array is <see langword="null" /></span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-779">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-779">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.PropertyBuilder DefineProperty (string name, System.Reflection.PropertyAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.PropertyBuilder DefineProperty(string name, valuetype System.Reflection.PropertyAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] returnTypeRequiredCustomModifiers, class System.Type[] returnTypeOptionalCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] parameterTypeRequiredCustomModifiers, class System.Type[][] parameterTypeOptionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineProperty (name As String, attributes As PropertyAttributes, callingConvention As CallingConventions, returnType As Type, returnTypeRequiredCustomModifiers As Type(), returnTypeOptionalCustomModifiers As Type(), parameterTypes As Type(), parameterTypeRequiredCustomModifiers As Type()(), parameterTypeOptionalCustomModifiers As Type()()) As PropertyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::PropertyBuilder ^ DefineProperty(System::String ^ name, System::Reflection::PropertyAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ returnTypeRequiredCustomModifiers, cli::array &lt;Type ^&gt; ^ returnTypeOptionalCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ parameterTypeRequiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ parameterTypeOptionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.DefineProperty : string * System.Reflection.PropertyAttributes * System.Reflection.CallingConventions * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.PropertyBuilder" Usage="typeBuilder.DefineProperty (name, attributes, callingConvention, returnType, returnTypeRequiredCustomModifiers, returnTypeOptionalCustomModifiers, parameterTypes, parameterTypeRequiredCustomModifiers, parameterTypeOptionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.PropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.PropertyAttributes" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnType" Type="System.Type" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Type[]" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Type[]" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypes" Type="System.Type[]" Index="6" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Type[][]" Index="7" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Type[][]" Index="8" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-780">Nazwa właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-780">The name of the property.</span></span> <span data-ttu-id="fed4f-781"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-781"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-782">Atrybuty właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-782">The attributes of the property.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="fed4f-783">Konwencja wywoływania metod dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-783">The calling convention of the property accessors.</span></span></param>
        <param name="returnType"><span data-ttu-id="fed4f-784">Zwracany typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-784">The return type of the property.</span></span></param>
        <param name="returnTypeRequiredCustomModifiers"><span data-ttu-id="fed4f-785">Tablica typów reprezentująca wymagane Modyfikatory niestandardowe, takie jak <see cref="T:System.Runtime.CompilerServices.IsConst" />, dla zwracanego typu właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-785">An array of types representing the required custom modifiers, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />, for the return type of the property.</span></span> <span data-ttu-id="fed4f-786">Jeśli typ zwracany nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-786">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="returnTypeOptionalCustomModifiers"><span data-ttu-id="fed4f-787">Tablica typów reprezentująca opcjonalne Modyfikatory niestandardowe, takie jak <see cref="T:System.Runtime.CompilerServices.IsConst" />, dla zwracanego typu właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-787">An array of types representing the optional custom modifiers, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />, for the return type of the property.</span></span> <span data-ttu-id="fed4f-788">Jeśli typ zwracany nie ma opcjonalnych modyfikatorów niestandardowych, określ <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-788">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="fed4f-789">Typy parametrów właściwości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-789">The types of the parameters of the property.</span></span></param>
        <param name="parameterTypeRequiredCustomModifiers"><span data-ttu-id="fed4f-790">Tablica tablic typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-790">An array of arrays of types.</span></span> <span data-ttu-id="fed4f-791">Każda tablica typów reprezentuje wymagane Modyfikatory niestandardowe dla odpowiadającego parametru, <see cref="T:System.Runtime.CompilerServices.IsConst" />na przykład.</span><span class="sxs-lookup"><span data-stu-id="fed4f-791">Each array of types represents the required custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="fed4f-792">Jeśli określony parametr nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-792">If a particular parameter has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="fed4f-793">Jeśli żaden z parametrów nie ma wymaganych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="fed4f-793">If none of the parameters have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="parameterTypeOptionalCustomModifiers"><span data-ttu-id="fed4f-794">Tablica tablic typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-794">An array of arrays of types.</span></span> <span data-ttu-id="fed4f-795">Każda tablica typów reprezentuje opcjonalne Modyfikatory niestandardowe dla odpowiedniego parametru, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-795">Each array of types represents the optional custom modifiers for the corresponding parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span> <span data-ttu-id="fed4f-796">Jeśli określony parametr nie ma opcjonalnych modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-796">If a particular parameter has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="fed4f-797">Jeśli żaden z parametrów nie ma opcjonalnych modyfikatorów niestandardowych, <see langword="null" /> Określ zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="fed4f-797">If none of the parameters have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="fed4f-798">Dodaje nową właściwość do typu, z podaną nazwą, konwencją wywoływania, podpisem właściwości i modyfikatorami niestandardowymi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-798">Adds a new property to the type, with the given name, calling convention, property signature, and custom modifiers.</span></span></summary>
        <returns><span data-ttu-id="fed4f-799">Zdefiniowana właściwość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-799">The defined property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-800">To Przeciążenie zapewnia projektantom zarządzanych kompilatorów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-800">This overload is provided for designers of managed compilers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-801">Aby uzyskać więcej informacji na temat modyfikatorów niestandardowych, zobacz dokumentację dotyczącą metadanych ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="fed4f-801">For more information on custom modifiers, see the ECMA Partition II Metadata documentation.</span></span> <span data-ttu-id="fed4f-802">Dokumentacja jest dostępna w trybie online; Zobacz [standardy C# ECMA i Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) w MSDN i [Standard ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) w międzynarodowej witrynie sieci Web ECMA.</span><span class="sxs-lookup"><span data-stu-id="fed4f-802">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 <span data-ttu-id="fed4f-803">To Przeciążenie metody zostało wprowadzone w [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] lub później.</span><span class="sxs-lookup"><span data-stu-id="fed4f-803">This method overload is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-804">Długość <paramref name="name" /> wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-804">The length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-805"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-805"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fed4f-806">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-806">-or-</span></span> 
<span data-ttu-id="fed4f-807">Każdy element <paramref name="parameterTypes" /> tablicy ma <see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-807">Any of the elements of the <paramref name="parameterTypes" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-808">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-808">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineTypeInitializer">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ConstructorBuilder DefineTypeInitializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ConstructorBuilder DefineTypeInitializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineTypeInitializer" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineTypeInitializer () As ConstructorBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ConstructorBuilder ^ DefineTypeInitializer();" />
      <MemberSignature Language="F#" Value="member this.DefineTypeInitializer : unit -&gt; System.Reflection.Emit.ConstructorBuilder" Usage="typeBuilder.DefineTypeInitializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ConstructorBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-809">Definiuje inicjator dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-809">Defines the initializer for this type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-810">Zwraca inicjator typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-810">Returns a type initializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-811">Utworzony inicjator jest zawsze publiczny.</span><span class="sxs-lookup"><span data-stu-id="fed4f-811">The initializer created is always public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-812">Poniższy przykład kodu demonstruje sposób tworzenia konstruktora inicjującego za pomocą `DefineTypeInitializer`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-812">The following code sample demonstrates how to create an initialization constructor using `DefineTypeInitializer`.</span></span>  
  
 [!code-cpp[TypeBuilder_Properties1#3](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder_Properties1/CPP/typebuilder_properties.cpp#3)]
 [!code-csharp[TypeBuilder_Properties1#3](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder_Properties1/CS/typebuilder_properties.cs#3)]
 [!code-vb[TypeBuilder_Properties1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder_Properties1/VB/typebuilder_properties.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-813">Typ zawierający został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-813">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineUninitializedData">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineUninitializedData (string name, int size, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineUninitializedData(string name, int32 size, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineUninitializedData (name As String, size As Integer, attributes As FieldAttributes) As FieldBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineUninitializedData(System::String ^ name, int size, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineUninitializedData : string * int * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="typeBuilder.DefineUninitializedData (name, size, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-814">Nazwa używana do odwoływania się do danych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-814">The name used to refer to the data.</span></span> <span data-ttu-id="fed4f-815"><paramref name="name" />nie mogą zawierać osadzonych wartości null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-815"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="size"><span data-ttu-id="fed4f-816">Rozmiar pola danych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-816">The size of the data field.</span></span></param>
        <param name="attributes"><span data-ttu-id="fed4f-817">Atrybuty dla pola.</span><span class="sxs-lookup"><span data-stu-id="fed4f-817">The attributes for the field.</span></span></param>
        <summary><span data-ttu-id="fed4f-818">Definiuje pole niezainicjowane dane w <see langword=".sdata" /> sekcji przenośnego pliku wykonywalnego (PE).</span><span class="sxs-lookup"><span data-stu-id="fed4f-818">Defines an uninitialized data field in the <see langword=".sdata" /> section of the portable executable (PE) file.</span></span></summary>
        <returns><span data-ttu-id="fed4f-819">Pole, w którym można odwoływać się do danych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-819">A field to reference the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-820">Pole utworzone za pomocą tej metody będzie miało `static`wartość, nawet jeśli nie dołączysz `FieldAttributes.Static` go do `attributes` parametru.</span><span class="sxs-lookup"><span data-stu-id="fed4f-820">The field that you create with this method will be `static`, even if you do not include `FieldAttributes.Static` in the `attributes` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-821">Poniższy przykład kodu demonstruje użycie `DefineUninitializedData` programu w celu utworzenia niezainicjowanego pola danych w typie dynamicznym:</span><span class="sxs-lookup"><span data-stu-id="fed4f-821">The following code sample demonstrates the use of `DefineUninitializedData` to create an uninitialized data field in a dynamic type:</span></span>  
  
 [!code-cpp[TypeBuilder_DefineUninitializedData#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeBuilder_DefineUninitializedData/CPP/typebuilder_defineuninitializeddata.cpp#1)]
 [!code-csharp[TypeBuilder_DefineUninitializedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder_DefineUninitializedData/CS/typebuilder_defineuninitializeddata.cs#1)]
 [!code-vb[TypeBuilder_DefineUninitializedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder_DefineUninitializedData/VB/typebuilder_defineuninitializeddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-822"><paramref name="name" /> Długość wynosi zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-822">Length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="fed4f-823">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-823">-or-</span></span> 
 <span data-ttu-id="fed4f-824"><paramref name="size" />jest mniejsza lub równa zero lub większa lub równa 0x003f0000.</span><span class="sxs-lookup"><span data-stu-id="fed4f-824"><paramref name="size" /> is less than or equal to zero, or greater than or equal to 0x003f0000.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-825"><paramref name="name" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-825"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-826">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-826">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.Emit.TypeBuilder.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-827">Pobiera pełną ścieżkę tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-827">Retrieves the full path of this type.</span></span></summary>
        <value><span data-ttu-id="fed4f-828">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-828">Read-only.</span></span> <span data-ttu-id="fed4f-829">Pobiera pełną ścieżkę tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-829">Retrieves the full path of this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-830">Zwracany format to "enclosingTypeFullName + nestedTypeName" dla zagnieżdżonych typów i "typeName" dla typów niezagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-830">The returned format is "enclosingTypeFullName+nestedTypeName" for nested types and "typeName" for non-nested types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericParameterAttributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.GenericParameterAttributes GenericParameterAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.GenericParameterAttributes GenericParameterAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.GenericParameterAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GenericParameterAttributes As GenericParameterAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::GenericParameterAttributes GenericParameterAttributes { System::Reflection::GenericParameterAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.GenericParameterAttributes : System.Reflection.GenericParameterAttributes" Usage="System.Reflection.Emit.TypeBuilder.GenericParameterAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.GenericParameterAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-831">Pobiera wartość wskazującą kowariancję i specjalne ograniczenia bieżącego parametru typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-831">Gets a value that indicates the covariance and special constraints of the current generic type parameter.</span></span></summary>
        <value><span data-ttu-id="fed4f-832">Bitowa kombinacja <see cref="T:System.Reflection.GenericParameterAttributes" /> wartości opisujących kowariancję i specjalne ograniczenia bieżącego parametru typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-832">A bitwise combination of <see cref="T:System.Reflection.GenericParameterAttributes" /> values that describes the covariance and special constraints of the current generic type parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-833">Podczas emitowania kodu, parametr typu ogólnego jest reprezentowany przez <xref:System.Reflection.Emit.GenericTypeParameterBuilder> obiekt, a nie <xref:System.Reflection.Emit.TypeBuilder> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fed4f-833">When emitting code, a generic type parameter is represented by a <xref:System.Reflection.Emit.GenericTypeParameterBuilder> object rather than by a <xref:System.Reflection.Emit.TypeBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericParameterPosition">
      <MemberSignature Language="C#" Value="public override int GenericParameterPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GenericParameterPosition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.GenericParameterPosition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GenericParameterPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GenericParameterPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.GenericParameterPosition : int" Usage="System.Reflection.Emit.TypeBuilder.GenericParameterPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-834">Pobiera pozycję parametru typu z listy parametrów typu dla typu ogólnego, który zadeklaruje parametr.</span><span class="sxs-lookup"><span data-stu-id="fed4f-834">Gets the position of a type parameter in the type parameter list of the generic type that declared the parameter.</span></span></summary>
        <value><span data-ttu-id="fed4f-835">Jeśli bieżący <see cref="T:System.Reflection.Emit.TypeBuilder" /> obiekt reprezentuje parametr typu ogólnego, pozycja parametru typu na liście parametrów typu ogólnego typu, który zadeklaruje parametr; w przeciwnym razie, undefined.</span><span class="sxs-lookup"><span data-stu-id="fed4f-835">If the current <see cref="T:System.Reflection.Emit.TypeBuilder" /> object represents a generic type parameter, the position of the type parameter in the type parameter list of the generic type that declared the parameter; otherwise, undefined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-836">Podczas emitowania kodu, parametr typu ogólnego jest reprezentowany przez <xref:System.Reflection.Emit.GenericTypeParameterBuilder> obiekt, a nie <xref:System.Reflection.Emit.TypeBuilder> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fed4f-836">When emitting code, a generic type parameter is represented by a <xref:System.Reflection.Emit.GenericTypeParameterBuilder> object rather than by a <xref:System.Reflection.Emit.TypeBuilder> object.</span></span>  
  
 <span data-ttu-id="fed4f-837">Jeśli bieżąca <xref:System.Reflection.Emit.TypeBuilder> nie reprezentuje parametru typu ogólnego, wartość tej właściwości jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-837">If the current <xref:System.Reflection.Emit.TypeBuilder> does not represent a generic type parameter, the value of this property is undefined.</span></span> <span data-ttu-id="fed4f-838">Użyj właściwości, aby określić, czy bieżący <xref:System.Reflection.Emit.TypeBuilder> reprezentuje parametr typu ogólnego. <xref:System.Reflection.Emit.TypeBuilder.IsGenericType%2A></span><span class="sxs-lookup"><span data-stu-id="fed4f-838">Use the <xref:System.Reflection.Emit.TypeBuilder.IsGenericType%2A> property to determine whether the current <xref:System.Reflection.Emit.TypeBuilder> represents a generic type parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericTypeArguments">
      <MemberSignature Language="C#" Value="public override Type[] GenericTypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] GenericTypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.GenericTypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GenericTypeArguments As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ GenericTypeArguments { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GenericTypeArguments : Type[]" Usage="System.Reflection.Emit.TypeBuilder.GenericTypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArrayRank">
      <MemberSignature Language="C#" Value="public override int GetArrayRank ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetArrayRank() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetArrayRank () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetArrayRank();" />
      <MemberSignature Language="F#" Value="override this.GetArrayRank : unit -&gt; int" Usage="typeBuilder.GetArrayRank " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeFlagsImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.TypeAttributes GetAttributeFlagsImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Reflection.TypeAttributes GetAttributeFlagsImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetAttributeFlagsImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAttributeFlagsImpl () As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::TypeAttributes GetAttributeFlagsImpl();" />
      <MemberSignature Language="F#" Value="override this.GetAttributeFlagsImpl : unit -&gt; System.Reflection.TypeAttributes" Usage="typeBuilder.GetAttributeFlagsImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public static System.Reflection.ConstructorInfo GetConstructor (Type type, System.Reflection.ConstructorInfo constructor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.ConstructorInfo GetConstructor(class System.Type type, class System.Reflection.ConstructorInfo constructor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type,System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::ConstructorInfo ^ GetConstructor(Type ^ type, System::Reflection::ConstructorInfo ^ constructor);" />
      <MemberSignature Language="F#" Value="static member GetConstructor : Type * System.Reflection.ConstructorInfo -&gt; System.Reflection.ConstructorInfo" Usage="System.Reflection.Emit.TypeBuilder.GetConstructor (type, constructor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fed4f-839">Skonstruowany typ ogólny, którego Konstruktor jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-839">The constructed generic type whose constructor is returned.</span></span></param>
        <param name="constructor"><span data-ttu-id="fed4f-840">Konstruktor w definicji <paramref name="type" />typu ogólnego, który określa <paramref name="type" /> Konstruktor do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-840">A constructor on the generic type definition of <paramref name="type" />, which specifies which constructor of <paramref name="type" /> to return.</span></span></param>
        <summary><span data-ttu-id="fed4f-841">Zwraca Konstruktor określonego konstruowanego typu ogólnego, który odpowiada określonemu konstruktorowi definicji typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-841">Returns the constructor of the specified constructed generic type that corresponds to the specified constructor of the generic type definition.</span></span></summary>
        <returns><span data-ttu-id="fed4f-842">Obiekt, który reprezentuje <paramref name="type" /> konstruktora odpowiadającego <paramref name="constructor" />, który określa <paramref name="type" />konstruktora należącego do definicji typu ogólnego. <see cref="T:System.Reflection.ConstructorInfo" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-842">A <see cref="T:System.Reflection.ConstructorInfo" /> object that represents the constructor of <paramref name="type" /> corresponding to <paramref name="constructor" />, which specifies a constructor belonging to the generic type definition of <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-843">Metoda umożliwia uzyskanie obiektu, który reprezentuje konstruktora konstruowanego typu ogólnego, którego <xref:System.Reflection.Emit.TypeBuilder> definicja typu ogólnego jest reprezentowana przez obiekt. <xref:System.Reflection.ConstructorInfo> <xref:System.Reflection.Emit.TypeBuilder.GetConstructor%2A></span><span class="sxs-lookup"><span data-stu-id="fed4f-843">The <xref:System.Reflection.Emit.TypeBuilder.GetConstructor%2A> method provides a way to get a <xref:System.Reflection.ConstructorInfo> object that represents a constructor of a constructed generic type whose generic type definition is represented by a <xref:System.Reflection.Emit.TypeBuilder> object.</span></span>  
  
 <span data-ttu-id="fed4f-844">Załóżmy <xref:System.Reflection.Emit.TypeBuilder> na przykład, że masz obiekt, który reprezentuje typ `G<T>` w C# `G(Of T)` składni (w Visual Basic, C++ <xref:System.Reflection.Emit.ConstructorBuilder> `generic <T> ref class G` in) i obiekt, który reprezentuje konstruktora `G<T>` .</span><span class="sxs-lookup"><span data-stu-id="fed4f-844">For example, suppose you have a <xref:System.Reflection.Emit.TypeBuilder> object that represents the type `G<T>` in C# syntax (`G(Of T)` in Visual Basic, `generic <T> ref class G` in C++) and a <xref:System.Reflection.Emit.ConstructorBuilder> object that represents a constructor of `G<T>`.</span></span> <span data-ttu-id="fed4f-845">Załóżmy, że `G<T>` ma metodę rodzajową z parametrem `U` typu, który tworzy wystąpienie typu `G<U>`złożonego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-845">Suppose that `G<T>` has a generic method with type parameter `U` that creates an instance of the constructed type `G<U>`.</span></span> <span data-ttu-id="fed4f-846">Aby emitować kod w celu utworzenia wystąpienia typu złożonego, wymagany jest <xref:System.Reflection.ConstructorInfo> obiekt, który reprezentuje konstruktora tego konstruowanego typu — innymi słowy, który tworzy `G<U>`wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-846">In order to emit the code to create an instance of the constructed type, you need a <xref:System.Reflection.ConstructorInfo> object that represents the constructor of this constructed type - in other words, that creates an instance of `G<U>`.</span></span> <span data-ttu-id="fed4f-847">Aby to zrobić, najpierw Wywołaj <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> metodę <xref:System.Reflection.Emit.TypeBuilder> dla obiektu, określając <xref:System.Reflection.Emit.GenericTypeParameterBuilder> obiekt, który reprezentuje `U` jako argument typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-847">To do this, first call the <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> method on the <xref:System.Reflection.Emit.TypeBuilder> object, specifying the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> object that represents `U` as the type argument.</span></span> <span data-ttu-id="fed4f-848">Następnie Wywołaj <xref:System.Reflection.Emit.TypeBuilder.GetConstructor%2A> metodę z wartością <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> zwracaną <xref:System.Reflection.Emit.ConstructorBuilder> metody jako parametr `type` `G<U>` i obiekt, który reprezentuje Konstruktor jako parametr `constructor`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-848">Then call the <xref:System.Reflection.Emit.TypeBuilder.GetConstructor%2A> method with the return value of the <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> method as parameter `type` and the <xref:System.Reflection.Emit.ConstructorBuilder> object that represents the constructor of `G<U>` as parameter `constructor`.</span></span> <span data-ttu-id="fed4f-849">Wartość zwracana jest <xref:System.Reflection.ConstructorInfo> obiektem, który jest wymagany do emisji wywołania funkcji.</span><span class="sxs-lookup"><span data-stu-id="fed4f-849">The return value is the <xref:System.Reflection.ConstructorInfo> object you need to emit the function call.</span></span> <span data-ttu-id="fed4f-850">Przykład kodu demonstruje ten scenariusz.</span><span class="sxs-lookup"><span data-stu-id="fed4f-850">The code example demonstrates this scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-851">Poniższy przykład kodu zawiera kod źródłowy klasy generycznej o nazwie `Sample` , która ma parametr typu o nazwie. `T`</span><span class="sxs-lookup"><span data-stu-id="fed4f-851">The following code example contains source code for a generic class named `Sample` that has a type parameter named `T`.</span></span> <span data-ttu-id="fed4f-852">Klasa ma `Field`pole o nazwie, typu `T`i metodę rodzajową o nazwie `GM` z własnym parametrem typu o nazwie `U`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-852">The class has a field named `Field`, of type `T`, and a generic method named `GM` with its own type parameter, named `U`.</span></span> <span data-ttu-id="fed4f-853">Metoda `GM` tworzy wystąpienie elementu `Sample`, podstawiając jego własny parametr `U` typu dla parametru `Sample`typu i przechowuje jego parametr wejściowy w `Field`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-853">Method `GM` creates an instance of `Sample`, substituting its own type parameter `U` for the type parameter of `Sample`, and stores its input parameter in `Field`.</span></span> <span data-ttu-id="fed4f-854">Ten kod źródłowy jest kompilowany, ale nie jest używany; można go wyświetlić za pomocą [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) i porównać go z kodem emitowanym przez klasę `Example`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-854">This source code is compiled but not used; you can view it with the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) and compare it to the code emitted by class `Example`.</span></span>  
  
 <span data-ttu-id="fed4f-855">Kod w klasie `Example` pokazuje użycie <xref:System.Reflection.Emit.TypeBuilder.GetConstructor%2A> metody do emitowania kodu generycznego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-855">The code in class `Example` demonstrates the use of the <xref:System.Reflection.Emit.TypeBuilder.GetConstructor%2A> method to emit generic code.</span></span> <span data-ttu-id="fed4f-856">`Main` Metoda klasy `Example` tworzy zestaw dynamiczny zawierający `Sample` `T`klasę o nazwie i używa metody,abyuczynićjąogólnąprzezdodanieparametrutypuonazwie.<xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A></span><span class="sxs-lookup"><span data-stu-id="fed4f-856">The `Main` method of class `Example` creates a dynamic assembly containing a class named `Sample` and uses the <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A> method to make it generic by adding a type parameter named `T`.</span></span> <span data-ttu-id="fed4f-857">Konstruktor bez parametrów i pole o nazwie `Field`typu `T`są dodawane do klasy `Sample`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-857">A parameterless constructor and a field named `Field`, of type `T`, are added to class `Sample`.</span></span> <span data-ttu-id="fed4f-858">Metoda `GM` jest dodawana i włączana do metody ogólnej przy <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-858">A method `GM` is added and turned into a generic method by using the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fed4f-859">Parametr `GM` typu ma nazwę `U`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-859">The type parameter of `GM` is named `U`.</span></span> <span data-ttu-id="fed4f-860">Po zdefiniowaniu parametru typu sygnatura `GM` jest dodawana przy <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-860">After the type parameter is defined, the signature of `GM` is added by using the <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fed4f-861">Nie ma żadnego typu zwracanego i nie są wymagane ani modyfikatory niestandardowe, dlatego wszystkie parametry tej metody są `null` z `parameterTypes`wyjątkiem; ustawia typ parametru tylko Metoda na `U`, parametr typu ogólnego metody. `parameterTypes`</span><span class="sxs-lookup"><span data-stu-id="fed4f-861">There is no return type and no required or custom modifiers, so all the parameters of this method are `null` except `parameterTypes`; `parameterTypes` sets the type of the method's only parameter to `U`, the method's generic type parameter.</span></span> <span data-ttu-id="fed4f-862">Treść metody `Sample<U>` tworzy wystąpienie typu złożonego (`Sample(Of U)` w Visual Basic), przypisuje parametr metody do `Field`, a następnie drukuje wartość `Field`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-862">The body of the method creates an instance of the constructed type `Sample<U>` (`Sample(Of U)` in Visual Basic), assigns the method's parameter to `Field`, and then prints the value of `Field`.</span></span> <span data-ttu-id="fed4f-863">Metoda jest używana do <xref:System.Reflection.ConstructorInfo> utworzenia, która reprezentuje Konstruktor bez parametrów <xref:System.Reflection.Emit.OpCodes.Newobj?displayProperty=nameWithType> skonstruowanego typu `Sample<U>` ogólnego w instrukcji, która tworzy wystąpienie. <xref:System.Reflection.Emit.TypeBuilder.GetConstructor%2A></span><span class="sxs-lookup"><span data-stu-id="fed4f-863">The <xref:System.Reflection.Emit.TypeBuilder.GetConstructor%2A> method is used to create a <xref:System.Reflection.ConstructorInfo> that represents the parameterless constructor of the constructed generic type `Sample<U>` in the <xref:System.Reflection.Emit.OpCodes.Newobj?displayProperty=nameWithType> instruction that creates the instance.</span></span>  
  
 <span data-ttu-id="fed4f-864">Typ fikcyjny jest zdefiniowany do przechowywania metody `Main`punktu wejścia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-864">A dummy type is defined to hold the entry-point method `Main`.</span></span> <span data-ttu-id="fed4f-865">W treści `Main`, metoda statyczna <xref:System.String> `Sample<int>` `GM` jest wywoływana na skonstruowanym typie ogólnym (`Sample(Of Integer)` w Visual Basic), z typem zastąpionym przez `U`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-865">In the body of `Main`, the static `GM` method is invoked on the constructed generic type `Sample<int>` (`Sample(Of Integer)` in Visual Basic), with type <xref:System.String> substituted for `U`.</span></span>  
  
 <span data-ttu-id="fed4f-866">Gdy przykładowy kod jest uruchamiany, zapisuje emitowany zestaw jako TypeBuilderGetFieldExample. exe.</span><span class="sxs-lookup"><span data-stu-id="fed4f-866">When the code example is run, it saves the emitted assembly as TypeBuilderGetFieldExample.exe.</span></span> <span data-ttu-id="fed4f-867">Można uruchomić TypeBuilderGetFieldExample. exe i można użyć [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) , aby porównać emitowany kod z kodem `Sample` klasy, który jest kompilowany do samego przykładu kodu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-867">You can run TypeBuilderGetFieldExample.exe, and you can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to compare the emitted code with the code for the `Sample` class that is compiled into the code example itself.</span></span>  
  
 [!code-csharp[TypeBuilder.GetField_Generic#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder.GetField_Generic/cs/source.cs#1)]
 [!code-vb[TypeBuilder.GetField_Generic#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder.GetField_Generic/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-868"><paramref name="type" />nie reprezentuje typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-868"><paramref name="type" /> does not represent a generic type.</span></span>  
  
<span data-ttu-id="fed4f-869">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-869">-or-</span></span> 
 <span data-ttu-id="fed4f-870"><paramref name="type" />nie jest typu <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-870"><paramref name="type" /> is not of type <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="fed4f-871">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-871">-or-</span></span> 
<span data-ttu-id="fed4f-872">Typ deklarujący nie <paramref name="constructor" /> jest definicją typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-872">The declaring type of <paramref name="constructor" /> is not a generic type definition.</span></span>  
  
<span data-ttu-id="fed4f-873">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-873">-or-</span></span> 
<span data-ttu-id="fed4f-874">Typ <paramref name="constructor" /> deklarujący nie jest <paramref name="type" />definicją typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-874">The declaring type of <paramref name="constructor" /> is not the generic type definition of <paramref name="type" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetConstructorImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.ConstructorInfo GetConstructorImpl (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ConstructorInfo GetConstructorImpl(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ConstructorInfo ^ GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetConstructorImpl : System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.ConstructorInfo" Usage="typeBuilder.GetConstructorImpl (bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="types" Type="System.Type[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">To be added.</param>
        <param name="binder">To be added.</param>
        <param name="callConvention">To be added.</param>
        <param name="types">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public override System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetConstructors(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetConstructors (bindingAttr As BindingFlags) As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetConstructors : System.Reflection.BindingFlags -&gt; System.Reflection.ConstructorInfo[]" Usage="typeBuilder.GetConstructors bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="fed4f-875">Ta wartość musi być flagą bitową <see cref="T:System.Reflection.BindingFlags" /> z <see langword="InvokeMethod" />, <see langword="NonPublic" />, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-875">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" /> as in <see langword="InvokeMethod" />, <see langword="NonPublic" />, and so on.</span></span></param>
        <summary><span data-ttu-id="fed4f-876">Zwraca tablicę <see cref="T:System.Reflection.ConstructorInfo" /> obiektów reprezentującą publiczne i niepubliczne konstruktory zdefiniowane dla tej klasy, jak określono.</span><span class="sxs-lookup"><span data-stu-id="fed4f-876">Returns an array of <see cref="T:System.Reflection.ConstructorInfo" /> objects representing the public and non-public constructors defined for this class, as specified.</span></span></summary>
        <returns><span data-ttu-id="fed4f-877">Zwraca tablicę <see cref="T:System.Reflection.ConstructorInfo" /> obiektów reprezentujących określone konstruktory zdefiniowane dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-877">Returns an array of <see cref="T:System.Reflection.ConstructorInfo" /> objects representing the specified constructors defined for this class.</span></span> <span data-ttu-id="fed4f-878">Jeśli nie zdefiniowano żadnych konstruktorów, zwracana jest pusta tablica.</span><span class="sxs-lookup"><span data-stu-id="fed4f-878">If no constructors are defined, an empty array is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-879">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-879">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-880">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-880">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-881">Zwraca atrybuty niestandardowe zdefiniowane dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-881">Returns the custom attributes defined for this type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="typeBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="fed4f-882">Określa, czy należy przeszukać łańcuch dziedziczenia tego elementu członkowskiego, aby znaleźć atrybuty.</span><span class="sxs-lookup"><span data-stu-id="fed4f-882">Specifies whether to search this member's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="fed4f-883">Zwraca wszystkie atrybuty niestandardowe zdefiniowane dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-883">Returns all the custom attributes defined for this type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-884">Zwraca tablicę obiektów reprezentujących wszystkie atrybuty niestandardowe tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-884">Returns an array of objects representing all the custom attributes of this type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-885">Ta metoda nie jest obecnie obsługiwana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-885">This method is not currently supported for incomplete types.</span></span> <span data-ttu-id="fed4f-886">Pobierz typ using <see cref="M:System.Type.GetType" /> i Wywołaj <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> zwracaną <see cref="T:System.Type" />wartość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-886">Retrieve the type using <see cref="M:System.Type.GetType" /> and call <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> on the returned <see cref="T:System.Type" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="typeBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="fed4f-887">Typ atrybutu do wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-887">The type of attribute to search for.</span></span> <span data-ttu-id="fed4f-888">Zwracane są tylko atrybuty, które można przypisać do tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-888">Only attributes that are assignable to this type are returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="fed4f-889">Określa, czy należy przeszukać łańcuch dziedziczenia tego elementu członkowskiego, aby znaleźć atrybuty.</span><span class="sxs-lookup"><span data-stu-id="fed4f-889">Specifies whether to search this member's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="fed4f-890">Zwraca wszystkie atrybuty niestandardowe bieżącego typu, które można przypisać do określonego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-890">Returns all the custom attributes of the current type that are assignable to a specified type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-891">Tablica atrybutów niestandardowych zdefiniowanych w bieżącym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-891">An array of custom attributes defined on the current type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-892">Ta metoda nie jest obecnie obsługiwana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-892">This method is not currently supported for incomplete types.</span></span> <span data-ttu-id="fed4f-893">Pobierz typ using <see cref="M:System.Type.GetType" /> i Wywołaj <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> zwracaną <see cref="T:System.Type" />wartość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-893">Retrieve the type using <see cref="M:System.Type.GetType" /> and call <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> on the returned <see cref="T:System.Type" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-894"><paramref name="attributeType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-894"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-895">Typ musi być typem dostarczonym przez podstawowy system środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-895">The type must be a type provided by the underlying runtime system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementType">
      <MemberSignature Language="C#" Value="public override Type GetElementType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetElementType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetElementType();" />
      <MemberSignature Language="F#" Value="override this.GetElementType : unit -&gt; Type" Usage="typeBuilder.GetElementType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-896">Wywołanie tej metody zawsze zgłasza <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-896">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="fed4f-897">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-897">This method is not supported.</span></span> <span data-ttu-id="fed4f-898">Nie jest zwracana żadna wartość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-898">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-899">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-899">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-900">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-900">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvent (name As String, bindingAttr As BindingFlags) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::EventInfo ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetEvent : string * System.Reflection.BindingFlags -&gt; System.Reflection.EventInfo" Usage="typeBuilder.GetEvent (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-901">Nazwa zdarzenia do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-901">The name of the event to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="fed4f-902">Bitowa kombinacja <see cref="T:System.Reflection.BindingFlags" /> wartości, która ogranicza wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-902">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values that limits the search.</span></span></param>
        <summary><span data-ttu-id="fed4f-903">Zwraca zdarzenie o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-903">Returns the event with the specified name.</span></span></summary>
        <returns><span data-ttu-id="fed4f-904">Obiekt reprezentujący zdarzenie zadeklarowane lub dziedziczone przez ten typ z określoną nazwą lub <see langword="null" /> Jeśli nie ma dopasowań. <see cref="T:System.Reflection.EventInfo" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-904">An <see cref="T:System.Reflection.EventInfo" /> object representing the event declared or inherited by this type with the specified name, or <see langword="null" /> if there are no matches.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-905">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-905">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-906">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-906">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-907">Zwraca zdarzenia zdefiniowane przez bieżące <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-907">Returns the events defined by the current <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents () As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents();" />
      <MemberSignature Language="F#" Value="override this.GetEvents : unit -&gt; System.Reflection.EventInfo[]" Usage="typeBuilder.GetEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-908">Zwraca zdarzenia publiczne zadeklarowane lub dziedziczone przez ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-908">Returns the public events declared or inherited by this type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-909">Zwraca tablicę <see cref="T:System.Reflection.EventInfo" /> obiektów reprezentujących zdarzenia publiczne zadeklarowane lub dziedziczone przez ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-909">Returns an array of <see cref="T:System.Reflection.EventInfo" /> objects representing the public events declared or inherited by this type.</span></span> <span data-ttu-id="fed4f-910">Pusta tablica jest zwracana, jeśli nie ma żadnych zdarzeń publicznych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-910">An empty array is returned if there are no public events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-911">Pobierz typ za pomocą <xref:System.Type.GetType%2A> lub <xref:System.Reflection.Assembly.GetType%2A> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-911">Retrieve the type using <xref:System.Type.GetType%2A> or <xref:System.Reflection.Assembly.GetType%2A> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-912">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-912">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.EventInfo[] GetEvents(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEvents (bindingAttr As BindingFlags) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetEvents : System.Reflection.BindingFlags -&gt; System.Reflection.EventInfo[]" Usage="typeBuilder.GetEvents bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="fed4f-913">Bitowa kombinacja <see cref="T:System.Reflection.BindingFlags" /> wartości, która ogranicza wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-913">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values that limits the search.</span></span></param>
        <summary><span data-ttu-id="fed4f-914">Zwraca publiczne i niepubliczne zdarzenia, które są zadeklarowane przez ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-914">Returns the public and non-public events that are declared by this type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-915">Zwraca tablicę <see cref="T:System.Reflection.EventInfo" /> obiektów reprezentujących zdarzenia zadeklarowane lub dziedziczone przez ten typ, które pasują do określonych flag powiązań.</span><span class="sxs-lookup"><span data-stu-id="fed4f-915">Returns an array of <see cref="T:System.Reflection.EventInfo" /> objects representing the events declared or inherited by this type that match the specified binding flags.</span></span> <span data-ttu-id="fed4f-916">Pustą tablicę zwraca się, jeśli nie ma żadnych pasujących zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fed4f-916">An empty array is returned if there are no matching events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-917">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-917">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-918">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-918">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetField">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-919">Zwraca pole zdefiniowane przez bieżące <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-919">Returns a field defined by the current <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="typeBuilder.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-920">Nazwa pola do pobrania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-920">The name of the field to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="fed4f-921">Ta wartość musi być flagą bitową <see cref="T:System.Reflection.BindingFlags" /> z <see langword="InvokeMethod" />, <see langword="NonPublic" />, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-921">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" /> as in <see langword="InvokeMethod" />, <see langword="NonPublic" />, and so on.</span></span></param>
        <summary><span data-ttu-id="fed4f-922">Zwraca pole określone przez daną nazwę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-922">Returns the field specified by the given name.</span></span></summary>
        <returns><span data-ttu-id="fed4f-923"><see cref="T:System.Reflection.FieldInfo" /> Zwraca obiekt reprezentujący pole zadeklarowane lub dziedziczone przez ten typ z określoną nazwą oraz modyfikatorem Public lub non-Public.</span><span class="sxs-lookup"><span data-stu-id="fed4f-923">Returns the <see cref="T:System.Reflection.FieldInfo" /> object representing the field declared or inherited by this type with the specified name and public or non-public modifier.</span></span> <span data-ttu-id="fed4f-924">Jeśli nie ma żadnych dopasowań <see langword="null" /> , są zwracane.</span><span class="sxs-lookup"><span data-stu-id="fed4f-924">If there are no matches then <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-925">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-925">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-926">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-926">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public static System.Reflection.FieldInfo GetField (Type type, System.Reflection.FieldInfo field);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.FieldInfo GetField(class System.Type type, class System.Reflection.FieldInfo field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetField(System.Type,System.Reflection.FieldInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::FieldInfo ^ GetField(Type ^ type, System::Reflection::FieldInfo ^ field);" />
      <MemberSignature Language="F#" Value="static member GetField : Type * System.Reflection.FieldInfo -&gt; System.Reflection.FieldInfo" Usage="System.Reflection.Emit.TypeBuilder.GetField (type, field)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="field" Type="System.Reflection.FieldInfo" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fed4f-927">Skonstruowany typ ogólny, którego pole jest zwracane.</span><span class="sxs-lookup"><span data-stu-id="fed4f-927">The constructed generic type whose field is returned.</span></span></param>
        <param name="field"><span data-ttu-id="fed4f-928">Pole w definicji <paramref name="type" />typu ogólnego, które określa <paramref name="type" /> pole, które ma zostać zwrócone.</span><span class="sxs-lookup"><span data-stu-id="fed4f-928">A field on the generic type definition of <paramref name="type" />, which specifies which field of <paramref name="type" /> to return.</span></span></param>
        <summary><span data-ttu-id="fed4f-929">Zwraca pole określonego konstruowanego typu ogólnego, który odnosi się do określonego pola definicji typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-929">Returns the field of the specified constructed generic type that corresponds to the specified field of the generic type definition.</span></span></summary>
        <returns><span data-ttu-id="fed4f-930">Obiekt, który reprezentuje <paramref name="type" /> pole odpowiadające <paramref name="field" />, które określa <paramref name="type" />pole należące do definicji typu ogólnego. <see cref="T:System.Reflection.FieldInfo" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-930">A <see cref="T:System.Reflection.FieldInfo" /> object that represents the field of <paramref name="type" /> corresponding to <paramref name="field" />, which specifies a field belonging to the generic type definition of <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-931">Metoda umożliwia uzyskanie obiektu, który reprezentuje pole skonstruowanego typu ogólnego, którego <xref:System.Reflection.Emit.TypeBuilder> definicja typu ogólnego jest reprezentowana przez obiekt. <xref:System.Reflection.FieldInfo> <xref:System.Reflection.Emit.TypeBuilder.GetField%2A></span><span class="sxs-lookup"><span data-stu-id="fed4f-931">The <xref:System.Reflection.Emit.TypeBuilder.GetField%2A> method provides a way to get a <xref:System.Reflection.FieldInfo> object that represents a field of a constructed generic type whose generic type definition is represented by a <xref:System.Reflection.Emit.TypeBuilder> object.</span></span>  
  
 <span data-ttu-id="fed4f-932">Załóżmy <xref:System.Reflection.Emit.TypeBuilder> na przykład, że masz obiekt, który reprezentuje typ `G<T>` w C# `G(Of T)` składni (w Visual Basic, C++ <xref:System.Reflection.Emit.FieldBuilder> `generic <T> ref class G` in) i obiekt, który reprezentuje pole `public T F` w C#składnia (`Public F As T` C++w), która jest definiowana przez `G<T>`. `public: T F`</span><span class="sxs-lookup"><span data-stu-id="fed4f-932">For example, suppose you have a <xref:System.Reflection.Emit.TypeBuilder> object that represents the type `G<T>` in C# syntax (`G(Of T)` in Visual Basic, `generic <T> ref class G` in C++) and a <xref:System.Reflection.Emit.FieldBuilder> object that represents a field `public T F` in C# syntax (`Public F As T` in Visual Basic, `public: T F` in C++) that is defined by `G<T>`.</span></span> <span data-ttu-id="fed4f-933">Załóżmy, że `G<T>` ma metodę rodzajową z parametrem `U` typu, który tworzy wystąpienie pola `F` typu `G<U>` złożonego i wywołania w tym wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-933">Suppose that `G<T>` has a generic method with type parameter `U` that creates an instance of the constructed type `G<U>` and calls field `F` on that instance.</span></span> <span data-ttu-id="fed4f-934">W <xref:System.Reflection.FieldInfo> celu emitowania wywołania funkcji wymagany jest obiekt, który reprezentuje `F` typ utworzony — innymi słowy, który jest typem `U` , a nie typem `T`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-934">In order to emit the function call, you need a <xref:System.Reflection.FieldInfo> object that represents `F` on the constructed type - in other words, that is of type `U` rather than type `T`.</span></span> <span data-ttu-id="fed4f-935">Aby to zrobić, najpierw Wywołaj <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> metodę <xref:System.Reflection.Emit.TypeBuilder> dla obiektu, określając <xref:System.Reflection.Emit.GenericTypeParameterBuilder> obiekt, który reprezentuje `U` jako argument typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-935">To do this, first call the <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> method on the <xref:System.Reflection.Emit.TypeBuilder> object, specifying the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> object that represents `U` as the type argument.</span></span> <span data-ttu-id="fed4f-936">Następnie Wywołaj <xref:System.Reflection.Emit.TypeBuilder.GetField%2A> metodę z wartością <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> zwracaną <xref:System.Reflection.Emit.FieldBuilder> metody jako parametr `type` i obiekt, który reprezentuje `F` jako parametr `field`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-936">Then call the <xref:System.Reflection.Emit.TypeBuilder.GetField%2A> method with the return value of the <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> method as parameter `type` and the <xref:System.Reflection.Emit.FieldBuilder> object that represents `F` as parameter `field`.</span></span> <span data-ttu-id="fed4f-937">Wartość zwracana jest <xref:System.Reflection.FieldInfo> obiektem, który jest wymagany do emisji wywołania funkcji.</span><span class="sxs-lookup"><span data-stu-id="fed4f-937">The return value is the <xref:System.Reflection.FieldInfo> object you need to emit the function call.</span></span> <span data-ttu-id="fed4f-938">Przykład kodu demonstruje ten scenariusz.</span><span class="sxs-lookup"><span data-stu-id="fed4f-938">The code example demonstrates this scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-939">Poniższy przykład kodu zawiera kod źródłowy klasy generycznej o nazwie Sample, która ma parametr typu o nazwie `T`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-939">The following code example contains source code for a generic class named Sample that has a type parameter named `T`.</span></span> <span data-ttu-id="fed4f-940">Klasa ma `Field`pole o nazwie, typu `T`i metodę rodzajową o nazwie `GM` z własnym parametrem typu o nazwie `U`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-940">The class has a field named `Field`, of type `T`, and a generic method named `GM` with its own type parameter, named `U`.</span></span> <span data-ttu-id="fed4f-941">Metoda `GM` tworzy wystąpienie elementu `Sample`, podstawiając jego własny parametr `U` typu dla parametru `Sample`typu i przechowuje jego parametr wejściowy w `Field`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-941">Method `GM` creates an instance of `Sample`, substituting its own type parameter `U` for the type parameter of `Sample`, and stores its input parameter in `Field`.</span></span> <span data-ttu-id="fed4f-942">Ten kod źródłowy jest kompilowany, ale nie jest używany; można go wyświetlić za pomocą [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) i porównać go z kodem emitowanym przez klasę `Example`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-942">This source code is compiled but not used; you can view it with the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) and compare it to the code emitted by class `Example`.</span></span>  
  
 <span data-ttu-id="fed4f-943">Kod w klasie `Example` pokazuje użycie <xref:System.Reflection.Emit.TypeBuilder.GetField%2A> metody do emitowania kodu generycznego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-943">The code in class `Example` demonstrates the use of the <xref:System.Reflection.Emit.TypeBuilder.GetField%2A> method to emit generic code.</span></span> <span data-ttu-id="fed4f-944">`T` <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A> `Sample`Metoda klasy `Example` tworzy zestaw dynamiczny zawierający klasę o nazwie i używa metody, aby uczynić ją ogólną przez dodanie parametru typu o nazwie. `Main`</span><span class="sxs-lookup"><span data-stu-id="fed4f-944">The `Main` method of class `Example` creates a dynamic assembly containing a class named `Sample`, and uses the <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A> method to make it generic by adding a type parameter named `T`.</span></span> <span data-ttu-id="fed4f-945">Konstruktor bez parametrów i pole o nazwie `Field`typu `T`są dodawane do klasy `Sample`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-945">A parameterless constructor and a field named `Field`, of type `T`, are added to class `Sample`.</span></span> <span data-ttu-id="fed4f-946">Metoda `GM` jest dodawana i włączana do metody ogólnej przy <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-946">A method `GM` is added and turned into a generic method by using the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fed4f-947">Parametr `GM` typu ma nazwę `U`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-947">The type parameter of `GM` is named `U`.</span></span> <span data-ttu-id="fed4f-948">Po zdefiniowaniu parametru typu sygnatura `GM` jest dodawana przy <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-948">After the type parameter is defined, the signature of `GM` is added by using the <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fed4f-949">Nie ma żadnego typu zwracanego i nie są wymagane ani modyfikatory niestandardowe, dlatego wszystkie parametry tej metody są `null` z `parameterTypes`wyjątkiem; ustawia typ parametru tylko Metoda na `U`, parametr typu ogólnego metody. `parameterTypes`</span><span class="sxs-lookup"><span data-stu-id="fed4f-949">There is no return type and no required or custom modifiers, so all the parameters of this method are `null` except `parameterTypes`; `parameterTypes` sets the type of the method's only parameter to `U`, the method's generic type parameter.</span></span> <span data-ttu-id="fed4f-950">Treść metody `Sample<U>` tworzy wystąpienie typu złożonego (`Sample(Of U)` w Visual Basic), przypisuje parametr metody do `Field`, a następnie drukuje wartość `Field`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-950">The body of the method creates an instance of the constructed type `Sample<U>` (`Sample(Of U)` in Visual Basic), assigns the method's parameter to `Field`, and then prints the value of `Field`.</span></span> <span data-ttu-id="fed4f-951">`Sample<U>` <xref:System.Reflection.Emit.OpCodes.Stfld?displayProperty=nameWithType> <xref:System.Reflection.Emit.OpCodes.Ldfld?displayProperty=nameWithType> Metoda jest używana do <xref:System.Reflection.FieldInfo> utworzenia, która reprezentuje pole konstruowanego typu ogólnego w instrukcji i. <xref:System.Reflection.Emit.TypeBuilder.GetField%2A></span><span class="sxs-lookup"><span data-stu-id="fed4f-951">The <xref:System.Reflection.Emit.TypeBuilder.GetField%2A> method is used to create a <xref:System.Reflection.FieldInfo> that represents the field of the constructed generic type `Sample<U>` in the <xref:System.Reflection.Emit.OpCodes.Stfld?displayProperty=nameWithType> and <xref:System.Reflection.Emit.OpCodes.Ldfld?displayProperty=nameWithType> instructions.</span></span>  
  
 <span data-ttu-id="fed4f-952">Typ fikcyjny jest zdefiniowany do przechowywania metody `Main`punktu wejścia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-952">A dummy type is defined to hold the entry-point method `Main`.</span></span> <span data-ttu-id="fed4f-953">W treści `Main`, metoda statyczna <xref:System.String> `Sample<int>` `GM` jest wywoływana na skonstruowanym typie ogólnym (`Sample(Of Integer)` w Visual Basic), z typem zastąpionym przez `U`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-953">In the body of `Main`, the static `GM` method is invoked on the constructed generic type `Sample<int>` (`Sample(Of Integer)` in Visual Basic), with type <xref:System.String> substituted for `U`.</span></span>  
  
 <span data-ttu-id="fed4f-954">Gdy przykładowy kod jest uruchamiany, zapisuje emitowany zestaw jako TypeBuilderGetFieldExample. exe.</span><span class="sxs-lookup"><span data-stu-id="fed4f-954">When the code example is run, it saves the emitted assembly as TypeBuilderGetFieldExample.exe.</span></span> <span data-ttu-id="fed4f-955">Można uruchomić TypeBuilderGetFieldExample. exe i można użyć [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) , aby porównać emitowany kod z kodem `Sample` klasy, który jest kompilowany do samego przykładu kodu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-955">You can run TypeBuilderGetFieldExample.exe, and you can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to compare the emitted code with the code for the `Sample` class that is compiled into the code example itself.</span></span>  
  
 [!code-csharp[TypeBuilder.GetField_Generic#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder.GetField_Generic/cs/source.cs#1)]
 [!code-vb[TypeBuilder.GetField_Generic#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder.GetField_Generic/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-956"><paramref name="type" />nie reprezentuje typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-956"><paramref name="type" /> does not represent a generic type.</span></span>  
  
<span data-ttu-id="fed4f-957">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-957">-or-</span></span> 
 <span data-ttu-id="fed4f-958"><paramref name="type" />nie jest typu <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-958"><paramref name="type" /> is not of type <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="fed4f-959">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-959">-or-</span></span> 
<span data-ttu-id="fed4f-960">Typ deklarujący nie <paramref name="field" /> jest definicją typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-960">The declaring type of <paramref name="field" /> is not a generic type definition.</span></span>  
  
<span data-ttu-id="fed4f-961">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-961">-or-</span></span> 
<span data-ttu-id="fed4f-962">Typ <paramref name="field" /> deklarujący nie jest <paramref name="type" />definicją typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-962">The declaring type of <paramref name="field" /> is not the generic type definition of <paramref name="type" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="typeBuilder.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="fed4f-963">Ta wartość musi być flagą bitową <see langword="InvokeMethod" />z <see langword="NonPublic" /> <see cref="T:System.Reflection.BindingFlags" /> :,, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-963">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="NonPublic" />, and so on.</span></span></param>
        <summary><span data-ttu-id="fed4f-964">Zwraca publiczne i niepubliczne pola, które są zadeklarowane przez ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-964">Returns the public and non-public fields that are declared by this type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-965">Zwraca tablicę <see cref="T:System.Reflection.FieldInfo" /> obiektów reprezentujących publiczne i niepubliczne pola zadeklarowane lub dziedziczone przez ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-965">Returns an array of <see cref="T:System.Reflection.FieldInfo" /> objects representing the public and non-public fields declared or inherited by this type.</span></span> <span data-ttu-id="fed4f-966">Pusta tablica jest zwracana, jeśli nie ma żadnych pól, jak określono.</span><span class="sxs-lookup"><span data-stu-id="fed4f-966">An empty array is returned if there are no fields, as specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-967"><xref:System.Reflection.Emit.TypeBuilder.GetFields%2A> Metoda nie zwraca pól w określonej kolejności, takich jak kolejność alfabetyczna lub Deklaracja.</span><span class="sxs-lookup"><span data-stu-id="fed4f-967">The <xref:System.Reflection.Emit.TypeBuilder.GetFields%2A> method does not return fields in a particular order, such as alphabetical or declaration order.</span></span> <span data-ttu-id="fed4f-968">Kod nie może zależeć od kolejności, w której są zwracane pola, ponieważ ta kolejność może się różnić.</span><span class="sxs-lookup"><span data-stu-id="fed4f-968">Your code must not depend on the order in which fields are returned, because that order can vary.</span></span>  
  
 <span data-ttu-id="fed4f-969">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-969">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-970">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-970">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGenericArguments">
      <MemberSignature Language="C#" Value="public override Type[] GetGenericArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetGenericArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetGenericArguments" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGenericArguments () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetGenericArguments();" />
      <MemberSignature Language="F#" Value="override this.GetGenericArguments : unit -&gt; Type[]" Usage="typeBuilder.GetGenericArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-971">Zwraca tablicę <see cref="T:System.Type" /> obiektów reprezentujących argumenty typu ogólnego lub parametry typu definicji typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-971">Returns an array of <see cref="T:System.Type" /> objects representing the type arguments of a generic type or the type parameters of a generic type definition.</span></span></summary>
        <returns><span data-ttu-id="fed4f-972">Tablica <see cref="T:System.Type" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-972">An array of <see cref="T:System.Type" /> objects.</span></span> <span data-ttu-id="fed4f-973">Elementy tablicy reprezentują argumenty typu generycznego lub parametry typu definicji typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-973">The elements of the array represent the type arguments of a generic type or the type parameters of a generic type definition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-974">Elementy tablicy zwracanej są w kolejności, w jakiej występują na liście parametrów typu dla definicji typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-974">The elements of the returned array are in the order in which they appear in the list of type parameters for the generic type definition.</span></span>  
  
 <span data-ttu-id="fed4f-975">Obiekt reprezentuje definicję typu ogólnego, <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A> Jeśli metoda została użyta w celu nadania parametrów typu ogólnego. <xref:System.Reflection.Emit.TypeBuilder></span><span class="sxs-lookup"><span data-stu-id="fed4f-975">A <xref:System.Reflection.Emit.TypeBuilder> object represents a generic type definition if the <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A> method has been used to give it generic type parameters.</span></span> <span data-ttu-id="fed4f-976">Ta metoda pobiera <xref:System.Reflection.Emit.GenericTypeParameterBuilder> obiekty reprezentujące parametry typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-976">This method retrieves the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> objects that represent the generic type parameters.</span></span>  
  
 <span data-ttu-id="fed4f-977">Aby uzyskać więcej informacji na temat typów ogólnych w odbiciu i liście niezmiennych warunków używanych w odbiciu ogólnym, zobacz <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType> właściwość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-977">For more information on generic types in reflection and a list of the invariant conditions for terms used in generic reflection, see the <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" />
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])" />
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])" />
        <altmember cref="P:System.Type.IsGenericType" />
        <altmember cref="M:System.Type.GetGenericArguments" />
      </Docs>
    </Member>
    <Member MemberName="GetGenericParameterConstraints">
      <MemberSignature Language="C#" Value="public override Type[] GetGenericParameterConstraints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetGenericParameterConstraints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetGenericParameterConstraints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGenericParameterConstraints () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetGenericParameterConstraints();" />
      <MemberSignature Language="F#" Value="override this.GetGenericParameterConstraints : unit -&gt; Type[]" Usage="typeBuilder.GetGenericParameterConstraints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGenericTypeDefinition">
      <MemberSignature Language="C#" Value="public override Type GetGenericTypeDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetGenericTypeDefinition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGenericTypeDefinition () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetGenericTypeDefinition();" />
      <MemberSignature Language="F#" Value="override this.GetGenericTypeDefinition : unit -&gt; Type" Usage="typeBuilder.GetGenericTypeDefinition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-978"><see cref="T:System.Type" /> Zwraca obiekt, który reprezentuje definicję typu ogólnego, z którego można uzyskać bieżący typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-978">Returns a <see cref="T:System.Type" /> object that represents a generic type definition from which the current type can be obtained.</span></span></summary>
        <returns><span data-ttu-id="fed4f-979"><see cref="T:System.Type" /> Obiekt reprezentujący definicję typu ogólnego, z którego można uzyskać bieżący typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-979">A <see cref="T:System.Type" /> object representing a generic type definition from which the current type can be obtained.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-980">W <xref:System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition%2A> przypadku wywołania metody <xref:System.Reflection.Emit.TypeBuilder.IsGenericType%2A> <xref:System.Reflection.Emit.TypeBuilder> dla obiektu, dla którego właściwość zwraca wartość `true`, <xref:System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition%2A> Właściwość zwraca bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-980">If you call the <xref:System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition%2A> method on a <xref:System.Reflection.Emit.TypeBuilder> object for which the <xref:System.Reflection.Emit.TypeBuilder.IsGenericType%2A> property returns `true`, the <xref:System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition%2A> property returns the current instance.</span></span> <span data-ttu-id="fed4f-981">Element <xref:System.Reflection.Emit.TypeBuilder> reprezentujący typ ogólny zawsze jest definicją typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-981">A <xref:System.Reflection.Emit.TypeBuilder> that represents a generic type is always a generic type definition.</span></span>  
  
 <span data-ttu-id="fed4f-982">Jeśli użyto <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> metody do konstruowania typu ogólnego <xref:System.Reflection.Emit.TypeBuilder> z obiektu, który reprezentuje definicję <xref:System.Type.GetGenericTypeDefinition%2A?displayProperty=nameWithType> typu ogólnego, przy użyciu <xref:System.Reflection.Emit.TypeBuilder> metody dla konstruowanego typu pobiera obiekt, który reprezentuje typ ogólny definicji.</span><span class="sxs-lookup"><span data-stu-id="fed4f-982">If you used the <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> method to construct a generic type from a <xref:System.Reflection.Emit.TypeBuilder> object that represents a generic type definition, using the <xref:System.Type.GetGenericTypeDefinition%2A?displayProperty=nameWithType> method on the constructed type gets back the <xref:System.Reflection.Emit.TypeBuilder> object that represents the generic type definition.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-983">Bieżący typ nie jest ogólny.</span><span class="sxs-lookup"><span data-stu-id="fed4f-983">The current type is not generic.</span></span> <span data-ttu-id="fed4f-984">Oznacza to, <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> że <see langword="false" />zwraca.</span><span class="sxs-lookup"><span data-stu-id="fed4f-984">That is, <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> returns <see langword="false" />.</span></span></exception>
        <altmember cref="P:System.Type.IsGenericType" />
        <altmember cref="M:System.Type.GetGenericTypeDefinition" />
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])" />
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public override Type GetInterface (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetInterface(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetInterface(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterface (name As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetInterface(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetInterface : string * bool -&gt; Type" Usage="typeBuilder.GetInterface (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-985">Nazwa interfejsu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-985">The name of the interface.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fed4f-986">Jeśli <see langword="true" />jest, wyszukiwanie nie uwzględnia wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="fed4f-986">If <see langword="true" />, the search is case-insensitive.</span></span> <span data-ttu-id="fed4f-987">W <see langword="false" />przypadku wyszukiwania rozróżniana jest wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="fed4f-987">If <see langword="false" />, the search is case-sensitive.</span></span></param>
        <summary><span data-ttu-id="fed4f-988">Zwraca interfejs zaimplementowany (bezpośrednio lub pośrednio) przez tę klasę przy użyciu w pełni kwalifikowanej nazwy zgodnej z daną nazwą interfejsu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-988">Returns the interface implemented (directly or indirectly) by this class with the fully qualified name matching the given interface name.</span></span></summary>
        <returns><span data-ttu-id="fed4f-989"><see cref="T:System.Type" /> Zwraca obiekt reprezentujący zaimplementowany interfejs.</span><span class="sxs-lookup"><span data-stu-id="fed4f-989">Returns a <see cref="T:System.Type" /> object representing the implemented interface.</span></span> <span data-ttu-id="fed4f-990">Zwraca wartość null, jeśli nie zostanie znaleziona nazwa zgodna z interfejsem.</span><span class="sxs-lookup"><span data-stu-id="fed4f-990">Returns null if no interface matching name is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-991">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-991">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-992">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-992">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaceMap">
      <MemberSignature Language="C#" Value="public override System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Reflection.InterfaceMapping GetInterfaceMap(class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetInterfaceMap(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaceMap (interfaceType As Type) As InterfaceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::InterfaceMapping GetInterfaceMap(Type ^ interfaceType);" />
      <MemberSignature Language="F#" Value="override this.GetInterfaceMap : Type -&gt; System.Reflection.InterfaceMapping" Usage="typeBuilder.GetInterfaceMap interfaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="interfaceType"><span data-ttu-id="fed4f-993"><see cref="T:System.Type" /> Interfejs, dla którego ma zostać pobrane mapowanie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-993">The <see cref="T:System.Type" /> of the interface for which the mapping is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="fed4f-994">Zwraca mapowanie interfejsu dla żądanego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-994">Returns an interface mapping for the requested interface.</span></span></summary>
        <returns><span data-ttu-id="fed4f-995">Zwraca żądane mapowanie interfejsu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-995">Returns the requested interface mapping.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-996">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-996">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-997">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-997">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public override Type[] GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInterfaces () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetInterfaces();" />
      <MemberSignature Language="F#" Value="override this.GetInterfaces : unit -&gt; Type[]" Usage="typeBuilder.GetInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-998">Zwraca tablicę wszystkich interfejsów zaimplementowanych w tym typie i jego typach podstawowych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-998">Returns an array of all the interfaces implemented on this type and its base types.</span></span></summary>
        <returns><span data-ttu-id="fed4f-999">Zwraca tablicę <see cref="T:System.Type" /> obiektów reprezentujących zaimplementowane interfejsy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-999">Returns an array of <see cref="T:System.Type" /> objects representing the implemented interfaces.</span></span> <span data-ttu-id="fed4f-1000">Jeśli żaden nie jest zdefiniowany, zwracana jest pusta tablica.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1000">If none are defined, an empty array is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.MemberTypes type, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, type As MemberTypes, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMember : string * System.Reflection.MemberTypes * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typeBuilder.GetMember (name, type, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="type" Type="System.Reflection.MemberTypes" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-1001">Nazwa elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1001">The name of the member.</span></span></param>
        <param name="type"><span data-ttu-id="fed4f-1002">Typ elementu członkowskiego do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1002">The type of the member to return.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="fed4f-1003">Ta wartość musi być flagą bitową z <see cref="T:System.Reflection.BindingFlags" />, jak w <see langword="InvokeMethod" />, <see langword="NonPublic" />i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1003">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" />, as in <see langword="InvokeMethod" />, <see langword="NonPublic" />, and so on.</span></span></param>
        <summary><span data-ttu-id="fed4f-1004">Zwraca wszystkie publiczne i niepubliczne składowe zadeklarowane lub dziedziczone przez ten typ, jak określono.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1004">Returns all the public and non-public members declared or inherited by this type, as specified.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1005">Zwraca tablicę <see cref="T:System.Reflection.MemberInfo" /> obiektów reprezentujących publiczną i niepubliczną składową zdefiniowaną dla tego <paramref name="nonPublic" /> typu, jeśli jest używany; w przeciwnym razie zwracane są tylko publiczne elementy członkowskie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1005">Returns an array of <see cref="T:System.Reflection.MemberInfo" /> objects representing the public and non-public members defined on this type if <paramref name="nonPublic" /> is used; otherwise, only the public members are returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1006">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1006">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1007">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1007">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typeBuilder.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="fed4f-1008">Musi to być flaga bitowa z <see cref="T:System.Reflection.BindingFlags" />, taka jak <see langword="InvokeMethod" />, <see langword="NonPublic" />, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1008">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" />, such as <see langword="InvokeMethod" />, <see langword="NonPublic" />, and so on.</span></span></param>
        <summary><span data-ttu-id="fed4f-1009">Zwraca elementy członkowskie dla publicznych i niepublicznych składowych zadeklarowanych lub dziedziczonych przez ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1009">Returns the members for the public and non-public members declared or inherited by this type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1010">Zwraca tablicę <see cref="T:System.Reflection.MemberInfo" /> obiektów reprezentujących publiczne i niepubliczne składowe zadeklarowane lub dziedziczone przez ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1010">Returns an array of <see cref="T:System.Reflection.MemberInfo" /> objects representing the public and non-public members declared or inherited by this type.</span></span> <span data-ttu-id="fed4f-1011">Pustą tablicę zwraca się, jeśli nie ma pasujących elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1011">An empty array is returned if there are no matching members.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1012">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1012">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1013">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1013">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetMethod (Type type, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetMethod(class System.Type type, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetMethod(System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::MethodInfo ^ GetMethod(Type ^ type, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member GetMethod : Type * System.Reflection.MethodInfo -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.Emit.TypeBuilder.GetMethod (type, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fed4f-1014">Skonstruowany typ ogólny, którego Metoda jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1014">The constructed generic type whose method is returned.</span></span></param>
        <param name="method"><span data-ttu-id="fed4f-1015">Metoda w definicji <paramref name="type" />typu ogólnego, która określa <paramref name="type" /> metodę, która ma zostać zwrócona.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1015">A method on the generic type definition of <paramref name="type" />, which specifies which method of <paramref name="type" /> to return.</span></span></param>
        <summary><span data-ttu-id="fed4f-1016">Zwraca metodę określonego konstruowanego typu ogólnego, który odnosi się do określonej metody definicji typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1016">Returns the method of the specified constructed generic type that corresponds to the specified method of the generic type definition.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1017">Obiekt, który reprezentuje <paramref name="type" /> metodę odpowiadającą <paramref name="method" />, która określa <paramref name="type" />metodę należącą do definicji typu ogólnego. <see cref="T:System.Reflection.MethodInfo" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-1017">A <see cref="T:System.Reflection.MethodInfo" /> object that represents the method of <paramref name="type" /> corresponding to <paramref name="method" />, which specifies a method belonging to the generic type definition of <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1018">Metoda umożliwia uzyskanie obiektu, który reprezentuje metodę skonstruowanego typu ogólnego, którego <xref:System.Reflection.Emit.TypeBuilder> definicja typu ogólnego jest reprezentowana przez obiekt. <xref:System.Reflection.MethodInfo> <xref:System.Reflection.Emit.TypeBuilder.GetMethod%2A></span><span class="sxs-lookup"><span data-stu-id="fed4f-1018">The <xref:System.Reflection.Emit.TypeBuilder.GetMethod%2A> method provides a way to get a <xref:System.Reflection.MethodInfo> object that represents a method of a constructed generic type whose generic type definition is represented by a <xref:System.Reflection.Emit.TypeBuilder> object.</span></span>  
  
 <span data-ttu-id="fed4f-1019">Załóżmy <xref:System.Reflection.Emit.TypeBuilder> na przykład, że masz obiekt, który reprezentuje typ `G<T>` w C# `G(Of T)` składni (w Visual Basic, C++ <xref:System.Reflection.Emit.MethodBuilder> `generic <T> ref class G` in) i obiekt, który reprezentuje metodę `T M()` w C#składnia (`Function M() As T` C++w), która jest definiowana przez `G<T>`. `T M()`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1019">For example, suppose you have a <xref:System.Reflection.Emit.TypeBuilder> object that represents the type `G<T>` in C# syntax (`G(Of T)` in Visual Basic, `generic <T> ref class G` in C++) and a <xref:System.Reflection.Emit.MethodBuilder> object that represents a method `T M()` in C# syntax (`Function M() As T` in Visual Basic, `T M()` in C++) that is defined by `G<T>`.</span></span> <span data-ttu-id="fed4f-1020">Załóżmy, że `G<T>` ma metodę rodzajową z parametrem `U` typu, który tworzy wystąpienie złożonego typu `G<U>` i metodę `M` wywołania dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1020">Suppose that `G<T>` has a generic method with type parameter `U` that creates an instance of the constructed type `G<U>` and calls method `M` on that instance.</span></span> <span data-ttu-id="fed4f-1021">W celu emitowania wywołania funkcji wymagany <xref:System.Reflection.MethodInfo> jest obiekt, który reprezentuje `M` dla złożonego typu — innymi słowy, który zwraca typ `U` , a nie typ `T`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1021">In order to emit the function call, you need a <xref:System.Reflection.MethodInfo> object that represents `M` on the constructed type - in other words, that returns type `U` rather than type `T`.</span></span> <span data-ttu-id="fed4f-1022">Aby to zrobić, najpierw Wywołaj <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> metodę <xref:System.Reflection.Emit.TypeBuilder> dla obiektu, określając <xref:System.Reflection.Emit.GenericTypeParameterBuilder> obiekt, który reprezentuje `U` jako argument typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1022">To do this, first call the <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> method on the <xref:System.Reflection.Emit.TypeBuilder> object, specifying the <xref:System.Reflection.Emit.GenericTypeParameterBuilder> object that represents `U` as the type argument.</span></span> <span data-ttu-id="fed4f-1023">Następnie Wywołaj <xref:System.Reflection.Emit.TypeBuilder.GetMethod%2A> metodę z wartością <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> zwracaną <xref:System.Reflection.Emit.MethodBuilder> metody jako parametr `type` i obiekt, który reprezentuje `T M()` jako parametr `method`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1023">Then call the <xref:System.Reflection.Emit.TypeBuilder.GetMethod%2A> method with the return value of the <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> method as parameter `type` and the <xref:System.Reflection.Emit.MethodBuilder> object that represents `T M()` as parameter `method`.</span></span> <span data-ttu-id="fed4f-1024">Wartość zwracana jest <xref:System.Reflection.MethodInfo> obiektem, który jest wymagany do emisji wywołania funkcji.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1024">The return value is the <xref:System.Reflection.MethodInfo> object you need to emit the function call.</span></span> <span data-ttu-id="fed4f-1025">Przykład kodu demonstruje scenariusz podobny do tego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1025">The code example demonstrates a scenario similar to this.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-1026">Poniższy przykład kodu zawiera kod źródłowy klasy generycznej o nazwie `Sample` , która ma parametr typu o nazwie. `T`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1026">The following code example contains source code for a generic class named `Sample` that has a type parameter named `T`.</span></span> <span data-ttu-id="fed4f-1027">Klasa ma `Field`pole o nazwie, typu `T`i metodę rodzajową o nazwie `GM` z własnym parametrem typu o nazwie `U`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1027">The class has a field named `Field`, of type `T`, and a generic method named `GM` with its own type parameter, named `U`.</span></span> <span data-ttu-id="fed4f-1028">Metoda `GM` tworzy wystąpienie elementu `Sample`, podstawiając jego własny parametr `U` typu dla parametru `Sample`typu i przechowuje jego parametr wejściowy w `Field`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1028">Method `GM` creates an instance of `Sample`, substituting its own type parameter `U` for the type parameter of `Sample`, and stores its input parameter in `Field`.</span></span> <span data-ttu-id="fed4f-1029">Ten kod źródłowy jest kompilowany, ale nie jest używany; można go wyświetlić za pomocą [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) i porównać go z kodem emitowanym przez klasę `Example`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1029">This source code is compiled but not used; you can view it with the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) and compare it to the code emitted by class `Example`.</span></span>  
  
 <span data-ttu-id="fed4f-1030">Kod w klasie `Example` pokazuje użycie <xref:System.Reflection.Emit.TypeBuilder.GetMethod%2A> metody do emitowania kodu generycznego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1030">The code in class `Example` demonstrates the use of the <xref:System.Reflection.Emit.TypeBuilder.GetMethod%2A> method to emit generic code.</span></span> <span data-ttu-id="fed4f-1031">`Main` Metoda klasy `Example` tworzy zestaw dynamiczny zawierający `Sample` `T`klasę o nazwie i używa metody,abyuczynićjąogólnąprzezdodanieparametrutypuonazwie.<xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A></span><span class="sxs-lookup"><span data-stu-id="fed4f-1031">The `Main` method of class `Example` creates a dynamic assembly containing a class named `Sample` and uses the <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A> method to make it generic by adding a type parameter named `T`.</span></span> <span data-ttu-id="fed4f-1032">Konstruktor bez parametrów i pole o nazwie `Field`typu `T`są dodawane do klasy `Sample`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1032">A parameterless constructor and a field named `Field`, of type `T`, are added to class `Sample`.</span></span> <span data-ttu-id="fed4f-1033">Metoda `GM` jest dodawana i włączana do metody ogólnej przy <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1033">A method `GM` is added and turned into a generic method by using the <xref:System.Reflection.Emit.MethodBuilder.DefineGenericParameters%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fed4f-1034">Parametr `GM` typu ma nazwę `U`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1034">The type parameter of `GM` is named `U`.</span></span> <span data-ttu-id="fed4f-1035">Po zdefiniowaniu parametru typu sygnatura `GM` jest dodawana przy <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1035">After the type parameter is defined, the signature of `GM` is added by using the <xref:System.Reflection.Emit.MethodBuilder.SetSignature%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="fed4f-1036">Nie ma żadnego typu zwracanego i nie są wymagane ani modyfikatory niestandardowe, dlatego wszystkie parametry tej metody są `null` z `parameterTypes`wyjątkiem; ustawia typ parametru tylko Metoda na `U`, parametr typu ogólnego metody. `parameterTypes`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1036">There is no return type and no required or custom modifiers, so all the parameters of this method are `null` except `parameterTypes`; `parameterTypes` sets the type of the method's only parameter to `U`, the method's generic type parameter.</span></span> <span data-ttu-id="fed4f-1037">Treść metody `Sample<U>` tworzy wystąpienie typu złożonego (`Sample(Of U)` w Visual Basic), przypisuje parametr metody do `Field`, a następnie drukuje wartość `Field`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1037">The body of the method creates an instance of the constructed type `Sample<U>` (`Sample(Of U)` in Visual Basic), assigns the method's parameter to `Field`, and then prints the value of `Field`.</span></span> <span data-ttu-id="fed4f-1038">Typ fikcyjny jest zdefiniowany do przechowywania metody `Main`punktu wejścia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1038">A dummy type is defined to hold the entry-point method `Main`.</span></span> <span data-ttu-id="fed4f-1039">W treści `Main`, metoda statyczna <xref:System.String> `Sample<int>` `GM` jest wywoływana na skonstruowanym typie ogólnym (`Sample(Of Integer)` w Visual Basic), z typem zastąpionym przez `U`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1039">In the body of `Main`, the static `GM` method is invoked on the constructed generic type `Sample<int>` (`Sample(Of Integer)` in Visual Basic), with type <xref:System.String> substituted for `U`.</span></span> <span data-ttu-id="fed4f-1040">`Sample<U>` `GM` <xref:System.Reflection.MethodInfo.MakeGenericMethod%2A?displayProperty=nameWithType> <xref:System.Reflection.MethodInfo> Metoda jest używana do <xref:System.Reflection.MethodInfo> tworzenia dla metody statycznej konstruowanego typu ogólnego, a metoda jest używana do tworzenia, który może być emitowany w wywołaniu metody. <xref:System.Reflection.Emit.TypeBuilder.GetMethod%2A></span><span class="sxs-lookup"><span data-stu-id="fed4f-1040">The <xref:System.Reflection.Emit.TypeBuilder.GetMethod%2A> method is used to create a <xref:System.Reflection.MethodInfo> for the static `GM` method of the constructed generic type `Sample<U>`, and the <xref:System.Reflection.MethodInfo.MakeGenericMethod%2A?displayProperty=nameWithType> method is then used to create a <xref:System.Reflection.MethodInfo> that can emitted in a method call.</span></span>  
  
 <span data-ttu-id="fed4f-1041">Gdy przykładowy kod jest uruchamiany, zapisuje emitowany zestaw jako TypeBuilderGetFieldExample. exe.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1041">When the code example is run, it saves the emitted assembly as TypeBuilderGetFieldExample.exe.</span></span> <span data-ttu-id="fed4f-1042">Można uruchomić TypeBuilderGetFieldExample. exe i można użyć [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) , aby porównać emitowany kod z kodem `Sample` klasy, który jest kompilowany do samego przykładu kodu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1042">You can run TypeBuilderGetFieldExample.exe, and you can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to compare the emitted code with the code for the `Sample` class that is compiled into the code example itself.</span></span>  
  
 [!code-csharp[TypeBuilder.GetField_Generic#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeBuilder.GetField_Generic/cs/source.cs#1)]
 [!code-vb[TypeBuilder.GetField_Generic#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeBuilder.GetField_Generic/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-1043"><paramref name="method" />jest metodą rodzajową, która nie jest definicją metody ogólnej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1043"><paramref name="method" /> is a generic method that is not a generic method definition.</span></span>  
  
<span data-ttu-id="fed4f-1044">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-1044">-or-</span></span> 
 <span data-ttu-id="fed4f-1045"><paramref name="type" />nie reprezentuje typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1045"><paramref name="type" /> does not represent a generic type.</span></span>  
  
<span data-ttu-id="fed4f-1046">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-1046">-or-</span></span> 
 <span data-ttu-id="fed4f-1047"><paramref name="type" />nie jest typu <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1047"><paramref name="type" /> is not of type <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="fed4f-1048">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-1048">-or-</span></span> 
<span data-ttu-id="fed4f-1049">Typ deklarujący nie <paramref name="method" /> jest definicją typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1049">The declaring type of <paramref name="method" /> is not a generic type definition.</span></span>  
  
<span data-ttu-id="fed4f-1050">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-1050">-or-</span></span> 
<span data-ttu-id="fed4f-1051">Typ <paramref name="method" /> deklarujący nie jest <paramref name="type" />definicją typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1051">The declaring type of <paramref name="method" /> is not the generic type definition of <paramref name="type" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ GetMethodImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetMethodImpl : string * System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="typeBuilder.GetMethodImpl (name, bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="types" Type="System.Type[]" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="bindingAttr">To be added.</param>
        <param name="binder">To be added.</param>
        <param name="callConvention">To be added.</param>
        <param name="types">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="typeBuilder.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="fed4f-1052">Ta wartość musi być flagą bitową <see cref="T:System.Reflection.BindingFlags" /> z <see langword="InvokeMethod" />, <see langword="NonPublic" />, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1052">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" /> as in <see langword="InvokeMethod" />, <see langword="NonPublic" />, and so on.</span></span></param>
        <summary><span data-ttu-id="fed4f-1053">Zwraca wszystkie metody publiczne i niepubliczne zadeklarowane lub dziedziczone przez ten typ, jak określono.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1053">Returns all the public and non-public methods declared or inherited by this type, as specified.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1054">Zwraca tablicę <see cref="T:System.Reflection.MethodInfo" /> obiektów reprezentujących publiczne i niepubliczne metody zdefiniowane dla tego typu, jeśli <paramref name="nonPublic" /> jest używany; w przeciwnym razie zwracane są tylko metody publiczne.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1054">Returns an array of <see cref="T:System.Reflection.MethodInfo" /> objects representing the public and non-public methods defined on this type if <paramref name="nonPublic" /> is used; otherwise, only the public methods are returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1055">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1055">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1056">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1056">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public override Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetNestedType(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedType (name As String, bindingAttr As BindingFlags) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetNestedType(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetNestedType : string * System.Reflection.BindingFlags -&gt; Type" Usage="typeBuilder.GetNestedType (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-1057"><see cref="T:System.String" /> Zawiera nazwę typu zagnieżdżonego do pobrania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1057">The <see cref="T:System.String" /> containing the name of the nested type to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="fed4f-1058">Maska bitów składająca się z co najmniej <see cref="T:System.Reflection.BindingFlags" /> jednego, który określa sposób przeprowadzania wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1058">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="fed4f-1059">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-1059">-or-</span></span> 
<span data-ttu-id="fed4f-1060">Zero, aby przeszukiwać metody publiczne z uwzględnieniem wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1060">Zero, to conduct a case-sensitive search for public methods.</span></span></param>
        <summary><span data-ttu-id="fed4f-1061">Zwraca publiczne i niepubliczne typy zagnieżdżone, które są zadeklarowane przez ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1061">Returns the public and non-public nested types that are declared by this type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1062">Obiekt reprezentujący zagnieżdżony typ, który odpowiada określonym wymaganiom, jeśli został znaleziony; <see langword="null" />w przeciwnym razie. <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-1062">A <see cref="T:System.Type" /> object representing the nested type that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1063">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1063">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 <span data-ttu-id="fed4f-1064">Jeśli ten typ jest zakończony, na przykład, jeśli `CreateType` został wywołany dla tego typu, ale istnieją zagnieżdżone typy, które nie są kompletne, wówczas `GetNestedTypes` zwróci tylko te typy zagnieżdżone, dla których `CreateType` została wywołana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1064">If this type is complete, for example, if `CreateType` has been called on this type, but there are nested types that are not complete, then `GetNestedTypes` will only return those nested types for which `CreateType` has been called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1065">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1065">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetNestedTypes(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetNestedTypes(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNestedTypes (bindingAttr As BindingFlags) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetNestedTypes(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetNestedTypes : System.Reflection.BindingFlags -&gt; Type[]" Usage="typeBuilder.GetNestedTypes bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="fed4f-1066">Ta wartość musi być flagą bitową z <see cref="T:System.Reflection.BindingFlags" />, jak w <see langword="InvokeMethod" />, <see langword="NonPublic" />i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1066">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" />, as in <see langword="InvokeMethod" />, <see langword="NonPublic" />, and so on.</span></span></param>
        <summary><span data-ttu-id="fed4f-1067">Zwraca publiczne i niepubliczne typy zagnieżdżone, które są zadeklarowane lub dziedziczone przez ten typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1067">Returns the public and non-public nested types that are declared or inherited by this type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1068">Tablica <see cref="T:System.Type" /> obiektów reprezentująca wszystkie typy zagnieżdżone w bieżącym <see cref="T:System.Type" /> , które pasują do określonych ograniczeń powiązania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1068">An array of <see cref="T:System.Type" /> objects representing all the types nested within the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
<span data-ttu-id="fed4f-1069">Pusta tablica typu <see cref="T:System.Type" />, jeśli żadne typy nie są zagnieżdżone w obrębie bieżącego <see cref="T:System.Type" />lub jeśli żaden z zagnieżdżonych typów nie pasuje do ograniczeń powiązania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1069">An empty array of type <see cref="T:System.Type" />, if no types are nested within the current <see cref="T:System.Type" />, or if none of the nested types match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1070">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1070">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 <span data-ttu-id="fed4f-1071">Jeśli ten typ jest zakończony, na przykład, jeśli `CreateType` został wywołany dla tego typu, ale istnieją zagnieżdżone typy, które nie są kompletne, wówczas `GetNestedTypes` zwróci tylko te typy zagnieżdżone, dla których `CreateType` została wywołana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1071">If this type is complete, for example, if `CreateType` has been called on this type, but there are nested types that are not complete, then `GetNestedTypes` will only return those nested types for which `CreateType` has been called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1072">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1072">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="typeBuilder.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="fed4f-1073">Ten atrybut wywołania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1073">This invocation attribute.</span></span> <span data-ttu-id="fed4f-1074">Ta wartość musi być flagą bitową <see langword="InvokeMethod" />z <see langword="NonPublic" /> <see cref="T:System.Reflection.BindingFlags" /> :,, i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1074">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="NonPublic" />, and so on.</span></span></param>
        <summary><span data-ttu-id="fed4f-1075">Zwraca wszystkie właściwości publiczne i niepubliczne zadeklarowane lub dziedziczone przez ten typ, jak określono.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1075">Returns all the public and non-public properties declared or inherited by this type, as specified.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1076">Zwraca tablicę <see langword="PropertyInfo" /> obiektów reprezentujących publiczne i niepubliczne właściwości zdefiniowane dla tego typu, jeśli <paramref name="nonPublic" /> jest używany; w przeciwnym razie zwracane są tylko właściwości publiczne.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1076">Returns an array of <see langword="PropertyInfo" /> objects representing the public and non-public properties defined on this type if <paramref name="nonPublic" /> is used; otherwise, only the public properties are returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1077">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1077">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1078">Ta metoda nie jest zaimplementowana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1078">This method is not implemented for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.PropertyInfo GetPropertyImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.PropertyInfo GetPropertyImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::PropertyInfo ^ GetPropertyImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetPropertyImpl : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="typeBuilder.GetPropertyImpl (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="types" Type="System.Type[]" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="bindingAttr">To be added.</param>
        <param name="binder">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="types">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GUID">
      <MemberSignature Language="C#" Value="public override Guid GUID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid GUID" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.GUID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GUID As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid GUID { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.GUID : Guid" Usage="System.Reflection.Emit.TypeBuilder.GUID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1079">Pobiera identyfikator GUID tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1079">Retrieves the GUID of this type.</span></span></summary>
        <value><span data-ttu-id="fed4f-1080">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1080">Read-only.</span></span> <span data-ttu-id="fed4f-1081">Pobiera identyfikator GUID tego typu</span><span class="sxs-lookup"><span data-stu-id="fed4f-1081">Retrieves the GUID of this type</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1082">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1082">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1083">Ta metoda nie jest obecnie obsługiwana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1083">This method is not currently supported for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasElementTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool HasElementTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool HasElementTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.HasElementTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HasElementTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool HasElementTypeImpl();" />
      <MemberSignature Language="F#" Value="override this.HasElementTypeImpl : unit -&gt; bool" Usage="typeBuilder.HasElementTypeImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public override object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="override this.InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="typeBuilder.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="target" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="args" Type="System.Object[]" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="namedParameters" Type="System.String[]" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fed4f-1084">Nazwa elementu członkowskiego do wywołania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1084">The name of the member to invoke.</span></span> <span data-ttu-id="fed4f-1085">Może to być Konstruktor, metoda, właściwość lub pole.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1085">This can be a constructor, method, property, or field.</span></span> <span data-ttu-id="fed4f-1086">Należy określić odpowiedni atrybut wywołania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1086">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="fed4f-1087">Należy zauważyć, że istnieje możliwość wywołania domyślnego elementu członkowskiego klasy przez przekazanie pustego ciągu jako nazwy elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1087">Note that it is possible to invoke the default member of a class by passing an empty string as the name of the member.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="fed4f-1088">Atrybut wywołania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1088">The invocation attribute.</span></span> <span data-ttu-id="fed4f-1089">Musi to być flaga bitowa z <see langword="BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1089">This must be a bit flag from <see langword="BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="fed4f-1090">Obiekt, który umożliwia powiązanie, przekształcenie typów argumentów, wywoływanie elementów członkowskich oraz pobieranie <see langword="MemberInfo" /> obiektów przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1090">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span></span> <span data-ttu-id="fed4f-1091">Jeśli spinaczem <see langword="null" />jest, używany jest domyślny spinacz.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1091">If binder is <see langword="null" />, the default binder is used.</span></span> <span data-ttu-id="fed4f-1092">Zobacz <see cref="T:System.Reflection.Binder" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1092">See <see cref="T:System.Reflection.Binder" />.</span></span></param>
        <param name="target"><span data-ttu-id="fed4f-1093">Obiekt, na którym ma zostać wywołany określony element członkowski.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1093">The object on which to invoke the specified member.</span></span> <span data-ttu-id="fed4f-1094">Jeśli składowa jest statyczna, ten parametr jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1094">If the member is static, this parameter is ignored.</span></span></param>
        <param name="args"><span data-ttu-id="fed4f-1095">Lista argumentów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1095">An argument list.</span></span> <span data-ttu-id="fed4f-1096">Jest to tablica obiektów, która zawiera liczbę, kolejność i typ parametrów elementu członkowskiego, który ma zostać wywołany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1096">This is an array of Objects that contains the number, order, and type of the parameters of the member to be invoked.</span></span> <span data-ttu-id="fed4f-1097">Jeśli nie ma żadnych parametrów, powinna ona mieć wartość null.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1097">If there are no parameters this should be null.</span></span></param>
        <param name="modifiers"><span data-ttu-id="fed4f-1098">Tablica o takiej samej długości jak <paramref name="args" /> elementy, które reprezentują atrybuty skojarzone z argumentami elementu członkowskiego, który ma zostać wywołany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1098">An array of the same length as <paramref name="args" /> with elements that represent the attributes associated with the arguments of the member to be invoked.</span></span> <span data-ttu-id="fed4f-1099">Z parametrem skojarzono atrybuty w metadanych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1099">A parameter has attributes associated with it in the metadata.</span></span> <span data-ttu-id="fed4f-1100">Są one używane przez różne usługi współdziałania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1100">They are used by various interoperability services.</span></span> <span data-ttu-id="fed4f-1101">Aby uzyskać więcej informacji, zobacz specyfikacje metadanych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1101">See the metadata specs for more details.</span></span></param>
        <param name="culture"><span data-ttu-id="fed4f-1102">Wystąpienie <see langword="CultureInfo" /> używane do zarządzania przymusem typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1102">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="fed4f-1103">Jeśli jest to wartość null, <see langword="CultureInfo" /> używany jest bieżący wątek.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1103">If this is null, the <see langword="CultureInfo" /> for the current thread is used.</span></span> <span data-ttu-id="fed4f-1104">(Należy zauważyć, że jest to konieczne, na przykład, przekonwertować ciąg, który reprezentuje 1000 do wartości podwójnej, ponieważ 1000 jest reprezentowane inaczej przez różne kultury).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1104">(Note that this is necessary to, for example, convert a String that represents 1000 to a Double value, since 1000 is represented differently by different cultures.)</span></span></param>
        <param name="namedParameters"><span data-ttu-id="fed4f-1105">Każdy parametr w <paramref name="namedParameters" /> tablicy Pobiera wartość w odpowiednim elemencie <paramref name="args" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1105">Each parameter in the <paramref name="namedParameters" /> array gets the value in the corresponding element in the <paramref name="args" /> array.</span></span> <span data-ttu-id="fed4f-1106">Jeśli długość <paramref name="args" /> jest większa niż <paramref name="namedParameters" />długość, pozostałe wartości argumentu są przesyłane w kolejności.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1106">If the length of <paramref name="args" /> is greater than the length of <paramref name="namedParameters" />, the remaining argument values are passed in order.</span></span></param>
        <summary><span data-ttu-id="fed4f-1107">Wywołuje określony element członkowski.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1107">Invokes the specified member.</span></span> <span data-ttu-id="fed4f-1108">Metoda, która ma zostać wywołana, musi być dostępna i zapewniać najbardziej dokładne dopasowanie z określoną listą argumentów, w ramach ograniczeń określonych atrybutów spinacza i wywołania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1108">The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1109">Zwraca wartość zwracaną wywoływanego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1109">Returns the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1110">Metoda zostanie wywołana, jeśli liczba parametrów w deklaracji metody jest równa liczbie argumentów na określonej liście argumentów, a typ każdego argumentu może być konwertowany przez spinacz do typu parametru.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1110">A method will be invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</span></span>  
  
 <span data-ttu-id="fed4f-1111">W spinaczu znajdą się wszystkie zgodne metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1111">The binder will find all of the matching methods.</span></span> <span data-ttu-id="fed4f-1112">Te metody są dostępne na podstawie typu żądanego powiązania (BindingFlags. InvokeMethod, BindingFlags. GetProperties itd.).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1112">These methods are found based on the type of binding requested (BindingFlags.InvokeMethod, BindingFlags.GetProperties, and so on.).</span></span> <span data-ttu-id="fed4f-1113">Zestaw metod jest filtrowany według nazwy, liczby argumentów i zestawu modyfikatorów wyszukiwania zdefiniowanego w spinaczu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1113">The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</span></span> <span data-ttu-id="fed4f-1114">Po wybraniu metody zostanie ona wywołana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1114">After the method is selected, it will be invoked.</span></span> <span data-ttu-id="fed4f-1115">Dostępność jest sprawdzana w tym momencie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1115">Accessibility is checked at that point.</span></span> <span data-ttu-id="fed4f-1116">Wyszukiwanie może kontrolować zestaw metod, które są przeszukiwane w oparciu o atrybut dostępności skojarzony z tą metodą.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1116">The search can control which set of methods are searched based upon the accessibility attribute associated with the method.</span></span> <span data-ttu-id="fed4f-1117">`IBinder.BindToMethod` Metoda jest odpowiedzialna za wybranie metody do wywołania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1117">The `IBinder.BindToMethod` method is responsible for selecting the method to be invoked.</span></span> <span data-ttu-id="fed4f-1118">Domyślny spinacz wybiera najbardziej konkretne dopasowanie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1118">The default binder selects the most specific match.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-1119">Ograniczenia dostępu są ignorowane dla w pełni zaufanego kodu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1119">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="fed4f-1120">Oznacza to, że prywatne konstruktory, metody, pola i właściwości są dostępne i wywoływane przy użyciu odbicia za każdym razem, gdy kod jest w pełni zaufany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1120">That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.</span></span>  
  
 <span data-ttu-id="fed4f-1121">Ta metoda nie jest obecnie obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1121">This method is not currently supported.</span></span> <span data-ttu-id="fed4f-1122">Można pobrać typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i użyć odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1122">You can retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1123">Ta metoda nie jest obecnie obsługiwana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1123">This method is not currently supported for incomplete types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsArrayImpl">
      <MemberSignature Language="C#" Value="protected override bool IsArrayImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsArrayImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.IsArrayImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsArrayImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsArrayImpl();" />
      <MemberSignature Language="F#" Value="override this.IsArrayImpl : unit -&gt; bool" Usage="typeBuilder.IsArrayImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAssignableFrom">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-1124">Określa, czy określony typ może być przypisany do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1124">Determines whether a specified type can be assigned to this object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public override bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAssignableFrom(class System.Reflection.TypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Reflection.TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAssignableFrom(System::Reflection::TypeInfo ^ typeInfo);" />
      <MemberSignature Language="F#" Value="override this.IsAssignableFrom : System.Reflection.TypeInfo -&gt; bool" Usage="typeBuilder.IsAssignableFrom typeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typeInfo"><span data-ttu-id="fed4f-1125">Obiekt do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1125">The object to test.</span></span></param>
        <summary><span data-ttu-id="fed4f-1126">Pobiera wartość wskazującą, czy określony <see cref="T:System.Reflection.TypeInfo" /> obiekt może być przypisany do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1126">Gets a value that indicates whether a specified <see cref="T:System.Reflection.TypeInfo" /> object can be assigned to this object.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1127"><see langword="true" />Jeśli <paramref name="typeInfo" /> można przypisać do tego obiektu; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1127"><see langword="true" /> if <paramref name="typeInfo" /> can be assigned to this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public override bool IsAssignableFrom (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAssignableFrom(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.IsAssignableFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAssignableFrom (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAssignableFrom(Type ^ c);" />
      <MemberSignature Language="F#" Value="override this.IsAssignableFrom : Type -&gt; bool" Usage="typeBuilder.IsAssignableFrom c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fed4f-1128">Obiekt do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1128">The object to test.</span></span></param>
        <summary><span data-ttu-id="fed4f-1129">Pobiera wartość wskazującą, czy <see cref="T:System.Type" /> można przypisać do tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1129">Gets a value that indicates whether a specified <see cref="T:System.Type" /> can be assigned to this object.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1130"><see langword="true" />Jeśli parametr i bieżący typ reprezentują ten sam typ lub jeśli bieżący typ znajduje się w <paramref name="c" />hierarchii dziedziczenia lub jeśli bieżącym typem jest interfejs, który <paramref name="c" /> obsługuje. <paramref name="c" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-1130"><see langword="true" /> if the <paramref name="c" /> parameter and the current type represent the same type, or if the current type is in the inheritance hierarchy of <paramref name="c" />, or if the current type is an interface that <paramref name="c" /> supports.</span></span> <span data-ttu-id="fed4f-1131"><see langword="false" />Jeśli żaden z tych warunków nie jest prawidłowy lub jeśli <paramref name="c" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1131"><see langword="false" /> if none of these conditions are valid, or if <paramref name="c" /> is <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRefImpl">
      <MemberSignature Language="C#" Value="protected override bool IsByRefImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsByRefImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.IsByRefImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsByRefImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsByRefImpl();" />
      <MemberSignature Language="F#" Value="override this.IsByRefImpl : unit -&gt; bool" Usage="typeBuilder.IsByRefImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRefLike">
      <MemberSignature Language="C#" Value="public override bool IsByRefLike { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByRefLike" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsByRefLike" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsByRefLike As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsByRefLike { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsByRefLike : bool" Usage="System.Reflection.Emit.TypeBuilder.IsByRefLike" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCOMObjectImpl">
      <MemberSignature Language="C#" Value="protected override bool IsCOMObjectImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsCOMObjectImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.IsCOMObjectImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsCOMObjectImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsCOMObjectImpl();" />
      <MemberSignature Language="F#" Value="override this.IsCOMObjectImpl : unit -&gt; bool" Usage="typeBuilder.IsCOMObjectImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructedGenericType">
      <MemberSignature Language="C#" Value="public override bool IsConstructedGenericType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructedGenericType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsConstructedGenericType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsConstructedGenericType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructedGenericType { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructedGenericType : bool" Usage="System.Reflection.Emit.TypeBuilder.IsConstructedGenericType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1132">Pobiera wartość wskazującą, czy ten obiekt reprezentuje skonstruowany typ ogólny.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1132">Gets a value that indicates whether this object represents a constructed generic type.</span></span></summary>
        <value><span data-ttu-id="fed4f-1133"><see langword="true" />Jeśli ten obiekt reprezentuje skonstruowany typ ogólny; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-1133"><see langword="true" /> if this object represents a constructed generic type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCreated">
      <MemberSignature Language="C#" Value="public bool IsCreated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCreated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.IsCreated" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCreated () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCreated();" />
      <MemberSignature Language="F#" Value="member this.IsCreated : unit -&gt; bool" Usage="typeBuilder.IsCreated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-1134">Zwraca wartość wskazującą, czy bieżący typ dynamiczny został utworzony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1134">Returns a value that indicates whether the current dynamic type has been created.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1135"><see langword="true" />Jeśli metoda została wywołana; w przeciwnym razie, <see langword="false" />. <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-1135"><see langword="true" /> if the <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> method has been called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1136"><xref:System.Reflection.Emit.TypeBuilder> Po wywołaniu <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> metody typ reprezentowany przez obiekt jest zakończony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1136">After the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method has been called, the type represented by the <xref:System.Reflection.Emit.TypeBuilder> object is complete.</span></span> <span data-ttu-id="fed4f-1137">Wyjątki są zgłaszane w przypadku dalszych prób dodania członków lub zmiany innych właściwości typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1137">Exceptions are thrown on any further attempts to add members or change other characteristics of the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="typeBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="fed4f-1138">Typ atrybutu do wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1138">The type of attribute to search for.</span></span> <span data-ttu-id="fed4f-1139">Zwracane są tylko atrybuty, które można przypisać do tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1139">Only attributes that are assignable to this type are returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="fed4f-1140">Określa, czy należy przeszukać łańcuch dziedziczenia tego elementu członkowskiego, aby znaleźć atrybuty.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1140">Specifies whether to search this member's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="fed4f-1141">Określa, czy atrybut niestandardowy jest stosowany do bieżącego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1141">Determines whether a custom attribute is applied to the current type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1142"><see langword="true" />Jeśli co najmniej jedno wystąpienie <paramref name="attributeType" />lub atrybut <paramref name="attributeType" />pochodny jest zdefiniowany dla tego typu; w przeciwnym razie, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1142"><see langword="true" /> if one or more instances of <paramref name="attributeType" />, or an attribute derived from <paramref name="attributeType" />, is defined on this type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1143">Ta metoda nie jest obsługiwana w przypadku niekompletnych parametrów typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1143">This method is not supported for incomplete generic type parameters.</span></span> <span data-ttu-id="fed4f-1144">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1144">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1145">Ta metoda nie jest obecnie obsługiwana dla niekompletnych typów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1145">This method is not currently supported for incomplete types.</span></span> <span data-ttu-id="fed4f-1146">Pobierz typ using <see cref="M:System.Type.GetType" /> i Wywołaj <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> zwracaną <see cref="T:System.Type" />wartość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1146">Retrieve the type using <see cref="M:System.Type.GetType" /> and call <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> on the returned <see cref="T:System.Type" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-1147"><paramref name="attributeType" />nie jest zdefiniowany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1147"><paramref name="attributeType" /> is not defined.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-1148"><paramref name="attributeType" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1148"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public override bool IsEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnum" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsEnum" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEnum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEnum { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnum : bool" Usage="System.Reflection.Emit.TypeBuilder.IsEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericParameter">
      <MemberSignature Language="C#" Value="public override bool IsGenericParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericParameter" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsGenericParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericParameter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenericParameter : bool" Usage="System.Reflection.Emit.TypeBuilder.IsGenericParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1149">Pobiera wartość wskazującą, czy bieżący typ jest parametrem typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1149">Gets a value indicating whether the current type is a generic type parameter.</span></span></summary>
        <value><span data-ttu-id="fed4f-1150"><see langword="true" />Jeśli bieżący <see cref="T:System.Reflection.Emit.TypeBuilder" /> obiekt reprezentuje parametr typu ogólnego; w przeciwnym razie, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1150"><see langword="true" /> if the current <see cref="T:System.Reflection.Emit.TypeBuilder" /> object represents a generic type parameter; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-1151">Podczas emitowania kodu, parametr typu ogólnego jest reprezentowany przez <xref:System.Reflection.Emit.GenericTypeParameterBuilder> obiekt, a nie <xref:System.Reflection.Emit.TypeBuilder> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1151">When emitting code, a generic type parameter is represented by a <xref:System.Reflection.Emit.GenericTypeParameterBuilder> object rather than by a <xref:System.Reflection.Emit.TypeBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGenericType">
      <MemberSignature Language="C#" Value="public override bool IsGenericType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsGenericType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericType { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenericType : bool" Usage="System.Reflection.Emit.TypeBuilder.IsGenericType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1152">Pobiera wartość wskazującą, czy bieżący typ jest typem ogólnym.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1152">Gets a value indicating whether the current type is a generic type.</span></span></summary>
        <value><span data-ttu-id="fed4f-1153"><see langword="true" />Jeśli typ reprezentowany przez bieżący <see cref="T:System.Reflection.Emit.TypeBuilder" /> obiekt jest ogólny; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-1153"><see langword="true" /> if the type represented by the current <see cref="T:System.Reflection.Emit.TypeBuilder" /> object is generic; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1154">Obiekt reprezentuje definicję typu ogólnego, <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A> Jeśli metoda została użyta w celu nadania parametrów typu ogólnego. <xref:System.Reflection.Emit.TypeBuilder></span><span class="sxs-lookup"><span data-stu-id="fed4f-1154">A <xref:System.Reflection.Emit.TypeBuilder> object represents a generic type definition if the <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A> method has been used to give it generic type parameters.</span></span> <span data-ttu-id="fed4f-1155">Wystąpienie <xref:System.Reflection.Emit.TypeBuilder> klasy generycznej jest zawsze definicją typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1155">An instance of the <xref:System.Reflection.Emit.TypeBuilder> class that is generic is always a generic type definition.</span></span>  
  
 <span data-ttu-id="fed4f-1156">Aby uzyskać więcej informacji na temat typów ogólnych w odbiciu i liście niezmiennych warunków używanych w odbiciu ogólnym, zobacz <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType> właściwość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1156">For more information on generic types in reflection and a list of the invariant conditions for terms used in generic reflection, see the <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Type.IsGenericType" />
        <altmember cref="M:System.Type.GetGenericTypeDefinition" />
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])" />
      </Docs>
    </Member>
    <Member MemberName="IsGenericTypeDefinition">
      <MemberSignature Language="C#" Value="public override bool IsGenericTypeDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenericTypeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsGenericTypeDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsGenericTypeDefinition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenericTypeDefinition : bool" Usage="System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1157">Pobiera wartość wskazującą, czy bieżący <see cref="T:System.Reflection.Emit.TypeBuilder" /> reprezentuje definicję typu ogólnego, z której można utworzyć inne typy ogólne.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1157">Gets a value indicating whether the current <see cref="T:System.Reflection.Emit.TypeBuilder" /> represents a generic type definition from which other generic types can be constructed.</span></span></summary>
        <value><span data-ttu-id="fed4f-1158"><see langword="true" />Jeśli ten <see cref="T:System.Reflection.Emit.TypeBuilder" /> obiekt reprezentuje definicję typu ogólnego; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1158"><see langword="true" /> if this <see cref="T:System.Reflection.Emit.TypeBuilder" /> object represents a generic type definition; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1159">Obiekt reprezentuje definicję typu ogólnego, <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A> Jeśli metoda została użyta w celu nadania parametrów typu ogólnego. <xref:System.Reflection.Emit.TypeBuilder></span><span class="sxs-lookup"><span data-stu-id="fed4f-1159">A <xref:System.Reflection.Emit.TypeBuilder> object represents a generic type definition if the <xref:System.Reflection.Emit.TypeBuilder.DefineGenericParameters%2A> method has been used to give it generic type parameters.</span></span> <span data-ttu-id="fed4f-1160">Wystąpienie <xref:System.Reflection.Emit.TypeBuilder> klasy generycznej jest zawsze definicją typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1160">An instance of the <xref:System.Reflection.Emit.TypeBuilder> class that is generic is always a generic type definition.</span></span>  
  
 <span data-ttu-id="fed4f-1161">A <xref:System.Reflection.Emit.TypeBuilder> może służyć do tworzenia definicji typów ogólnych, ale nie skonstruowanych typów ogólnych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1161">A <xref:System.Reflection.Emit.TypeBuilder> can be used to build generic type definitions, but not constructed generic types.</span></span> <span data-ttu-id="fed4f-1162">Aby uzyskać skonstruowany typ ogólny, należy wywołać <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> metodę <xref:System.Reflection.Emit.TypeBuilder> , która reprezentuje definicję typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1162">To get a constructed generic type, call the <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> method on a <xref:System.Reflection.Emit.TypeBuilder> that represents a generic type definition.</span></span>  
  
 <span data-ttu-id="fed4f-1163">Aby uzyskać więcej informacji na temat typów ogólnych w odbiciu i liście niezmiennych warunków używanych w odbiciu ogólnym, zobacz <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType> właściwość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1163">For more information on generic types in reflection and a list of the invariant conditions for terms used in generic reflection, see the <xref:System.Type.IsGenericType%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition" />
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])" />
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])" />
        <altmember cref="P:System.Type.IsGenericType" />
        <altmember cref="P:System.Type.IsGenericTypeDefinition" />
      </Docs>
    </Member>
    <Member MemberName="IsPointerImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPointerImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPointerImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.IsPointerImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPointerImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPointerImpl();" />
      <MemberSignature Language="F#" Value="override this.IsPointerImpl : unit -&gt; bool" Usage="typeBuilder.IsPointerImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimitiveImpl">
      <MemberSignature Language="C#" Value="protected override bool IsPrimitiveImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsPrimitiveImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.IsPrimitiveImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsPrimitiveImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsPrimitiveImpl();" />
      <MemberSignature Language="F#" Value="override this.IsPrimitiveImpl : unit -&gt; bool" Usage="typeBuilder.IsPrimitiveImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityCritical">
      <MemberSignature Language="C#" Value="public override bool IsSecurityCritical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecurityCritical" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsSecurityCritical" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSecurityCritical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecurityCritical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityCritical : bool" Usage="System.Reflection.Emit.TypeBuilder.IsSecurityCritical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1164">Pobiera wartość wskazującą, czy bieżący typ jest krytyczny pod względem zabezpieczeń, czy bezpieczny-krytyczny, i w związku z tym może wykonywać krytyczne operacje.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1164">Gets a value that indicates whether the current type is security-critical or security-safe-critical, and therefore can perform critical operations.</span></span></summary>
        <value><span data-ttu-id="fed4f-1165"><see langword="true" />Jeśli bieżącym typem jest zabezpieczenia-krytyczny lub bezpieczny-krytyczny dla bezpieczeństwa; <see langword="false" /> jeśli jest przezroczysty.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1165"><see langword="true" /> if the current type is security-critical or security-safe-critical; <see langword="false" /> if it is transparent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1166">Właściwości <xref:System.Reflection.Emit.TypeBuilder.IsSecurityCritical%2A>, <xref:System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical%2A> i<xref:System.Reflection.Emit.TypeBuilder.IsSecurityTransparent%2A> raportują poziom przezroczystości typu, zgodnie z opisem w środowisku uruchomieniowym języka wspólnego (CLR).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1166">The <xref:System.Reflection.Emit.TypeBuilder.IsSecurityCritical%2A>, <xref:System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.Emit.TypeBuilder.IsSecurityTransparent%2A> properties report the transparency level of the type, as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="fed4f-1167">W poniższej tabeli przedstawiono kombinacje tych właściwości:</span><span class="sxs-lookup"><span data-stu-id="fed4f-1167">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="fed4f-1168">Poziom zabezpieczeń</span><span class="sxs-lookup"><span data-stu-id="fed4f-1168">Security level</span></span>|<span data-ttu-id="fed4f-1169">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="fed4f-1169">IsSecurityCritical</span></span>|<span data-ttu-id="fed4f-1170">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="fed4f-1170">IsSecuritySafeCritical</span></span>|<span data-ttu-id="fed4f-1171">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="fed4f-1171">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="fed4f-1172">Krytyczny</span><span class="sxs-lookup"><span data-stu-id="fed4f-1172">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="fed4f-1173">Bezpieczny-krytyczny</span><span class="sxs-lookup"><span data-stu-id="fed4f-1173">Safe-critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="fed4f-1174">Przezroczyste</span><span class="sxs-lookup"><span data-stu-id="fed4f-1174">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="fed4f-1175">Korzystanie z tych właściwości jest znacznie prostsze niż badanie adnotacji zabezpieczeń zestawu i jego typów, sprawdzanie bieżącego poziomu zaufania i próba duplikowania reguł środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1175">Using these properties is much simpler than examining the security annotations of an assembly and its types, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
 <span data-ttu-id="fed4f-1176">Środowisko uruchomieniowe rozpoczyna ocenę poziomów przezroczystości w zestawie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1176">The runtime begins evaluating transparency levels at the assembly.</span></span> <span data-ttu-id="fed4f-1177">Na przykład, jeśli dynamiczny zestaw ma zabezpieczenia krytyczne, adnotacje w typach są ignorowane, a wszystkie typy są krytyczne pod względem zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1177">For example, if the dynamic assembly is security-critical, annotations on types are ignored, and all types are security-critical.</span></span>  
  
 <span data-ttu-id="fed4f-1178">Domyślnie zestaw dynamiczny dziedziczy przezroczystość zestawu, który emituje go.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1178">By default, a dynamic assembly inherits the transparency of the assembly that emits it.</span></span> <span data-ttu-id="fed4f-1179">Można zastąpić to ustawienie domyślne przy użyciu <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>metody przeciążenia, <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>lub <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType> i określania atrybutów zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1179">You can override this default by using the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>, <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>, or <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType> method overload and specifying security attributes.</span></span> <span data-ttu-id="fed4f-1180">Nie można podwyższyć poziomu zabezpieczeń, wykonując te czynności. oznacza to, że przezroczysty kod nie może wyemitować kodu krytycznego pod względem zabezpieczeń lub z bezpiecznymi zabezpieczeniami.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1180">You cannot elevate security levels by doing this; that is, transparent code cannot emit security-critical or security-safe-critical code.</span></span> <span data-ttu-id="fed4f-1181">Atrybuty muszą być określone podczas tworzenia zestawu dynamicznego lub nie zaczną obowiązywać do momentu zapisania zestawu na dysku i ponownego załadowania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1181">Attributes must be specified when the dynamic assembly is created, or they do not take effect until the assembly has been saved to disk and reloaded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-1182">Dziedziczenie domyślne jest ograniczone do oceny przejrzystości środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1182">Default inheritance is limited to the runtime's evaluation of transparency.</span></span> <span data-ttu-id="fed4f-1183">Do zestawu dynamicznego nie są stosowane żadne atrybuty.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1183">No attributes are applied to the dynamic assembly.</span></span> <span data-ttu-id="fed4f-1184">Aby dodać atrybuty zabezpieczeń, należy je samodzielnie zastosować.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1184">If you want to add security attributes, you must apply them yourself.</span></span>  
  
 <span data-ttu-id="fed4f-1185">Aby uzyskać więcej informacji na temat emisji odbicia i przezroczystości, zobacz [problemy z zabezpieczeniami w emisji odbicia](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1185">For more information about reflection emit and transparency, see [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).</span></span> <span data-ttu-id="fed4f-1186">Aby uzyskać informacje na temat przejrzystości, zobacz [zmiany zabezpieczeń](~/docs/framework/security/security-changes.md).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1186">For information about transparency, see [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1187">Bieżący typ dynamiczny nie został utworzony przez wywołanie <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1187">The current dynamic type has not been created by calling the <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> method.</span></span></exception>
        <altmember cref="P:System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical" />
        <altmember cref="P:System.Reflection.Emit.TypeBuilder.IsSecurityTransparent" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md"><span data-ttu-id="fed4f-1188">Problemy związane z zabezpieczeniami w emisji odbicia</span><span class="sxs-lookup"><span data-stu-id="fed4f-1188">Security Issues in Reflection Emit</span></span></related>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md"><span data-ttu-id="fed4f-1189">Zagadnienia dotyczące zabezpieczeń dla odbicia</span><span class="sxs-lookup"><span data-stu-id="fed4f-1189">Security Considerations for Reflection</span></span></related>
        <related type="Article" href="~/docs/framework/security/security-changes.md"><span data-ttu-id="fed4f-1190">Zmiany zabezpieczeń w .NET Framework w wersji 4,0</span><span class="sxs-lookup"><span data-stu-id="fed4f-1190">Security Changes in the .NET Framework Version 4.0</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5fd8f46d-3961-46a7-84af-2eb1f48e75cf"><span data-ttu-id="fed4f-1191">Kod przezroczysty pod względem zabezpieczeń, poziom 1</span><span class="sxs-lookup"><span data-stu-id="fed4f-1191">Security-Transparent Code, Level 1</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4d05610a-0da6-4f08-acea-d54c9d6143c0"><span data-ttu-id="fed4f-1192">Kod o przezroczystym poziomie bezpieczeństwa, poziom 2</span><span class="sxs-lookup"><span data-stu-id="fed4f-1192">Security-Transparent Code, Level 2</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSecuritySafeCritical">
      <MemberSignature Language="C#" Value="public override bool IsSecuritySafeCritical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecuritySafeCritical" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSecuritySafeCritical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecuritySafeCritical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecuritySafeCritical : bool" Usage="System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1193">Pobiera wartość wskazującą, czy bieżący typ ma zabezpieczenia-bezpieczny-krytyczny; oznacza to, czy może wykonywać krytyczne operacje i można uzyskać do nich dostęp za pomocą przezroczystego kodu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1193">Gets a value that indicates whether the current type is security-safe-critical; that is, whether it can perform critical operations and can be accessed by transparent code.</span></span></summary>
        <value><span data-ttu-id="fed4f-1194"><see langword="true" />Jeśli bieżący typ jest bezpieczny-krytyczny dla bezpieczeństwa; <see langword="false" /> jeśli jest to zabezpieczenia krytyczne lub przezroczyste.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1194"><see langword="true" /> if the current type is security-safe-critical; <see langword="false" /> if it is security-critical or transparent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1195">Właściwości <xref:System.Reflection.Emit.TypeBuilder.IsSecurityCritical%2A>, <xref:System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical%2A> i<xref:System.Reflection.Emit.TypeBuilder.IsSecurityTransparent%2A> raportują poziom przezroczystości typu, zgodnie z opisem w środowisku uruchomieniowym języka wspólnego (CLR).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1195">The <xref:System.Reflection.Emit.TypeBuilder.IsSecurityCritical%2A>, <xref:System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.Emit.TypeBuilder.IsSecurityTransparent%2A> properties report the transparency level of the type, as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="fed4f-1196">W poniższej tabeli przedstawiono kombinacje tych właściwości:</span><span class="sxs-lookup"><span data-stu-id="fed4f-1196">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="fed4f-1197">Poziom zabezpieczeń</span><span class="sxs-lookup"><span data-stu-id="fed4f-1197">Security level</span></span>|<span data-ttu-id="fed4f-1198">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="fed4f-1198">IsSecurityCritical</span></span>|<span data-ttu-id="fed4f-1199">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="fed4f-1199">IsSecuritySafeCritical</span></span>|<span data-ttu-id="fed4f-1200">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="fed4f-1200">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="fed4f-1201">Krytyczny</span><span class="sxs-lookup"><span data-stu-id="fed4f-1201">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="fed4f-1202">Bezpieczny-krytyczny</span><span class="sxs-lookup"><span data-stu-id="fed4f-1202">Safe-critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="fed4f-1203">Przezroczyste</span><span class="sxs-lookup"><span data-stu-id="fed4f-1203">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="fed4f-1204">Korzystanie z tych właściwości jest znacznie prostsze niż badanie adnotacji zabezpieczeń zestawu i jego typów, sprawdzanie bieżącego poziomu zaufania i próba duplikowania reguł środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1204">Using these properties is much simpler than examining the security annotations of an assembly and its types, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
 <span data-ttu-id="fed4f-1205">Środowisko uruchomieniowe rozpoczyna ocenę poziomów przezroczystości w zestawie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1205">The runtime begins evaluating transparency levels at the assembly.</span></span> <span data-ttu-id="fed4f-1206">Na przykład, jeśli dynamiczny zestaw ma zabezpieczenia krytyczne, adnotacje w typach są ignorowane, a wszystkie typy są krytyczne pod względem zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1206">For example, if the dynamic assembly is security-critical, annotations on types are ignored, and all types are security-critical.</span></span>  
  
 <span data-ttu-id="fed4f-1207">Domyślnie zestaw dynamiczny dziedziczy przezroczystość zestawu, który emituje go.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1207">By default, a dynamic assembly inherits the transparency of the assembly that emits it.</span></span> <span data-ttu-id="fed4f-1208">Można zastąpić to ustawienie domyślne przy użyciu <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>metody przeciążenia, <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>lub <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType> i określania atrybutów zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1208">You can override this default by using the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>, <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>, or <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType> method overload and specifying security attributes.</span></span> <span data-ttu-id="fed4f-1209">Nie można podwyższyć poziomu zabezpieczeń, wykonując te czynności. oznacza to, że przezroczysty kod nie może wyemitować kodu krytycznego pod względem zabezpieczeń lub z bezpiecznymi zabezpieczeniami.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1209">You cannot elevate security levels by doing this; that is, transparent code cannot emit security-critical or security-safe-critical code.</span></span> <span data-ttu-id="fed4f-1210">Atrybuty muszą być określone podczas tworzenia zestawu dynamicznego lub nie zaczną obowiązywać do momentu zapisania zestawu na dysku i ponownego załadowania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1210">Attributes must be specified when the dynamic assembly is created, or they do not take effect until the assembly has been saved to disk and reloaded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-1211">Dziedziczenie domyślne jest ograniczone do oceny przejrzystości środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1211">Default inheritance is limited to the runtime's evaluation of transparency.</span></span> <span data-ttu-id="fed4f-1212">Do zestawu dynamicznego nie są stosowane żadne atrybuty.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1212">No attributes are applied to the dynamic assembly.</span></span> <span data-ttu-id="fed4f-1213">Aby dodać atrybuty zabezpieczeń, należy je samodzielnie zastosować.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1213">If you want to add security attributes, you must apply them yourself.</span></span>  
  
 <span data-ttu-id="fed4f-1214">Aby uzyskać więcej informacji na temat emisji odbicia i przezroczystości, zobacz [problemy z zabezpieczeniami w emisji odbicia](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1214">For more information about reflection emit and transparency, see [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).</span></span> <span data-ttu-id="fed4f-1215">Aby uzyskać informacje na temat przejrzystości, zobacz [zmiany zabezpieczeń](~/docs/framework/security/security-changes.md).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1215">For information about transparency, see [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1216">Bieżący typ dynamiczny nie został utworzony przez wywołanie <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1216">The current dynamic type has not been created by calling the <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> method.</span></span></exception>
        <altmember cref="P:System.Reflection.Emit.TypeBuilder.IsSecurityCritical" />
        <altmember cref="P:System.Reflection.Emit.TypeBuilder.IsSecurityTransparent" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md"><span data-ttu-id="fed4f-1217">Problemy związane z zabezpieczeniami w emisji odbicia</span><span class="sxs-lookup"><span data-stu-id="fed4f-1217">Security Issues in Reflection Emit</span></span></related>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md"><span data-ttu-id="fed4f-1218">Zagadnienia dotyczące zabezpieczeń dla odbicia</span><span class="sxs-lookup"><span data-stu-id="fed4f-1218">Security Considerations for Reflection</span></span></related>
        <related type="Article" href="~/docs/framework/security/security-changes.md"><span data-ttu-id="fed4f-1219">Zmiany zabezpieczeń w .NET Framework w wersji 4,0</span><span class="sxs-lookup"><span data-stu-id="fed4f-1219">Security Changes in the .NET Framework Version 4.0</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5fd8f46d-3961-46a7-84af-2eb1f48e75cf"><span data-ttu-id="fed4f-1220">Kod przezroczysty pod względem zabezpieczeń, poziom 1</span><span class="sxs-lookup"><span data-stu-id="fed4f-1220">Security-Transparent Code, Level 1</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4d05610a-0da6-4f08-acea-d54c9d6143c0"><span data-ttu-id="fed4f-1221">Kod o przezroczystym poziomie bezpieczeństwa, poziom 2</span><span class="sxs-lookup"><span data-stu-id="fed4f-1221">Security-Transparent Code, Level 2</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityTransparent">
      <MemberSignature Language="C#" Value="public override bool IsSecurityTransparent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecurityTransparent" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsSecurityTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSecurityTransparent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecurityTransparent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityTransparent : bool" Usage="System.Reflection.Emit.TypeBuilder.IsSecurityTransparent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1222">Pobiera wartość wskazującą, czy bieżący typ jest przezroczysty i w związku z tym nie może wykonywać krytycznych operacji.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1222">Gets a value that indicates whether the current type is transparent, and therefore cannot perform critical operations.</span></span></summary>
        <value><span data-ttu-id="fed4f-1223"><see langword="true" />Jeśli typ jest przezroczysty dla zabezpieczeń; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-1223"><see langword="true" /> if the type is security-transparent; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1224">Właściwości <xref:System.Reflection.Emit.TypeBuilder.IsSecurityCritical%2A>, <xref:System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical%2A> i<xref:System.Reflection.Emit.TypeBuilder.IsSecurityTransparent%2A> raportują poziom przezroczystości typu, zgodnie z opisem w środowisku uruchomieniowym języka wspólnego (CLR).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1224">The <xref:System.Reflection.Emit.TypeBuilder.IsSecurityCritical%2A>, <xref:System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.Emit.TypeBuilder.IsSecurityTransparent%2A> properties report the transparency level of the type, as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="fed4f-1225">W poniższej tabeli przedstawiono kombinacje tych właściwości:</span><span class="sxs-lookup"><span data-stu-id="fed4f-1225">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="fed4f-1226">Poziom zabezpieczeń</span><span class="sxs-lookup"><span data-stu-id="fed4f-1226">Security level</span></span>|<span data-ttu-id="fed4f-1227">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="fed4f-1227">IsSecurityCritical</span></span>|<span data-ttu-id="fed4f-1228">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="fed4f-1228">IsSecuritySafeCritical</span></span>|<span data-ttu-id="fed4f-1229">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="fed4f-1229">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="fed4f-1230">Krytyczny</span><span class="sxs-lookup"><span data-stu-id="fed4f-1230">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="fed4f-1231">Bezpieczny-krytyczny</span><span class="sxs-lookup"><span data-stu-id="fed4f-1231">Safe-critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="fed4f-1232">Przezroczyste</span><span class="sxs-lookup"><span data-stu-id="fed4f-1232">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="fed4f-1233">Korzystanie z tych właściwości jest znacznie prostsze niż badanie adnotacji zabezpieczeń zestawu i jego typów, sprawdzanie bieżącego poziomu zaufania i próba duplikowania reguł środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1233">Using these properties is much simpler than examining the security annotations of an assembly and its types, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
 <span data-ttu-id="fed4f-1234">Środowisko uruchomieniowe rozpoczyna ocenę poziomów przezroczystości w zestawie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1234">The runtime begins evaluating transparency levels at the assembly.</span></span> <span data-ttu-id="fed4f-1235">Na przykład, jeśli dynamiczny zestaw ma zabezpieczenia krytyczne, adnotacje w typach są ignorowane, a wszystkie typy są krytyczne pod względem zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1235">For example, if the dynamic assembly is security-critical, annotations on types are ignored, and all types are security-critical.</span></span>  
  
 <span data-ttu-id="fed4f-1236">Domyślnie zestaw dynamiczny dziedziczy przezroczystość zestawu, który emituje go.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1236">By default, a dynamic assembly inherits the transparency of the assembly that emits it.</span></span> <span data-ttu-id="fed4f-1237">Można zastąpić to ustawienie domyślne przy użyciu <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>metody przeciążenia, <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>lub <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType> i określania atrybutów zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1237">You can override this default by using the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>, <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType>, or <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Boolean%2CSystem.Collections.Generic.IEnumerable%7BSystem.Reflection.Emit.CustomAttributeBuilder%7D%29?displayProperty=nameWithType> method overload and specifying security attributes.</span></span> <span data-ttu-id="fed4f-1238">Nie można podwyższyć poziomu zabezpieczeń, wykonując te czynności. oznacza to, że przezroczysty kod nie może wyemitować kodu krytycznego pod względem zabezpieczeń lub z bezpiecznymi zabezpieczeniami.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1238">You cannot elevate security levels by doing this; that is, transparent code cannot emit security-critical or security-safe-critical code.</span></span> <span data-ttu-id="fed4f-1239">Atrybuty muszą być określone podczas tworzenia zestawu dynamicznego lub nie zaczną obowiązywać do momentu zapisania zestawu na dysku i ponownego załadowania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1239">Attributes must be specified when the dynamic assembly is created, or they do not take effect until the assembly has been saved to disk and reloaded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-1240">Dziedziczenie domyślne jest ograniczone do oceny przejrzystości środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1240">Default inheritance is limited to the runtime's evaluation of transparency.</span></span> <span data-ttu-id="fed4f-1241">Do zestawu dynamicznego nie są stosowane żadne atrybuty.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1241">No attributes are applied to the dynamic assembly.</span></span> <span data-ttu-id="fed4f-1242">Aby dodać atrybuty zabezpieczeń, należy je samodzielnie zastosować.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1242">If you want to add security attributes, you must apply them yourself.</span></span>  
  
 <span data-ttu-id="fed4f-1243">Aby uzyskać więcej informacji na temat emisji odbicia i przezroczystości, zobacz [problemy z zabezpieczeniami w emisji odbicia](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1243">For more information about reflection emit and transparency, see [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).</span></span> <span data-ttu-id="fed4f-1244">Aby uzyskać informacje na temat przejrzystości, zobacz [zmiany zabezpieczeń](~/docs/framework/security/security-changes.md).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1244">For information about transparency, see [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1245">Bieżący typ dynamiczny nie został utworzony przez wywołanie <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> metody.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1245">The current dynamic type has not been created by calling the <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> method.</span></span></exception>
        <altmember cref="P:System.Reflection.Emit.TypeBuilder.IsSecurityCritical" />
        <altmember cref="P:System.Reflection.Emit.TypeBuilder.IsSecuritySafeCritical" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md"><span data-ttu-id="fed4f-1246">Problemy związane z zabezpieczeniami w emisji odbicia</span><span class="sxs-lookup"><span data-stu-id="fed4f-1246">Security Issues in Reflection Emit</span></span></related>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md"><span data-ttu-id="fed4f-1247">Zagadnienia dotyczące zabezpieczeń dla odbicia</span><span class="sxs-lookup"><span data-stu-id="fed4f-1247">Security Considerations for Reflection</span></span></related>
        <related type="Article" href="~/docs/framework/security/security-changes.md"><span data-ttu-id="fed4f-1248">Zmiany zabezpieczeń w .NET Framework w wersji 4,0</span><span class="sxs-lookup"><span data-stu-id="fed4f-1248">Security Changes in the .NET Framework Version 4.0</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5fd8f46d-3961-46a7-84af-2eb1f48e75cf"><span data-ttu-id="fed4f-1249">Kod przezroczysty pod względem zabezpieczeń, poziom 1</span><span class="sxs-lookup"><span data-stu-id="fed4f-1249">Security-Transparent Code, Level 1</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4d05610a-0da6-4f08-acea-d54c9d6143c0"><span data-ttu-id="fed4f-1250">Kod o przezroczystym poziomie bezpieczeństwa, poziom 2</span><span class="sxs-lookup"><span data-stu-id="fed4f-1250">Security-Transparent Code, Level 2</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSerializable">
      <MemberSignature Language="C#" Value="public override bool IsSerializable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsSerializable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSerializable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSerializable : bool" Usage="System.Reflection.Emit.TypeBuilder.IsSerializable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public override bool IsSubclassOf (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubclassOf(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.IsSubclassOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubclassOf (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubclassOf(Type ^ c);" />
      <MemberSignature Language="F#" Value="override this.IsSubclassOf : Type -&gt; bool" Usage="typeBuilder.IsSubclassOf c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="fed4f-1251"><see cref="T:System.Type" /> , Który ma zostać sprawdzony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1251">A <see cref="T:System.Type" /> that is to be checked.</span></span></param>
        <summary><span data-ttu-id="fed4f-1252">Określa, czy ten typ pochodzi od określonego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1252">Determines whether this type is derived from a specified type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1253">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1253">Read-only.</span></span> <span data-ttu-id="fed4f-1254">Zwraca <see langword="true" /> czy ten typ jest taki sam jak typ <paramref name="c" />, czy jest podtypem typu <paramref name="c" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1254">Returns <see langword="true" /> if this type is the same as the type <paramref name="c" />, or is a subtype of type <paramref name="c" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSZArray">
      <MemberSignature Language="C#" Value="public override bool IsSZArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSZArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsSZArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSZArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSZArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSZArray : bool" Usage="System.Reflection.Emit.TypeBuilder.IsSZArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeDefinition">
      <MemberSignature Language="C#" Value="public override bool IsTypeDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTypeDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsTypeDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsTypeDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsTypeDefinition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTypeDefinition : bool" Usage="System.Reflection.Emit.TypeBuilder.IsTypeDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueTypeImpl">
      <MemberSignature Language="C#" Value="protected override bool IsValueTypeImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsValueTypeImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.IsValueTypeImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsValueTypeImpl () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsValueTypeImpl();" />
      <MemberSignature Language="F#" Value="override this.IsValueTypeImpl : unit -&gt; bool" Usage="typeBuilder.IsValueTypeImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVariableBoundArray">
      <MemberSignature Language="C#" Value="public override bool IsVariableBoundArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVariableBoundArray" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.IsVariableBoundArray" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsVariableBoundArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsVariableBoundArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVariableBoundArray : bool" Usage="System.Reflection.Emit.TypeBuilder.IsVariableBoundArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeArrayType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-1255"><see cref="T:System.Type" /> Zwraca obiekt, który reprezentuje tablicę bieżącego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1255">Returns a <see cref="T:System.Type" /> object that represents an array of the current type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeArrayType">
      <MemberSignature Language="C#" Value="public override Type MakeArrayType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeArrayType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.MakeArrayType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeArrayType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeArrayType();" />
      <MemberSignature Language="F#" Value="override this.MakeArrayType : unit -&gt; Type" Usage="typeBuilder.MakeArrayType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-1256"><see cref="T:System.Type" /> Zwraca obiekt, który reprezentuje tablicę jednowymiarową bieżącego typu, z dolną granicą zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1256">Returns a <see cref="T:System.Type" /> object that represents a one-dimensional array of the current type, with a lower bound of zero.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1257"><see cref="T:System.Type" /> Obiekt reprezentujący typ tablicy jednowymiarowej, którego typem elementu jest bieżący typ, z dolną granicą zero.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1257">A <see cref="T:System.Type" /> object representing a one-dimensional array type whose element type is the current type, with a lower bound of zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1258"><xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A> Metoda umożliwia generowanie typu tablicy z dowolnym możliwym typem elementu, w tym typami ogólnymi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1258">The <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A> method provides a way to generate an array type with any possible element type, including generic types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-1259">Poniższy przykład kodu tworzy moduł dynamiczny, typ abstrakcyjny o nazwie `Sample`i metodę abstrakcyjną o nazwie. `TestMethod`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1259">The following code example creates a dynamic module, an abstract type named `Sample`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="fed4f-1260">`TestMethod``ByRef` `Sample` `Sample`przyjmuje parametr (w Visual Basic) typu, wskaźnik do typu i tablicę typu `Sample`. `ref`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1260">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `Sample`, a pointer to type `Sample`, and an array of type `Sample`.</span></span> <span data-ttu-id="fed4f-1261">Zwraca dwuwymiarową tablicę typu `Sample`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1261">It returns a two-dimensional array of type `Sample`.</span></span> <span data-ttu-id="fed4f-1262">Przykładowy kod zapisuje moduł dynamiczny na dysku, więc można go przeanalizować za pomocą [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1262">The code example saves the dynamic module to disk, so you can examine it with the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md).</span></span>  
  
 [!code-csharp[MakeXxxTypeBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxTypeBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxTypeBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxTypeBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.MakeByRefType" />
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.MakePointerType" />
      </Docs>
    </Member>
    <Member MemberName="MakeArrayType">
      <MemberSignature Language="C#" Value="public override Type MakeArrayType (int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeArrayType(int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.MakeArrayType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeArrayType (rank As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeArrayType(int rank);" />
      <MemberSignature Language="F#" Value="override this.MakeArrayType : int -&gt; Type" Usage="typeBuilder.MakeArrayType rank" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rank" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rank"><span data-ttu-id="fed4f-1263">Liczba wymiarów tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1263">The number of dimensions for the array.</span></span></param>
        <summary><span data-ttu-id="fed4f-1264"><see cref="T:System.Type" /> Zwraca obiekt, który reprezentuje tablicę bieżącego typu o określonej liczbie wymiarów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1264">Returns a <see cref="T:System.Type" /> object that represents an array of the current type, with the specified number of dimensions.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1265"><see cref="T:System.Type" /> Obiekt, który reprezentuje tablicę jednowymiarową bieżącego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1265">A <see cref="T:System.Type" /> object that represents a one-dimensional array of the current type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1266"><xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A> Metoda umożliwia generowanie typu tablicy z dowolnym możliwym typem elementu, w tym typami ogólnymi.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1266">The <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A> method provides a way to generate an array type with any possible element type, including generic types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-1267">Poniższy przykład kodu tworzy moduł dynamiczny, typ abstrakcyjny o nazwie `Sample`i metodę abstrakcyjną o nazwie. `TestMethod`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1267">The following code example creates a dynamic module, an abstract type named `Sample`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="fed4f-1268">`TestMethod``ByRef` `Sample` `Sample`przyjmuje parametr (w Visual Basic) typu, wskaźnik do typu i tablicę typu `Sample`. `ref`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1268">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `Sample`, a pointer to type `Sample`, and an array of type `Sample`.</span></span> <span data-ttu-id="fed4f-1269">Zwraca dwuwymiarową tablicę typu `Sample`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1269">It returns a two-dimensional array of type `Sample`.</span></span> <span data-ttu-id="fed4f-1270">Przykładowy kod zapisuje moduł dynamiczny na dysku, więc można go przeanalizować za pomocą [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1270">The code example saves the dynamic module to disk, so you can examine it with the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md).</span></span>  
  
 [!code-csharp[MakeXxxTypeBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxTypeBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxTypeBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxTypeBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="fed4f-1271"><paramref name="rank" />nie jest prawidłowym wymiarem tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1271"><paramref name="rank" /> is not a valid array dimension.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.MakeByRefType" />
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.MakePointerType" />
      </Docs>
    </Member>
    <Member MemberName="MakeByRefType">
      <MemberSignature Language="C#" Value="public override Type MakeByRefType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeByRefType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.MakeByRefType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeByRefType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeByRefType();" />
      <MemberSignature Language="F#" Value="override this.MakeByRefType : unit -&gt; Type" Usage="typeBuilder.MakeByRefType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-1272">Zwraca obiekt, który reprezentuje bieżący typ, gdy jest <see langword="ref" /> przenoszona jako parametr<see langword="ByRef" /> (w Visual Basic). <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-1272">Returns a <see cref="T:System.Type" /> object that represents the current type when passed as a <see langword="ref" /> parameter (<see langword="ByRef" /> in Visual Basic).</span></span></summary>
        <returns><span data-ttu-id="fed4f-1273">Obiekt, który reprezentuje bieżący typ, gdy jest <see langword="ref" /> przenoszona jako parametr<see langword="ByRef" /> (w Visual Basic). <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-1273">A <see cref="T:System.Type" /> object that represents the current type when passed as a <see langword="ref" /> parameter (<see langword="ByRef" /> in Visual Basic).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1274">Metoda umożliwia generowanie `ref` typów (`ByRef` w Visual Basic) dla list parametrów. <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A></span><span class="sxs-lookup"><span data-stu-id="fed4f-1274">The <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A> method provides a way to generate `ref` types (`ByRef` in Visual Basic) for parameter lists.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-1275">Przy użyciu składni języka pośredniego firmy Microsoft (MSIL) <xref:System.Reflection.Emit.TypeBuilder> , `MyType`Jeśli bieżący reprezentuje, wówczas typem zwracanym przez tę `MyType&`metodę jest.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1275">Using Microsoft intermediate language (MSIL) syntax, if the current <xref:System.Reflection.Emit.TypeBuilder> represents `MyType`, then the type returned by this method would be `MyType&`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-1276">Poniższy przykład kodu tworzy moduł dynamiczny, typ abstrakcyjny o nazwie `Sample`i metodę abstrakcyjną o nazwie. `TestMethod`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1276">The following code example creates a dynamic module, an abstract type named `Sample`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="fed4f-1277">`TestMethod``ByRef` `Sample` `Sample`przyjmuje parametr (w Visual Basic) typu, wskaźnik do typu i tablicę typu `Sample`. `ref`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1277">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `Sample`, a pointer to type `Sample`, and an array of type `Sample`.</span></span> <span data-ttu-id="fed4f-1278">Zwraca dwuwymiarową tablicę typu `Sample`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1278">It returns a two-dimensional array of type `Sample`.</span></span> <span data-ttu-id="fed4f-1279">Przykładowy kod zapisuje moduł dynamiczny na dysku, więc można go przeanalizować za pomocą [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1279">The code example saves the dynamic module to disk, so you can examine it with the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md).</span></span>  
  
 [!code-csharp[MakeXxxTypeBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxTypeBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxTypeBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxTypeBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Emit.TypeBuilder.MakeArrayType" />
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.MakePointerType" />
      </Docs>
    </Member>
    <Member MemberName="MakeGenericType">
      <MemberSignature Language="C#" Value="public override Type MakeGenericType (params Type[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakeGenericType(class System.Type[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakeGenericType (ParamArray typeArguments As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakeGenericType(... cli::array &lt;Type ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="override this.MakeGenericType : Type[] -&gt; Type" Usage="typeBuilder.MakeGenericType typeArguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArguments" Type="System.Type[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArguments"><span data-ttu-id="fed4f-1280">Tablica typów, które mają zostać zastąpione dla parametrów typu bieżącej definicji typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1280">An array of types to be substituted for the type parameters of the current generic type definition.</span></span></param>
        <summary><span data-ttu-id="fed4f-1281">Zastępuje elementy tablicy typów dla parametrów typu bieżącej definicji typu ogólnego i zwraca wynikowy typ skonstruowany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1281">Substitutes the elements of an array of types for the type parameters of the current generic type definition, and returns the resulting constructed type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1282">Reprezentujący skonstruowany typ utworzony przez podstawianie <paramref name="typeArguments" /> elementów dla parametrów typu bieżącego typu ogólnego. <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-1282">A <see cref="T:System.Type" /> representing the constructed type formed by substituting the elements of <paramref name="typeArguments" /> for the type parameters of the current generic type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1283">Użyj tej metody, jeśli emitowany kod wymaga typu zbudowanego z bieżącej definicji typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1283">Use this method when your emitted code requires a type constructed from the current generic type definition.</span></span> <span data-ttu-id="fed4f-1284">Nie jest konieczne wywoływanie <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> metody przed <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> wywołaniem metody <xref:System.Reflection.Emit.TypeBuilder> , która reprezentuje definicję typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1284">It is not necessary to call the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method before calling the <xref:System.Reflection.Emit.TypeBuilder.MakeGenericType%2A> method on a <xref:System.Reflection.Emit.TypeBuilder> that represents a generic type definition.</span></span> <span data-ttu-id="fed4f-1285">Jeśli bieżąca <xref:System.Reflection.Emit.TypeBuilder> nie reprezentuje definicji typu ogólnego <xref:System.InvalidOperationException> , zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1285">If the current <xref:System.Reflection.Emit.TypeBuilder> does not represent the definition of a generic type, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="fed4f-1286">Obiekt zwrócony przez tę metodę działa jako symbol zastępczy dla konstruowanego typu ogólnego w wyemitowanym kodzie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1286">The object returned by this method functions as a placeholder for a constructed generic type in your emitted code.</span></span> <span data-ttu-id="fed4f-1287">Jest to wystąpienie klasy pochodnej <xref:System.Type> , która ma ograniczoną możliwość.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1287">It is an instance of a class derived from <xref:System.Type> that has limited capabilities.</span></span> <span data-ttu-id="fed4f-1288">W szczególności:</span><span class="sxs-lookup"><span data-stu-id="fed4f-1288">In particular:</span></span>  
  
-   <span data-ttu-id="fed4f-1289">Aby uzyskać metody, pola i konstruktory dla tych skonstruowanych typów ogólnych, użyj <xref:System.Reflection.Emit.TypeBuilder.GetMethod%28System.Type%2CSystem.Reflection.MethodInfo%29>przeciążeń <xref:System.Reflection.Emit.TypeBuilder.GetConstructor%28System.Type%2CSystem.Reflection.ConstructorInfo%29> metody, <xref:System.Reflection.Emit.TypeBuilder.GetField%28System.Type%2CSystem.Reflection.FieldInfo%29>i.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1289">To get methods, fields, and constructors for these constructed generic types, use the <xref:System.Reflection.Emit.TypeBuilder.GetMethod%28System.Type%2CSystem.Reflection.MethodInfo%29>, <xref:System.Reflection.Emit.TypeBuilder.GetField%28System.Type%2CSystem.Reflection.FieldInfo%29>, and <xref:System.Reflection.Emit.TypeBuilder.GetConstructor%28System.Type%2CSystem.Reflection.ConstructorInfo%29> method overloads.</span></span>  
  
-   <span data-ttu-id="fed4f-1290">Dwa wystąpienia, które reprezentują ten sam skonstruowany typ nie są porównywane jako równe.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1290">Two instances that represent the same constructed type do not compare as equal.</span></span> <span data-ttu-id="fed4f-1291">Na przykład, w poniższym kodzie `t1.Equals(t2)` zwraca: `false`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1291">For example, in the following code `t1.Equals(t2)` returns `false`:</span></span>  
  
 [!code-cpp[System.Reflection.Emit.TypeBuilder.MakeGenericType#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.reflection.emit.typebuilder.makegenerictype/cpp/remarks.cpp#1)]
 [!code-csharp[System.Reflection.Emit.TypeBuilder.MakeGenericType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.emit.typebuilder.makegenerictype/cs/remarks.cs#1)]
 [!code-vb[System.Reflection.Emit.TypeBuilder.MakeGenericType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.emit.typebuilder.makegenerictype/vb/remarks.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-1292">Bieżący typ nie reprezentuje definicji typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1292">The current type does not represent the definition of a generic type.</span></span> <span data-ttu-id="fed4f-1293">Oznacza to, <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> że <see langword="false" />zwraca.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1293">That is, <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> returns <see langword="false" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-1294"><paramref name="typeArguments" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1294"><paramref name="typeArguments" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fed4f-1295">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-1295">-or-</span></span> 
<span data-ttu-id="fed4f-1296">Każdy element <paramref name="typeArguments" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1296">Any element of <paramref name="typeArguments" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-1297"><see cref="P:System.Type.Module" /> Właściwość dowolnego<paramref name="typeArguments" /> elementu is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1297">The <see cref="P:System.Type.Module" /> property of any element of <paramref name="typeArguments" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fed4f-1298">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-1298">-or-</span></span> 
<span data-ttu-id="fed4f-1299">Właściwość modułu dowolnego <paramref name="typeArguments" /> elementu is <see langword="null" />. <see cref="P:System.Reflection.Module.Assembly" /></span><span class="sxs-lookup"><span data-stu-id="fed4f-1299">The <see cref="P:System.Reflection.Module.Assembly" /> property of the module of any element of <paramref name="typeArguments" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakePointerType">
      <MemberSignature Language="C#" Value="public override Type MakePointerType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type MakePointerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.MakePointerType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MakePointerType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ MakePointerType();" />
      <MemberSignature Language="F#" Value="override this.MakePointerType : unit -&gt; Type" Usage="typeBuilder.MakePointerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-1300"><see cref="T:System.Type" /> Zwraca obiekt, który reprezentuje typ niezarządzanego wskaźnika do bieżącego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1300">Returns a <see cref="T:System.Type" /> object that represents the type of an unmanaged pointer to the current type.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1301"><see cref="T:System.Type" /> Obiekt, który reprezentuje typ niezarządzanego wskaźnika do bieżącego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1301">A <see cref="T:System.Type" /> object that represents the type of an unmanaged pointer to the current type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1302"><xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A> Metoda umożliwia generowanie typów wskaźników dla list parametrów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1302">The <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A> method provides a way to generate pointer types for parameter lists.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-1303">Przy użyciu składni języka pośredniego firmy Microsoft (MSIL) <xref:System.Reflection.Emit.TypeBuilder> , `MyType`Jeśli bieżący reprezentuje, wówczas typem zwracanym przez tę `MyType*`metodę jest.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1303">Using Microsoft intermediate language (MSIL) syntax, if the current <xref:System.Reflection.Emit.TypeBuilder> represents `MyType`, then the type returned by this method would be `MyType*`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed4f-1304">Poniższy przykład kodu tworzy moduł dynamiczny, typ abstrakcyjny o nazwie `Sample`i metodę abstrakcyjną o nazwie. `TestMethod`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1304">The following code example creates a dynamic module, an abstract type named `Sample`, and an abstract method named `TestMethod`.</span></span> <span data-ttu-id="fed4f-1305">`TestMethod``ByRef` `Sample` `Sample`przyjmuje parametr (w Visual Basic) typu, wskaźnik do typu i tablicę typu `Sample`. `ref`</span><span class="sxs-lookup"><span data-stu-id="fed4f-1305">`TestMethod` takes a `ref` parameter (`ByRef` in Visual Basic) of type `Sample`, a pointer to type `Sample`, and an array of type `Sample`.</span></span> <span data-ttu-id="fed4f-1306">Zwraca dwuwymiarową tablicę typu `Sample`.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1306">It returns a two-dimensional array of type `Sample`.</span></span> <span data-ttu-id="fed4f-1307">Przykładowy kod zapisuje moduł dynamiczny na dysku, więc można go przeanalizować za pomocą [Ildasm. exe (Il dezasembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1307">The code example saves the dynamic module to disk, so you can examine it with the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md).</span></span>  
  
 [!code-csharp[MakeXxxTypeBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/MakeXxxTypeBuilder/CS/source.cs#1)]
 [!code-vb[MakeXxxTypeBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MakeXxxTypeBuilder/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Emit.TypeBuilder.MakeByRefType" />
        <altmember cref="Overload:System.Reflection.Emit.TypeBuilder.MakeArrayType" />
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Module : System.Reflection.Module" Usage="System.Reflection.Emit.TypeBuilder.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1308">Pobiera moduł dynamiczny, który zawiera definicję tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1308">Retrieves the dynamic module that contains this type definition.</span></span></summary>
        <value><span data-ttu-id="fed4f-1309">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1309">Read-only.</span></span> <span data-ttu-id="fed4f-1310">Pobiera moduł dynamiczny, który zawiera definicję tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1310">Retrieves the dynamic module that contains this type definition.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.Emit.TypeBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1311">Pobiera nazwę tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1311">Retrieves the name of this type.</span></span></summary>
        <value><span data-ttu-id="fed4f-1312">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1312">Read-only.</span></span> <span data-ttu-id="fed4f-1313"><see cref="T:System.String" /> Pobiera nazwę tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1313">Retrieves the <see cref="T:System.String" /> name of this type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string" Usage="System.Reflection.Emit.TypeBuilder.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1314">Pobiera przestrzeń nazw, w <see langword="TypeBuilder" /> której jest zdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1314">Retrieves the namespace where this <see langword="TypeBuilder" /> is defined.</span></span></summary>
        <value><span data-ttu-id="fed4f-1315">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1315">Read-only.</span></span> <span data-ttu-id="fed4f-1316">Pobiera przestrzeń nazw, w <see langword="TypeBuilder" /> której jest zdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1316">Retrieves the namespace where this <see langword="TypeBuilder" /> is defined.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PackingSize">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.PackingSize PackingSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.PackingSize PackingSize" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.PackingSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackingSize As PackingSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::PackingSize PackingSize { System::Reflection::Emit::PackingSize get(); };" />
      <MemberSignature Language="F#" Value="member this.PackingSize : System.Reflection.Emit.PackingSize" Usage="System.Reflection.Emit.TypeBuilder.PackingSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.PackingSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1317">Pobiera rozmiar pakowania tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1317">Retrieves the packing size of this type.</span></span></summary>
        <value><span data-ttu-id="fed4f-1318">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1318">Read-only.</span></span> <span data-ttu-id="fed4f-1319">Pobiera rozmiar pakowania tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1319">Retrieves the packing size of this type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Reflection.Emit.TypeBuilder.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1320">Zwraca typ, który został użyty do uzyskania tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1320">Returns the type that was used to obtain this type.</span></span></summary>
        <value><span data-ttu-id="fed4f-1321">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1321">Read-only.</span></span> <span data-ttu-id="fed4f-1322">Typ, który został użyty do uzyskania tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1322">The type that was used to obtain this type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed4f-1323">Ustawia atrybut niestandardowy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1323">Sets a custom attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="typeBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="fed4f-1324">Wystąpienie klasy pomocnika do definiowania atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1324">An instance of a helper class to define the custom attribute.</span></span></param>
        <summary><span data-ttu-id="fed4f-1325">Ustaw atrybut niestandardowy przy użyciu niestandardowego konstruktora atrybutów.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1325">Set a custom attribute using a custom attribute builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-1326">Począwszy od <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> , ten element członkowski nie jest już wymagany z flagą. [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</span><span class="sxs-lookup"><span data-stu-id="fed4f-1326">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="fed4f-1327">(Zobacz [problemy z zabezpieczeniami w emisji odbicia](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)). Aby można było korzystać z tej funkcji, aplikacja powinna [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] być ukierunkowana na lub później.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1327">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-1328"><paramref name="customBuilder" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1328"><paramref name="customBuilder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-1329">Dla bieżącego typu <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> dynamicznego właściwość jest <see langword="true" />, ale <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> właściwość jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1329">For the current dynamic type, the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="typeBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="fed4f-1330">Konstruktor dla atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1330">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="fed4f-1331">Obiekt BLOB typu Byte reprezentujący atrybuty.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1331">A byte blob representing the attributes.</span></span></param>
        <summary><span data-ttu-id="fed4f-1332">Ustawia atrybut niestandardowy przy użyciu określonego obiektu BLOB atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1332">Sets a custom attribute using a specified custom attribute blob.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1333">Aby uzyskać więcej informacji na temat formatowania `binaryAttribute`, zobacz dokumentację Common Language Infrastructure (CLI), szczególnie "partycja II: Definicja i semantyka metadanych ".</span><span class="sxs-lookup"><span data-stu-id="fed4f-1333">For more information on how to format `binaryAttribute`, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="fed4f-1334">Dokumentacja jest dostępna w trybie online; Zobacz [standardy C# ECMA i Common Language Infrastructure](https://go.microsoft.com/fwlink/?LinkID=99212) w MSDN i [Standard ECMA-335-Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) w międzynarodowej witrynie sieci Web ECMA.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1334">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fed4f-1335">Począwszy od <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> , ten element członkowski nie jest już wymagany z flagą. [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</span><span class="sxs-lookup"><span data-stu-id="fed4f-1335">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="fed4f-1336">(Zobacz [problemy z zabezpieczeniami w emisji odbicia](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)). Aby można było korzystać z tej funkcji, aplikacja powinna [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] być ukierunkowana na lub później.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1336">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed4f-1337"><paramref name="con" />lub <paramref name="binaryAttribute" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1337"><paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-1338">Dla bieżącego typu <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> dynamicznego właściwość jest <see langword="true" />, ale <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> właściwość jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1338">For the current dynamic type, the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetParent">
      <MemberSignature Language="C#" Value="public void SetParent (Type parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParent(class System.Type parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.SetParent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParent (parent As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParent(Type ^ parent);" />
      <MemberSignature Language="F#" Value="member this.SetParent : Type -&gt; unit" Usage="typeBuilder.SetParent parent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="fed4f-1339">Nowy typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1339">The new base type.</span></span></param>
        <summary><span data-ttu-id="fed4f-1340">Ustawia typ podstawowy typu, który jest aktualnie w przygotowaniu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1340">Sets the base type of the type currently under construction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1341">Jeśli `parent` jest `null` ,<xref:System.Object> jest używany jako typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1341">If `parent` is `null`, <xref:System.Object> is used as the base type.</span></span>  
  
 <span data-ttu-id="fed4f-1342">W .NET Framework wersje 1,0 i 1,1 żaden wyjątek nie jest zgłaszany, `parent` jeśli jest typem interfejsu, <xref:System.TypeLoadException> ale jest zgłaszany, gdy <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1342">In the .NET Framework versions 1.0 and 1.1, no exception is thrown if `parent` is an interface type, but a <xref:System.TypeLoadException> is thrown when the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method is called.</span></span>  
  
 <span data-ttu-id="fed4f-1343"><xref:System.Reflection.Emit.TypeBuilder.SetParent%2A> Metoda nie sprawdza najbardziej nieprawidłowych typów nadrzędnych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1343">The <xref:System.Reflection.Emit.TypeBuilder.SetParent%2A> method does not check for most invalid parent types.</span></span> <span data-ttu-id="fed4f-1344">Na przykład nie odrzuca typu nadrzędnego, który nie ma konstruktora bez parametrów, gdy bieżący typ ma Konstruktor bezparametrowy, nie odrzuca zapieczętowanych typów i nie odrzuca <xref:System.Delegate> typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1344">For example, it does not reject a parent type that has no parameterless constructor when the current type has a parameterless constructor, it does not reject sealed types, and it does not reject the <xref:System.Delegate> type.</span></span> <span data-ttu-id="fed4f-1345">We wszystkich tych przypadkach wyjątki są generowane przez <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1345">In all these cases, exceptions are thrown by the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-1346">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1346">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="fed4f-1347">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-1347">-or-</span></span> 
 <span data-ttu-id="fed4f-1348"><paramref name="parent" />jest <see langword="null" />, a bieżące wystąpienie reprezentuje interfejs, którego atrybuty nie obejmują <see cref="F:System.Reflection.TypeAttributes.Abstract" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1348"><paramref name="parent" /> is <see langword="null" />, and the current instance represents an interface whose attributes do not include <see cref="F:System.Reflection.TypeAttributes.Abstract" />.</span></span>  
  
<span data-ttu-id="fed4f-1349">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed4f-1349">-or-</span></span> 
<span data-ttu-id="fed4f-1350">Dla bieżącego typu <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> dynamicznego właściwość jest <see langword="true" />, ale <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> właściwość jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1350">For the current dynamic type, the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericType" /> property is <see langword="true" />, but the <see cref="P:System.Reflection.Emit.TypeBuilder.IsGenericTypeDefinition" /> property is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed4f-1351"><paramref name="parent" />jest interfejsem.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1351"><paramref name="parent" /> is an interface.</span></span> <span data-ttu-id="fed4f-1352">Ten warunek wyjątku jest nowy w .NET Framework wersja 2,0.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1352">This exception condition is new in the .NET Framework version 2.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.Size" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Size : int" Usage="System.Reflection.Emit.TypeBuilder.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1353">Pobiera łączny rozmiar typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1353">Retrieves the total size of a type.</span></span></summary>
        <value><span data-ttu-id="fed4f-1354">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1354">Read-only.</span></span> <span data-ttu-id="fed4f-1355">Pobiera łączny rozmiar tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1355">Retrieves this type's total size.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _TypeBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _TypeBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_TypeBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="fed4f-1356">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1356">Reserved for future use.</span></span> <span data-ttu-id="fed4f-1357">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1357">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="fed4f-1358">Przekazana tablica nazw ma być mapowana.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1358">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="fed4f-1359">Liczba nazw, które mają być mapowane.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1359">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="fed4f-1360">Ustawienia regionalne kontekstu, w którym można interpretować nazwy.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1360">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="fed4f-1361">Tablica przydzielana przez obiekt wywołujący, który otrzymuje numery identyfikacyjne odpowiadających nazw.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1361">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="fed4f-1362">Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1362">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1363">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1363">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="fed4f-1364">Więcej informacji o `IDispatch::GetIDsOfNames`programie znajduje się w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1364">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="fed4f-1365">Dostęp z późnym wiązaniem przy użyciu interfejsu COM <c>IDispatch</c> nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1365">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._TypeBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _TypeBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._TypeBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _TypeBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._TypeBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_TypeBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._TypeBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="fed4f-1366">Informacje o typie, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1366">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="fed4f-1367">Identyfikator regionalny dla informacji o typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1367">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="fed4f-1368">Otrzymuje wskaźnik do obiektu informacji żądanego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1368">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="fed4f-1369">Pobiera informacje o typie dla obiektu, których następnie można użyć do uzyskania informacji o typie interfejsu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1369">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1370">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1370">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="fed4f-1371">Więcej informacji o `IDispatch::GetTypeInfo`programie znajduje się w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1371">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="fed4f-1372">Dostęp z późnym wiązaniem przy użyciu interfejsu COM <c>IDispatch</c> nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1372">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _TypeBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _TypeBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_TypeBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="fed4f-1373">Wskazuje lokalizację, która odbiera informację o liczbie typów dostarczanych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1373">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="fed4f-1374">Pobiera informację o liczbie typów interfejsów, jakie zawiera obiekt (0 lub 1).</span><span class="sxs-lookup"><span data-stu-id="fed4f-1374">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1375">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1375">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="fed4f-1376">Więcej informacji o `IDispatch::GetTypeInfoCount`programie znajduje się w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1376">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="fed4f-1377">Dostęp z późnym wiązaniem przy użyciu interfejsu COM <c>IDispatch</c> nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1377">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._TypeBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _TypeBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._TypeBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.System#Runtime#InteropServices#_TypeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _TypeBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._TypeBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_TypeBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._TypeBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="fed4f-1378">Określa element członkowski.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1378">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="fed4f-1379">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1379">Reserved for future use.</span></span> <span data-ttu-id="fed4f-1380">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1380">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="fed4f-1381">Ustawienia regionalne kontekstu, w którym można interpretować argumenty.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1381">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="fed4f-1382">Flagi opisujące kontekst wywołania.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1382">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="fed4f-1383">Wskaźnik do struktury zawiera tablicę argumentów, tablicę identyfikatorów DISPID argumentu dla nazwanych argumentów i zlicza liczbę elementów w tablicach.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1383">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="fed4f-1384">Wskaźnik miejsca, gdzie ma być przechowywany wynik.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1384">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="fed4f-1385">Wskaźnik do struktury, która zawiera informacje o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1385">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="fed4f-1386">Indeks pierwszego argumentu, który zawiera błąd.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1386">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="fed4f-1387">Umożliwia dostęp do właściwości i metod udostępnianych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1387">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1388">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1388">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="fed4f-1389">Więcej informacji o `IDispatch::Invoke`programie znajduje się w bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1389">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="fed4f-1390">Dostęp z późnym wiązaniem przy użyciu interfejsu COM <c>IDispatch</c> nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1390">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.TypeBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="typeBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed4f-1391">Zwraca nazwę typu wykluczającego przestrzeń nazw.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1391">Returns the name of the type excluding the namespace.</span></span></summary>
        <returns><span data-ttu-id="fed4f-1392">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1392">Read-only.</span></span> <span data-ttu-id="fed4f-1393">Nazwa typu wykluczającego przestrzeń nazw.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1393">The name of the type excluding the namespace.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeHandle">
      <MemberSignature Language="C#" Value="public override RuntimeTypeHandle TypeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeTypeHandle TypeHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.TypeHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeHandle As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property RuntimeTypeHandle TypeHandle { RuntimeTypeHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeHandle : RuntimeTypeHandle" Usage="System.Reflection.Emit.TypeBuilder.TypeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1394">Nieobsługiwane w modułach dynamicznych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1394">Not supported in dynamic modules.</span></span></summary>
        <value><span data-ttu-id="fed4f-1395">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1395">Read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed4f-1396">Pobierz typ za pomocą <xref:System.Type.GetType%2A?displayProperty=nameWithType> lub <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> i Użyj odbicia na pobranym typie.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1396">Retrieve the type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType> and use reflection on the retrieved type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fed4f-1397">Nieobsługiwane w modułach dynamicznych.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1397">Not supported in dynamic modules.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeToken TypeToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.TypeToken TypeToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.TypeToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeToken As TypeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::TypeToken TypeToken { System::Reflection::Emit::TypeToken get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeToken : System.Reflection.Emit.TypeToken" Usage="System.Reflection.Emit.TypeBuilder.TypeToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1398">Zwraca token typu tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1398">Returns the type token of this type.</span></span></summary>
        <value><span data-ttu-id="fed4f-1399">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1399">Read-only.</span></span> <span data-ttu-id="fed4f-1400"><see langword="TypeToken" /> Zwraca typ.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1400">Returns the <see langword="TypeToken" /> of this type.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-1401">Typ został wcześniej utworzony przy użyciu <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1401">The type was previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public override Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.TypeBuilder.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Reflection.Emit.TypeBuilder.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1402">Zwraca podstawowy typ systemu dla tego <see langword="TypeBuilder" />elementu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1402">Returns the underlying system type for this <see langword="TypeBuilder" />.</span></span></summary>
        <value><span data-ttu-id="fed4f-1403">Tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1403">Read-only.</span></span> <span data-ttu-id="fed4f-1404">Zwraca podstawowy typ systemu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1404">Returns the underlying system type.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed4f-1405">Ten typ jest wyliczeniem, ale nie ma podstawowego typu systemu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1405">This type is an enumeration, but there is no underlying system type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnspecifiedTypeSize">
      <MemberSignature Language="C#" Value="public const int UnspecifiedTypeSize = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 UnspecifiedTypeSize = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize" />
      <MemberSignature Language="VB.NET" Value="Public Const UnspecifiedTypeSize As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int UnspecifiedTypeSize = 0;" />
      <MemberSignature Language="F#" Value="val mutable UnspecifiedTypeSize : int" Usage="System.Reflection.Emit.TypeBuilder.UnspecifiedTypeSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="fed4f-1406">Reprezentuje, że nie określono całkowitego rozmiaru dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="fed4f-1406">Represents that total size for the type is not specified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>