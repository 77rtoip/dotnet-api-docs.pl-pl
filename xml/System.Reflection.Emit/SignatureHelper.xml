<Type Name="SignatureHelper" FullName="System.Reflection.Emit.SignatureHelper">
  <TypeSignature Language="C#" Value="public sealed class SignatureHelper : System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SignatureHelper extends System.Object implements class System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.SignatureHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SignatureHelper&#xA;Implements _SignatureHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignatureHelper sealed : System::Runtime::InteropServices::_SignatureHelper" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._SignatureHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._SignatureHelper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a8bf5-101">Udostępnia metody do tworzenia podpisów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-101">Provides methods for building signatures.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-102">Użyj <xref:System.Reflection.Emit.SignatureHelper> klasy w celu utworzenia obiektu blob podpisu, które mogą zostać przekazane do <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> metody <xref:System.Reflection.Emit.DynamicILInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-102">Use the <xref:System.Reflection.Emit.SignatureHelper> class to create a signature blob that can be passed to the <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> method of the <xref:System.Reflection.Emit.DynamicILInfo> class.</span></span> <span data-ttu-id="a8bf5-103">A <xref:System.Reflection.Emit.SignatureHelper> obiektu mogą również zostać przekazane do <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> przeciążenie metody można umieścić instrukcję i plik token podpisu w strumieniu język pośredni (MSIL) firmy Microsoft.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-103">A <xref:System.Reflection.Emit.SignatureHelper> object can also be passed to the <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> method overload to insert an instruction and a signature token into a Microsoft intermediate language (MSIL) stream.</span></span> <span data-ttu-id="a8bf5-104">Informacji na temat podpisu obiekty BLOB i metadanych podpisu znajduje się w dokumentacji ECMA partycji II metadanych.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-104">For information on signature blobs and signature metadata, see the ECMA Partition II Metadata documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8bf5-105">Dokumentacja ECMA II partycji jest dostępna w trybie online; zobacz [ECMA C# i wspólne normy infrastruktury języka](http://go.microsoft.com/fwlink/?LinkID=99212) w witrynie MSDN i [standardowe ECMA-335 - infrastruktury języka wspólnego (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) w witrynie sieci Web międzynarodowej Ecma.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-105">The ECMA Partition II documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddArgument">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8bf5-106">Dodaje argumentu w podpisie.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-106">Adds an argument to the signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type clsArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type clsArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (clsArgument As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ clsArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsArgument" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clsArgument"><span data-ttu-id="a8bf5-107">Typ argumentu.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-107">The type of the argument.</span></span></param>
        <summary><span data-ttu-id="a8bf5-108">Dodaje argumentu w podpisie.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-108">Adds an argument to the signature.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-109">Aby dodać argumentu o opcjonalne lub wymagane Modyfikatory niestandardowe, użyj <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-109">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bf5-110">Podpis zostało już zakończone.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-110">The signature has already been finished.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8bf5-111"><paramref name="clsArgument" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-111"><paramref name="clsArgument" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, bool pinned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, bool pinned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, pinned As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, bool pinned);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" />
        <Parameter Name="pinned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="a8bf5-112">Typ argumentu.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-112">The argument type.</span></span></param>
        <param name="pinned">
          <span data-ttu-id="a8bf5-113"><see langword="true" /> Jeśli argument jest przypięty; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-113"><see langword="true" /> if the argument is pinned; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a8bf5-114">Dodaje argumentu typu określonego w podpisie, określania, czy argument jest przypięty.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-114">Adds an argument of the specified type to the signature, specifying whether the argument is pinned.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-115">Aby dodać argumentu o opcjonalne lub wymagane Modyfikatory niestandardowe, użyj <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-115">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8bf5-116"><paramref name="argument" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-116"><paramref name="argument" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, class System.Type[] requiredCustomModifiers, class System.Type[] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, requiredCustomModifiers As Type(), optionalCustomModifiers As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, cli::array &lt;Type ^&gt; ^ requiredCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalCustomModifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="a8bf5-117">Typ argumentu.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-117">The argument type.</span></span></param>
        <param name="requiredCustomModifiers"><span data-ttu-id="a8bf5-118">Tablica typów reprezentujący wymagane Modyfikatory niestandardowych argumentu, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" /> lub <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-118">An array of types representing the required custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="a8bf5-119">Jeśli argument ma Brak wymaganego modyfikatorów niestandardowych, określ <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-119">If the argument has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalCustomModifiers"><span data-ttu-id="a8bf5-120">Tablica typów reprezentujący opcjonalne Modyfikatory niestandardowych argumentu, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" /> lub <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-120">An array of types representing the optional custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="a8bf5-121">Jeśli argument ma Brak opcjonalne modyfikatorów niestandardowych, określ <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-121">If the argument has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a8bf5-122">Dodaje argumentu w podpisie z określonych modyfikatorów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-122">Adds an argument to the signature, with the specified custom modifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-123">Zobacz <xref:System.Runtime.CompilerServices> przestrzeń nazw dla klas reprezentujących Modyfikatory niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-123">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8bf5-124"><paramref name="argument" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-124"><paramref name="argument" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a8bf5-125">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-125">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-126">Element <paramref name="requiredCustomModifiers" /> lub <paramref name="optionalCustomModifiers" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-126">An element of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bf5-127">Podpis zostało już zakończone.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-127">The signature has already been finished.</span></span>  
  
 <span data-ttu-id="a8bf5-128">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-128">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-129">Jeden z określonych modyfikatorów niestandardowy jest typem tablicy.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-129">One of the specified custom modifiers is an array type.</span></span>  
  
 <span data-ttu-id="a8bf5-130">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-130">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-131">Jeden z określonych modyfikatorów niestandardowy jest otwartym typem ogólnym.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-131">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="a8bf5-132">Oznacza to <see cref="P:System.Type.ContainsGenericParameters" /> jest właściwość <see langword="true" /> dla modyfikator niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-132">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArguments">
      <MemberSignature Language="C#" Value="public void AddArguments (Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArguments(class System.Type[] arguments, class System.Type[][] requiredCustomModifiers, class System.Type[][] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArguments (arguments As Type(), requiredCustomModifiers As Type()(), optionalCustomModifiers As Type()())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArguments(cli::array &lt;Type ^&gt; ^ arguments, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalCustomModifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Type[]" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="a8bf5-133">Typy argumentów do dodania.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-133">The types of the arguments to be added.</span></span></param>
        <param name="requiredCustomModifiers"><span data-ttu-id="a8bf5-134">Tablica tablice typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-134">An array of arrays of types.</span></span> <span data-ttu-id="a8bf5-135">Każdej macierzy typy reprezentuje wymagane Modyfikatory niestandardowych dla odpowiedniego argumentu, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" /> lub <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-135">Each array of types represents the required custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="a8bf5-136">Jeśli określonego argumentu Brak wymaganego modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicę typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-136">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="a8bf5-137">W razie argumentów potrzeby niestandardowych Modyfikatory określ <see langword="null" /> zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-137">If none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalCustomModifiers"><span data-ttu-id="a8bf5-138">Tablica tablice typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-138">An array of arrays of types.</span></span> <span data-ttu-id="a8bf5-139">Każdej macierzy typy reprezentuje opcjonalne Modyfikatory niestandardowych dla odpowiedniego argumentu, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" /> lub <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-139">Each array of types represents the optional custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="a8bf5-140">Jeśli określonego argumentu Brak opcjonalne modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicę typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-140">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="a8bf5-141">Jeśli nie ma żadnym argumentów opcjonalnych Modyfikatory niestandardowych, określ <see langword="null" /> zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-141">If none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="a8bf5-142">Dodaje do podpisu, z określonych modyfikatorów niestandardowy zestaw argumentów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-142">Adds a set of arguments to the signature, with the specified custom modifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-143">Argumenty są dodawane na końcu podpisu, w kolejności elementów `arguments`.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-143">The arguments are added to the end of the signature, in order of the elements of `arguments`.</span></span>  
  
 <span data-ttu-id="a8bf5-144">Zobacz <xref:System.Runtime.CompilerServices> przestrzeń nazw dla klas reprezentujących Modyfikatory niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-144">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8bf5-145">Element <paramref name="arguments" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-145">An element of <paramref name="arguments" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a8bf5-146">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-146">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-147">Jedna z określonych modyfikatorów niestandardowy jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-147">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="a8bf5-148">(Jednak <see langword="null" /> można określić dla tablicy Modyfikatory niestandardowe dla wszystkich argumentów.)</span><span class="sxs-lookup"><span data-stu-id="a8bf5-148">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bf5-149">Podpis zostało już zakończone.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-149">The signature has already been finished.</span></span>  
  
 <span data-ttu-id="a8bf5-150">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-150">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-151">Jeden z określonych modyfikatorów niestandardowy jest typem tablicy.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-151">One of the specified custom modifiers is an array type.</span></span>  
  
 <span data-ttu-id="a8bf5-152">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-152">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-153">Jeden z określonych modyfikatorów niestandardowy jest otwartym typem ogólnym.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-153">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="a8bf5-154">Oznacza to <see cref="P:System.Type.ContainsGenericParameters" /> jest właściwość <see langword="true" /> dla modyfikator niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-154">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
 <span data-ttu-id="a8bf5-155">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-155">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-156">Rozmiar <paramref name="requiredCustomModifiers" /> lub <paramref name="optionalCustomModifiers" /> nie równa się rozmiar <paramref name="arguments" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-156">The size of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> does not equal the size of <paramref name="arguments" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSentinel">
      <MemberSignature Language="C#" Value="public void AddSentinel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSentinel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddSentinel" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSentinel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSentinel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8bf5-157">Znaki końca vararg stała część.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-157">Marks the end of a vararg fixed part.</span></span> <span data-ttu-id="a8bf5-158">Służy to tylko jeśli element wywołujący jest tworzenie witryny wywołania vararg podpisu.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-158">This is only used if the caller is creating a vararg signature call site.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a8bf5-159">Obiekt, z którym należy porównać tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-159">The object with which this instance should be compared.</span></span></param>
        <summary><span data-ttu-id="a8bf5-160">Sprawdza, czy to wystąpienie jest równe danego obiektu.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-160">Checks if this instance is equal to the given object.</span></span></summary>
        <returns>
          <span data-ttu-id="a8bf5-161"><see langword="true" /> Jeśli dany obiekt jest <see langword="SignatureHelper" /> i tym samym podpisie reprezentuje; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-161"><see langword="true" /> if the given object is a <see langword="SignatureHelper" /> and represents the same signature; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetFieldSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetFieldSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFieldSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetFieldSigHelper(System::Reflection::Module ^ mod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="a8bf5-162">Dynamiczny moduł, który zawiera pole, dla którego <see langword="SignatureHelper" /> jest wymagane.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-162">The dynamic module that contains the field for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <summary><span data-ttu-id="a8bf5-163">Zwraca obiekt pomocnika podpis pola.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-163">Returns a signature helper for a field.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-164"><see langword="SignatureHelper" /> Obiektu dla pola.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-164">The <see langword="SignatureHelper" /> object for a field.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8bf5-165">Tworzy i zwraca wartość skrótu dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-165">Creates and returns a hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-166">Zwraca wartość skrótu na podstawie nazwy.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-166">Returns the hash code based on the name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-167">Wartość skrótu jest tworzona na podstawie nazwy tego wystąpienia, dlatego zwracana wartość jest taka sama jak `GetHashCode` metody wywołane na wartość `Name` właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-167">The hash code is created from the name of this instance, so the return value is the same as if the `GetHashCode` method were called on the value of the `Name` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalVarSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8bf5-168">Zwraca obiekt pomocnika podpisu dla zmiennej lokalnej.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-168">Returns a signature helper for a local variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper () As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8bf5-169">Zwraca obiekt pomocnika podpisu dla zmiennej lokalnej.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-169">Returns a signature helper for a local variable.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-170">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> dla zmiennej lokalnej.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-170">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> for a local variable.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper(System::Reflection::Module ^ mod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="a8bf5-171">Dynamiczny moduł, który zawiera zmiennej lokalnej, dla którego <see langword="SignatureHelper" /> jest wymagane.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-171">The dynamic module that contains the local variable for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <summary><span data-ttu-id="a8bf5-172">Zwraca obiekt pomocnika podpisu dla zmiennej lokalnej.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-172">Returns a signature helper for a local variable.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-173"><see langword="SignatureHelper" /> Obiektu dla zmiennej lokalnej.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-173">The <see langword="SignatureHelper" /> object for a local variable.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethodSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8bf5-174">Zwraca obiekt pomocnika podpisu metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-174">Returns a signature helper for a method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="callingConvention"><span data-ttu-id="a8bf5-175">Konwencja wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-175">The calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="a8bf5-176">Zwracany typ metody, lub <see langword="null" /> dla zwracanego typu void (<see langword="Sub" /> procedury w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a8bf5-176">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="a8bf5-177">Zwraca pomocnika podpis metody podanej metody przez wywoływanie Konwencji i typ zwracany.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-177">Returns a signature helper for a method given the method's calling convention and return type.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-178"><see langword="SignatureHelper" /> Obiektu dla metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-178">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (unmanagedCallingConvention As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Runtime::InteropServices::CallingConvention unmanagedCallingConvention, Type ^ returnType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedCallingConvention" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="unmanagedCallingConvention"><span data-ttu-id="a8bf5-179">Niezarządzane konwencja wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-179">The unmanaged calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="a8bf5-180">Zwracany typ metody, lub <see langword="null" /> dla zwracanego typu void (<see langword="Sub" /> procedury w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a8bf5-180">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="a8bf5-181">Zwraca obiekt pomocnika sygnatury dla metody podanej metody wywoływania Konwencji i przywracać typ niezarządzany.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-181">Returns a signature helper for a method given the method's unmanaged calling convention and return type.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-182"><see langword="SignatureHelper" /> Obiektu dla metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-182">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8bf5-183"><paramref name="unmanagedCallConv" /> jest nieznana nieobsługiwana konwencja wywoływania.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-183"><paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="a8bf5-184"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> Zawierający metody, dla którego <see langword="SignatureHelper" /> jest wymagane.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-184">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="a8bf5-185">Konwencja wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-185">The calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="a8bf5-186">Zwracany typ metody, lub <see langword="null" /> dla zwracanego typu void (<see langword="Sub" /> procedury w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a8bf5-186">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="a8bf5-187">Zwraca obiekt pomocnika podpisu metody danego modułu metody wywoływanie Konwencji i typ zwracany.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-187">Returns a signature helper for a method given the method's module, calling convention, and return type.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-188"><see langword="SignatureHelper" /> Obiektu dla metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-188">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8bf5-189"><paramref name="mod" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-189"><paramref name="mod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8bf5-190"><paramref name="mod" /> nie jest <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-190"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Runtime.InteropServices.CallingConvention unmanagedCallConv, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallConv, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, unmanagedCallConv As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Runtime::InteropServices::CallingConvention unmanagedCallConv, Type ^ returnType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="unmanagedCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="a8bf5-191"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> Zawierający metody, dla którego <see langword="SignatureHelper" /> jest wymagane.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-191">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="unmanagedCallConv"><span data-ttu-id="a8bf5-192">Niezarządzane konwencja wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-192">The unmanaged calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="a8bf5-193">Zwracany typ metody, lub <see langword="null" /> dla zwracanego typu void (<see langword="Sub" /> procedury w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a8bf5-193">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="a8bf5-194">Zwraca obiekt pomocnika podpisu dla metody danego modułu metody niezarządzanych konwencja wywołania i typ zwracany.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-194">Returns a signature helper for a method given the method's module, unmanaged calling convention, and return type.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-195"><see langword="SignatureHelper" /> Obiektu dla metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-195">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8bf5-196"><paramref name="mod" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-196"><paramref name="mod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8bf5-197"><paramref name="mod" /> nie jest <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-197"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
 <span data-ttu-id="a8bf5-198">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-198">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-199"><paramref name="unmanagedCallConv" /> jest nieznana nieobsługiwana konwencja wywoływania.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-199"><paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="a8bf5-200"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> Zawierający metody, dla którego <see langword="SignatureHelper" /> jest wymagane.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-200">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="a8bf5-201">Zwracany typ metody, lub <see langword="null" /> dla zwracanego typu void (<see langword="Sub" /> procedury w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a8bf5-201">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="a8bf5-202">Typy argumentów metody, lub <see langword="null" /> Jeśli metoda nie ma argumentów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-202">The types of the arguments of the method, or <see langword="null" /> if the method has no arguments.</span></span></param>
        <summary><span data-ttu-id="a8bf5-203">Zwraca obiekt pomocnika sygnatury dla metody z standardowej konwencji wywoływania danej metody modułu, typ zwracany i typy argumentów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-203">Returns a signature helper for a method with a standard calling convention, given the method's module, return type, and argument types.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-204"><see langword="SignatureHelper" /> Obiektu dla metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-204">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-205">To przeciążenie tworzy podpisu z standardowej konwencji wywoływania.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-205">This overload creates a signature with a standard calling convention.</span></span>  
  
 <span data-ttu-id="a8bf5-206">Aby utworzyć podpis metody o niestandardowych modyfikatory, użyj <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> metoda przeciążenia, a następnie użyj <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> lub <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> przeciążenia metody, aby dodać argumentów, które mają Modyfikatory niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-206">To create a method signature with custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> method overload and then use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> or <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overloads to add arguments with custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8bf5-207"><paramref name="mod" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-207"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a8bf5-208">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-208">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-209">Element <paramref name="parameterTypes" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-209">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8bf5-210"><paramref name="mod" /> nie jest <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-210"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertySigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8bf5-211">Zwraca obiekt pomocnika podpis właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-211">Returns a signature helper for a property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="a8bf5-212"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> Zawierający właściwości, dla którego <see cref="T:System.Reflection.Emit.SignatureHelper" /> jest wymagane.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-212">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="a8bf5-213">Typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-213">The property type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="a8bf5-214">Typy argumentów lub <see langword="null" /> Jeśli właściwość nie ma argumentów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-214">The argument types, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <summary><span data-ttu-id="a8bf5-215">Zwraca obiekt pomocnika podpisu dla właściwości, podane dynamiczny moduł, który zawiera właściwości, typ właściwości i argumenty właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-215">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, and the property arguments.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-216">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> obiektu właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-216">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-217">Aby utworzyć obiekt pomocnika podpisu dla właściwości z modyfikatorów niestandardowych opcjonalne lub wymagane, użyj <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-217">To create a signature helper for a property with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8bf5-218"><paramref name="mod" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-218"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a8bf5-219">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-219">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-220">Element <paramref name="parameterTypes" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-220">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8bf5-221"><paramref name="mod" /> nie jest <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-221"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="a8bf5-222"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> Zawierający właściwości, dla którego <see cref="T:System.Reflection.Emit.SignatureHelper" /> jest wymagane.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-222">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="a8bf5-223">Typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-223">The property type.</span></span></param>
        <param name="requiredReturnTypeCustomModifiers"><span data-ttu-id="a8bf5-224">Tablica typów reprezentujący wymagane Modyfikatory niestandardowych dla typu zwracanych danych, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" /> lub <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-224">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="a8bf5-225">Jeśli typ zwracany jest Brak wymaganego modyfikatorów niestandardowych, określić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-225">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalReturnTypeCustomModifiers"><span data-ttu-id="a8bf5-226">Tablica typów reprezentujący opcjonalne Modyfikatory niestandardowych dla typu zwracanych danych, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" /> lub <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-226">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="a8bf5-227">Jeśli typ zwracany jest brak opcjonalne modyfikatorów niestandardowych, określić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-227">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="a8bf5-228">Typy argumentów właściwości lub <see langword="null" /> Jeśli właściwość nie ma argumentów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-228">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <param name="requiredParameterTypeCustomModifiers"><span data-ttu-id="a8bf5-229">Tablica tablice typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-229">An array of arrays of types.</span></span> <span data-ttu-id="a8bf5-230">Każdej macierzy typy reprezentuje wymagane Modyfikatory niestandardowych argumentu odpowiednie właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-230">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="a8bf5-231">Jeśli określonego argumentu Brak wymaganego modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicę typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-231">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="a8bf5-232">Jeśli właściwość nie ma argumentów lub argumentów wymaganych Modyfikatory niestandardowych, określ <see langword="null" /> zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-232">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalParameterTypeCustomModifiers"><span data-ttu-id="a8bf5-233">Tablica tablice typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-233">An array of arrays of types.</span></span> <span data-ttu-id="a8bf5-234">Każdej macierzy typy reprezentuje opcjonalne Modyfikatory niestandardowych argumentu odpowiednie właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-234">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="a8bf5-235">Jeśli określonego argumentu Brak opcjonalne modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicę typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-235">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="a8bf5-236">Jeśli właściwość nie ma argumentów lub żadna Argumenty opcjonalne Modyfikatory niestandardowych nie ma, określ <see langword="null" /> zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-236">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="a8bf5-237">Zwraca obiekt pomocnika podpisu dla właściwości, w danej dynamiczny moduł, który zawiera właściwości, typ właściwości, właściwość argumentów i Modyfikatory niestandardowych dla zwracanego typu i argumentów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-237">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, the property arguments, and custom modifiers for the return type and arguments.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-238">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> obiektu właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-238">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-239">Zobacz <xref:System.Runtime.CompilerServices> przestrzeń nazw dla klas reprezentujących Modyfikatory niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-239">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="a8bf5-240">Jeśli właściwość nie ma żadnych niestandardowych modyfikatory, użyj <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-240">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8bf5-241"><paramref name="mod" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-241"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a8bf5-242">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-242">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-243">Element <paramref name="parameterTypes" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-243">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a8bf5-244">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-244">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-245">Jedna z określonych modyfikatorów niestandardowy jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-245">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="a8bf5-246">(Jednak <see langword="null" /> można określić dla tablicy Modyfikatory niestandardowe dla wszystkich argumentów.)</span><span class="sxs-lookup"><span data-stu-id="a8bf5-246">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bf5-247">Podpis zostało już zakończone.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-247">The signature has already been finished.</span></span>  
  
 <span data-ttu-id="a8bf5-248">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-248">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-249"><paramref name="mod" /> nie jest <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-249"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
 <span data-ttu-id="a8bf5-250">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-250">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-251">Jeden z określonych modyfikatorów niestandardowy jest typem tablicy.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-251">One of the specified custom modifiers is an array type.</span></span>  
  
 <span data-ttu-id="a8bf5-252">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-252">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-253">Jeden z określonych modyfikatorów niestandardowy jest otwartym typem ogólnym.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-253">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="a8bf5-254">Oznacza to <see cref="P:System.Type.ContainsGenericParameters" /> jest właściwość <see langword="true" /> dla modyfikator niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-254">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
 <span data-ttu-id="a8bf5-255">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-255">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-256">Rozmiar <paramref name="requiredParameterTypeCustomModifiers" /> lub <paramref name="optionalParameterTypeCustomModifiers" /> nie równa się rozmiar <paramref name="parameterTypes" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-256">The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="a8bf5-257"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> Zawierający właściwości, dla którego <see cref="T:System.Reflection.Emit.SignatureHelper" /> jest wymagane.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-257">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="a8bf5-258">Konwencja wywołania metody dostępu właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-258">The calling convention of the property accessors.</span></span></param>
        <param name="returnType"><span data-ttu-id="a8bf5-259">Typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-259">The property type.</span></span></param>
        <param name="requiredReturnTypeCustomModifiers"><span data-ttu-id="a8bf5-260">Tablica typów reprezentujący wymagane Modyfikatory niestandardowych dla typu zwracanych danych, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" /> lub <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-260">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="a8bf5-261">Jeśli typ zwracany jest Brak wymaganego modyfikatorów niestandardowych, określić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-261">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalReturnTypeCustomModifiers"><span data-ttu-id="a8bf5-262">Tablica typów reprezentujący opcjonalne Modyfikatory niestandardowych dla typu zwracanych danych, takich jak <see cref="T:System.Runtime.CompilerServices.IsConst" /> lub <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-262">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="a8bf5-263">Jeśli typ zwracany jest brak opcjonalne modyfikatorów niestandardowych, określić <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-263">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="a8bf5-264">Typy argumentów właściwości lub <see langword="null" /> Jeśli właściwość nie ma argumentów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-264">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <param name="requiredParameterTypeCustomModifiers"><span data-ttu-id="a8bf5-265">Tablica tablice typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-265">An array of arrays of types.</span></span> <span data-ttu-id="a8bf5-266">Każdej macierzy typy reprezentuje wymagane Modyfikatory niestandardowych argumentu odpowiednie właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-266">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="a8bf5-267">Jeśli określonego argumentu Brak wymaganego modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicę typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-267">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="a8bf5-268">Jeśli właściwość nie ma argumentów lub argumentów wymaganych Modyfikatory niestandardowych, określ <see langword="null" /> zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-268">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalParameterTypeCustomModifiers"><span data-ttu-id="a8bf5-269">Tablica tablice typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-269">An array of arrays of types.</span></span> <span data-ttu-id="a8bf5-270">Każdej macierzy typy reprezentuje opcjonalne Modyfikatory niestandardowych argumentu odpowiednie właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-270">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="a8bf5-271">Jeśli określonego argumentu Brak opcjonalne modyfikatorów niestandardowych, określ <see langword="null" /> zamiast tablicę typów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-271">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="a8bf5-272">Jeśli właściwość nie ma argumentów lub żadna Argumenty opcjonalne Modyfikatory niestandardowych nie ma, określ <see langword="null" /> zamiast tablicy tablic.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-272">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="a8bf5-273">Zwraca obiekt pomocnika podpisu dla właściwości, w danej dynamiczny moduł, który zawiera właściwość, Konwencja wywoływania, typ właściwości, argumenty właściwości i Modyfikatory niestandardowych dla zwracanego typu i argumentów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-273">Returns a signature helper for a property, given the dynamic module that contains the property, the calling convention, the property type, the property arguments, and custom modifiers for the return type and arguments.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-274">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> obiektu właściwości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-274">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-275">Zobacz <xref:System.Runtime.CompilerServices> przestrzeń nazw dla klas reprezentujących Modyfikatory niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-275">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="a8bf5-276">Jeśli właściwość nie ma żadnych niestandardowych modyfikatory, użyj <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-276">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8bf5-277">To przeciążenie metody została wprowadzona w systemie [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] lub nowszym.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-277">This method overload is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8bf5-278"><paramref name="mod" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-278"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a8bf5-279">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-279">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-280">Element <paramref name="parameterTypes" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-280">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a8bf5-281">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-281">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-282">Jedna z określonych modyfikatorów niestandardowy jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-282">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="a8bf5-283">(Jednak <see langword="null" /> można określić dla tablicy Modyfikatory niestandardowe dla wszystkich argumentów.)</span><span class="sxs-lookup"><span data-stu-id="a8bf5-283">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8bf5-284">Podpis zostało już zakończone.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-284">The signature has already been finished.</span></span>  
  
 <span data-ttu-id="a8bf5-285">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-285">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-286"><paramref name="mod" /> nie jest <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-286"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
 <span data-ttu-id="a8bf5-287">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-287">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-288">Jeden z określonych modyfikatorów niestandardowy jest typem tablicy.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-288">One of the specified custom modifiers is an array type.</span></span>  
  
 <span data-ttu-id="a8bf5-289">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-289">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-290">Jeden z określonych modyfikatorów niestandardowy jest otwartym typem ogólnym.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-290">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="a8bf5-291">Oznacza to <see cref="P:System.Type.ContainsGenericParameters" /> jest właściwość <see langword="true" /> dla modyfikator niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-291">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
 <span data-ttu-id="a8bf5-292">—lub—</span><span class="sxs-lookup"><span data-stu-id="a8bf5-292">-or-</span></span>  
  
 <span data-ttu-id="a8bf5-293">Rozmiar <paramref name="requiredParameterTypeCustomModifiers" /> lub <paramref name="optionalParameterTypeCustomModifiers" /> nie równa się rozmiar <paramref name="parameterTypes" />.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-293">The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public byte[] GetSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8bf5-294">Dodaje do podpisu tokenu końcowego i oznacza podpis gotowych, więc można dodać żadnych dalszych tokenów.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-294">Adds the end token to the signature and marks the signature as finished, so no further tokens can be added.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-295">Zwraca tablicę bajtów składają się z pełną podpisu.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-295">Returns a byte array made up of the full signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _SignatureHelper.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_SignatureHelper::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="a8bf5-296">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-296">Reserved for future use.</span></span> <span data-ttu-id="a8bf5-297">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-297">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="a8bf5-298">Przekazana tablica nazw ma być mapowana.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-298">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="a8bf5-299">Liczba nazw, które mają być mapowane.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-299">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="a8bf5-300">Ustawienia regionalne kontekstu, w którym można interpretować nazwy.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-300">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="a8bf5-301">Tablica przydzielana przez obiekt wywołujący, który otrzymuje numery identyfikacyjne odpowiadających nazw.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-301">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="a8bf5-302">Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-302">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-303">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-303">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a8bf5-304">Aby uzyskać więcej informacji na temat `IDispatch::GetIDsOfNames`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-304">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a8bf5-305">Dostęp z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-305">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _SignatureHelper.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="a8bf5-306">Informacje o typie, który będzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-306">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="a8bf5-307">Identyfikator regionalny dla informacji o typie.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-307">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="a8bf5-308">Otrzymuje wskaźnik do obiektu informacji żądanego typu.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-308">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="a8bf5-309">Pobiera informacje o typie dla obiektu, których następnie można użyć do uzyskania informacji o typie interfejsu.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-309">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-310">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a8bf5-311">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfo`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-311">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a8bf5-312">Dostęp z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-312">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _SignatureHelper.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="a8bf5-313">Wskazuje lokalizację, która odbiera informację o liczbie typów dostarczanych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-313">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="a8bf5-314">Pobiera informację o liczbie typów interfejsów, jakie zawiera obiekt (0 lub 1).</span><span class="sxs-lookup"><span data-stu-id="a8bf5-314">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-315">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-315">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a8bf5-316">Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfoCount`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-316">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a8bf5-317">Dostęp z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-317">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.Invoke">
      <MemberSignature Language="C#" Value="void _SignatureHelper.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _SignatureHelper.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_SignatureHelper::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="a8bf5-318">Określa element członkowski.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-318">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="a8bf5-319">Zarezerwowane do użytku w przyszłości.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-319">Reserved for future use.</span></span> <span data-ttu-id="a8bf5-320">Musi być wartością IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-320">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="a8bf5-321">Ustawienia regionalne kontekstu, w którym można interpretować argumenty.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-321">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="a8bf5-322">Flagi opisujące kontekst wywołania.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-322">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="a8bf5-323">Wskaźnik do struktury zawiera tablicę argumentów, tablicę identyfikatorów DISPID argumentu dla nazwanych argumentów i zlicza liczbę elementów w tablicach.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-323">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="a8bf5-324">Wskaźnik miejsca, gdzie ma być przechowywany wynik.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-324">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="a8bf5-325">Wskaźnik do struktury, która zawiera informacje o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-325">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="a8bf5-326">Indeks pierwszego argumentu, który zawiera błąd.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-326">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="a8bf5-327">Umożliwia dostęp do właściwości i metod udostępnianych przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-327">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8bf5-328">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-328">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a8bf5-329">Aby uzyskać więcej informacji na temat `IDispatch::Invoke`, zobacz bibliotece MSDN.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-329">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a8bf5-330">Dostęp z późnym wiązaniem za pomocą modelu COM <c>IDispatch</c> interfejs nie jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-330">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8bf5-331">Zwraca ciąg reprezentujący argumenty podpisu.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-331">Returns a string representing the signature arguments.</span></span></summary>
        <returns><span data-ttu-id="a8bf5-332">Zwraca ciąg reprezentujący argumenty podpis.</span><span class="sxs-lookup"><span data-stu-id="a8bf5-332">Returns a string representing the arguments of this signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>