<Type Name="UnmanagedMarshal" FullName="System.Reflection.Emit.UnmanagedMarshal">
  <TypeSignature Language="C#" Value="public sealed class UnmanagedMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.UnmanagedMarshal" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnmanagedMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnmanagedMarshal sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7268f-101">Reprezentuje klasę, która opisuje sposób organizowania pola z kodu zarządzanego do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="7268f-101">Represents the class that describes how to marshal a field from managed to unmanaged code.</span></span> <span data-ttu-id="7268f-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="7268f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7268f-103">Przykładowy kod przedstawia rozwiązania dla tego typu przestarzałe.</span><span class="sxs-lookup"><span data-stu-id="7268f-103">The code example shows the workaround for this obsolete type.</span></span>  
  
 <span data-ttu-id="7268f-104">Organizowanie polega na pakowanie i unpackaging parametrów, może wystąpić zdalnych wywołań procedur.</span><span class="sxs-lookup"><span data-stu-id="7268f-104">Marshaling is the process of packaging and unpackaging parameters so remote procedure calls can occur.</span></span> <span data-ttu-id="7268f-105">Podczas przekazywania międzyprocesowego, polem mogą być Konwersja formatu, jeśli format typu zarządzanego różni się od formatu odpowiedniego typu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="7268f-105">During marshaling, a field might undergo a format conversion when the format of the managed type is different from the format of the corresponding unmanaged type.</span></span> <span data-ttu-id="7268f-106">Na przykład możesz chcieć kierować `String` typu jako niezarządzane BSTR.</span><span class="sxs-lookup"><span data-stu-id="7268f-106">For example, you might want to marshal a `String` type as an unmanaged BSTR.</span></span> <span data-ttu-id="7268f-107">Niektóre konwersje formatu są obsługiwane automatycznie w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="7268f-107">Some format conversions are handled automatically by the runtime.</span></span> <span data-ttu-id="7268f-108">Aby zastąpić domyślne zachowanie, należy użyć `UnmanagedMarshal` klasy do definiowania Konwersja formatu.</span><span class="sxs-lookup"><span data-stu-id="7268f-108">To override the default behavior, you must use the `UnmanagedMarshal` class to define the format conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7268f-109">Poniższy przykład kodu pokazuje kod zastępczy przestarzałe <xref:System.Reflection.Emit.UnmanagedMarshal> typu.</span><span class="sxs-lookup"><span data-stu-id="7268f-109">The following code example shows replacement code for the obsolete <xref:System.Reflection.Emit.UnmanagedMarshal> type.</span></span> <span data-ttu-id="7268f-110">Przykład emituje to zestaw jednego modułu o nazwie `EmitMarshalAs.dll`, zawierający typu o nazwie `Sample`.</span><span class="sxs-lookup"><span data-stu-id="7268f-110">The example emits a single-module assembly named `EmitMarshalAs.dll`, containing a type named `Sample`.</span></span> <span data-ttu-id="7268f-111">Typ ma metodę o nazwie `Test`, z jednym parametrem typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="7268f-111">The type has a method named `Test`, with one parameter of type <xref:System.String>.</span></span> <span data-ttu-id="7268f-112">Przykład kodu dotyczy <xref:System.Runtime.InteropServices.MarshalAsAttribute> z <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> do parametru.</span><span class="sxs-lookup"><span data-stu-id="7268f-112">The code example applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> with <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> to the parameter.</span></span>  
  
 <span data-ttu-id="7268f-113">Można użyć [Ildasm.exe (dezasembler IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) do zbadania zestawu emitowany i sprawdź, czy parametr jest oznaczony `marshal(bstr)`.</span><span class="sxs-lookup"><span data-stu-id="7268f-113">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the emitted assembly and observe that the parameter is marked `marshal(bstr)`.</span></span>  
  
 [!code-cpp[UnmanagedMarshalObsolete#1](~/samples/snippets/cpp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cpp/source.cpp#1)]
 [!code-csharp[UnmanagedMarshalObsolete#1](~/samples/snippets/csharp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cs/source.cs#1)]
 [!code-vb[UnmanagedMarshalObsolete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UnmanagedMarshalObsolete/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
    <altmember cref="T:System.Guid" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType BaseType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7268f-114">Pobiera niezarządzanego typu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="7268f-114">Gets an unmanaged base type.</span></span> <span data-ttu-id="7268f-115">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7268f-115">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="7268f-116"><see langword="UnmanagedType" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="7268f-116">An <see langword="UnmanagedType" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7268f-117">Typ niezarządzany jest <see langword="LPArray" /> lub <see langword="SafeArray" />.</span><span class="sxs-lookup"><span data-stu-id="7268f-117">The unmanaged type is not an <see langword="LPArray" /> or a <see langword="SafeArray" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValArray (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValArray(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValArray (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValArray(int elemCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount"><span data-ttu-id="7268f-118">Liczba elementów w tablicy o stałej długości.</span><span class="sxs-lookup"><span data-stu-id="7268f-118">The number of elements in the fixed-length array.</span></span></param>
        <summary><span data-ttu-id="7268f-119">Określa tablicę o stałej długości (ByValArray), aby kierować do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="7268f-119">Specifies a fixed-length array (ByValArray) to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="7268f-120"><see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="7268f-120">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7268f-121">`DefineByValArray` Metoda nie jest prosty kierowanie macierzystego.</span><span class="sxs-lookup"><span data-stu-id="7268f-121">The `DefineByValArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="7268f-122">Można wprowadzić tylko niezarządzanego konstrukcje przy użyciu tych konstruktory statyczne.</span><span class="sxs-lookup"><span data-stu-id="7268f-122">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="7268f-123">Kierowanie tablicy jest procesem bardziej złożone niż przekazywanie parametru liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="7268f-123">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="7268f-124">Elementy członkowskie tablicy są kopiowane w określonej kolejności, dzięki czemu po drugiej stronie można dokładnie rekonstrukcji tablicy.</span><span class="sxs-lookup"><span data-stu-id="7268f-124">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7268f-125">Argument nie jest typu prostego macierzystego.</span><span class="sxs-lookup"><span data-stu-id="7268f-125">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValTStr">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValTStr (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValTStr(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValTStr (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValTStr(int elemCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount"><span data-ttu-id="7268f-126">Liczba elementów w tablicy stałego buforu.</span><span class="sxs-lookup"><span data-stu-id="7268f-126">The number of elements in the fixed array buffer.</span></span></param>
        <summary><span data-ttu-id="7268f-127">Określa ciąg do tablicy o ustalonym buforu (ByValTStr), aby kierować do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="7268f-127">Specifies a string in a fixed array buffer (ByValTStr) to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="7268f-128"><see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="7268f-128">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7268f-129">`DefineByValStr` Metoda nie jest prosty kierowanie macierzystego.</span><span class="sxs-lookup"><span data-stu-id="7268f-129">The `DefineByValStr` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="7268f-130">Można wprowadzić tylko niezarządzanego konstrukcje przy użyciu tych konstruktory statyczne.</span><span class="sxs-lookup"><span data-stu-id="7268f-130">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="7268f-131">Kierowanie tablicy jest procesem bardziej złożone niż przekazywanie parametru liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="7268f-131">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="7268f-132">Elementy członkowskie tablicy są kopiowane w określonej kolejności, dzięki czemu po drugiej stronie można dokładnie rekonstrukcji tablicy.</span><span class="sxs-lookup"><span data-stu-id="7268f-132">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7268f-133">Argument nie jest typu prostego macierzystego.</span><span class="sxs-lookup"><span data-stu-id="7268f-133">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineLPArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineLPArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineLPArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineLPArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineLPArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType"><span data-ttu-id="7268f-134">Typ niezarządzany, do którego należy kierować tablicy.</span><span class="sxs-lookup"><span data-stu-id="7268f-134">The unmanaged type to which to marshal the array.</span></span></param>
        <summary><span data-ttu-id="7268f-135">Określa <see langword="LPArray" /> do organizowania do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="7268f-135">Specifies an <see langword="LPArray" /> to marshal to unmanaged code.</span></span> <span data-ttu-id="7268f-136">Długość <see langword="LPArray" /> jest określana w czasie wykonywania przez rozmiar rzeczywisty tablicy organizowane.</span><span class="sxs-lookup"><span data-stu-id="7268f-136">The length of an <see langword="LPArray" /> is determined at runtime by the size of the actual marshaled array.</span></span></summary>
        <returns><span data-ttu-id="7268f-137"><see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="7268f-137">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7268f-138">`DefineLPArray` Metoda nie jest prosty kierowanie macierzystego.</span><span class="sxs-lookup"><span data-stu-id="7268f-138">The `DefineLPArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="7268f-139">Można wprowadzić tylko niezarządzanego konstrukcje przy użyciu tych konstruktory statyczne.</span><span class="sxs-lookup"><span data-stu-id="7268f-139">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="7268f-140">Kierowanie tablicy jest procesem bardziej złożone niż przekazywanie parametru liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="7268f-140">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="7268f-141">Elementy członkowskie tablicy są kopiowane w określonej kolejności, dzięki czemu po drugiej stronie można dokładnie rekonstrukcji tablicy.</span><span class="sxs-lookup"><span data-stu-id="7268f-141">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7268f-142">Argument nie jest typu prostego macierzystego.</span><span class="sxs-lookup"><span data-stu-id="7268f-142">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineSafeArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineSafeArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineSafeArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineSafeArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineSafeArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType"><span data-ttu-id="7268f-143">Typ podstawowy lub <see langword="UnmanagedType" /> każdego elementu tablicy.</span><span class="sxs-lookup"><span data-stu-id="7268f-143">The base type or the <see langword="UnmanagedType" /> of each element of the array.</span></span></param>
        <summary><span data-ttu-id="7268f-144">Określa <see langword="SafeArray" /> do organizowania do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="7268f-144">Specifies a <see langword="SafeArray" /> to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="7268f-145"><see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="7268f-145">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7268f-146">`DefineSafeArray` Metoda nie jest prosty kierowanie macierzystego.</span><span class="sxs-lookup"><span data-stu-id="7268f-146">The `DefineSafeArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="7268f-147">Można wprowadzić tylko niezarządzanego konstrukcje przy użyciu tych konstruktory statyczne.</span><span class="sxs-lookup"><span data-stu-id="7268f-147">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="7268f-148">Kierowanie tablicy jest procesem bardziej złożone niż przekazywanie parametru liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="7268f-148">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="7268f-149">Elementy członkowskie tablicy są kopiowane w określonej kolejności, dzięki czemu po drugiej stronie można dokładnie rekonstrukcji tablicy.</span><span class="sxs-lookup"><span data-stu-id="7268f-149">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7268f-150">Argument nie jest typu prostego macierzystego.</span><span class="sxs-lookup"><span data-stu-id="7268f-150">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedMarshal">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType unmanagedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal(valuetype System.Runtime.InteropServices.UnmanagedType unmanagedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineUnmanagedMarshal(System::Runtime::InteropServices::UnmanagedType unmanagedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="unmanagedType"><span data-ttu-id="7268f-151">Typ niezarządzany, do którego ma być organizowany typu.</span><span class="sxs-lookup"><span data-stu-id="7268f-151">The unmanaged type to which the type is to be marshaled.</span></span></param>
        <summary><span data-ttu-id="7268f-152">Określa danego typu, który ma być przekazywane do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="7268f-152">Specifies a given type that is to be marshaled to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="7268f-153"><see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="7268f-153">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7268f-154"><xref:System.Runtime.InteropServices.UnmanagedType> Przekazany do tej metody musi być typu prostego macierzystego.</span><span class="sxs-lookup"><span data-stu-id="7268f-154">The <xref:System.Runtime.InteropServices.UnmanagedType> passed to this method must be a simple native type.</span></span> <span data-ttu-id="7268f-155">Dopuszcza się żadna z następujących wartości: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, lub <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7268f-155">None of the following values may be used: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7268f-156">Za pomocą tej metody można wprowadzić tylko niezarządzanego konstrukcje.</span><span class="sxs-lookup"><span data-stu-id="7268f-156">Only unmanaged marshal constructs can be made using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7268f-157">Argument nie jest typu prostego macierzystego.</span><span class="sxs-lookup"><span data-stu-id="7268f-157">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="ElementCount">
      <MemberSignature Language="C#" Value="public int ElementCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementCount" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7268f-158">Pobiera element numer.</span><span class="sxs-lookup"><span data-stu-id="7268f-158">Gets a number element.</span></span> <span data-ttu-id="7268f-159">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7268f-159">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="7268f-160">Całkowitą wskazującą liczbę elementów.</span><span class="sxs-lookup"><span data-stu-id="7268f-160">An integer indicating the element count.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7268f-161">Brak `ElementCount` tylko wtedy, gdy istnieje `NativeTypeFixedArray`.</span><span class="sxs-lookup"><span data-stu-id="7268f-161">There is an `ElementCount` only if there is a `NativeTypeFixedArray`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7268f-162">Argument nie jest licznik elementów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="7268f-162">The argument is not an unmanaged element count.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType GetUnmanagedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType GetUnmanagedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetUnmanagedType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType GetUnmanagedType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7268f-163">Wskazuje typ niezarządzany.</span><span class="sxs-lookup"><span data-stu-id="7268f-163">Indicates an unmanaged type.</span></span> <span data-ttu-id="7268f-164">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7268f-164">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="7268f-165"><see cref="T:System.Runtime.InteropServices.UnmanagedType" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="7268f-165">An <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7268f-166">`GetUnmanagedType` Właściwość jest funkcję dostępu do typu macierzystego.</span><span class="sxs-lookup"><span data-stu-id="7268f-166">The `GetUnmanagedType` property is an accessor function for the native type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="IIDGuid">
      <MemberSignature Language="C#" Value="public Guid IIDGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid IIDGuid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IIDGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid IIDGuid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7268f-167">Pobiera identyfikator GUID.</span><span class="sxs-lookup"><span data-stu-id="7268f-167">Gets a GUID.</span></span> <span data-ttu-id="7268f-168">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7268f-168">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="7268f-169">A <see cref="T:System.Guid" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7268f-169">A <see cref="T:System.Guid" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7268f-170">Ta właściwość zawsze zwraca Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="7268f-170">This property always returns Guid.Empty.</span></span> <span data-ttu-id="7268f-171">Ta właściwość może zostać usunięta w przyszłej wersji.</span><span class="sxs-lookup"><span data-stu-id="7268f-171">This property might be removed in a future release.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7268f-172">Argument nie jest organizatora niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="7268f-172">The argument is not a custom marshaler.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
  </Members>
</Type>