<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="243bd847b5407c0b553d0c054eac1c272bf164ea" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39994773" /></Metadata><TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <TypeSignature Language="F#" Value="type XamlMemberInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia punkt rozszerzenia, które mogą uzyskiwać dostęp do charakterystyki składowych elementu członkowskiego XAML za pomocą metod innych niż odbicia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Celem <xref:System.Xaml.Schema.XamlMemberInvoker> jest umożliwienie rozszerzalny system typów XAML, schemat oraz działającego wykonawczego, które nie zależą od w pełni funkcji CLR, takich jak atrybuty CLR, odbicie informacje za pośrednictwem <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej. Podklasy <xref:System.Xaml.Schema.XamlMemberInvoker> są używane jako parametry wejściowe dla alternatywnej Konstruktory klasy schematu XAML takich jak <xref:System.Xaml.XamlMember>. Możesz podklasy <xref:System.Xaml.XamlMember> i przekazać <xref:System.Xaml.Schema.XamlMemberInvoker> za pośrednictwem konstruktora podstawowego. Wraz z definiowanie <xref:System.Xaml.Schema.XamlMemberInvoker> dla konstruktora, należy również podać zastąpień dla co najmniej część `Lookup` metody <xref:System.Xaml.XamlMember>.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker> zawiera domyślną implementację. Domyślna implementacja jest zgodna podobne modelu implementacji domyślnej typów schematu XAML <xref:System.Xaml.XamlType> i <xref:System.Xaml.XamlMember>: system typów CLR jest używany podczas tworzenia wystąpienia, wartości i wyszukiwań, w tym o korzystaniu z atrybutów CLR <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker> zawiera metody służące do pobierania podstawowe i operacje na zestawie (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>). Zawiera także właściwości <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> i <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, ale nie są wirtualne.  
  
> [!NOTE]
>  Może być możliwe uzyskanie <xref:System.Xaml.Schema.XamlMemberInvoker> wartość, która reprezentuje dyrektywa XAML, który jest implementowany jako Klasa prywatna w implementacji System.Xaml. Jeśli użytkownik podejmie próbę wywołania <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> lub <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> na ten element wywołujący, zgłaszany jest wyjątek.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja jest pusty.  
  
 Ten konstruktor jest wywoływana wewnętrznie podać wartość dla <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>. Dla <xref:System.Xaml.Schema.XamlMemberInvoker> podklasy, oczekuje się, że możesz użyć <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> podpis dla konstrukcji lub przesłonięcie, który wywołuje <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> jako podstawowy. Zapewnianie <xref:System.Xaml.XamlMember> implementuje domyślnego wzorca, gdzie <xref:System.Xaml.Schema.XamlMemberInvoker> można modyfikować.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlMemberInvoker : System.Xaml.XamlMember -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="new System.Xaml.Schema.XamlMemberInvoker member" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member"><see cref="T:System.Xaml.XamlMember" /> Wartości dla określonego elementu członkowskiego XAML, dotyczą tego <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy, w oparciu o podany <see cref="T:System.Xaml.XamlMember" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływana wewnętrznie na podstawie <xref:System.Xaml.XamlMember> gdzie <xref:System.Xaml.Schema.XamlMemberInvoker> służy do konstruowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="member" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj&#xA;override this.GetValue : obj -&gt; obj" Usage="xamlMemberInvoker.GetValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Wystąpienie typu właściciela dla elementu członkowskiego.</param>
        <summary>Pobiera wartość odpowiednie właściwości z wystąpienia usługi.</summary>
        <returns>Wartość żądanej właściwości.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="instance" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Ta metoda wywoływana <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlMember" />.  
  
 **- lub -**  
  
Wywołać tej metody w elemencie członkowskim tylko do zapisu.  
  
 **- lub -**  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> jest <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Podstawowa implementacja zawiera wywołanie wewnętrznego Pomocnika <c>ThrowIfUnknown</c>. Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdzie <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlMember" />, która obejmuje przypadków, gdy <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> z <see cref="T:System.Xaml.XamlMember" /> jest <see langword="null" />.  Podstawowa implementacja zgłasza wyjątek, jeśli <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> jest <see langword="null" />.  Właściwości statyczne (<see cref="P:System.Reflection.MethodBase.IsStatic" /> jest <see langword="true" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) Domyślna implementacja wywołuje <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> przekazywanie <see langword="null" /> jako pierwszego parametru i spakowane <paramref name="instance" /> w ciągu sekundy. W przypadku niestatycznej właściwości wywoływanych przez nią <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> i przekazuje <paramref name="instance" /> jako pierwszego parametru i pakietu pusty jako drugi parametr.</para></block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="xamlMemberInvoker.SetValue (instance, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Wystąpienie typu właściciela dla elementu członkowskiego.</param>
        <param name="value">Wartość właściwości do ustawienia.</param>
        <summary>Ustawia wartość właściwości odpowiednie dla wystąpienia.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="instance" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Ta metoda wywoływana <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlMember" />.  
  
 **- lub -**  
  
Wywołać tej metody w elemencie członkowskim tylko do odczytu.  
  
 **- lub -**  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> jest <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Podstawowa implementacja zawiera wywołanie wewnętrznego Pomocnika <c>ThrowIfUnknown</c>. Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdzie <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlMember" />, która obejmuje przypadków, gdy <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> z <see cref="T:System.Xaml.XamlMember" /> jest <see langword="null" />.  Podstawowa implementacja zgłasza wyjątek, jeśli <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> jest <see langword="null" />.  Właściwości statyczne (<see cref="P:System.Reflection.MethodBase.IsStatic" /> jest <see langword="true" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) Domyślna implementacja wywołuje <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> przekazywanie <see langword="null" /> jako pierwszego parametru i pakowania w usłudze <paramref name="instance" /> i <paramref name="value" /> jako drugi parametr. W przypadku niestatycznej właściwości wywoływanych przez nią <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> i przekazuje <paramref name="instance" /> jako pierwszy parametr i <paramref name="value" /> jako drugiego parametru.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult&#xA;override this.ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult" Usage="xamlMemberInvoker.ShouldSerializeValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Wystąpienie właściwość do badania potrzeby stanu trwałego.</param>
        <summary>Wskazuje, czy wartość ta musi zostać utrwalone przez procesy serializacji.</summary>
        <returns>Wartość wyliczenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja zwraca <xref:System.Xaml.Schema.ShouldSerializeResult.Default> jeśli sam element członkowski XAML jest <xref:System.Xaml.XamlMember.IsUnknown%2A>, lub jeśli nie CLR odzwierciedlania odpowiednie `ShouldSerialize` metoda znajduje się na podstawowych elementu członkowskiego przez odbicie domyślne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingGetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Reflection.MethodInfo" /> dla środowiska CLR jest odpowiednie dla tej metody, która pobiera wartości dla właściwości <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value><see cref="T:System.Reflection.MethodInfo" /> Dla środowiska CLR jest odpowiednie dla tej metody, która pobiera wartości dla właściwości <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, lub <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zależy od wywołania <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> o konstruowaniu <xref:System.Xaml.XamlMember>. Nieznany <xref:System.Xaml.XamlMember>, lub w przypadku, gdy <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> zwraca `null`, właściwość ta zwraca `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Reflection.MethodInfo" /> dla środowiska CLR jest odpowiednie dla tej metody, która ustawia wartości właściwości, które <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value><see cref="T:System.Reflection.MethodInfo" /> Dla środowiska CLR jest odpowiednie dla tej metody, która ustawia wartości właściwości, które <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, lub <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zależy od wywołania <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> o konstruowaniu <xref:System.Xaml.XamlMember>. Nieznany <xref:System.Xaml.XamlMember>, lub w przypadku, gdy <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> zwraca `null`, właściwość ta zwraca `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Udostępnia wartość statyczna, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value>Wartość statyczna, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę wartość do podawania <xref:System.Xaml.Schema.XamlMemberInvoker> parametru System.Xaml definicja interfejsu API zazwyczaj spowoduje, że dzwonić kodu zgłaszają wyjątki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>