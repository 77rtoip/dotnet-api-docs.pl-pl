<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlMemberInvoker.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac506593ac583c0f24c3b973fbdbfba42e69f84af7c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06593ac583c0f24c3b973fbdbfba42e69f84af7c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</source>
          <target state="translated">Udostępnia punkt rozszerzenia, które mogą uzyskiwać dostęp do właściwości elementu członkowskiego elementu członkowskiego XAML za pomocą metod innych niż odbicia.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>The purpose of <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph>, and so on.</source>
          <target state="translated">Celem <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> jest umożliwienie rozszerzalny system typów języka XAML, schematów i działającego wykonawczego, które nie w pełni korzystają z funkcji CLR, takich jak atrybuty CLR, odbicia informacji za pomocą <ph id="ph2">&lt;xref:System.Type&gt;</ph> i <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph>i tak dalej.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>Subclasses of <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> are used as input parameters for the alternate constructors of XAML schema classes such as <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">Podklasy <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> są używane jako parametry wejściowe dla alternatywnego konstruktorów klas schematu XAML takich jak <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>You subclass <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> and pass the <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> through to the base constructor.</source>
          <target state="translated">Możesz podklasy <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> i przekaż <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> za pośrednictwem konstruktora podstawowego.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>Along with defining a <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> for the constructor, you must also provide overrides for at least some of the <ph id="ph2">`Lookup`</ph> methods of <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">Wraz z definiowanie <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> dla konstruktora, musisz także podać zastąpień dla co najmniej niektóre <ph id="ph2">`Lookup`</ph> metody <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> has a default implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> ma domyślne wdrożenie.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>The default implementation follows a similar model to the default implementation of XAML schema types <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <ph id="ph3">&lt;xref:System.Type&gt;</ph> and <ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph>, and so on.</source>
          <target state="translated">Domyślna implementacja następuje modelu podobne do implementacji domyślnej typów schematu XAML <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> i <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>: system typów CLR służy do tworzenia wystąpienia, wartości i wyszukiwań, w tym o korzystaniu z atrybutów CLR <ph id="ph3">&lt;xref:System.Type&gt;</ph> i <ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph>i tak dalej.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> provides methods for basic get and set operations (<ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;</ph>; <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> udostępnia metody dla podstawowego get i set operations (<ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;</ph>; <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>It also provides the properties <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;</ph>, but these are not virtual.</source>
          <target state="translated">Zapewnia także właściwości <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;</ph>, ale nie są one wirtualnego.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>It may be possible to obtain a <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</source>
          <target state="translated">Może być możliwe uzyskanie <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> wartość, która reprezentuje dyrektywy XAML, które zostało zaimplementowane jako Klasa prywatna w implementacji System.Xaml.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>If you attempt to call <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;</ph> on this invoker, an exception is thrown.</source>
          <target state="translated">Jeśli podjęto próbę wywołania <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;</ph> lub <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;</ph> na tym wywołującego, jest zgłaszany wyjątek.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
          <source>The default implementation is empty.</source>
          <target state="translated">Domyślna implementacja jest pusta.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
          <source>This constructor is invoked internally to provide a value for <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A&gt;</ph>.</source>
          <target state="translated">Ten konstruktor jest wywoływana wewnętrznie podać wartość dla <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
          <source>For a <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> subclass, it is expected that you either use the <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt;</ph> signature for construction or provide an override that calls <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt;</ph> as base.</source>
          <target state="translated">Dla <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> podklasy, oczekuje się, że możesz użyć <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt;</ph> podpis dla konstrukcji lub podaj zastąpienia, która wywołuje <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt;</ph> podstawowego.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
          <source>Providing the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> implements a default pattern where <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> is immutable.</source>
          <target state="translated">Zapewnianie <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> implementuje domyślnego wzorca where <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> nie można modyfikować.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> value for the specific XAML member relevant to this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> Wartości dla określonego elementu członkowskiego XAML, dotyczy to <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> class, based on a provided <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> klasy oparte na podany <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
          <source>This constructor is called internally based on the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> where the <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> is used for construction.</source>
          <target state="translated">Ten konstruktor jest wywoływana wewnętrznie na podstawie <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> gdzie <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> służy do tworzenia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;paramref name="member" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="member" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>An instance of the owner type for the member.</source>
          <target state="translated">Wystąpienie typu właściciela dla elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>Gets a value of the relevant property from an instance.</source>
          <target state="translated">Pobiera wartości odpowiednich właściwości z wystąpienia.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>The requested property value.</source>
          <target state="translated">Żądana wartość właściwości.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>Invoked this method on a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> that is based on an unknown <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Wywołania tej metody na <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> opartego na nieznany <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>- lub -<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>Invoked this method on a write-only member.</source>
          <target state="translated">Wywołać tę metodę w trybie tylko do zapisu elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>- lub -<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>The base implementation includes a call to the internal helper <bpt id="p1">&lt;c&gt;</bpt>ThrowIfUnknown<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Podstawowa implementacja zawiera wywołanie wewnętrzny Pomocnika <bpt id="p1">&lt;c&gt;</bpt>ThrowIfUnknown<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>This helper always throws for cases where a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> is based on an unknown <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, which includes cases where the <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.UnderlyingMember" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdy <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> opiera się na nieznany <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, w tym przypadków, gdy <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.UnderlyingMember" /&gt;</ph> z <ph id="ph4">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>The base implementation throws if <ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Podstawowa implementacja zgłasza wyjątek, jeśli <ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>For static properties (<ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsStatic" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> per <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph>) the default implementation calls <ph id="ph4">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> on <ph id="ph5">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> passing <ph id="ph6">&lt;see langword="null" /&gt;</ph> as the first parameter and packaged <ph id="ph7">&lt;paramref name="instance" /&gt;</ph> in the second.</source>
          <target state="translated">Właściwości statyczne (<ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsStatic" /&gt;</ph> jest <ph id="ph2">&lt;see langword="true" /&gt;</ph> na <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph>) Domyślna implementacja wywołuje <ph id="ph4">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> na <ph id="ph5">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> przekazywanie <ph id="ph6">&lt;see langword="null" /&gt;</ph> jako pierwszego parametru oraz spakowane <ph id="ph7">&lt;paramref name="instance" /&gt;</ph> w ciągu sekundy.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>For non-static properties, it calls <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> and forwards the <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> as the first parameter and an empty package as the second parameter.</source>
          <target state="translated">Dla właściwości niestatyczna wymaga <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> i przekazuje <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> jako pierwszego parametru oraz pusty pakietu jako drugiego parametru.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>An instance of the owner type for the member.</source>
          <target state="translated">Wystąpienie typu właściciela dla elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>The property value to set.</source>
          <target state="translated">Wartość właściwości do ustawienia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>Sets a value of the relevant property on an instance.</source>
          <target state="translated">Ustawia wartość odpowiednie właściwości dla wystąpienia.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>Invoked this method on a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> that is based on an unknown <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Wywołania tej metody na <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> opartego na nieznany <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>- lub -<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>Invoked this method on a read-only member.</source>
          <target state="translated">Wywołać tę metodę w elemencie członkowskim tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>- lub -<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>The base implementation includes a call to the internal helper <bpt id="p1">&lt;c&gt;</bpt>ThrowIfUnknown<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Podstawowa implementacja zawiera wywołanie wewnętrzny Pomocnika <bpt id="p1">&lt;c&gt;</bpt>ThrowIfUnknown<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>This helper always throws for cases where a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> is based on an unknown <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, which includes cases where the <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.UnderlyingMember" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdy <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> opiera się na nieznany <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, w tym przypadków, gdy <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.UnderlyingMember" /&gt;</ph> z <ph id="ph4">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>The base implementation throws if <ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Podstawowa implementacja zgłasza wyjątek, jeśli <ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>For static properties (<ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsStatic" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> per <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph>) the default implementation calls <ph id="ph4">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> on <ph id="ph5">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> passing <ph id="ph6">&lt;see langword="null" /&gt;</ph> as the first parameter and packaging <ph id="ph7">&lt;paramref name="instance" /&gt;</ph> and <ph id="ph8">&lt;paramref name="value" /&gt;</ph> as the second parameter.</source>
          <target state="translated">Właściwości statyczne (<ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsStatic" /&gt;</ph> jest <ph id="ph2">&lt;see langword="true" /&gt;</ph> na <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph>) Domyślna implementacja wywołuje <ph id="ph4">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> na <ph id="ph5">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> przekazywanie <ph id="ph6">&lt;see langword="null" /&gt;</ph> jako pierwszy parametr i pakowania <ph id="ph7">&lt;paramref name="instance" /&gt;</ph> i <ph id="ph8">&lt;paramref name="value" /&gt;</ph> jako drugi parametr.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>For non-static properties, it calls <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> and forwards <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> as first parameter and <ph id="ph3">&lt;paramref name="value" /&gt;</ph> as second parameter.</source>
          <target state="translated">Dla właściwości niestatyczna wymaga <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> i przekazuje <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> jako pierwszego parametru oraz <ph id="ph3">&lt;paramref name="value" /&gt;</ph> jako drugiego parametru.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
          <source>The instance with the property to be examined for persistence.</source>
          <target state="translated">Wystąpienie z właściwością badane trwałości.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
          <source>Indicates whether the value needs to be persisted by serialization processes.</source>
          <target state="translated">Wskazuje, czy wartość ta musi zostać utrwalony przez procesy serializacji.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
          <source>A value of the enumeration.</source>
          <target state="translated">Wartość wyliczenia.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
          <source>The default implementation returns <ph id="ph1">&lt;xref:System.Xaml.Schema.ShouldSerializeResult.Default&gt;</ph> if the XAML member itself is <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>, or if no CLR-reflection relevant <ph id="ph3">`ShouldSerialize`</ph> method is found on the underlying member through default reflection.</source>
          <target state="translated">Domyślna implementacja zwraca <ph id="ph1">&lt;xref:System.Xaml.Schema.ShouldSerializeResult.Default&gt;</ph> przypadku XAML członkowski <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>, lub jeśli nie CLR-odbicia odpowiednich <ph id="ph3">`ShouldSerialize`</ph> — metoda znajduje się w elemencie członkowskim podstawowej przez odbicie domyślne.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the CLR method that gets values for the property that is relevant for this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> dla środowiska CLR jest odpowiednie dla tej metody, która pobiera wartości dla właściwości <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the CLR method that gets values for the property that is relevant for this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> Dla środowiska CLR jest odpowiednie dla tej metody, która pobiera wartości dla właściwości <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>, lub <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
          <source>This property relies on calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph> on the constructing <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">Ta właściwość zależy od wywołania <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph> na konstruowanie <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
          <source>For an unknown <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, or for cases where <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph> returns <ph id="ph3">`null`</ph>, this property returns <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Nieznany <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, lub w przypadku, gdy <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph> zwraca <ph id="ph3">`null`</ph>, ta właściwość zwraca <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the CLR method that sets values for the property that is relevant for this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> dla środowiska CLR jest odpowiednie dla tej metody, która ustawia wartości właściwości, które <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the CLR method that sets values for the property that is relevant for this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> Dla środowiska CLR jest odpowiednie dla tej metody, która ustawia wartości właściwości, które <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>, lub <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
          <source>This property relies on calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph> on the constructing <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">Ta właściwość zależy od wywołania <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph> na konstruowanie <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
          <source>For an unknown <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, or for cases where <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph> returns <ph id="ph3">`null`</ph>, this property returns <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Nieznany <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, lub w przypadku, gdy <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph> zwraca <ph id="ph3">`null`</ph>, ta właściwość zwraca <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
          <source>Provides a static value that represents an unknown, not fully implemented <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</source>
          <target state="translated">Zawiera statyczny wartość, która reprezentuje nieznany, nie są w pełni zaimplementowane <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
          <source>A static value that represents an unknown, not fully implemented <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</source>
          <target state="translated">Statyczne wartość, która reprezentuje nieznany, nie są w pełni zaimplementowane <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
          <source>Supplying this value for a <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</source>
          <target state="translated">Udostępnia tę wartość dla <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> parametru System.Xaml definicja interfejsu API będzie zazwyczaj powodują wywoływanego kodu zgłaszają wyjątki.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>