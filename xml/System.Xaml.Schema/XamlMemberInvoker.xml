<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="288c03ca37471e821f4394c44bbac99fc16a9fc4" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64175131" /></Metadata><TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <TypeSignature Language="F#" Value="type XamlMemberInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7e9c3-101">Udostępnia punkt rozszerzenia, które mogą uzyskiwać dostęp do charakterystyki składowych elementu członkowskiego XAML za pomocą metod innych niż odbicia.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-101">Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9c3-102">Celem <xref:System.Xaml.Schema.XamlMemberInvoker> jest umożliwienie rozszerzalny system typów XAML, schemat oraz działającego wykonawczego, które nie zależą od w pełni funkcji CLR, takich jak atrybuty CLR, odbicie informacje za pośrednictwem <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-102">The purpose of <xref:System.Xaml.Schema.XamlMemberInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="7e9c3-103">Podklasy <xref:System.Xaml.Schema.XamlMemberInvoker> są używane jako parametry wejściowe dla alternatywnej Konstruktory klasy schematu XAML takich jak <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-103">Subclasses of <xref:System.Xaml.Schema.XamlMemberInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="7e9c3-104">Możesz podklasy <xref:System.Xaml.XamlMember> i przekazać <xref:System.Xaml.Schema.XamlMemberInvoker> za pośrednictwem konstruktora podstawowego.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-104">You subclass <xref:System.Xaml.XamlMember> and pass the <xref:System.Xaml.Schema.XamlMemberInvoker> through to the base constructor.</span></span> <span data-ttu-id="7e9c3-105">Wraz z definiowanie <xref:System.Xaml.Schema.XamlMemberInvoker> dla konstruktora, należy również podać zastąpień dla co najmniej część `Lookup` metody <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-105">Along with defining a <xref:System.Xaml.Schema.XamlMemberInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlMember>.</span></span>  
  
 <span data-ttu-id="7e9c3-106"><xref:System.Xaml.Schema.XamlMemberInvoker> zawiera domyślną implementację.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-106"><xref:System.Xaml.Schema.XamlMemberInvoker> has a default implementation.</span></span> <span data-ttu-id="7e9c3-107">Domyślna implementacja jest zgodna podobne modelu implementacji domyślnej typów schematu XAML <xref:System.Xaml.XamlType> i <xref:System.Xaml.XamlMember>: system typów CLR jest używany podczas tworzenia wystąpienia, wartości i wyszukiwań, w tym o korzystaniu z atrybutów CLR <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="7e9c3-108"><xref:System.Xaml.Schema.XamlMemberInvoker> zawiera metody służące do pobierania podstawowe i operacje na zestawie (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span><span class="sxs-lookup"><span data-stu-id="7e9c3-108"><xref:System.Xaml.Schema.XamlMemberInvoker> provides methods for basic get and set operations (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span></span> <span data-ttu-id="7e9c3-109">Zawiera także właściwości <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> i <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, ale nie są wirtualne.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-109">It also provides the properties <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> and <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, but these are not virtual.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e9c3-110">Może być możliwe uzyskanie <xref:System.Xaml.Schema.XamlMemberInvoker> wartość, która reprezentuje dyrektywa XAML, który jest implementowany jako Klasa prywatna w implementacji System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-110">It may be possible to obtain a <xref:System.Xaml.Schema.XamlMemberInvoker> value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</span></span> <span data-ttu-id="7e9c3-111">Jeśli użytkownik podejmie próbę wywołania <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> lub <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> na ten element wywołujący, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-111">If you attempt to call <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> or <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> on this invoker, an exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e9c3-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-112">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e9c3-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-113">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9c3-114">Domyślna implementacja jest pusty.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-114">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="7e9c3-115">Ten konstruktor jest wywoływana wewnętrznie podać wartość dla <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-115">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="7e9c3-116">Dla <xref:System.Xaml.Schema.XamlMemberInvoker> podklasy, oczekuje się, że możesz użyć <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> podpis dla konstrukcji lub przesłonięcie, który wywołuje <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> jako podstawowy.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-116">For a <xref:System.Xaml.Schema.XamlMemberInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> as base.</span></span> <span data-ttu-id="7e9c3-117">Zapewnianie <xref:System.Xaml.XamlMember> implementuje domyślnego wzorca, gdzie <xref:System.Xaml.Schema.XamlMemberInvoker> można modyfikować.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-117">Providing the <xref:System.Xaml.XamlMember> implements a default pattern where <xref:System.Xaml.Schema.XamlMemberInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlMemberInvoker : System.Xaml.XamlMember -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="new System.Xaml.Schema.XamlMemberInvoker member" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="7e9c3-118"><see cref="T:System.Xaml.XamlMember" /> Wartości dla określonego elementu członkowskiego XAML, dotyczą tego <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-118">The <see cref="T:System.Xaml.XamlMember" /> value for the specific XAML member relevant to this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></param>
        <summary><span data-ttu-id="7e9c3-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy, w oparciu o podany <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-119">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9c3-120">Ten konstruktor jest wywoływana wewnętrznie na podstawie <xref:System.Xaml.XamlMember> gdzie <xref:System.Xaml.Schema.XamlMemberInvoker> służy do konstruowania.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-120">This constructor is called internally based on the <xref:System.Xaml.XamlMember> where the <xref:System.Xaml.Schema.XamlMemberInvoker> is used for construction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7e9c3-121"><paramref name="member" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-121"><paramref name="member" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj&#xA;override this.GetValue : obj -&gt; obj" Usage="xamlMemberInvoker.GetValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="7e9c3-122">Wystąpienie typu właściciela dla elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-122">An instance of the owner type for the member.</span></span></param>
        <summary><span data-ttu-id="7e9c3-123">Pobiera wartość odpowiednie właściwości z wystąpienia usługi.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-123">Gets a value of the relevant property from an instance.</span></span></summary>
        <returns><span data-ttu-id="7e9c3-124">Wartość żądanej właściwości.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-124">The requested property value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7e9c3-125"><paramref name="instance" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-125"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7e9c3-126">Ta metoda wywoływana <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span></span>  
  
 <span data-ttu-id="7e9c3-127">**- lub -**</span><span class="sxs-lookup"><span data-stu-id="7e9c3-127">**-or-**</span></span>  
  
<span data-ttu-id="7e9c3-128">Wywołać tej metody w elemencie członkowskim tylko do zapisu.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-128">Invoked this method on a write-only member.</span></span>  
  
 <span data-ttu-id="7e9c3-129">**- lub -**</span><span class="sxs-lookup"><span data-stu-id="7e9c3-129">**-or-**</span></span>  
  
 <span data-ttu-id="7e9c3-130"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-130"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="7e9c3-131">Podstawowa implementacja zawiera wywołanie wewnętrznego Pomocnika <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-131">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="7e9c3-132">Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdzie <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlMember" />, która obejmuje przypadków, gdy <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> z <see cref="T:System.Xaml.XamlMember" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-132">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7e9c3-133">Podstawowa implementacja zgłasza wyjątek, jeśli <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-133">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7e9c3-134">Właściwości statyczne (<see cref="P:System.Reflection.MethodBase.IsStatic" /> jest <see langword="true" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) Domyślna implementacja wywołuje <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> przekazywanie <see langword="null" /> jako pierwszego parametru i spakowane <paramref name="instance" /> w ciągu sekundy.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-134">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passing <see langword="null" /> as the first parameter and packaged <paramref name="instance" /> in the second.</span></span> <span data-ttu-id="7e9c3-135">W przypadku niestatycznej właściwości wywoływanych przez nią <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> i przekazuje <paramref name="instance" /> jako pierwszego parametru i pakietu pusty jako drugi parametr.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-135">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards the <paramref name="instance" /> as the first parameter and an empty package as the second parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="xamlMemberInvoker.SetValue (instance, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="7e9c3-136">Wystąpienie typu właściciela dla elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-136">An instance of the owner type for the member.</span></span></param>
        <param name="value"><span data-ttu-id="7e9c3-137">Wartość właściwości do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-137">The property value to set.</span></span></param>
        <summary><span data-ttu-id="7e9c3-138">Ustawia wartość właściwości odpowiednie dla wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-138">Sets a value of the relevant property on an instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7e9c3-139"><paramref name="instance" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-139"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7e9c3-140">Ta metoda wywoływana <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-140">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span></span>  
  
 <span data-ttu-id="7e9c3-141">**- lub -**</span><span class="sxs-lookup"><span data-stu-id="7e9c3-141">**-or-**</span></span>  
  
<span data-ttu-id="7e9c3-142">Wywołać tej metody w elemencie członkowskim tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-142">Invoked this method on a read-only member.</span></span>  
  
 <span data-ttu-id="7e9c3-143">**- lub -**</span><span class="sxs-lookup"><span data-stu-id="7e9c3-143">**-or-**</span></span>  
  
 <span data-ttu-id="7e9c3-144"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-144"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="7e9c3-145">Podstawowa implementacja zawiera wywołanie wewnętrznego Pomocnika <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-145">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="7e9c3-146">Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdzie <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlMember" />, która obejmuje przypadków, gdy <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> z <see cref="T:System.Xaml.XamlMember" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-146">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7e9c3-147">Podstawowa implementacja zgłasza wyjątek, jeśli <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-147">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7e9c3-148">Właściwości statyczne (<see cref="P:System.Reflection.MethodBase.IsStatic" /> jest <see langword="true" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) Domyślna implementacja wywołuje <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> przekazywanie <see langword="null" /> jako pierwszego parametru i pakowania w usłudze <paramref name="instance" /> i <paramref name="value" /> jako drugi parametr.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-148">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passing <see langword="null" /> as the first parameter and packaging <paramref name="instance" /> and <paramref name="value" /> as the second parameter.</span></span> <span data-ttu-id="7e9c3-149">W przypadku niestatycznej właściwości wywoływanych przez nią <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> i przekazuje <paramref name="instance" /> jako pierwszy parametr i <paramref name="value" /> jako drugiego parametru.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-149">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards <paramref name="instance" /> as first parameter and <paramref name="value" /> as second parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult&#xA;override this.ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult" Usage="xamlMemberInvoker.ShouldSerializeValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="7e9c3-150">Wystąpienie właściwość do badania potrzeby stanu trwałego.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-150">The instance with the property to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="7e9c3-151">Wskazuje, czy wartość ta musi zostać utrwalone przez procesy serializacji.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-151">Indicates whether the value needs to be persisted by serialization processes.</span></span></summary>
        <returns><span data-ttu-id="7e9c3-152">Wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-152">A value of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9c3-153">Domyślna implementacja zwraca <xref:System.Xaml.Schema.ShouldSerializeResult.Default> jeśli sam element członkowski XAML jest <xref:System.Xaml.XamlMember.IsUnknown%2A>, lub jeśli nie CLR odzwierciedlania odpowiednie `ShouldSerialize` metoda znajduje się na podstawowych elementu członkowskiego przez odbicie domyślne.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-153">The default implementation returns <xref:System.Xaml.Schema.ShouldSerializeResult.Default> if the XAML member itself is <xref:System.Xaml.XamlMember.IsUnknown%2A>, or if no CLR-reflection relevant `ShouldSerialize` method is found on the underlying member through default reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingGetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9c3-154">Pobiera <see cref="T:System.Reflection.MethodInfo" /> dla środowiska CLR jest odpowiednie dla tej metody, która pobiera wartości dla właściwości <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-154">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="7e9c3-155"><see cref="T:System.Reflection.MethodInfo" /> Dla środowiska CLR jest odpowiednie dla tej metody, która pobiera wartości dla właściwości <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-155">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9c3-156">Ta właściwość zależy od wywołania <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> o konstruowaniu <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-156">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="7e9c3-157">Nieznany <xref:System.Xaml.XamlMember>, lub w przypadku, gdy <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> zwraca `null`, właściwość ta zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-157">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9c3-158">Pobiera <see cref="T:System.Reflection.MethodInfo" /> dla środowiska CLR jest odpowiednie dla tej metody, która ustawia wartości właściwości, które <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-158">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="7e9c3-159"><see cref="T:System.Reflection.MethodInfo" /> Dla środowiska CLR jest odpowiednie dla tej metody, która ustawia wartości właściwości, które <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-159">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9c3-160">Ta właściwość zależy od wywołania <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> o konstruowaniu <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-160">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="7e9c3-161">Nieznany <xref:System.Xaml.XamlMember>, lub w przypadku, gdy <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> zwraca `null`, właściwość ta zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-161">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9c3-162">Udostępnia wartość statyczna, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-162">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="7e9c3-163">Wartość statyczna, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-163">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9c3-164">Tę wartość do podawania <xref:System.Xaml.Schema.XamlMemberInvoker> parametru System.Xaml definicja interfejsu API zazwyczaj spowoduje, że dzwonić kodu zgłaszają wyjątki.</span><span class="sxs-lookup"><span data-stu-id="7e9c3-164">Supplying this value for a <xref:System.Xaml.Schema.XamlMemberInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>