<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06593ac583c0f24c3b973fbdbfba42e69f84af7c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="11fe5-101">Udostępnia punkt rozszerzenia, które mogą uzyskiwać dostęp do właściwości elementu członkowskiego elementu członkowskiego XAML za pomocą metod innych niż odbicia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="11fe5-101">Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11fe5-102">Celem <xref:System.Xaml.Schema.XamlMemberInvoker> jest umożliwienie rozszerzalny system typów języka XAML, schematów i działającego wykonawczego, które nie w pełni korzystają z funkcji CLR, takich jak atrybuty CLR, odbicia informacji za pomocą <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="11fe5-102">The purpose of <xref:System.Xaml.Schema.XamlMemberInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="11fe5-103">Podklasy <xref:System.Xaml.Schema.XamlMemberInvoker> są używane jako parametry wejściowe dla alternatywnego konstruktorów klas schematu XAML takich jak <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="11fe5-103">Subclasses of <xref:System.Xaml.Schema.XamlMemberInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="11fe5-104">Możesz podklasy <xref:System.Xaml.XamlMember> i przekaż <xref:System.Xaml.Schema.XamlMemberInvoker> za pośrednictwem konstruktora podstawowego.</span><span class="sxs-lookup"><span data-stu-id="11fe5-104">You subclass <xref:System.Xaml.XamlMember> and pass the <xref:System.Xaml.Schema.XamlMemberInvoker> through to the base constructor.</span></span> <span data-ttu-id="11fe5-105">Wraz z definiowanie <xref:System.Xaml.Schema.XamlMemberInvoker> dla konstruktora, musisz także podać zastąpień dla co najmniej niektóre `Lookup` metody <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="11fe5-105">Along with defining a <xref:System.Xaml.Schema.XamlMemberInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlMember>.</span></span>  
  
 <span data-ttu-id="11fe5-106"><xref:System.Xaml.Schema.XamlMemberInvoker> ma domyślne wdrożenie.</span><span class="sxs-lookup"><span data-stu-id="11fe5-106"><xref:System.Xaml.Schema.XamlMemberInvoker> has a default implementation.</span></span> <span data-ttu-id="11fe5-107">Domyślna implementacja następuje modelu podobne do implementacji domyślnej typów schematu XAML <xref:System.Xaml.XamlType> i <xref:System.Xaml.XamlMember>: system typów CLR służy do tworzenia wystąpienia, wartości i wyszukiwań, w tym o korzystaniu z atrybutów CLR <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="11fe5-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="11fe5-108"><xref:System.Xaml.Schema.XamlMemberInvoker> udostępnia metody dla podstawowego get i set operations (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span><span class="sxs-lookup"><span data-stu-id="11fe5-108"><xref:System.Xaml.Schema.XamlMemberInvoker> provides methods for basic get and set operations (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span></span> <span data-ttu-id="11fe5-109">Zapewnia także właściwości <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> i <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, ale nie są one wirtualnego.</span><span class="sxs-lookup"><span data-stu-id="11fe5-109">It also provides the properties <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> and <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, but these are not virtual.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="11fe5-110">Może być możliwe uzyskanie <xref:System.Xaml.Schema.XamlMemberInvoker> wartość, która reprezentuje dyrektywy XAML, które zostało zaimplementowane jako Klasa prywatna w implementacji System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="11fe5-110">It may be possible to obtain a <xref:System.Xaml.Schema.XamlMemberInvoker> value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</span></span> <span data-ttu-id="11fe5-111">Jeśli podjęto próbę wywołania <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> lub <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> na tym wywołującego, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="11fe5-111">If you attempt to call <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> or <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> on this invoker, an exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="11fe5-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-112">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="11fe5-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-113">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11fe5-114">Domyślna implementacja jest pusta.</span><span class="sxs-lookup"><span data-stu-id="11fe5-114">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="11fe5-115">Ten konstruktor jest wywoływana wewnętrznie podać wartość dla <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="11fe5-115">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="11fe5-116">Dla <xref:System.Xaml.Schema.XamlMemberInvoker> podklasy, oczekuje się, że możesz użyć <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> podpis dla konstrukcji lub podaj zastąpienia, która wywołuje <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> podstawowego.</span><span class="sxs-lookup"><span data-stu-id="11fe5-116">For a <xref:System.Xaml.Schema.XamlMemberInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> as base.</span></span> <span data-ttu-id="11fe5-117">Zapewnianie <xref:System.Xaml.XamlMember> implementuje domyślnego wzorca where <xref:System.Xaml.Schema.XamlMemberInvoker> nie można modyfikować.</span><span class="sxs-lookup"><span data-stu-id="11fe5-117">Providing the <xref:System.Xaml.XamlMember> implements a default pattern where <xref:System.Xaml.Schema.XamlMemberInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="11fe5-118">
            <see cref="T:System.Xaml.XamlMember" /> Wartości dla określonego elementu członkowskiego XAML, dotyczy to <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-118">The <see cref="T:System.Xaml.XamlMember" /> value for the specific XAML member relevant to this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11fe5-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy oparte na podany <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-119">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11fe5-120">Ten konstruktor jest wywoływana wewnętrznie na podstawie <xref:System.Xaml.XamlMember> gdzie <xref:System.Xaml.Schema.XamlMemberInvoker> służy do tworzenia.</span><span class="sxs-lookup"><span data-stu-id="11fe5-120">This constructor is called internally based on the <xref:System.Xaml.XamlMember> where the <xref:System.Xaml.Schema.XamlMemberInvoker> is used for construction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="11fe5-121">
            <paramref name="member" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-121">
              <paramref name="member" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="11fe5-122">Wystąpienie typu właściciela dla elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-122">An instance of the owner type for the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11fe5-123">Pobiera wartości odpowiednich właściwości z wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-123">Gets a value of the relevant property from an instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="11fe5-124">Żądana wartość właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-124">The requested property value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="11fe5-125">
            <paramref name="instance" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-125">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="11fe5-126">Wywołania tej metody na <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
          <span data-ttu-id="11fe5-127">**- lub -**</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-127">**-or-**</span>
          </span>
          <span data-ttu-id="11fe5-128">Wywołać tę metodę w trybie tylko do zapisu elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-128">Invoked this method on a write-only member.</span>
          </span>
          <span data-ttu-id="11fe5-129">**- lub -**</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-129">**-or-**</span>
          </span>
          <span data-ttu-id="11fe5-130">
            <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-130">
              <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="11fe5-131">Podstawowa implementacja zawiera wywołanie wewnętrzny Pomocnika <c>ThrowIfUnknown</c>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11fe5-131">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="11fe5-132">Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlMember" />, w tym przypadków, gdy <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> z <see cref="T:System.Xaml.XamlMember" /> jest <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11fe5-132">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="11fe5-133">Podstawowa implementacja zgłasza wyjątek, jeśli <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> jest <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11fe5-133">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="11fe5-134">Właściwości statyczne (<see cref="P:System.Reflection.MethodBase.IsStatic" /> jest <see langword="true" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) Domyślna implementacja wywołuje <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> przekazywanie <see langword="null" /> jako pierwszego parametru oraz spakowane <paramref name="instance" /> w ciągu sekundy.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11fe5-134">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passing <see langword="null" /> as the first parameter and packaged <paramref name="instance" /> in the second.</span>
            </span>
            <span data-ttu-id="11fe5-135">Dla właściwości niestatyczna wymaga <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> i przekazuje <paramref name="instance" /> jako pierwszego parametru oraz pusty pakietu jako drugiego parametru.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11fe5-135">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards the <paramref name="instance" /> as the first parameter and an empty package as the second parameter.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="11fe5-136">Wystąpienie typu właściciela dla elementu członkowskiego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-136">An instance of the owner type for the member.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="11fe5-137">Wartość właściwości do ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-137">The property value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11fe5-138">Ustawia wartość odpowiednie właściwości dla wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-138">Sets a value of the relevant property on an instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="11fe5-139">
            <paramref name="instance" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-139">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="11fe5-140">Wywołania tej metody na <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-140">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
          <span data-ttu-id="11fe5-141">**- lub -**</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-141">**-or-**</span>
          </span>
          <span data-ttu-id="11fe5-142">Wywołać tę metodę w elemencie członkowskim tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-142">Invoked this method on a read-only member.</span>
          </span>
          <span data-ttu-id="11fe5-143">**- lub -**</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-143">**-or-**</span>
          </span>
          <span data-ttu-id="11fe5-144">
            <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-144">
              <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="11fe5-145">Podstawowa implementacja zawiera wywołanie wewnętrzny Pomocnika <c>ThrowIfUnknown</c>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11fe5-145">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="11fe5-146">Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlMember" />, w tym przypadków, gdy <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> z <see cref="T:System.Xaml.XamlMember" /> jest <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11fe5-146">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="11fe5-147">Podstawowa implementacja zgłasza wyjątek, jeśli <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> jest <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11fe5-147">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="11fe5-148">Właściwości statyczne (<see cref="P:System.Reflection.MethodBase.IsStatic" /> jest <see langword="true" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) Domyślna implementacja wywołuje <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> przekazywanie <see langword="null" /> jako pierwszy parametr i pakowania <paramref name="instance" /> i <paramref name="value" /> jako drugi parametr.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11fe5-148">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passing <see langword="null" /> as the first parameter and packaging <paramref name="instance" /> and <paramref name="value" /> as the second parameter.</span>
            </span>
            <span data-ttu-id="11fe5-149">Dla właściwości niestatyczna wymaga <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> i przekazuje <paramref name="instance" /> jako pierwszego parametru oraz <paramref name="value" /> jako drugiego parametru.</span>
            <span class="sxs-lookup">
              <span data-stu-id="11fe5-149">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards <paramref name="instance" /> as first parameter and <paramref name="value" /> as second parameter.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="11fe5-150">Wystąpienie z właściwością badane trwałości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-150">The instance with the property to be examined for persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11fe5-151">Wskazuje, czy wartość ta musi zostać utrwalony przez procesy serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-151">Indicates whether the value needs to be persisted by serialization processes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="11fe5-152">Wartość wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-152">A value of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11fe5-153">Domyślna implementacja zwraca <xref:System.Xaml.Schema.ShouldSerializeResult.Default> przypadku XAML członkowski <xref:System.Xaml.XamlMember.IsUnknown%2A>, lub jeśli nie CLR-odbicia odpowiednich `ShouldSerialize` — metoda znajduje się w elemencie członkowskim podstawowej przez odbicie domyślne.</span><span class="sxs-lookup"><span data-stu-id="11fe5-153">The default implementation returns <xref:System.Xaml.Schema.ShouldSerializeResult.Default> if the XAML member itself is <xref:System.Xaml.XamlMember.IsUnknown%2A>, or if no CLR-reflection relevant `ShouldSerialize` method is found on the underlying member through default reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11fe5-154">Pobiera <see cref="T:System.Reflection.MethodInfo" /> dla środowiska CLR jest odpowiednie dla tej metody, która pobiera wartości dla właściwości <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-154">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11fe5-155">
            <see cref="T:System.Reflection.MethodInfo" /> Dla środowiska CLR jest odpowiednie dla tej metody, która pobiera wartości dla właściwości <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-155">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11fe5-156">Ta właściwość zależy od wywołania <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> na konstruowanie <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="11fe5-156">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="11fe5-157">Nieznany <xref:System.Xaml.XamlMember>, lub w przypadku, gdy <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> zwraca `null`, ta właściwość zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="11fe5-157">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11fe5-158">Pobiera <see cref="T:System.Reflection.MethodInfo" /> dla środowiska CLR jest odpowiednie dla tej metody, która ustawia wartości właściwości, które <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-158">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11fe5-159">
            <see cref="T:System.Reflection.MethodInfo" /> Dla środowiska CLR jest odpowiednie dla tej metody, która ustawia wartości właściwości, które <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-159">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11fe5-160">Ta właściwość zależy od wywołania <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> na konstruowanie <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="11fe5-160">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="11fe5-161">Nieznany <xref:System.Xaml.XamlMember>, lub w przypadku, gdy <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> zwraca `null`, ta właściwość zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="11fe5-161">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11fe5-162">Zawiera statyczny wartość, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-162">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11fe5-163">Statyczne wartość, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="11fe5-163">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11fe5-164">Udostępnia tę wartość dla <xref:System.Xaml.Schema.XamlMemberInvoker> parametru System.Xaml definicja interfejsu API będzie zazwyczaj powodują wywoływanego kodu zgłaszają wyjątki.</span><span class="sxs-lookup"><span data-stu-id="11fe5-164">Supplying this value for a <xref:System.Xaml.Schema.XamlMemberInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>