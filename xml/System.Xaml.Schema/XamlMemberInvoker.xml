<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06593ac583c0f24c3b973fbdbfba42e69f84af7c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741518" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia punkt rozszerzenia, które mogą uzyskiwać dostęp do właściwości elementu członkowskiego elementu członkowskiego XAML za pomocą metod innych niż odbicia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Celem <xref:System.Xaml.Schema.XamlMemberInvoker> jest umożliwienie rozszerzalny system typów języka XAML, schematów i działającego wykonawczego, które nie w pełni korzystają z funkcji CLR, takich jak atrybuty CLR, odbicia informacji za pomocą <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej. Podklasy <xref:System.Xaml.Schema.XamlMemberInvoker> są używane jako parametry wejściowe dla alternatywnego konstruktorów klas schematu XAML takich jak <xref:System.Xaml.XamlMember>. Możesz podklasy <xref:System.Xaml.XamlMember> i przekaż <xref:System.Xaml.Schema.XamlMemberInvoker> za pośrednictwem konstruktora podstawowego. Wraz z definiowanie <xref:System.Xaml.Schema.XamlMemberInvoker> dla konstruktora, musisz także podać zastąpień dla co najmniej niektóre `Lookup` metody <xref:System.Xaml.XamlMember>.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker> ma domyślne wdrożenie. Domyślna implementacja następuje modelu podobne do implementacji domyślnej typów schematu XAML <xref:System.Xaml.XamlType> i <xref:System.Xaml.XamlMember>: system typów CLR służy do tworzenia wystąpienia, wartości i wyszukiwań, w tym o korzystaniu z atrybutów CLR <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker> udostępnia metody dla podstawowego get i set operations (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>). Zapewnia także właściwości <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> i <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, ale nie są one wirtualnego.  
  
> [!NOTE]
>  Może być możliwe uzyskanie <xref:System.Xaml.Schema.XamlMemberInvoker> wartość, która reprezentuje dyrektywy XAML, które zostało zaimplementowane jako Klasa prywatna w implementacji System.Xaml. Jeśli podjęto próbę wywołania <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> lub <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> na tym wywołującego, jest zgłaszany wyjątek.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja jest pusta.  
  
 Ten konstruktor jest wywoływana wewnętrznie podać wartość dla <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>. Dla <xref:System.Xaml.Schema.XamlMemberInvoker> podklasy, oczekuje się, że możesz użyć <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> podpis dla konstrukcji lub podaj zastąpienia, która wywołuje <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> podstawowego. Zapewnianie <xref:System.Xaml.XamlMember> implementuje domyślnego wzorca where <xref:System.Xaml.Schema.XamlMemberInvoker> nie można modyfikować.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member">
          <see cref="T:System.Xaml.XamlMember" /> Wartości dla określonego elementu członkowskiego XAML, dotyczy to <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> klasy oparte na podany <see cref="T:System.Xaml.XamlMember" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływana wewnętrznie na podstawie <xref:System.Xaml.XamlMember> gdzie <xref:System.Xaml.Schema.XamlMemberInvoker> służy do tworzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="member" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Wystąpienie typu właściciela dla elementu członkowskiego.</param>
        <summary>Pobiera wartości odpowiednich właściwości z wystąpienia.</summary>
        <returns>Żądana wartość właściwości.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Wywołania tej metody na <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlMember" />.  
  
 **- lub -**  
  
 Wywołać tę metodę w trybie tylko do zapisu elementu członkowskiego.  
  
 **- lub -**  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> jest <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Podstawowa implementacja zawiera wywołanie wewnętrzny Pomocnika <c>ThrowIfUnknown</c>. Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlMember" />, w tym przypadków, gdy <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> z <see cref="T:System.Xaml.XamlMember" /> jest <see langword="null" />.  
  
 Podstawowa implementacja zgłasza wyjątek, jeśli <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> jest <see langword="null" />.  
  
 Właściwości statyczne (<see cref="P:System.Reflection.MethodBase.IsStatic" /> jest <see langword="true" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) Domyślna implementacja wywołuje <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> przekazywanie <see langword="null" /> jako pierwszego parametru oraz spakowane <paramref name="instance" /> w ciągu sekundy. Dla właściwości niestatyczna wymaga <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> i przekazuje <paramref name="instance" /> jako pierwszego parametru oraz pusty pakietu jako drugiego parametru.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Wystąpienie typu właściciela dla elementu członkowskiego.</param>
        <param name="value">Wartość właściwości do ustawienia.</param>
        <summary>Ustawia wartość odpowiednie właściwości dla wystąpienia.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Wywołania tej metody na <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlMember" />.  
  
 **- lub -**  
  
 Wywołać tę metodę w elemencie członkowskim tylko do odczytu.  
  
 **- lub -**  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> jest <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Podstawowa implementacja zawiera wywołanie wewnętrzny Pomocnika <c>ThrowIfUnknown</c>. Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdy <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlMember" />, w tym przypadków, gdy <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> z <see cref="T:System.Xaml.XamlMember" /> jest <see langword="null" />.  
  
 Podstawowa implementacja zgłasza wyjątek, jeśli <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> jest <see langword="null" />.  
  
 Właściwości statyczne (<see cref="P:System.Reflection.MethodBase.IsStatic" /> jest <see langword="true" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) Domyślna implementacja wywołuje <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> na <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> przekazywanie <see langword="null" /> jako pierwszy parametr i pakowania <paramref name="instance" /> i <paramref name="value" /> jako drugi parametr. Dla właściwości niestatyczna wymaga <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> i przekazuje <paramref name="instance" /> jako pierwszego parametru oraz <paramref name="value" /> jako drugiego parametru.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Wystąpienie z właściwością badane trwałości.</param>
        <summary>Wskazuje, czy wartość ta musi zostać utrwalony przez procesy serializacji.</summary>
        <returns>Wartość wyliczenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja zwraca <xref:System.Xaml.Schema.ShouldSerializeResult.Default> przypadku XAML członkowski <xref:System.Xaml.XamlMember.IsUnknown%2A>, lub jeśli nie CLR-odbicia odpowiednich `ShouldSerialize` — metoda znajduje się w elemencie członkowskim podstawowej przez odbicie domyślne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Reflection.MethodInfo" /> dla środowiska CLR jest odpowiednie dla tej metody, która pobiera wartości dla właściwości <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value>
          <see cref="T:System.Reflection.MethodInfo" /> Dla środowiska CLR jest odpowiednie dla tej metody, która pobiera wartości dla właściwości <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, lub <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zależy od wywołania <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> na konstruowanie <xref:System.Xaml.XamlMember>. Nieznany <xref:System.Xaml.XamlMember>, lub w przypadku, gdy <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> zwraca `null`, ta właściwość zwraca `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Reflection.MethodInfo" /> dla środowiska CLR jest odpowiednie dla tej metody, która ustawia wartości właściwości, które <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value>
          <see cref="T:System.Reflection.MethodInfo" /> Dla środowiska CLR jest odpowiednie dla tej metody, która ustawia wartości właściwości, które <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, lub <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zależy od wywołania <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> na konstruowanie <xref:System.Xaml.XamlMember>. Nieznany <xref:System.Xaml.XamlMember>, lub w przypadku, gdy <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> zwraca `null`, ta właściwość zwraca `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera statyczny wartość, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value>Statyczne wartość, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Udostępnia tę wartość dla <xref:System.Xaml.Schema.XamlMemberInvoker> parametru System.Xaml definicja interfejsu API będzie zazwyczaj powodują wywoływanego kodu zgłaszają wyjątki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>