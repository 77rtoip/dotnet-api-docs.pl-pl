<Type Name="XamlTypeName" FullName="System.Xaml.Schema.XamlTypeName">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2d420d4d7b160647a411ba1d5a80ff33d17c9e54" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741509" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlTypeName" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeName extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeName" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeName" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeName" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{{{Namespace}}}{Name}{TypeArgStringForDebugger}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="57245-101">Umożliwia określenie typu XAML pod względem nazwy i przestrzeni nazw.</span>
      <span class="sxs-lookup">
        <span data-stu-id="57245-101">Provides a means to specify a XAML type in terms of name and namespace.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57245-102"><xref:System.Xaml.XamlType> jest typu klasy informacji w systemie typów języka XAML, podczas gdy <xref:System.Xaml.Schema.XamlTypeName> jest strukturą danych, która udostępnia różne sposoby określania tego typu.</span><span class="sxs-lookup"><span data-stu-id="57245-102"><xref:System.Xaml.XamlType> is the type information class in the XAML type system, whereas <xref:System.Xaml.Schema.XamlTypeName> is more of a data structure that provides different ways of specifying that type.</span></span> <span data-ttu-id="57245-103"><xref:System.Xaml.Schema.XamlTypeName> udostępnia metody statyczne pomocnika do generowania <xref:System.Xaml.Schema.XamlTypeName> rozwiązując istniejącego identyfikatora typu w przestrzeni nazw XAML.</span><span class="sxs-lookup"><span data-stu-id="57245-103"><xref:System.Xaml.Schema.XamlTypeName> also provides static helper methods for generating a <xref:System.Xaml.Schema.XamlTypeName> by resolving an existing type identifier in a XAML namespace.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="57245-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlTypeName" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-104">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57245-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlTypeName" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-105">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::Xaml::XamlType ^ xamlType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">
          <span data-ttu-id="57245-106">Istniejące <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-106">An existing <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57245-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlTypeName" /> klasy oparte na istniejącym <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-107">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on an existing <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57245-108">
            <paramref name="xamlType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-108">
              <paramref name="xamlType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="57245-109">Przestrzeń nazw XAML, który zawiera nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-109">The XAML namespace that contains name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="57245-110">Nazwa typu, aby utworzyć <see cref="T:System.Xaml.Schema.XamlTypeName" /> dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-110">The name of the type to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57245-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlTypeName" /> klasy, na podstawie ciągów nazwę i przestrzeń nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-111">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on name and namespace strings.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (string xamlNamespace, string name, System.Collections.Generic.IEnumerable&lt;System.Xaml.Schema.XamlTypeName&gt; typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.Schema.XamlTypeName&gt; typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String, typeArguments As IEnumerable(Of XamlTypeName))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::String ^ xamlNamespace, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ typeArguments);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.Schema.XamlTypeName&gt;" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="57245-112">Przestrzeń nazw XAML, który zawiera <c>nazwa</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-112">The XAML namespace that contains <c>name</c>.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="57245-113">Nazwa typu, aby utworzyć <see cref="T:System.Xaml.Schema.XamlTypeName" /> dla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-113">The name of the type to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> for.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="57245-114">Tablica argumentów typu, z których każdy musi być <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-114">An array of type arguments, each of which must be a <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57245-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlTypeName" /> klasy oparte na ciągi nazwę i przestrzeń nazw, jak i tablicę argumentów typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-115">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeName" /> class, based on name and namespace strings as well as an array of type arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57245-116">Jest to sygnatura do użycia w przypadku określania typu ogólnego i argumentów typu dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="57245-116">This is the signature to use if you are specifying a generic type and type arguments for that type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57245-117">Pobiera nazwę użyta do skonstruowania to <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-117">Gets the name used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57245-118">Nazwa typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-118">The name of the type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57245-119">Jeśli <xref:System.Xaml.XamlType> została użyta do skonstruowania to <xref:System.Xaml.Schema.XamlTypeName>, wartość <xref:System.Xaml.Schema.XamlTypeName.Name%2A> jest <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="57245-119">If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of <xref:System.Xaml.Schema.XamlTypeName.Name%2A> is <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57245-120">Pobiera identyfikator przestrzeni nazw XAML użyta do skonstruowania to <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-120">Gets the XAML namespace identifier used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57245-121">Identyfikator przestrzeni nazw XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-121">The XAML namespace identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57245-122">Jeśli <xref:System.Xaml.XamlType> została użyta do skonstruowania to <xref:System.Xaml.Schema.XamlTypeName>, wartość <xref:System.Xaml.Schema.XamlTypeName.Namespace%2A> jest `xamlType.GetXamlNamespaces()[0]`.</span><span class="sxs-lookup"><span data-stu-id="57245-122">If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of <xref:System.Xaml.Schema.XamlTypeName.Namespace%2A> is `xamlType.GetXamlNamespaces()[0]`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeName Parse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Schema.XamlTypeName Parse(string typeName, class System.Xaml.IXamlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (typeName As String, namespaceResolver As IXamlNamespaceResolver) As XamlTypeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::Schema::XamlTypeName ^ Parse(System::String ^ typeName, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="57245-123">Nazwa typu, aby utworzyć <see cref="T:System.Xaml.Schema.XamlTypeName" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-123">The type name to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value for.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="57245-124">Obiekt lub usługi dostawcy, który implementuje <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-124">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57245-125">Udostępnia <see cref="T:System.Xaml.Schema.XamlTypeName" /> wartość na podstawie nazwy typu i obiekt, który może zostać rozwiązany w przestrzeni nazw z prefiksem znacznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-125">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a type name and an object that can resolve a markup prefix into a namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57245-126">Utworzony <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-126">The created <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57245-127">
            <paramref name="typeName" /> lub <paramref name="namespaceResolver" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-127">
              <paramref name="typeName" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="57245-128">Nie można przeanalizować ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-128">String cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ParseList">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; ParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; ParseList(string typeNameList, class System.Xaml.IXamlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseList (typeNameList As String, namespaceResolver As IXamlNamespaceResolver) As IList(Of XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ ParseList(System::String ^ typeNameList, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="typeNameList">
          <span data-ttu-id="57245-129">Ciąg, który zawiera wiele typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-129">A string that contains multiple types.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="57245-130">Obiekt lub usługi dostawcy, który implementuje <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-130">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57245-131">Udostępnia <see cref="T:System.Xaml.Schema.XamlTypeName" /> wartość oparta na ciąg, który można określić wiele nazw typ i obiekt, który może zostać rozwiązany w przestrzeni nazw z prefiksem znacznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-131">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57245-132">Utworzony <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-132">The created <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57245-133">Poniżej przedstawiono skutkowało BNF nazwy typu zagnieżdżonego lub wielu nazwy typu podczas analizowania włączone przez tę metodę:</span><span class="sxs-lookup"><span data-stu-id="57245-133">The following is quasi-BNF for the nested type name or multiple type name parsing enabled by this method:</span></span>  
  
```  
NestedTypeName = Name | Name '+' NestedTypeName  
TypeName = NestedTypeName | NestedTypeName ‘[]’  
XamlTypeName = Prefix ‘:’ TypeName TypeArgs  | TypeName TypeArgs  
TypeArgs = empty | ‘(‘ XamlTypeNameList ‘)’  
XamlTypeNameList = XamlTypeName XamlTypeNameList1  
XamlTypeNameList1 = empty | ‘,’ XamlTypeNameList  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57245-134">
            <paramref name="typeNameList" /> lub <paramref name="namespaceResolver" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-134">
              <paramref name="typeNameList" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="57245-135">Nie można przeanalizować ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-135">String cannot be parsed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="57245-136">Konwertuje wartość to <see cref="T:System.Xaml.Schema.XamlTypeName" /> do reprezentacji ciągu równoważne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-136">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57245-137">Konwertuje wartość to <see cref="T:System.Xaml.Schema.XamlTypeName" /> do reprezentacji ciągu równoważne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-137">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57245-138">Reprezentacja ciągu równoważne <see cref="T:System.Xaml.Schema.XamlTypeName" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-138">The equivalent string representation of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> .</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57245-139">Ta sygnatura jest odpowiednikiem wywołania <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>, przechodzącą `null` dla `prefixLookup`.</span><span class="sxs-lookup"><span data-stu-id="57245-139">This signature is equivalent to calling <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>, passing `null` for `prefixLookup`.</span></span> <span data-ttu-id="57245-140">s</span><span class="sxs-lookup"><span data-stu-id="57245-140">s</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (System.Xaml.INamespacePrefixLookup prefixLookup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.Xaml.INamespacePrefixLookup prefixLookup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (prefixLookup As INamespacePrefixLookup) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::Xaml::INamespacePrefixLookup ^ prefixLookup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefixLookup" Type="System.Xaml.INamespacePrefixLookup" />
      </Parameters>
      <Docs>
        <param name="prefixLookup">
          <span data-ttu-id="57245-141">Odwołania do usługi dla prefiksu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-141">A service reference for prefix lookup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57245-142">Konwertuje wartość to <see cref="T:System.Xaml.Schema.XamlTypeName" /> do reprezentacji ciągu równoważne, której można użyć w składni znaczników dla obiekt użycie elementu typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-142">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57245-143">Ciąg prefiksem użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-143">A prefixed usage string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57245-144">
            <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> w tym <see cref="T:System.Xaml.Schema.XamlTypeName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-144">
              <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> for this <see cref="T:System.Xaml.Schema.XamlTypeName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="57245-145">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-145">-or-</span>
          </span>
          <span data-ttu-id="57245-146">
            <see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> nie jest prawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-146">
              <see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> is not valid.</span>
          </span>
          <span data-ttu-id="57245-147">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-147">-or-</span>
          </span>
          <span data-ttu-id="57245-148">Nie można wyszukać prefiks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-148">Could not look up the prefix.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; typeNameList, System.Xaml.INamespacePrefixLookup prefixLookup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; typeNameList, class System.Xaml.INamespacePrefixLookup prefixLookup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (typeNameList As IList(Of XamlTypeName), prefixLookup As INamespacePrefixLookup) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ typeNameList, System::Xaml::INamespacePrefixLookup ^ prefixLookup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" />
        <Parameter Name="prefixLookup" Type="System.Xaml.INamespacePrefixLookup" />
      </Parameters>
      <Docs>
        <param name="typeNameList">
          <span data-ttu-id="57245-149">Lista typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-149">A list of types.</span>
          </span>
        </param>
        <param name="prefixLookup">
          <span data-ttu-id="57245-150">Odwołania do usługi dla prefiksu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-150">A service reference for prefix lookup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57245-151">Konwertuje wartość to <see cref="T:System.Xaml.Schema.XamlTypeName" /> do reprezentacji ciągu równoważne, której można użyć w składni znaczników dla obiekt użycie elementu wielu typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-151">Converts the value of this <see cref="T:System.Xaml.Schema.XamlTypeName" /> to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57245-152">Połączony ciąg wszystkie wyniki typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-152">A concatenated string of all type results.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57245-153">
            <paramref name="prefixLookup" /> lub <paramref name="typeNameList" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-153">
              <paramref name="prefixLookup" /> or <paramref name="typeNameList" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Xaml.Schema.XamlTypeName result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string typeName, class System.Xaml.IXamlNamespaceResolver namespaceResolver, [out] class System.Xaml.Schema.XamlTypeName&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (typeName As String, namespaceResolver As IXamlNamespaceResolver, ByRef result As XamlTypeName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ typeName, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver, [Runtime::InteropServices::Out] System::Xaml::Schema::XamlTypeName ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
        <Parameter Name="result" Type="System.Xaml.Schema.XamlTypeName&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="57245-154">Nazwa typu, aby utworzyć <see cref="T:System.Xaml.Schema.XamlTypeName" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-154">The type name to create a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value for.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="57245-155">Obiekt lub usługi dostawcy, który implementuje <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-155">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="57245-156">Parametr, który zawiera utworzony wyjściowy <see cref="T:System.Xaml.Schema.XamlTypeName" /> Jeśli wartość zwracana jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-156">Out parameter that contains the created <see cref="T:System.Xaml.Schema.XamlTypeName" /> if the return value is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57245-157">Udostępnia <see cref="T:System.Xaml.Schema.XamlTypeName" /> wartość na podstawie nazwy typu i obiekt, który może zostać rozwiązany w przestrzeni nazw z prefiksem znacznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-157">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a type name and an object that can resolve a markup prefix into a namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57245-158">
            <see langword="true" /> Jeśli analizy zakończyło się pomyślnie i <paramref name="result" /> zawiera wartość przydatne; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-158">
              <see langword="true" /> if the parse was successful and <paramref name="result" /> contains a useful value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57245-159">
            <paramref name="typeName" /> lub <paramref name="namespaceResolver" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-159">
              <paramref name="typeName" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseList">
      <MemberSignature Language="C#" Value="public static bool TryParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseList(string typeNameList, class System.Xaml.IXamlNamespaceResolver namespaceResolver, [out] class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt;&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseList (typeNameList As String, namespaceResolver As IXamlNamespaceResolver, ByRef result As IList(Of XamlTypeName)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseList(System::String ^ typeNameList, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver, [Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
        <Parameter Name="result" Type="System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeNameList">
          <span data-ttu-id="57245-160">Ciąg, który zawiera wiele typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-160">A string that contains multiple types.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="57245-161">Obiekt lub usługi dostawcy, który implementuje <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-161">An object or service provider that implements <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="57245-162">Parametr, który zawiera utworzony wyjściowy <see cref="T:System.Xaml.Schema.XamlTypeName" /> Jeśli wartość zwracana jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-162">Out parameter that contains the created <see cref="T:System.Xaml.Schema.XamlTypeName" /> if the return value is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57245-163">Udostępnia <see cref="T:System.Xaml.Schema.XamlTypeName" /> wartość oparta na ciąg, który można określić wiele nazw typ i obiekt, który może zostać rozwiązany w przestrzeni nazw z prefiksem znacznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-163">Provides a <see cref="T:System.Xaml.Schema.XamlTypeName" /> value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57245-164">
            <see langword="true" /> Jeśli analizy zakończyło się pomyślnie i <paramref name="result" /> zawiera wartość przydatne; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-164">
              <see langword="true" /> if the parse was successful and <paramref name="result" /> contains a useful value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57245-165">
            <paramref name="typeNameList" /> lub <paramref name="namespaceResolver" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-165">
              <paramref name="typeNameList" /> or <paramref name="namespaceResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57245-166">Pobiera argumenty typu użyta do skonstruowania to <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-166">Gets the type arguments used to construct this <see cref="T:System.Xaml.Schema.XamlTypeName" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57245-167">Argumenty typu, jeśli istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-167">The type arguments, if any.</span>
          </span>
          <span data-ttu-id="57245-168">Może mieć wartość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57245-168">May be null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57245-169">Jeśli <xref:System.Xaml.XamlType> została użyta do skonstruowania to <xref:System.Xaml.Schema.XamlTypeName>, wartość <xref:System.Xaml.Schema.XamlTypeName.TypeArguments%2A> jest <xref:System.Xaml.XamlType.TypeArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="57245-169">If a <xref:System.Xaml.XamlType> was used to construct this <xref:System.Xaml.Schema.XamlTypeName>, the value of <xref:System.Xaml.Schema.XamlTypeName.TypeArguments%2A> is formed from <xref:System.Xaml.XamlType.TypeArguments%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>