<Type Name="XamlValueConverter&lt;TConverterBase&gt;" FullName="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82f14de8f717b193872473b74a49ccbceec4793c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlValueConverter&lt;TConverterBase&gt; : IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt; where TConverterBase : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlValueConverter`1&lt;class TConverterBase&gt; extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlValueConverter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlValueConverter(Of TConverterBase)&#xA;Implements IEquatable(Of XamlValueConverter(Of TConverterBase))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : classpublic ref class XamlValueConverter : IEquatable&lt;System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TConverterBase">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TConverterBase">
      <span data-ttu-id="c3db4-101">Podstawa CLR klasy dla konwertera określonego przez to <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> reprezentuje.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c3db4-101">The CLR base class for the particular converter that this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> represents.</span>
      </span>
      <span data-ttu-id="c3db4-102">Zazwyczaj jest to jeden z następujących: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />;</span>
      <span class="sxs-lookup">
        <span data-stu-id="c3db4-102">Typically this is one of the following: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />;</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="c3db4-103">Udostępnia typowe powierzchni interfejsu API dla techniki, które generują inicjowania lub serializacji wartości dla XAML oparte na danych wejściowych innych niż typ ostatecznego miejsca przeznaczenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c3db4-103">Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type.</span>
      </span>
      <span data-ttu-id="c3db4-104">W tym konwertery rozszerzenia i typ znacznika.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c3db4-104">This includes markup extensions and type converters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3db4-105">Wystąpień tego typu są zwracane przez metody schematu XAML interfejsu API, takich jak <xref:System.Xaml.XamlType.LookupTypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3db4-105">Instances of this type are returned by methods of the XAML schema API such as <xref:System.Xaml.XamlType.LookupTypeConverter%2A>.</span></span> <span data-ttu-id="c3db4-106">Ogólną implementację <xref:System.Xaml.Schema.XamlValueConverter%601> zapewnia pośrednie dla zestawu System.Xaml podstawowego systemu schematu i typu XAML nie trzeba wykonywać zależności na inną wartość konwersji techniki, które są zazwyczaj implementacji w innych zestawy.</span><span class="sxs-lookup"><span data-stu-id="c3db4-106">The generic implementation of <xref:System.Xaml.Schema.XamlValueConverter%601> provides indirection for the System.Xaml assembly so that the basic XAML schema and type system does not have to take dependencies on different value conversion techniques that are typically implementations in other assemblies.</span></span>  
  
 <span data-ttu-id="c3db4-107">A <xref:System.Xaml.Schema.XamlValueConverter%601> można skonstruować typu null implementacji, ale takie <xref:System.Xaml.Schema.XamlValueConverter%601> zwróci `null` dla <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3db4-107">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="c3db4-108">Sygnatury konstruktora <xref:System.Xaml.Schema.XamlValueConverter%601> użyj `converterType` parametr, który odwołuje się do określonego typu, który implementuje zachowanie konwersji.</span><span class="sxs-lookup"><span data-stu-id="c3db4-108">Constructor signatures for <xref:System.Xaml.Schema.XamlValueConverter%601> use a `converterType` parameter that references the specific type that implements the conversion behavior.</span></span> <span data-ttu-id="c3db4-109">Do prawidłowego funkcjonowania <xref:System.Xaml.Schema.XamlValueConverter%601> (taki, który ma niepuste <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>), `converterType` typ powinien być castable do `TConverterBase` ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="c3db4-109">For a properly functioning <xref:System.Xaml.Schema.XamlValueConverter%601> (one that has a nonnull <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>), the `converterType` type is expected to be castable to the `TConverterBase` constraint.</span></span> <span data-ttu-id="c3db4-110">Niezgodność warunek nie jest wymuszana przez konstruktorów, ale może powodować generowanie <xref:System.InvalidCastException> w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="c3db4-110">A mismatch condition is not enforced by constructors, but might produce an <xref:System.InvalidCastException> at run time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3db4-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-111">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="converterType">
          <span data-ttu-id="c3db4-112">
            <see cref="T:System.Type" /> Implementującej zachowanie konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-112">The <see cref="T:System.Type" /> that implements the converter behavior.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="c3db4-113">Docelowej <see cref="T:System.Xaml.XamlType" /> z <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-113">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3db4-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> klasy oparty na implementacji konwertera <see cref="T:System.Type" /> i typu docelowego / <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-114">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> and the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="converterType">
          <span data-ttu-id="c3db4-115">
            <see cref="T:System.Type" /> Implementującej zachowanie konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-115">The <see cref="T:System.Type" /> that implements the converter behavior.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="c3db4-116">Docelowej <see cref="T:System.Xaml.XamlType" /> z <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-116">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="c3db4-117">Nazwa ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-117">The string name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3db4-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> klasy oparty na implementacji konwertera <see cref="T:System.Type" /> typu docelowego / <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />i nazwy ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-118">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, and a string name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3db4-119">Jeśli `name` jest dostarczane jako `null`, domyślną nazwą jest generowany na podstawie `converterType` lub `targetType`.</span><span class="sxs-lookup"><span data-stu-id="c3db4-119">If `name` is provided as `null`, a default name is generated based on either `converterType` or `targetType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3db4-120">Wszystkie trzy parametry są <see langword="null" /> (co najmniej jeden musi być inne niż null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-120">All three parameters are <see langword="null" /> (at least one is required to be non-null).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConverterInstance">
      <MemberSignature Language="C#" Value="public TConverterBase ConverterInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TConverterBase ConverterInstance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterInstance As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TConverterBase ConverterInstance { TConverterBase get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c3db4-121">Pobiera utworzone wystąpienie implementacji konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-121">Gets a created instance of the converter implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c3db4-122">Utworzone wystąpienie implementacji konwertera lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-122">A created instance of the converter implementation, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3db4-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> chronione Domyślna implementacja wywołuje <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> można pobrać jej wartość (i może uzyskiwać dostęp do wartości przechowywanej Jeśli <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> została już wywołana raz na tym <xref:System.Xaml.Schema.XamlValueConverter%601>.</span><span class="sxs-lookup"><span data-stu-id="c3db4-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> calls the protected default implementation of <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> to get its value (and might be accessing a stored value if <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> was already called once on this <xref:System.Xaml.Schema.XamlValueConverter%601>.</span></span>  
  
 <span data-ttu-id="c3db4-124">A <xref:System.Xaml.Schema.XamlValueConverter%601> można skonstruować typu null implementacji, ale takie <xref:System.Xaml.Schema.XamlValueConverter%601> zwróci `null` dla <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3db4-124">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterType">
      <MemberSignature Language="C#" Value="public Type ConverterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ConverterType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ConverterType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c3db4-125">Pobiera <see cref="T:System.Type" /> klasy, która implementuje zachowanie konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-125">Gets the <see cref="T:System.Type" /> for the class that implements the converter behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c3db4-126">
            <see cref="T:System.Type" /> Klasy, która implementuje zachowanie konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-126">The <see cref="T:System.Type" /> for the class that implements the converter behavior.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual TConverterBase CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TConverterBase CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TConverterBase CreateInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3db4-127">Zwraca wystąpienie implementacji konwertera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-127">Returns an instance of the converter implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3db4-128">Wystąpienie implementacji konwertera lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-128">An instance of the converter implementation, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3db4-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> jest chroniony.</span><span class="sxs-lookup"><span data-stu-id="c3db4-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> is protected.</span></span> <span data-ttu-id="c3db4-130">Można pobrać wystąpienia konwertera o publiczny interfejs API, należy uzyskać wartość <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3db4-130">To get a converter instance with a public API, get the value of <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 <span data-ttu-id="c3db4-131">A <xref:System.Xaml.Schema.XamlValueConverter%601> można skonstruować typu null implementacji, ale takie <xref:System.Xaml.Schema.XamlValueConverter%601> zwróci `null` dla <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3db4-131">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="c3db4-132">Konwerter nie implementuje poprawnego typu podstawowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-132">Converter did not implement the correct base type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3db4-133">Określa, czy to wystąpienie <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> i obiektu mają taką samą wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-133">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and an object have the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="c3db4-134">Obiekt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-134">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3db4-135">Określa, czy to wystąpienie <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> i określony obiekt musi być również <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> obiektów, mają taką samą wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-135">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and a specified object, which must also be a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3db4-136">
            <see langword="true" /> Jeśli <paramref name="obj" /> jest <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> i jego wartość jest taka sama, jak to wystąpienie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-136">
              <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="c3db4-137">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> Do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-137">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3db4-138">Określa, czy to wystąpienie <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> i innym <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> obiektu mają taką samą wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-138">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and another <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3db4-139">
            <see langword="true" /> Jeśli <paramref name="other" /> jest <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> i jego wartość jest taka sama, jak to wystąpienie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-139">
              <see langword="true" /> if <paramref name="other" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3db4-140">Zwraca wartość skrótu dla tego <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-140">Returns the hash code for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3db4-141">Liczba całkowita wartość skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-141">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c3db4-142">Pobiera nazwę ciągu dla tego <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-142">Gets a string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c3db4-143">Nazwa ciągu, w tym <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-143">A string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3db4-144">Wartość tej właściwości zostanie nawiązane za pomocą jednej z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="c3db4-144">The value of this property is established by one of the following:</span></span>  
  
-   <span data-ttu-id="c3db4-145">Parametr konstruktora (zobacz <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="c3db4-145">A constructor parameter (see <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>).</span></span>  
  
-   <span data-ttu-id="c3db4-146">Logika wewnętrzny przetwarza inne dane wejściowe Konstruktor, który stanowi ciąg.</span><span class="sxs-lookup"><span data-stu-id="c3db4-146">Internal logic that processes other constructor inputs and forms a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1">
          <span data-ttu-id="c3db4-147">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-147">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="converter2">
          <span data-ttu-id="c3db4-148">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-148">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3db4-149">Określa, czy dwa określone <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> obiekty mają taką samą wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-149">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3db4-150">
            <see langword="true" /> Jeśli wartość <paramref name="converter1" /> jest taka sama jak wartość <paramref name="converter2" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-150">
              <see langword="true" /> if the value of <paramref name="converter1" /> is the same as the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1">
          <span data-ttu-id="c3db4-151">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-151">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="converter2">
          <span data-ttu-id="c3db4-152">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-152">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3db4-153">Określa, czy dwa określone <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> obiekty mają różne wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-153">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3db4-154">
            <see langword="true" /> Jeśli wartość <paramref name="converter1" /> różni się od wartości <paramref name="converter2" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-154">
              <see langword="true" /> if the value of <paramref name="converter1" /> is different than the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c3db4-155">Pobiera docelowej <see cref="T:System.Xaml.XamlType" /> z <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-155">Gets the target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c3db4-156">Docelowej <see cref="T:System.Xaml.XamlType" /> z <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-156">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3db4-157">Zwraca <see cref="T:System.String" /> reprezentujący to <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-157">Returns a <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3db4-158">A <see cref="T:System.String" /> reprezentujący to <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3db4-158">A <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3db4-159"><xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> Wartość jest oparta na <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="c3db4-159">The <xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> value is based on <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>