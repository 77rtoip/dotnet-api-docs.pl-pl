<Type Name="XamlTypeInvoker" FullName="System.Xaml.Schema.XamlTypeInvoker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72072e8653351184162571e5947209dee435f820" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64175118" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeInvoker" />
  <TypeSignature Language="F#" Value="type XamlTypeInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ca240-101">Udostępnia punkt rozszerzenia, które można utworzyć wystąpienia typu XAML za pomocą metod innych niż odbicia i konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="ca240-101">Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca240-102">Celem <xref:System.Xaml.Schema.XamlTypeInvoker> jest umożliwienie rozszerzalny system typów XAML, schemat oraz działającego wykonawczego, które nie zależą od w pełni funkcji CLR, takich jak atrybuty CLR, odbicie informacje za pośrednictwem <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="ca240-102">The purpose of <xref:System.Xaml.Schema.XamlTypeInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="ca240-103">Podklasy <xref:System.Xaml.Schema.XamlTypeInvoker> są używane jako parametry wejściowe dla alternatywnej Konstruktory klasy schematu XAML takich jak <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="ca240-103">Subclasses of <xref:System.Xaml.Schema.XamlTypeInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="ca240-104">Możesz podklasy <xref:System.Xaml.XamlType> i przekazać <xref:System.Xaml.Schema.XamlTypeInvoker> za pośrednictwem konstruktora podstawowego.</span><span class="sxs-lookup"><span data-stu-id="ca240-104">You subclass <xref:System.Xaml.XamlType> and pass the <xref:System.Xaml.Schema.XamlTypeInvoker> through to the base constructor.</span></span> <span data-ttu-id="ca240-105">Wraz z definiowanie <xref:System.Xaml.Schema.XamlTypeInvoker> dla konstruktora, należy również podać zastąpień dla co najmniej część `Lookup` metody <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="ca240-105">Along with defining a <xref:System.Xaml.Schema.XamlTypeInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlType>.</span></span>  
  
 <span data-ttu-id="ca240-106"><xref:System.Xaml.Schema.XamlTypeInvoker> zawiera domyślną implementację.</span><span class="sxs-lookup"><span data-stu-id="ca240-106"><xref:System.Xaml.Schema.XamlTypeInvoker> has a default implementation.</span></span> <span data-ttu-id="ca240-107">Domyślna implementacja jest zgodna podobne modelu implementacji domyślnej typów schematu XAML <xref:System.Xaml.XamlType> i <xref:System.Xaml.XamlMember>: system typów CLR jest używany podczas tworzenia wystąpienia, wartości i wyszukiwań, w tym o korzystaniu z atrybutów CLR <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="ca240-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="ca240-108"><xref:System.Xaml.Schema.XamlTypeInvoker> udostępnia metody dla podstawowego wystąpienia (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) i metod, które są istotne dla typów gdzie <xref:System.Xaml.XamlType> odpowiada kolekcji, słownika lub tablicy (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span><span class="sxs-lookup"><span data-stu-id="ca240-108"><xref:System.Xaml.Schema.XamlTypeInvoker> provides methods for basic instantiation (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) and methods that are relevant for types where the <xref:System.Xaml.XamlType> represents a collection, dictionary or array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca240-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ca240-109">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlTypeInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlTypeInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca240-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="ca240-110">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca240-111">Domyślna implementacja jest pusty.</span><span class="sxs-lookup"><span data-stu-id="ca240-111">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="ca240-112">Ten konstruktor jest wywoływana wewnętrznie podać wartość dla <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca240-112">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="ca240-113">Dla <xref:System.Xaml.Schema.XamlTypeInvoker> podklasy, oczekuje się, że możesz użyć <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> podpis dla konstrukcji lub przesłonięcie, który wywołuje <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> jako podstawowy.</span><span class="sxs-lookup"><span data-stu-id="ca240-113">For a <xref:System.Xaml.Schema.XamlTypeInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> as base.</span></span> <span data-ttu-id="ca240-114">Zapewnianie <xref:System.Xaml.XamlType> implementuje domyślnego wzorca, gdzie <xref:System.Xaml.Schema.XamlTypeInvoker> można modyfikować.</span><span class="sxs-lookup"><span data-stu-id="ca240-114">Providing the <xref:System.Xaml.XamlType> implements a default pattern where <xref:System.Xaml.Schema.XamlTypeInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeInvoker (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeInvoker(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeInvoker : System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="new System.Xaml.Schema.XamlTypeInvoker type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ca240-115"><see cref="T:System.Xaml.XamlType" /> Wartość dla określonego typu XAML dotyczą to <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-115">The <see cref="T:System.Xaml.XamlType" /> value for the specific XAML type relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <summary><span data-ttu-id="ca240-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> klasy, w oparciu o podany <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-116">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca240-117">Ten konstruktor jest wywoływana wewnętrznie na podstawie <xref:System.Xaml.XamlType> gdzie <xref:System.Xaml.Schema.XamlTypeInvoker> służy do konstruowania.</span><span class="sxs-lookup"><span data-stu-id="ca240-117">This constructor is called internally based on the <xref:System.Xaml.XamlType> where the <xref:System.Xaml.Schema.XamlTypeInvoker> is used for construction.</span></span> <span data-ttu-id="ca240-118">`type` Podane tutaj odnosi się do innej metody wywołuje <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="ca240-118">The `type` provided here is relevant to all other method calls for <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca240-119"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-119"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual void AddToCollection (object instance, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollection(object instance, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollection (instance As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollection(System::Object ^ instance, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToCollection : obj * obj -&gt; unit&#xA;override this.AddToCollection : obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToCollection (instance, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ca240-120">Wystąpienie typu określonego przez <see cref="T:System.Xaml.XamlType" /> używane do konstruowania to <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-120">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <param name="item"><span data-ttu-id="ca240-121">Element do dodania.</span><span class="sxs-lookup"><span data-stu-id="ca240-121">The item to add.</span></span></param>
        <summary><span data-ttu-id="ca240-122">Dodaje podany element do wystąpienia typu, która jest odpowiednia dla tego <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-122">Adds the provided item to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca240-123">Tej metody powinny wywoływać tylko na <xref:System.Xaml.XamlType> reprezentujący kolekcję.</span><span class="sxs-lookup"><span data-stu-id="ca240-123">You should only call this method on a <xref:System.Xaml.XamlType> that represents a collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca240-124">Ta metoda wywoływana <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-124">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="ca240-125">**- lub -**</span><span class="sxs-lookup"><span data-stu-id="ca240-125">**-or-**</span></span>  
  
<span data-ttu-id="ca240-126">Ta metoda wywoływana <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gdzie odpowiedniego typu nie jest kolekcją.</span><span class="sxs-lookup"><span data-stu-id="ca240-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca240-127"><paramref name="instance" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-127"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlSchemaException"><span data-ttu-id="ca240-128"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> w tym <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-128"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ca240-129">Podstawowa implementacja zawiera wywołanie wewnętrznego Pomocnika <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="ca240-129">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="ca240-130">Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdzie <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, która obejmuje przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-130">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca240-131">Wewnętrznie, Podstawowa implementacja wywołuje <see cref="P:System.Xaml.XamlType.IsCollection" />i zgłasza wyjątek, jeśli wynik jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-131">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsCollection" />, and throws if the result is <see langword="false" />.</span></span>  
  
<span data-ttu-id="ca240-132">Podstawowa implementacja nie musi korzystać ze swoich własnych <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="ca240-132">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span></span> <span data-ttu-id="ca240-133">Po pierwsze, rzutowanie typu <paramref name="instance" /> do <see cref="T:System.Collections.IList" /> zostanie podjęta.</span><span class="sxs-lookup"><span data-stu-id="ca240-133">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IList" /> is attempted.</span></span> <span data-ttu-id="ca240-134">Jeśli operacja się powiedzie, wywołanie <see cref="M:System.Collections.IList.Add(System.Object)" /> wykonano a metoda zwraca wartości.</span><span class="sxs-lookup"><span data-stu-id="ca240-134">If this succeeds, a call to <see cref="M:System.Collections.IList.Add(System.Object)" /> is made and the method returns.</span></span> <span data-ttu-id="ca240-135">W przeciwnym razie Podstawowa implementacja używa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> do wywołania bazowego <see langword="Add" /> uzyskany w wyniku wywołania metody <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> tego <paramref name="" /> <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-135">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span>  
  
<span data-ttu-id="ca240-136">W podstawowej implementacji nie wyjątek jest zgłaszany na to, jeśli poziom <paramref name="item" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-136">In the base implementation no exception is raised at this level if <paramref name="item" /> is <see langword="null" />.</span></span> <span data-ttu-id="ca240-137">Jest możliwe, że podstawowe <see langword="Add" /> metoda zgłosi wyjątek przy wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="ca240-137">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span></span> <span data-ttu-id="ca240-138">Możliwe są inne wyjątki czasu wykonywania przypadku <see cref="P:System.Xaml.XamlType.ItemType" /> nie zwraca prawidłowy wynik.</span><span class="sxs-lookup"><span data-stu-id="ca240-138">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AddToDictionary">
      <MemberSignature Language="C#" Value="public virtual void AddToDictionary (object instance, object key, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToDictionary(object instance, object key, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToDictionary (instance As Object, key As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToDictionary(System::Object ^ instance, System::Object ^ key, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToDictionary : obj * obj * obj -&gt; unit&#xA;override this.AddToDictionary : obj * obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToDictionary (instance, key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ca240-139">Wystąpienie typu określonego przez <see cref="T:System.Xaml.XamlType" /> używane do konstruowania to <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-139">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <param name="key"><span data-ttu-id="ca240-140">Klucz ze słownika dla elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="ca240-140">Dictionary key for the item to add.</span></span></param>
        <param name="item"><span data-ttu-id="ca240-141">Wartość elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="ca240-141">The item value to add.</span></span></param>
        <summary><span data-ttu-id="ca240-142">Dodaje wartość podany klucz i element do wystąpienia typu, która jest odpowiednia dla tego <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-142">Adds the provided key and item value to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca240-143">Tej metody powinny wywoływać tylko na <xref:System.Xaml.XamlType> reprezentujący słownika.</span><span class="sxs-lookup"><span data-stu-id="ca240-143">You should only call this method on a <xref:System.Xaml.XamlType> that represents a dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca240-144">Ta metoda wywoływana <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-144">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="ca240-145">**- lub -**</span><span class="sxs-lookup"><span data-stu-id="ca240-145">**-or-**</span></span>  
  
<span data-ttu-id="ca240-146">Ta metoda wywoływana <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gdzie odpowiedniego typu nie jest słownikiem.</span><span class="sxs-lookup"><span data-stu-id="ca240-146">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a dictionary.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca240-147"><paramref name="instance" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-147"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlSchemaException"><span data-ttu-id="ca240-148"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> w tym <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> zwraca <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-148"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ca240-149">Podstawowa implementacja zawiera wywołanie wewnętrznego Pomocnika <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="ca240-149">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="ca240-150">Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdzie <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, która obejmuje przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-150">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca240-151">Wewnętrznie, Podstawowa implementacja wywołuje <see cref="P:System.Xaml.XamlType.IsDictionary" />i zgłasza wyjątek, jeśli wynik jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-151">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsDictionary" />, and throws if the result is <see langword="false" />.</span></span>  
  
<span data-ttu-id="ca240-152">Podstawowa implementacja nie musi korzystać ze swoich własnych <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="ca240-152">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span></span> <span data-ttu-id="ca240-153">Po pierwsze, rzutowanie typu <paramref name="instance" /> do <see cref="T:System.Collections.IDictionary" /> zostanie podjęta.</span><span class="sxs-lookup"><span data-stu-id="ca240-153">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IDictionary" /> is attempted.</span></span> <span data-ttu-id="ca240-154">Jeśli operacja się powiedzie, wywołanie <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> wykonano a metoda zwraca wartości.</span><span class="sxs-lookup"><span data-stu-id="ca240-154">If this succeeds, a call to <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> is made and the method returns.</span></span> <span data-ttu-id="ca240-155">W przeciwnym razie Podstawowa implementacja używa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> do wywołania bazowego <see langword="Add" /> uzyskany w wyniku wywołania metody <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> tego <paramref name="" /> <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-155">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span>  
  
<span data-ttu-id="ca240-156">W podstawowej implementacji nie wyjątek jest zgłaszany na to, jeśli poziom <paramref name="item" /> lub <paramref name="key" /> są <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-156">In the base implementation no exception is raised at this level if <paramref name="item" /> or <paramref name="key" /> are <see langword="null" />.</span></span> <span data-ttu-id="ca240-157">Jest możliwe, że podstawowe <see langword="Add" /> metoda zgłosi wyjątek przy wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="ca240-157">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span></span> <span data-ttu-id="ca240-158">Możliwe są inne wyjątki czasu wykonywania przypadku <see cref="P:System.Xaml.XamlType.ItemType" /> nie zwraca prawidłowy wynik.</span><span class="sxs-lookup"><span data-stu-id="ca240-158">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : obj[] -&gt; obj&#xA;override this.CreateInstance : obj[] -&gt; obj" Usage="xamlTypeInvoker.CreateInstance arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="ca240-159">Tablica obiektów, które dostarczają <see langword="x:ConstructorArgs" /> dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="ca240-159">An array of objects that supply the <see langword="x:ConstructorArgs" /> for the instance.</span></span> <span data-ttu-id="ca240-160">Może być <see langword="null" /> dla typów, które nie wymagają lub użyć <see langword="x:ConstructorArgs" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-160">May be <see langword="null" /> for types that do not require or use <see langword="x:ConstructorArgs" />.</span></span></param>
        <summary><span data-ttu-id="ca240-161">Tworzy wystąpienie obiektu oparte na inicjowanych konstrukcji <see cref="T:System.Xaml.XamlType" /> tego <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-161">Creates an object instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <returns><span data-ttu-id="ca240-162">Utworzone wystąpienie oparte na inicjowanych konstrukcji <see cref="T:System.Xaml.XamlType" /> tego <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-162">The created instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="ca240-163">Nie można rozpoznać konstruktora.</span><span class="sxs-lookup"><span data-stu-id="ca240-163">Could not resolve a constructor.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ca240-164">Podstawowa implementacja zawiera wywołanie wewnętrznego Pomocnika <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="ca240-164">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="ca240-165">Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdzie <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, która obejmuje przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-165">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(class System.Xaml.XamlType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddMethod (contentType As XamlType) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetAddMethod(System::Xaml::XamlType ^ contentType);" />
      <MemberSignature Language="F#" Value="abstract member GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo&#xA;override this.GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetAddMethod contentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="contentType"><span data-ttu-id="ca240-166"><see cref="T:System.Xaml.XamlType" /> dla typu elementu, który jest używany przez <see langword="Add" /> metody.</span><span class="sxs-lookup"><span data-stu-id="ca240-166"><see cref="T:System.Xaml.XamlType" /> for the item type that is used by the <see langword="Add" /> method.</span></span></param>
        <summary><span data-ttu-id="ca240-167">Zwraca odpowiedni <see langword="Add" /> metodę <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> się do kolekcji lub słownika.</span><span class="sxs-lookup"><span data-stu-id="ca240-167">Returns the relevant <see langword="Add" /> method for a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is relevant to a collection or dictionary.</span></span></summary>
        <returns><span data-ttu-id="ca240-168">CLR <see cref="T:System.Reflection.MethodInfo" /> informacje dotyczące <see langword="Add" /> metodę, lub wartość null.</span><span class="sxs-lookup"><span data-stu-id="ca240-168">CLR <see cref="T:System.Reflection.MethodInfo" /> information for the <see langword="Add" /> method, or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca240-169">Ta metoda powinna zwracać `null` w przypadkach, gdzie <xref:System.Xaml.XamlType> tego <xref:System.Xaml.Schema.XamlTypeInvoker> nie jest zapisywalny kolekcji lub słownika.</span><span class="sxs-lookup"><span data-stu-id="ca240-169">This method should return `null` for cases where the <xref:System.Xaml.XamlType> for this <xref:System.Xaml.Schema.XamlTypeInvoker> is not a writeable collection or dictionary.</span></span> <span data-ttu-id="ca240-170">W szczególności powinna zwrócić `null` w przypadkach, gdzie <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> zwraca `None`.</span><span class="sxs-lookup"><span data-stu-id="ca240-170">Specifically, should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ca240-171">Jeśli nie uzyskujesz dostęp do całkowicie zaufanym systemie typu XAML, ta metoda może potencjalnie false raportu <xref:System.Reflection.MethodInfo> informacje dotyczące obiektów wywołujących.</span><span class="sxs-lookup"><span data-stu-id="ca240-171">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca240-172"><paramref name="contentType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-172"><paramref name="contentType" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ca240-173">Zwraca implementację podstawową <see langword="null" /> w przypadkach, gdzie <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, która obejmuje przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-173">The base implementation returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span> <span data-ttu-id="ca240-174">Również zwraca <see langword="null" /> Jeśli <see cref="P:System.Xaml.XamlType.ItemType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-174">It also returns <see langword="null" /> if <see cref="P:System.Xaml.XamlType.ItemType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca240-175">Kolekcje XAML mogących mieć więcej niż jeden <see langword="Add" /> metody, ponieważ kolekcja XAML potencjalnie może obsługiwać więcej niż jeden typ zawartości (zobacz <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, lub zobacz <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> uzyskać informacji na temat jedna implementacja tę koncepcję w WPF).</span><span class="sxs-lookup"><span data-stu-id="ca240-175">XAML collections potentially have more than one <see langword="Add" /> method, because a XAML collection can potentially support more than one content type (see <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, or see <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> for information about one implementation of this concept in WPF).</span></span> <span data-ttu-id="ca240-176">Domyślna implementacja używa logika wewnętrzna do zwracania najlepszego dopasowania na podstawie sygnatur i typ podane <paramref name="contentType" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-176">The default implementation uses internal logic to return the best match based on the signatures and the type of the supplied <paramref name="contentType" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetEnumeratorMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumeratorMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetEnumeratorMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetEnumeratorMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca240-177">Zwraca obiekt reprezentujący metodę, która może wyliczyć nad elementami.</span><span class="sxs-lookup"><span data-stu-id="ca240-177">Returns an object representing a method that can enumerate over items.</span></span></summary>
        <returns><span data-ttu-id="ca240-178"><see cref="T:System.Reflection.MethodInfo" /> w przypadku metody modułu wyliczającego lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-178"><see cref="T:System.Reflection.MethodInfo" /> for an enumerator method, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca240-179">Powinna zostać zwrócona `null` w przypadkach, gdzie <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> zwraca `None`.</span><span class="sxs-lookup"><span data-stu-id="ca240-179">Should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ca240-180">Jeśli nie uzyskujesz dostęp do całkowicie zaufanym systemie typu XAML, ta metoda może potencjalnie false raportu <xref:System.Reflection.MethodInfo> informacje dotyczące obiektów wywołujących.</span><span class="sxs-lookup"><span data-stu-id="ca240-180">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ca240-181">Podstawowa implementacja wywołuje metodę pomocnika wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="ca240-181">The base implementation calls an internal helper method.</span></span> <span data-ttu-id="ca240-182">Zwraca tego pomocnika <see langword="null" /> w przypadkach, gdzie <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, która obejmuje przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-182">That helper returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span> <span data-ttu-id="ca240-183">Również zwraca <see langword="null" /> w przypadkach, gdzie <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> zwraca <see langword="None" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-183">It also returns <see langword="null" /> for cases where <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> returns <see langword="None" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetItems (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetItems(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems (instance As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetItems(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetItems : obj -&gt; System.Collections.IEnumerator&#xA;override this.GetItems : obj -&gt; System.Collections.IEnumerator" Usage="xamlTypeInvoker.GetItems instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ca240-184">Wystąpienie typu określonego przez <see cref="T:System.Xaml.XamlType" /> używane do konstruowania to <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-184">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <summary><span data-ttu-id="ca240-185">Zwraca <see cref="T:System.Collections.IEnumerator" /> obiekt reprezentujący zestaw elementów.</span><span class="sxs-lookup"><span data-stu-id="ca240-185">Returns an <see cref="T:System.Collections.IEnumerator" /> object representing the set of items.</span></span></summary>
        <returns><span data-ttu-id="ca240-186"><see cref="T:System.Collections.IEnumerator" /> Obiektu lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-186">An <see cref="T:System.Collections.IEnumerator" /> object, or <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca240-187">Ta metoda wywoływana <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-187">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="ca240-188">**- lub -**</span><span class="sxs-lookup"><span data-stu-id="ca240-188">**-or-**</span></span>  
  
<span data-ttu-id="ca240-189">Ta metoda wywoływana <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gdzie odpowiedni typ nie jest kolekcji lub słownika.</span><span class="sxs-lookup"><span data-stu-id="ca240-189">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection or dictionary.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca240-190"><paramref name="instance" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-190"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ca240-191">Podstawowa implementacja zawiera wywołanie wewnętrznego Pomocnika <c>ThrowIfUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="ca240-191">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="ca240-192">Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdzie <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, która obejmuje przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-192">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ca240-193">Podstawowa implementacja nie musi korzystać ze swoich własnych <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="ca240-193">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementation.</span></span> <span data-ttu-id="ca240-194">Po pierwsze, rzutowanie typu <paramref name="instance" /> do <see cref="T:System.Collections.IEnumerable" /> zostanie podjęta.</span><span class="sxs-lookup"><span data-stu-id="ca240-194">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IEnumerable" /> is attempted.</span></span> <span data-ttu-id="ca240-195">Jeśli operacja się powiedzie, wywołanie <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> wykonano i zwraca metody, które zwracają wartość.</span><span class="sxs-lookup"><span data-stu-id="ca240-195">If this succeeds, a call to <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> is made and the method returns that return value.</span></span> <span data-ttu-id="ca240-196">W przeciwnym razie Podstawowa implementacja używa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> do wywołania bazowego <see langword="GetEnumerator" /> uzyskany w wyniku wywołania metody <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> tego <paramref name="" /> <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-196">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="GetEnumerator" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ SetMarkupExtensionHandler { EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetMarkupExtensionHandler : EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca240-197">Pobiera program obsługi do użycia podczas <see cref="T:System.Xaml.XamlObjectWriter" /> wywołaniami zaimplementowano <see cref="T:System.Windows.Markup.MarkupExtension" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-197">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into an implemented <see cref="T:System.Windows.Markup.MarkupExtension" />.</span></span></summary>
        <value><span data-ttu-id="ca240-198">Implementacja programu obsługi, który obsługuje ten przypadek.</span><span class="sxs-lookup"><span data-stu-id="ca240-198">A handler implementation that handles this case.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca240-199">Program obsługi zdarzeń jest oparty na <xref:System.EventHandler%601> ograniczone z <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ca240-199">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="ca240-200">Wartość zwracana, wywołuje <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> zachowanie <xref:System.Xaml.XamlType> , <xref:System.Xaml.Schema.XamlTypeInvoker> opiera się na.</span><span class="sxs-lookup"><span data-stu-id="ca240-200">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="ca240-201">Wartość zwracana jest `null` dla <xref:System.Xaml.Schema.XamlTypeInvoker> opartego na nieznany <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="ca240-201">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConverterHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ SetTypeConverterHandler { EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetTypeConverterHandler : EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca240-202">Pobiera program obsługi do użycia podczas <see cref="T:System.Xaml.XamlObjectWriter" /> wywołaniami zaimplementowane CLR <see cref="T:System.ComponentModel.TypeConverter" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-202">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into a CLR-implemented <see cref="T:System.ComponentModel.TypeConverter" />.</span></span></summary>
        <value><span data-ttu-id="ca240-203">Implementacja programu obsługi, który obsługuje ten przypadek.</span><span class="sxs-lookup"><span data-stu-id="ca240-203">A handler implementation that handles this case.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca240-204">Program obsługi zdarzeń jest oparty na <xref:System.EventHandler%601> ograniczone z <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="ca240-204">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="ca240-205">Wartość zwracana, wywołuje <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> zachowanie <xref:System.Xaml.XamlType> , <xref:System.Xaml.Schema.XamlTypeInvoker> opiera się na.</span><span class="sxs-lookup"><span data-stu-id="ca240-205">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="ca240-206">Wartość zwracana jest `null` dla <xref:System.Xaml.Schema.XamlTypeInvoker> opartego na nieznany <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="ca240-206">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlTypeInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlTypeInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca240-207">Udostępnia wartość statyczna, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-207">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <value><span data-ttu-id="ca240-208">Wartość statyczna, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="ca240-208">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca240-209">Tę wartość do podawania <xref:System.Xaml.Schema.XamlTypeInvoker> parametru System.Xaml definicja interfejsu API zazwyczaj spowoduje, że dzwonić kodu zgłaszają wyjątki.</span><span class="sxs-lookup"><span data-stu-id="ca240-209">Supplying this value for a <xref:System.Xaml.Schema.XamlTypeInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>