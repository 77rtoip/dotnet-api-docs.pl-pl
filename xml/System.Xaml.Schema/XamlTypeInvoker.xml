<Type Name="XamlTypeInvoker" FullName="System.Xaml.Schema.XamlTypeInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd266704ee3fe75b84f3b0e3aa578f64c1e8009d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36445047" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlTypeInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeInvoker" />
  <TypeSignature Language="F#" Value="type XamlTypeInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="86bce-101">Udostępnia punkt rozszerzenia, które można utworzyć wystąpienia typu XAML za pomocą metod innych niż odbicia i konstruktorów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86bce-101">Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bce-102">Celem <xref:System.Xaml.Schema.XamlTypeInvoker> jest umożliwienie rozszerzalny system typów języka XAML, schematów i działającego wykonawczego, które nie w pełni korzystają z funkcji CLR, takich jak atrybuty CLR, odbicia informacji za pomocą <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="86bce-102">The purpose of <xref:System.Xaml.Schema.XamlTypeInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="86bce-103">Podklasy <xref:System.Xaml.Schema.XamlTypeInvoker> są używane jako parametry wejściowe dla alternatywnego konstruktorów klas schematu XAML takich jak <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="86bce-103">Subclasses of <xref:System.Xaml.Schema.XamlTypeInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="86bce-104">Możesz podklasy <xref:System.Xaml.XamlType> i przekaż <xref:System.Xaml.Schema.XamlTypeInvoker> za pośrednictwem konstruktora podstawowego.</span><span class="sxs-lookup"><span data-stu-id="86bce-104">You subclass <xref:System.Xaml.XamlType> and pass the <xref:System.Xaml.Schema.XamlTypeInvoker> through to the base constructor.</span></span> <span data-ttu-id="86bce-105">Wraz z definiowanie <xref:System.Xaml.Schema.XamlTypeInvoker> dla konstruktora, musisz także podać zastąpień dla co najmniej niektóre `Lookup` metody <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="86bce-105">Along with defining a <xref:System.Xaml.Schema.XamlTypeInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlType>.</span></span>  
  
 <span data-ttu-id="86bce-106"><xref:System.Xaml.Schema.XamlTypeInvoker> ma domyślne wdrożenie.</span><span class="sxs-lookup"><span data-stu-id="86bce-106"><xref:System.Xaml.Schema.XamlTypeInvoker> has a default implementation.</span></span> <span data-ttu-id="86bce-107">Domyślna implementacja następuje modelu podobne do implementacji domyślnej typów schematu XAML <xref:System.Xaml.XamlType> i <xref:System.Xaml.XamlMember>: system typów CLR służy do tworzenia wystąpienia, wartości i wyszukiwań, w tym o korzystaniu z atrybutów CLR <xref:System.Type> i <xref:System.Reflection.MemberInfo>i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="86bce-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="86bce-108"><xref:System.Xaml.Schema.XamlTypeInvoker> udostępnia metody dla podstawowego wystąpienia (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) i metody, które są odpowiednie dla typów gdzie <xref:System.Xaml.XamlType> reprezentuje słownik, kolekcji lub tablicy (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span><span class="sxs-lookup"><span data-stu-id="86bce-108"><xref:System.Xaml.Schema.XamlTypeInvoker> provides methods for basic instantiation (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) and methods that are relevant for types where the <xref:System.Xaml.XamlType> represents a collection, dictionary or array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86bce-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-109">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlTypeInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlTypeInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86bce-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-110">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bce-111">Domyślna implementacja jest pusta.</span><span class="sxs-lookup"><span data-stu-id="86bce-111">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="86bce-112">Ten konstruktor jest wywoływana wewnętrznie podać wartość dla <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="86bce-112">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="86bce-113">Dla <xref:System.Xaml.Schema.XamlTypeInvoker> podklasy, oczekuje się, że możesz użyć <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> podpis dla konstrukcji lub podaj zastąpienia, która wywołuje <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> podstawowego.</span><span class="sxs-lookup"><span data-stu-id="86bce-113">For a <xref:System.Xaml.Schema.XamlTypeInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> as base.</span></span> <span data-ttu-id="86bce-114">Zapewnianie <xref:System.Xaml.XamlType> implementuje domyślnego wzorca where <xref:System.Xaml.Schema.XamlTypeInvoker> nie można modyfikować.</span><span class="sxs-lookup"><span data-stu-id="86bce-114">Providing the <xref:System.Xaml.XamlType> implements a default pattern where <xref:System.Xaml.Schema.XamlTypeInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeInvoker (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeInvoker(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeInvoker : System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="new System.Xaml.Schema.XamlTypeInvoker type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="86bce-115">
            <see cref="T:System.Xaml.XamlType" /> Wartość dla określonego typu XAML dotyczy to <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-115">The <see cref="T:System.Xaml.XamlType" /> value for the specific XAML type relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bce-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> klasy oparte na podany <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-116">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bce-117">Ten konstruktor jest wywoływana wewnętrznie na podstawie <xref:System.Xaml.XamlType> gdzie <xref:System.Xaml.Schema.XamlTypeInvoker> służy do tworzenia.</span><span class="sxs-lookup"><span data-stu-id="86bce-117">This constructor is called internally based on the <xref:System.Xaml.XamlType> where the <xref:System.Xaml.Schema.XamlTypeInvoker> is used for construction.</span></span> <span data-ttu-id="86bce-118">`type` Podane w tym miejscu są odpowiednie do innej metody wymaga <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="86bce-118">The `type` provided here is relevant to all other method calls for <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86bce-119">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-119">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual void AddToCollection (object instance, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollection(object instance, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollection (instance As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollection(System::Object ^ instance, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToCollection : obj * obj -&gt; unit&#xA;override this.AddToCollection : obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToCollection (instance, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="86bce-120">Wystąpienia typu określonego przez <see cref="T:System.Xaml.XamlType" /> użyte do konstruowania to <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-120">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="86bce-121">Element do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-121">The item to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bce-122">Dodaje podany element do wystąpienia typu, który ma zastosowanie do tego <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-122">Adds the provided item to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bce-123">Tej metody powinny wywoływać tylko na <xref:System.Xaml.XamlType> reprezentujący kolekcję.</span><span class="sxs-lookup"><span data-stu-id="86bce-123">You should only call this method on a <xref:System.Xaml.XamlType> that represents a collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="86bce-124">Wywołania tej metody na <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-124">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="86bce-125">** - lub -** wywołania tej metody na <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gdzie odpowiedniego typu nie jest kolekcją.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-125">**-or-**  Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86bce-126">
            <paramref name="instance" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-126">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="86bce-127">
            <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> w tym <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-127">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="86bce-128">
            <para>Podstawowa implementacja zawiera wywołanie wewnętrzny Pomocnika <c>ThrowIfUnknown</c>. Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, w tym przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />.  Wewnętrznie, Podstawowa implementacja wywołuje <see cref="P:System.Xaml.XamlType.IsCollection" />i zgłasza wyjątek, jeśli wynik wynosi <see langword="false" />.  Podstawowa implementacja nie musi korzystać ze swoich własnych <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementacji. Po pierwsze, rzutowania z <paramref name="instance" /> do <see cref="T:System.Collections.IList" /> zostanie podjęta. Jeśli to się powiedzie, wywołanie <see cref="M:System.Collections.IList.Add(System.Object)" /> staje się i zwraca metodę. W przeciwnym razie Podstawowa implementacja używa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> do wywołania odpowiadającego <see langword="Add" /> uzyskany w wyniku wywołania metody <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> tego <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  W podstawowej implementacji nie wystąpił wyjątek w tego poziomu Jeśli <paramref name="item" /> jest <see langword="null" />. Jest możliwe, że podstawowa <see langword="Add" /> metoda zgłosi wyjątek przy wywołaniu. Możliwe są inne wyjątki czasu wykonywania Jeśli <see cref="P:System.Xaml.XamlType.ItemType" /> zwrócił nieprawidłowy wynik.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-128">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.  Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsCollection" />, and throws if the result is <see langword="false" />.  The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation. First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IList" /> is attempted. If this succeeds, a call to <see cref="M:System.Collections.IList.Add(System.Object)" /> is made and the method returns. Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  In the base implementation no exception is raised at this level if <paramref name="item" /> is <see langword="null" />. It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked. Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddToDictionary">
      <MemberSignature Language="C#" Value="public virtual void AddToDictionary (object instance, object key, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToDictionary(object instance, object key, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToDictionary (instance As Object, key As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToDictionary(System::Object ^ instance, System::Object ^ key, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToDictionary : obj * obj * obj -&gt; unit&#xA;override this.AddToDictionary : obj * obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToDictionary (instance, key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="86bce-129">Wystąpienia typu określonego przez <see cref="T:System.Xaml.XamlType" /> użyte do konstruowania to <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-129">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="86bce-130">Słownik klucz elementu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-130">Dictionary key for the item to add.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="86bce-131">Wartość elementu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-131">The item value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bce-132">Dodaje podana wartość dla klucza elementu do wystąpienia typu, który ma zastosowanie do tego <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-132">Adds the provided key and item value to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bce-133">Tej metody powinny wywoływać tylko na <xref:System.Xaml.XamlType> reprezentujący słownika.</span><span class="sxs-lookup"><span data-stu-id="86bce-133">You should only call this method on a <xref:System.Xaml.XamlType> that represents a dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="86bce-134">Wywołania tej metody na <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-134">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="86bce-135">** - lub -** wywołania tej metody na <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gdzie odpowiedniego typu nie jest słownikiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-135">**-or-**  Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86bce-136">
            <paramref name="instance" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-136">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="86bce-137">
            <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> w tym <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-137">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="86bce-138">
            <para>Podstawowa implementacja zawiera wywołanie wewnętrzny Pomocnika <c>ThrowIfUnknown</c>. Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, w tym przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />.  Wewnętrznie, Podstawowa implementacja wywołuje <see cref="P:System.Xaml.XamlType.IsDictionary" />i zgłasza wyjątek, jeśli wynik wynosi <see langword="false" />.  Podstawowa implementacja nie musi korzystać ze swoich własnych <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementacji. Po pierwsze, rzutowania z <paramref name="instance" /> do <see cref="T:System.Collections.IDictionary" /> zostanie podjęta. Jeśli to się powiedzie, wywołanie <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> staje się i zwraca metodę. W przeciwnym razie Podstawowa implementacja używa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> do wywołania odpowiadającego <see langword="Add" /> uzyskany w wyniku wywołania metody <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> tego <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  W podstawowej implementacji nie wystąpił wyjątek w tego poziomu Jeśli <paramref name="item" /> lub <paramref name="key" /> są <see langword="null" />. Jest możliwe, że podstawowa <see langword="Add" /> metoda zgłosi wyjątek przy wywołaniu. Możliwe są inne wyjątki czasu wykonywania Jeśli <see cref="P:System.Xaml.XamlType.ItemType" /> zwrócił nieprawidłowy wynik.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-138">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.  Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsDictionary" />, and throws if the result is <see langword="false" />.  The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation. First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IDictionary" /> is attempted. If this succeeds, a call to <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> is made and the method returns. Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  In the base implementation no exception is raised at this level if <paramref name="item" /> or <paramref name="key" /> are <see langword="null" />. It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked. Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : obj[] -&gt; obj&#xA;override this.CreateInstance : obj[] -&gt; obj" Usage="xamlTypeInvoker.CreateInstance arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="86bce-139">Tablica obiektów, które dostarczają <see langword="x:ConstructorArgs" /> dla tego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-139">An array of objects that supply the <see langword="x:ConstructorArgs" /> for the instance.</span>
          </span>
          <span data-ttu-id="86bce-140">Może być <see langword="null" /> dla typów, które nie wymagają ani nie używają <see langword="x:ConstructorArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-140">May be <see langword="null" /> for types that do not require or use <see langword="x:ConstructorArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bce-141">Tworzy wystąpienie obiektu oparte na inicjowanych konstrukcji <see cref="T:System.Xaml.XamlType" /> dla tego <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-141">Creates an object instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bce-142">Utworzone wystąpienie oparte na inicjowanych konstrukcji <see cref="T:System.Xaml.XamlType" /> dla tego <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-142">The created instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="86bce-143">Nie można rozpoznać konstruktora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-143">Could not resolve a constructor.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="86bce-144">
            <para>Podstawowa implementacja zawiera wywołanie wewnętrzny Pomocnika <c>ThrowIfUnknown</c>. Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, w tym przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-144">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(class System.Xaml.XamlType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddMethod (contentType As XamlType) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetAddMethod(System::Xaml::XamlType ^ contentType);" />
      <MemberSignature Language="F#" Value="abstract member GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo&#xA;override this.GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetAddMethod contentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="contentType">
          <span data-ttu-id="86bce-145">
            <see cref="T:System.Xaml.XamlType" /> dla typu elementu, który jest używany przez <see langword="Add" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-145">
              <see cref="T:System.Xaml.XamlType" /> for the item type that is used by the <see langword="Add" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bce-146">Zwraca odpowiedniego <see langword="Add" /> metodę <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> się do kolekcji lub słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-146">Returns the relevant <see langword="Add" /> method for a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is relevant to a collection or dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bce-147">CLR <see cref="T:System.Reflection.MethodInfo" /> informacje dotyczące <see langword="Add" /> metody lub wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-147">CLR <see cref="T:System.Reflection.MethodInfo" /> information for the <see langword="Add" /> method, or null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bce-148">Ta metoda powinna zwrócić `null` w przypadkach, gdy <xref:System.Xaml.XamlType> to <xref:System.Xaml.Schema.XamlTypeInvoker> nie jest zapisywalny kolekcji lub słownika.</span><span class="sxs-lookup"><span data-stu-id="86bce-148">This method should return `null` for cases where the <xref:System.Xaml.XamlType> for this <xref:System.Xaml.Schema.XamlTypeInvoker> is not a writeable collection or dictionary.</span></span> <span data-ttu-id="86bce-149">W szczególności powinny zwrócić `null` w przypadkach, gdy <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> zwraca `None`.</span><span class="sxs-lookup"><span data-stu-id="86bce-149">Specifically, should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="86bce-150">Jeśli nie używasz pełni zaufany system typów języka XAML, ta metoda może potencjalnie false raport <xref:System.Reflection.MethodInfo> informacje dotyczące obiektów wywołujących.</span><span class="sxs-lookup"><span data-stu-id="86bce-150">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86bce-151">
            <paramref name="contentType" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-151">
              <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="86bce-152">
            <para>Podstawowa implementacja zwraca <see langword="null" /> w przypadkach, gdy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, w tym przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />. Również zwraca <see langword="null" /> Jeśli <see cref="P:System.Xaml.XamlType.ItemType" /> jest <see langword="null" />.  Kolekcje XAML mogących mieć więcej niż jeden <see langword="Add" /> metody, ponieważ kolekcja XAML potencjalnie może obsługiwać więcej niż jeden typ zawartości (zobacz <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, lub zobacz <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> informacji o jedna implementacja to pojęcie na platformie WPF). Domyślna implementacja używa wewnętrznego logikę do zwrócenia najlepszego dopasowania na podstawie sygnatury i typ podane <paramref name="contentType" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-152">
              <para>The base implementation returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />. It also returns <see langword="null" /> if <see cref="P:System.Xaml.XamlType.ItemType" /> is <see langword="null" />.  XAML collections potentially have more than one <see langword="Add" /> method, because a XAML collection can potentially support more than one content type (see <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, or see <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> for information about one implementation of this concept in WPF). The default implementation uses internal logic to return the best match based on the signatures and the type of the supplied <paramref name="contentType" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetEnumeratorMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumeratorMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetEnumeratorMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetEnumeratorMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86bce-153">Zwraca obiekt reprezentujący metodę, która może wyliczyć nad elementami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-153">Returns an object representing a method that can enumerate over items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bce-154">
            <see cref="T:System.Reflection.MethodInfo" /> dla metody modułu wyliczającego lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-154">
              <see cref="T:System.Reflection.MethodInfo" /> for an enumerator method, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bce-155">Należy zwrócić `null` w przypadkach, gdy <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> zwraca `None`.</span><span class="sxs-lookup"><span data-stu-id="86bce-155">Should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="86bce-156">Jeśli nie używasz pełni zaufany system typów języka XAML, ta metoda może potencjalnie false raport <xref:System.Reflection.MethodInfo> informacje dotyczące obiektów wywołujących.</span><span class="sxs-lookup"><span data-stu-id="86bce-156">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="86bce-157">
            <para>Podstawowa implementacja wywołuje metodę pomocnika wewnętrznego. Zwraca tego pomocnika <see langword="null" /> w przypadkach, gdy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, w tym przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />. Również zwraca <see langword="null" /> w przypadkach, gdy <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> zwraca <see langword="None" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-157">
              <para>The base implementation calls an internal helper method. That helper returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />. It also returns <see langword="null" /> for cases where <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> returns <see langword="None" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetItems (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetItems(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems (instance As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetItems(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetItems : obj -&gt; System.Collections.IEnumerator&#xA;override this.GetItems : obj -&gt; System.Collections.IEnumerator" Usage="xamlTypeInvoker.GetItems instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="86bce-158">Wystąpienia typu określonego przez <see cref="T:System.Xaml.XamlType" /> użyte do konstruowania to <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-158">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86bce-159">Zwraca <see cref="T:System.Collections.IEnumerator" /> obiekt reprezentujący zestaw elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-159">Returns an <see cref="T:System.Collections.IEnumerator" /> object representing the set of items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="86bce-160">
            <see cref="T:System.Collections.IEnumerator" /> Obiekt, lub <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-160">An <see cref="T:System.Collections.IEnumerator" /> object, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="86bce-161">Wywołania tej metody na <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opartego na nieznany <see cref="T:System.Xaml.XamlType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-161">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="86bce-162">** - lub -** wywołania tej metody na <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gdzie odpowiedniego typu nie jest on kolekcją ani słownikiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-162">**-or-**  Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection or dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86bce-163">
            <paramref name="instance" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-163">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="86bce-164">
            <para>Podstawowa implementacja zawiera wywołanie wewnętrzny Pomocnika <c>ThrowIfUnknown</c>. Tego pomocnika zawsze zgłasza wyjątek w przypadkach, gdy <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> opiera się na nieznany <see cref="T:System.Xaml.XamlType" />, w tym przypadków, gdy <see cref="P:System.Xaml.XamlType.UnderlyingType" /> z <see cref="T:System.Xaml.XamlType" /> jest <see langword="null" />.  Podstawowa implementacja nie musi korzystać ze swoich własnych <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementacji. Po pierwsze, rzutowania z <paramref name="instance" /> do <see cref="T:System.Collections.IEnumerable" /> zostanie podjęta. Jeśli to się powiedzie, wywołanie <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> staje się i zwraca metody, które zwracają wartość. W przeciwnym razie Podstawowa implementacja używa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> do wywołania odpowiadającego <see langword="GetEnumerator" /> uzyskany w wyniku wywołania metody <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> tego <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-164">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.  The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementation. First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IEnumerable" /> is attempted. If this succeeds, a call to <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> is made and the method returns that return value. Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="GetEnumerator" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ SetMarkupExtensionHandler { EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetMarkupExtensionHandler : EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bce-165">Pobiera program obsługi do użycia podczas <see cref="T:System.Xaml.XamlObjectWriter" /> wywołuje zaimplementowanym <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-165">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into an implemented <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bce-166">Implementację programu obsługi, która obsługuje ten przypadek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-166">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bce-167">Program obsługi zdarzeń jest oparta na <xref:System.EventHandler%601> ograniczone z <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="86bce-167">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="86bce-168">Wartość zwracana wywołuje <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> zachowanie <xref:System.Xaml.XamlType> który <xref:System.Xaml.Schema.XamlTypeInvoker> opiera się na.</span><span class="sxs-lookup"><span data-stu-id="86bce-168">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="86bce-169">Wartość zwracana jest `null` dla <xref:System.Xaml.Schema.XamlTypeInvoker> opartego na nieznany <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="86bce-169">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConverterHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ SetTypeConverterHandler { EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetTypeConverterHandler : EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bce-170">Pobiera program obsługi do użycia podczas <see cref="T:System.Xaml.XamlObjectWriter" /> wywołuje zaimplementowana CLR <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-170">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into a CLR-implemented <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bce-171">Implementację programu obsługi, która obsługuje ten przypadek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-171">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bce-172">Program obsługi zdarzeń jest oparta na <xref:System.EventHandler%601> ograniczone z <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="86bce-172">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="86bce-173">Wartość zwracana wywołuje <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> zachowanie <xref:System.Xaml.XamlType> który <xref:System.Xaml.Schema.XamlTypeInvoker> opiera się na.</span><span class="sxs-lookup"><span data-stu-id="86bce-173">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="86bce-174">Wartość zwracana jest `null` dla <xref:System.Xaml.Schema.XamlTypeInvoker> opartego na nieznany <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="86bce-174">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlTypeInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlTypeInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86bce-175">Zawiera statyczny wartość, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-175">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86bce-176">Statyczne wartość, która reprezentuje nieznany, nie są w pełni zaimplementowane <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86bce-176">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86bce-177">Udostępnia tę wartość dla <xref:System.Xaml.Schema.XamlTypeInvoker> parametru System.Xaml definicja interfejsu API będzie zazwyczaj powodują wywoływanego kodu zgłaszają wyjątki.</span><span class="sxs-lookup"><span data-stu-id="86bce-177">Supplying this value for a <xref:System.Xaml.Schema.XamlTypeInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>