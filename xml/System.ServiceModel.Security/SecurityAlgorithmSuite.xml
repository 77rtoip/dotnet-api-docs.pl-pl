<Type Name="SecurityAlgorithmSuite" FullName="System.ServiceModel.Security.SecurityAlgorithmSuite">
  <Metadata><Meta Name="ms.openlocfilehash" Value="92901a69f7e77c8c850f0729497d96c21a2f9afa" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69150110" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityAlgorithmSuite" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract SecurityAlgorithmSuite extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityAlgorithmSuite" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityAlgorithmSuite abstract" />
  <TypeSignature Language="F#" Value="type SecurityAlgorithmSuite = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.SecurityAlgorithmSuiteConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5346c-101">Określa właściwości algorytmów.</span><span class="sxs-lookup"><span data-stu-id="5346c-101">Specifies properties of algorithms.</span></span> <span data-ttu-id="5346c-102">Jest <see langword="abstract" /> to Klasa.</span><span class="sxs-lookup"><span data-stu-id="5346c-102">This is an <see langword="abstract" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-103">Wystąpienia tej klasy są używane do określania cech kryptograficznych algorytmów używanych podczas zabezpieczania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-103">Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.</span></span>  
  
 <span data-ttu-id="5346c-104">Ta klasa jest używana przez klasy pochodne do tworzenia wystąpień pakietów algorytmów zabezpieczeń i zawiera właściwości opisujące algorytmy zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="5346c-104">This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms.</span></span> <span data-ttu-id="5346c-105">Na przykład `wsBasicHttp` powiązanie używa wewnętrznej klasy pochodnej do określenia właściwości swoich algorytmów zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="5346c-105">For example, the `wsBasicHttp` binding uses an internal derived class to specify the properties of its security algorithms.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityAlgorithmSuite ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityAlgorithmSuite();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5346c-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="5346c-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-107">Wystąpienia tej klasy składają się z właściwości statycznych i właściwości tylko do odczytu, więc Konstruktor nie inicjuje żadnych właściwości.</span><span class="sxs-lookup"><span data-stu-id="5346c-107">The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic128 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-108">Pobiera pakiet algorytmu Basic128.</span><span class="sxs-lookup"><span data-stu-id="5346c-108">Gets the Basic128 algorithm suite.</span></span></summary>
        <value><span data-ttu-id="5346c-109">128-bitowa podstawowa <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span><span class="sxs-lookup"><span data-stu-id="5346c-109">The 128-bit Basic <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-110">Domyślnie AES-128 jest używany jako algorytm szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="5346c-110">By default, AES-128 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic128Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-111">Pobiera pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy i 128-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-111">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-112">Pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy i 128-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-112">An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-113">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-113">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic128Sha256 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-114">Pobiera pakiet algorytmów, który używa SHA256 do podsumowania podpisu i 128-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-114">Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-115">Pakiet algorytmów, który używa SHA256 dla skrótu podpisu i 128-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-115">An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-116">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-116">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic128Sha256Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-117">Pobiera pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy, SHA256 dla skrótu podpisu i 128-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-117">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-118">Pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy, SHA256 dla skrótu podpisu i 128-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-118">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-119">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-119">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic192 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-120">Pobiera pakiet algorytmów korzystających z 192-bitowego języka Basic jako algorytmu szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-120">Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-121">Pakiet algorytmów, który używa 192-bitowy Basic jako algorytmu szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-121">An algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-122">Domyślnie AES-192 jest używany jako algorytm szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="5346c-122">By default, AES-192 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic192Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-123">Pobiera pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy i 192-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-123">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-124">Pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy i 192-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-124">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-125">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-125">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic192Sha256 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-126">Pobiera pakiet algorytmów, który używa SHA256 do podsumowania podpisu i 192-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-126">Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-127">Pakiet algorytmów, który używa SHA256 dla skrótu podpisu i 192-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-127">An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-128">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-128">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic192Sha256Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-129">Pobiera pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy, SHA256 dla skrótu podpisu i 192-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-129">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-130">Pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy, SHA256 dla skrótu podpisu i 192-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-130">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-131">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-131">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic256 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-132">Pobiera pakiet algorytmów korzystających z 256-bitowego języka Basic jako algorytmu szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-132">Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-133">Pakiet algorytmów, który używa 256-bitowy Basic jako algorytmu szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-133">An algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-134">Domyślnie algorytm szyfrowania AES-256 jest używany.</span><span class="sxs-lookup"><span data-stu-id="5346c-134">By default, AES-256 is used for the encryption algorithm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5346c-135">Poniższy kod pokazuje, jak ustawić <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="5346c-135">The following code shows how to set <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> to this property.</span></span>  
  
 [!code-csharp[c_ProgrammingSecurity#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_programmingsecurity/cs/source.cs#8)]
 [!code-vb[c_ProgrammingSecurity#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_programmingsecurity/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic256Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-136">Pobiera pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy i 256-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-136">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-137">Pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy i 256-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-137">An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-138">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-138">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic256Sha256 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-139">Pobiera pakiet algorytmów, który używa SHA256 do podsumowania podpisu i 256-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-139">Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-140">Pakiet algorytmów, który używa SHA256 dla skrótu podpisu i 256-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-140">An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-141">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-141">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Basic256Sha256Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-142">Pobiera pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy, SHA256 dla skrótu podpisu i 256-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-142">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-143">Pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy, SHA256 dla skrótu podpisu i 256-bitowy Basic jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-143">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-144">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-144">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Default" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Default { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-145">Pobiera domyślny pakiet algorytmów.</span><span class="sxs-lookup"><span data-stu-id="5346c-145">Gets the default algorithm suite.</span></span></summary>
        <value><span data-ttu-id="5346c-146">Wartość domyślna <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> to <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, która określa 256-bitowy Advanced Encryption Standard (AES) jako algorytm szyfrowania symetrycznego.</span><span class="sxs-lookup"><span data-stu-id="5346c-146">The default <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-147">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje właściwości określające wartości domyślne, a także metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-147">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAsymmetricKeyWrapAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-148">Pobiera domyślny algorytm otaczania klucza asymetrycznego jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="5346c-148">Gets the default asymmetric key wrap algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="5346c-149">Domyślny algorytm zawijania klucza asymetrycznego.</span><span class="sxs-lookup"><span data-stu-id="5346c-149">The default asymmetric key wrap algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-150">Gdy jest zastępowany, zapewnia wartość ciągu, która będzie używana do porównania w <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> metodzie.</span><span class="sxs-lookup"><span data-stu-id="5346c-150">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAsymmetricSignatureAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-151">Pobiera domyślny algorytm podpisu asymetrycznego jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="5346c-151">Gets the default asymmetric signature algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="5346c-152">Domyślny algorytm podpisywania asymetrycznego.</span><span class="sxs-lookup"><span data-stu-id="5346c-152">The default asymmetric signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-153">Gdy jest zastępowany, zapewnia wartość ciągu, która będzie używana do porównania w <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> metodzie.</span><span class="sxs-lookup"><span data-stu-id="5346c-153">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCanonicalizationAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultCanonicalizationAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCanonicalizationAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultCanonicalizationAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCanonicalizationAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-154">Pobiera domyślny algorytm kanonizacji jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="5346c-154">Gets the default canonicalization algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="5346c-155">Domyślny algorytm kanonizacji.</span><span class="sxs-lookup"><span data-stu-id="5346c-155">The default canonicalization algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-156">Gdy jest zastępowany, zapewnia wartość ciągu, która będzie używana do porównania w metodzie <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="5346c-156">When overridden, provides a string value that will be used for comparison in the method <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDigestAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultDigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultDigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultDigestAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultDigestAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultDigestAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-157">Pobiera domyślny algorytm skrótu jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="5346c-157">Gets the default digest algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="5346c-158">Domyślny algorytm szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="5346c-158">The default digest algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-159">Gdy jest zastępowany, zapewnia wartość ciągu, która będzie używana do porównania w <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> metodzie.</span><span class="sxs-lookup"><span data-stu-id="5346c-159">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultEncryptionAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-160">Pobiera domyślny algorytm szyfrowania jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="5346c-160">Gets the default encryption algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="5346c-161">Domyślny algorytm szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="5346c-161">The default encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-162">Gdy jest zastępowany, zapewnia wartość ciągu, która będzie używana do porównania w <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> metodzie.</span><span class="sxs-lookup"><span data-stu-id="5346c-162">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultEncryptionKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultEncryptionKeyDerivationLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultEncryptionKeyDerivationLength : int" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-163">Pobiera domyślną długość wyprowadzania klucza szyfrowania jako <see cref="T:System.Int32" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="5346c-163">Gets the default encryption key derivation length as an <see cref="T:System.Int32" /> value.</span></span></summary>
        <value><span data-ttu-id="5346c-164">Domyślna długość wyprowadzania klucza szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="5346c-164">The default encryption key derivation length.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-165">Zwracana wartość będzie się różnić w zależności od podklasy implementującej ją.</span><span class="sxs-lookup"><span data-stu-id="5346c-165">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="5346c-166">W `Basic256` przypadku szyfrowania zwraca 256.</span><span class="sxs-lookup"><span data-stu-id="5346c-166">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSignatureKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSignatureKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSignatureKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSignatureKeyDerivationLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSignatureKeyDerivationLength : int" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-167">Pobiera domyślną długość wyprowadzania klucza podpisu jako <see cref="T:System.Int32" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="5346c-167">Gets the default signature key derivation length as an <see cref="T:System.Int32" /> value.</span></span></summary>
        <value><span data-ttu-id="5346c-168">Domyślna długość wyprowadzania klucza podpisu.</span><span class="sxs-lookup"><span data-stu-id="5346c-168">The default signature key derivation length.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-169">Zwracana wartość będzie się różnić w zależności od podklasy implementującej ją.</span><span class="sxs-lookup"><span data-stu-id="5346c-169">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="5346c-170">W `Basic256` przypadku szyfrowania zwraca 192.</span><span class="sxs-lookup"><span data-stu-id="5346c-170">For `Basic256` encryption, it returns 192.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSymmetricKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSymmetricKeyLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSymmetricKeyLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSymmetricKeyLength : int" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-171">Pobiera domyślną długość klucza symetrycznego jako <see cref="T:System.Int32" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="5346c-171">Gets the default symmetric key length as an <see cref="T:System.Int32" /> value.</span></span></summary>
        <value><span data-ttu-id="5346c-172">Domyślna długość klucza symetrycznego.</span><span class="sxs-lookup"><span data-stu-id="5346c-172">The default symmetric key length.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-173">Zwracana wartość będzie się różnić w zależności od podklasy implementującej ją.</span><span class="sxs-lookup"><span data-stu-id="5346c-173">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="5346c-174">W `Basic256` przypadku szyfrowania zwraca 256.</span><span class="sxs-lookup"><span data-stu-id="5346c-174">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSymmetricKeyWrapAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-175">Pobiera domyślny algorytm zawijania klucza symetrycznego jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="5346c-175">Gets the default symmetric key wrap algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="5346c-176">Domyślny algorytm zawijania klucza symetrycznego.</span><span class="sxs-lookup"><span data-stu-id="5346c-176">The default symmetric key wrap algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSymmetricSignatureAlgorithm : string" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-177">Pobiera domyślny algorytm podpisywania symetrycznego jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="5346c-177">Gets the default symmetric signature algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="5346c-178">Domyślny algorytm podpisywania symetrycznego.</span><span class="sxs-lookup"><span data-stu-id="5346c-178">The default symmetric signature algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsAsymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsAsymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsAsymmetricKeyLengthSupported(int length);" />
      <MemberSignature Language="F#" Value="abstract member IsAsymmetricKeyLengthSupported : int -&gt; bool" Usage="securityAlgorithmSuite.IsAsymmetricKeyLengthSupported length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="5346c-179">Długość klucza do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5346c-179">The key length to check.</span></span></param>
        <summary><span data-ttu-id="5346c-180">Wskazuje, czy określona długość klucza jest obsługiwana przez algorytm asymetryczny.</span><span class="sxs-lookup"><span data-stu-id="5346c-180">Indicates whether a particular key length is supported by the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="5346c-181"><see langword="true" />Jeśli długość klucza jest obsługiwana przez algorytm asymetryczny; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5346c-181"><see langword="true" /> if the key length is supported by the asymmetric algorithm; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-182">Typowe długości kluczy to 128, 192 i 256 bity.</span><span class="sxs-lookup"><span data-stu-id="5346c-182">Typical key lengths are 128, 192, and 256 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsAsymmetricKeyWrapAlgorithmSupported : string -&gt; bool&#xA;override this.IsAsymmetricKeyWrapAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="5346c-183">Algorytm do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5346c-183">The algorithm to check.</span></span></param>
        <summary><span data-ttu-id="5346c-184">Wskazuje, czy algorytm zawijania klucza asymetrycznego jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="5346c-184">Indicates whether an asymmetric key wrap algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="5346c-185"><see langword="true" />Jeśli jest obsługiwany algorytm zawijania klucza asymetrycznego; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5346c-185"><see langword="true" /> if the asymmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-186">`algorithm`jest porównywany z ciągiem zwracanym <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>z.</span><span class="sxs-lookup"><span data-stu-id="5346c-186">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsAsymmetricSignatureAlgorithmSupported : string -&gt; bool&#xA;override this.IsAsymmetricSignatureAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="5346c-187">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5346c-187">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="5346c-188">Wskazuje, czy algorytm podpisu asymetrycznego jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="5346c-188">Indicates whether an asymmetric signature algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="5346c-189"><see langword="true" />Jeśli algorytm podpisu asymetrycznego jest obsługiwany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5346c-189"><see langword="true" /> if the asymmetric signature algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-190">`algorithm`jest porównywany z ciągiem zwracanym <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>z.</span><span class="sxs-lookup"><span data-stu-id="5346c-190">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonicalizationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsCanonicalizationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCanonicalizationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsCanonicalizationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsCanonicalizationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsCanonicalizationAlgorithmSupported : string -&gt; bool&#xA;override this.IsCanonicalizationAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsCanonicalizationAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="5346c-191">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5346c-191">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="5346c-192">Wskazuje, czy algorytm zapewniania kanoniczności jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="5346c-192">Indicates whether a canonicalization algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="5346c-193"><see langword="true" />Jeśli jest obsługiwany algorytm kanonizacji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5346c-193"><see langword="true" /> if the canonicalization algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-194">`algorithm`jest porównywany z ciągiem zwracanym <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>z.</span><span class="sxs-lookup"><span data-stu-id="5346c-194">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigestAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsDigestAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDigestAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDigestAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDigestAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsDigestAlgorithmSupported : string -&gt; bool&#xA;override this.IsDigestAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsDigestAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="5346c-195">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5346c-195">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="5346c-196">Wskazuje, czy algorytm porządkowania jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="5346c-196">Indicates whether a digest algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="5346c-197"><see langword="true" />Jeśli algorytm Digest jest obsługiwany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5346c-197"><see langword="true" /> if the digest algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-198">`algorithm`jest porównywany z ciągiem zwracanym <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>z.</span><span class="sxs-lookup"><span data-stu-id="5346c-198">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsEncryptionAlgorithmSupported : string -&gt; bool&#xA;override this.IsEncryptionAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsEncryptionAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="5346c-199">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5346c-199">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="5346c-200">Wskazuje, czy algorytm szyfrowania jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="5346c-200">Indicates whether an encryption algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="5346c-201"><see langword="true" />Jeśli algorytm szyfrowania jest obsługiwany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5346c-201"><see langword="true" /> if the encryption algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-202">`algorithm`jest porównywany z ciągiem zwracanym <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>z.</span><span class="sxs-lookup"><span data-stu-id="5346c-202">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsEncryptionKeyDerivationAlgorithmSupported : string -&gt; bool&#xA;override this.IsEncryptionKeyDerivationAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="5346c-203">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5346c-203">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="5346c-204">Wskazuje, czy algorytm wyprowadzania klucza szyfrowania jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="5346c-204">Indicates whether an encryption key derivation algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="5346c-205"><see langword="true" />Jeśli jest obsługiwany algorytm wyznaczania wartości klucza szyfrowania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5346c-205"><see langword="true" /> if the encryption key derivation algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignatureKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSignatureKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignatureKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignatureKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignatureKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsSignatureKeyDerivationAlgorithmSupported : string -&gt; bool&#xA;override this.IsSignatureKeyDerivationAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="5346c-206">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5346c-206">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="5346c-207">Wskazuje, czy algorytm wyprowadzania klucza podpisu jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="5346c-207">Indicates whether a signature key derivation algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="5346c-208"><see langword="true" />Jeśli jest obsługiwany algorytm wyznaczania klucza podpisu; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5346c-208"><see langword="true" /> if the signature key derivation algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsSymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSymmetricKeyLengthSupported(int length);" />
      <MemberSignature Language="F#" Value="abstract member IsSymmetricKeyLengthSupported : int -&gt; bool" Usage="securityAlgorithmSuite.IsSymmetricKeyLengthSupported length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="5346c-209">Długość klucza do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5346c-209">The key length to check.</span></span></param>
        <summary><span data-ttu-id="5346c-210">Gdy jest zastępowany w klasie pochodnej, wskazuje, czy określona długość klucza symetrycznego jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="5346c-210">When overridden in a derived class, indicates whether a particular symmetric key length is supported.</span></span></summary>
        <returns><span data-ttu-id="5346c-211"><see langword="true" />Jeśli długość klucza symetrycznego jest obsługiwana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5346c-211"><see langword="true" /> if the symmetric key length is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-212">`length` Jest porównywany z zakresem wartości w zależności od podklasy.</span><span class="sxs-lookup"><span data-stu-id="5346c-212">The `length` is compared to a range of values depending on the subclass.</span></span> <span data-ttu-id="5346c-213">Na przykład w `TripleDES` podklasy, ta metoda weryfikuje, że jest `length` z zakresu od 192 do 256 włącznie.</span><span class="sxs-lookup"><span data-stu-id="5346c-213">For example, in the `TripleDES` subclass, this method verifies that `length` is between 192 and 256, inclusive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsSymmetricKeyWrapAlgorithmSupported : string -&gt; bool&#xA;override this.IsSymmetricKeyWrapAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="5346c-214">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5346c-214">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="5346c-215">Wskazuje, czy algorytm zawijania klucza symetrycznego jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="5346c-215">Indicates whether a symmetric key wrap algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="5346c-216"><see langword="true" />Jeśli jest obsługiwany algorytm zawijania klucza symetrycznego; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5346c-216"><see langword="true" /> if the symmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member IsSymmetricSignatureAlgorithmSupported : string -&gt; bool&#xA;override this.IsSymmetricSignatureAlgorithmSupported : string -&gt; bool" Usage="securityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="5346c-217">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5346c-217">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="5346c-218">Wskazuje, czy algorytm podpisywania symetrycznego jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="5346c-218">Indicates whether a symmetric signature algorithm is supported.</span></span></summary>
        <returns><span data-ttu-id="5346c-219"><see langword="true" />Jeśli algorytm podpisywania symetrycznego jest obsługiwany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="5346c-219"><see langword="true" /> if the symmetric signature algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDes">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDes As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDes { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TripleDes : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-220">Pobiera pakiet algorytmów Triple Data Encryption Standard (DES).</span><span class="sxs-lookup"><span data-stu-id="5346c-220">Gets the Triple Data Encryption Standard (DES) algorithm suite.</span></span></summary>
        <value><span data-ttu-id="5346c-221">Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span><span class="sxs-lookup"><span data-stu-id="5346c-221">The Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-222">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-222">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesRsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesRsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesRsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TripleDesRsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-223">Pobiera pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy i 192-bitowego Triple Data Encryption Standard (DES) jako algorytmu szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-223">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-224">Pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy i 192-bitowego Triple Data Encryption Standard (DES) jako algorytmu szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-224">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-225">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-225">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TripleDesSha256 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-226">Pobiera pakiet algorytmów, który używa SHA256 do podsumowania podpisu i 192-bitowego Triple Data Encryption Standard (DES) jako algorytmu szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-226">Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-227">Pakiet algorytmów, który używa SHA256 dla skrótu podpisu i 192-bitowego Triple Data Encryption Standard (DES) jako algorytmu szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-227">An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-228">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-228">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TripleDesSha256Rsa15 : System.ServiceModel.Security.SecurityAlgorithmSuite" Usage="System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5346c-229">Pobiera pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy, SHA256 dla skrótu podpisu i 192-bitowy Triple Data Encryption Standard (DES) jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-229">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="5346c-230">Pakiet algorytmów, który używa RSA15 jako algorytmu zawijania kluczy, SHA256 dla skrótu podpisu i 192-bitowy Triple Data Encryption Standard (DES) jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="5346c-230">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5346c-231">Zwracana <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> jest w rzeczywistości wewnętrzną podklasą, która zastępuje niektóre właściwości określające wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="5346c-231">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
