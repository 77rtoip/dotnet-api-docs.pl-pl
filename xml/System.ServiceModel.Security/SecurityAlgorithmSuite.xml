<Type Name="SecurityAlgorithmSuite" FullName="System.ServiceModel.Security.SecurityAlgorithmSuite">
  <TypeSignature Language="C#" Value="public abstract class SecurityAlgorithmSuite" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract SecurityAlgorithmSuite extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityAlgorithmSuite" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityAlgorithmSuite abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="96594-101">Określa właściwości algorytmów.</span><span class="sxs-lookup"><span data-stu-id="96594-101">Specifies properties of algorithms.</span></span> <span data-ttu-id="96594-102">Jest to <see langword="abstract" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="96594-102">This is an <see langword="abstract" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-103">Wystąpienia tej klasy są używane do określania właściwości kryptograficznych algorytmów zabezpieczania komunikatów.</span><span class="sxs-lookup"><span data-stu-id="96594-103">Instances of this class are used to specify the cryptographic characteristics of the algorithms used when securing messages.</span></span>  
  
 <span data-ttu-id="96594-104">Ta klasa jest używany przez klas pochodnych można utworzyć wystąpienia zestawy algorytmów zabezpieczeń i zawiera właściwości, które opisują algorytmów zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="96594-104">This class is used by derived classes to instantiate security algorithm suites, and contains properties that describe the security algorithms.</span></span> <span data-ttu-id="96594-105">Na przykład `wsBasicHttp` powiązania używa Wewnętrzna klasa pochodna do określania właściwości jego algorytmów zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="96594-105">For example, the `wsBasicHttp` binding uses an internal derived class to specify the properties of its security algorithms.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityAlgorithmSuite ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityAlgorithmSuite();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96594-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="96594-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-107">Wystąpienia tej klasy składają się z właściwości statycznych i właściwości tylko do odczytu, więc konstruktora nie inicjuje żadnych właściwości.</span><span class="sxs-lookup"><span data-stu-id="96594-107">The instances of this class consist of static properties and read-only properties, so the constructor does not initialize any properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-108">Pobiera pakiet algorytmów Basic128.</span><span class="sxs-lookup"><span data-stu-id="96594-108">Gets the Basic128 algorithm suite.</span></span></summary>
        <value><span data-ttu-id="96594-109">Basic 128-bitowego <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span><span class="sxs-lookup"><span data-stu-id="96594-109">The 128-bit Basic <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-110">Domyślnie AES-128 jest używana jako algorytmu szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="96594-110">By default, AES-128 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-111">Pobiera pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza i Basic 128-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-111">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-112">Pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza i Basic 128-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-112">An algorithm suite that uses RSA15 as the key wrap algorithm and 128-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-113"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-113">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-114">Pobiera pakiet algorytmów używającego SHA256 Porządkowanie podpisu i Basic 128-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-114">Gets an algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-115">Pakiet algorytmów używa SHA256 Porządkowanie podpisu i Basic 128-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-115">An algorithm suite that uses SHA256 for the signature digest and 128-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-116"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-116">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic128Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic128Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic128Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-117">Pobiera pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza, SHA256 dla skrótu podpisu i Basic 128-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-117">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-118">Pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza, SHA256 dla skrótu podpisu i Basic 128-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-118">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 128-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-119"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-119">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-120">Pobiera pakiet algorytmów używającą Basic 192-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-120">Gets an algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-121">Pakiet algorytmów używa Basic 192-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-121">An algorithm suite that uses 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-122">Domyślnie AES 192 jest używana jako algorytmu szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="96594-122">By default, AES-192 is used as the encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-123">Pobiera pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza i Basic 192-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-123">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-124">Pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza i Basic 192-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-124">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-125"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-125">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-126">Pobiera pakiet algorytmów, który używa SHA256 do skrótu podpisu i Basic 192-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-126">Gets an algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-127">Pakiet algorytmów, który używa SHA256 do skrótu podpisu i Basic 192-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-127">An algorithm suite which uses SHA256 for the signature digest and 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-128"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-128">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic192Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic192Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic192Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-129">Pobiera pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza, SHA256 dla skrótu podpisu i Basic 192-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-129">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-130">Pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza, SHA256 dla skrótu podpisu i Basic 192-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-130">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-131"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-131">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-132">Pobiera pakiet algorytmów używającą Basic 256-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-132">Gets an algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-133">Pakiet algorytmów używa Basic 256-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-133">An algorithm suite that uses 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-134">Domyślnie AES 256 jest używany algorytm szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="96594-134">By default, AES-256 is used for the encryption algorithm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96594-135">Poniższy kod przedstawia sposób ustawiania <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> do tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="96594-135">The following code shows how to set <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> to this property.</span></span>  
  
 [!code-csharp[c_ProgrammingSecurity#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_programmingsecurity/cs/source.cs#8)]
 [!code-vb[c_ProgrammingSecurity#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_programmingsecurity/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-136">Pobiera pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza i Basic 256-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-136">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-137">Pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza i Basic 256-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-137">An algorithm suite that uses RSA15 as the key wrap algorithm and 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-138"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-138">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-139">Pobiera pakiet algorytmów używającego SHA256 Porządkowanie podpisu i Basic 256-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-139">Gets an algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-140">Pakiet algorytmów używa SHA256 Porządkowanie podpisu i Basic 256-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-140">An algorithm suite that uses SHA256 for the signature digest and 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-141"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-141">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Basic256Sha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Basic256Sha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Basic256Sha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-142">Pobiera pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza, SHA256 dla skrótu podpisu i Basic 256-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-142">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-143">Pakiet algorytmów, która używa RSA15 jako algorytm zawijania klucza, SHA256 dla skrótu podpisu i Basic 256-bitowego jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-143">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 256-bit Basic as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-144"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-144">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite Default" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ Default { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-145">Pobiera domyślny pakiet algorytmów.</span><span class="sxs-lookup"><span data-stu-id="96594-145">Gets the default algorithm suite.</span></span></summary>
        <value><span data-ttu-id="96594-146">Wartość domyślna <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> jest <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, który określa 256-bitowego szyfrowania AES (Advanced Standard) jako algorytmu szyfrowania symetrycznego.</span><span class="sxs-lookup"><span data-stu-id="96594-146">The default <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, which specifies 256-bit Advanced Encryption Standard (AES) as the symmetric encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-147"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, które zastępuje właściwości określenie wartości domyślne, a także metody.</span><span class="sxs-lookup"><span data-stu-id="96594-147">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides the properties specifying default values as well as the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-148">Pobiera domyślny algorytm zawijania klucza asymetrycznego jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="96594-148">Gets the default asymmetric key wrap algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="96594-149">Domyślny algorytm zawijania klucza asymetrycznego.</span><span class="sxs-lookup"><span data-stu-id="96594-149">The default asymmetric key wrap algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-150">W przypadku przesłonięcia udostępnia wartość ciągu, który będzie używany do porównania w <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="96594-150">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultAsymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultAsymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultAsymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-151">Pobiera domyślny algorytm podpisu asymetrycznego jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="96594-151">Gets the default asymmetric signature algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="96594-152">Domyślnym algorytmem podpisu asymetrycznego.</span><span class="sxs-lookup"><span data-stu-id="96594-152">The default asymmetric signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-153">W przypadku przesłonięcia udostępnia wartość ciągu, który będzie używany do porównania w <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="96594-153">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCanonicalizationAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultCanonicalizationAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCanonicalizationAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultCanonicalizationAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-154">Pobiera domyślny algorytm kanonizacji jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="96594-154">Gets the default canonicalization algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="96594-155">Algorytm kanonizacji domyślne.</span><span class="sxs-lookup"><span data-stu-id="96594-155">The default canonicalization algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-156">W przypadku przesłonięcia udostępnia wartość ciągu, który będzie używany do porównania w metodzie <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</span><span class="sxs-lookup"><span data-stu-id="96594-156">When overridden, provides a string value that will be used for comparison in the method <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDigestAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultDigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultDigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultDigestAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultDigestAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-157">Pobiera domyślny algorytm skrótu jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="96594-157">Gets the default digest algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="96594-158">Domyślny algorytm skrótu.</span><span class="sxs-lookup"><span data-stu-id="96594-158">The default digest algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-159">W przypadku przesłonięcia udostępnia wartość ciągu, który będzie używany do porównania w <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="96594-159">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-160">Pobiera domyślny algorytm szyfrowania jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="96594-160">Gets the default encryption algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="96594-161">Domyślnym algorytmem szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="96594-161">The default encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-162">W przypadku przesłonięcia udostępnia wartość ciągu, który będzie używany do porównania w <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="96594-162">When overridden, provides a string value that will be used for comparison in the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEncryptionKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultEncryptionKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultEncryptionKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultEncryptionKeyDerivationLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-163">Pobiera domyślną długość klucza pochodnego szyfrowania jako <see cref="T:System.Int32" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="96594-163">Gets the default encryption key derivation length as an <see cref="T:System.Int32" /> value.</span></span></summary>
        <value><span data-ttu-id="96594-164">Domyślna długość wyprowadzania klucza szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="96594-164">The default encryption key derivation length.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-165">Zwracana wartość zależy od podklasy zawierającym jego implementację.</span><span class="sxs-lookup"><span data-stu-id="96594-165">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="96594-166">Aby uzyskać `Basic256` szyfrowania, zwraca 256.</span><span class="sxs-lookup"><span data-stu-id="96594-166">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSignatureKeyDerivationLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSignatureKeyDerivationLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSignatureKeyDerivationLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSignatureKeyDerivationLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-167">Pobiera domyślną długość klucza pochodnego podpisu jako <see cref="T:System.Int32" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="96594-167">Gets the default signature key derivation length as an <see cref="T:System.Int32" /> value.</span></span></summary>
        <value><span data-ttu-id="96594-168">Domyślna długość klucza pochodnego podpisu.</span><span class="sxs-lookup"><span data-stu-id="96594-168">The default signature key derivation length.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-169">Zwracana wartość zależy od podklasy zawierającym jego implementację.</span><span class="sxs-lookup"><span data-stu-id="96594-169">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="96594-170">Aby uzyskać `Basic256` szyfrowania, zwraca 192.</span><span class="sxs-lookup"><span data-stu-id="96594-170">For `Basic256` encryption, it returns 192.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyLength">
      <MemberSignature Language="C#" Value="public abstract int DefaultSymmetricKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSymmetricKeyLength" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int DefaultSymmetricKeyLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-171">Pobiera domyślną symetrycznego długość klucza jako <see cref="T:System.Int32" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="96594-171">Gets the default symmetric key length as an <see cref="T:System.Int32" /> value.</span></span></summary>
        <value><span data-ttu-id="96594-172">Symetryczne długość klucza domyślne.</span><span class="sxs-lookup"><span data-stu-id="96594-172">The default symmetric key length.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-173">Zwracana wartość zależy od podklasy zawierającym jego implementację.</span><span class="sxs-lookup"><span data-stu-id="96594-173">The returned value will vary depending on the subclass that implements it.</span></span> <span data-ttu-id="96594-174">Aby uzyskać `Basic256` szyfrowania, zwraca 256.</span><span class="sxs-lookup"><span data-stu-id="96594-174">For `Basic256` encryption, it returns 256.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricKeyWrapAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricKeyWrapAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-175">Pobiera domyślny algorytm zawijania klucza symetrycznego jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="96594-175">Gets the default symmetric key wrap algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="96594-176">Domyślny algorytm zawijania klucza symetrycznego.</span><span class="sxs-lookup"><span data-stu-id="96594-176">The default symmetric key wrap algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricSignatureAlgorithm">
      <MemberSignature Language="C#" Value="public abstract string DefaultSymmetricSignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultSymmetricSignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DefaultSymmetricSignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-177">Pobiera domyślny algorytm podpisu symetrycznego jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="96594-177">Gets the default symmetric signature algorithm as a string.</span></span></summary>
        <value><span data-ttu-id="96594-178">Domyślny algorytm podpisu symetrycznego.</span><span class="sxs-lookup"><span data-stu-id="96594-178">The default symmetric signature algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsAsymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsAsymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsAsymmetricKeyLengthSupported(int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="96594-179">Długość klucza do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="96594-179">The key length to check.</span></span></param>
        <summary><span data-ttu-id="96594-180">Wskazuje, czy określonej długości klucza jest obsługiwana przez algorytmu asymetrycznego.</span><span class="sxs-lookup"><span data-stu-id="96594-180">Indicates whether a particular key length is supported by the asymmetric algorithm.</span></span></summary>
        <returns>
          <span data-ttu-id="96594-181"><see langword="true" /> Jeśli długość klucza jest obsługiwany przez algorytmu asymetrycznego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96594-181"><see langword="true" /> if the key length is supported by the asymmetric algorithm; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-182">Typowy długość klucza to 128, 192 i 256 bitów.</span><span class="sxs-lookup"><span data-stu-id="96594-182">Typical key lengths are 128, 192, and 256 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="96594-183">Algorytm do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="96594-183">The algorithm to check.</span></span></param>
        <summary><span data-ttu-id="96594-184">Wskazuje, czy obsługiwane jest algorytm zawijania klucza asymetrycznego.</span><span class="sxs-lookup"><span data-stu-id="96594-184">Indicates whether an asymmetric key wrap algorithm is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="96594-185"><see langword="true" /> Jeśli jest obsługiwany algorytm zawijania klucza asymetrycznego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96594-185"><see langword="true" /> if the asymmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-186">`algorithm` pobiera w porównaniu do ciąg zwrócony przez <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="96594-186">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsAsymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAsymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAsymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAsymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="96594-187">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="96594-187">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="96594-188">Wskazuje, czy obsługiwane jest algorytmem podpisu asymetrycznego.</span><span class="sxs-lookup"><span data-stu-id="96594-188">Indicates whether an asymmetric signature algorithm is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="96594-189"><see langword="true" /> Jeśli jest obsługiwany algorytm podpisu asymetrycznego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96594-189"><see langword="true" /> if the asymmetric signature algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-190">`algorithm` pobiera w porównaniu do ciąg zwrócony przez <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="96594-190">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonicalizationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsCanonicalizationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCanonicalizationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsCanonicalizationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsCanonicalizationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="96594-191">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="96594-191">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="96594-192">Wskazuje, czy algorytm kanonizacji jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="96594-192">Indicates whether a canonicalization algorithm is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="96594-193"><see langword="true" /> Jeśli jest obsługiwany algorytm kanonizacji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96594-193"><see langword="true" /> if the canonicalization algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-194">`algorithm` pobiera w porównaniu do ciąg zwrócony przez <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="96594-194">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigestAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsDigestAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDigestAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDigestAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDigestAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="96594-195">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="96594-195">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="96594-196">Wskazuje, czy algorytm szyfrowania jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="96594-196">Indicates whether a digest algorithm is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="96594-197"><see langword="true" /> Jeśli jest obsługiwany algorytm skrótu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96594-197"><see langword="true" /> if the digest algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-198">`algorithm` pobiera w porównaniu do ciąg zwrócony przez <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="96594-198">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="96594-199">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="96594-199">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="96594-200">Wskazuje, czy algorytm szyfrowania jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="96594-200">Indicates whether an encryption algorithm is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="96594-201"><see langword="true" /> Jeśli jest obsługiwany algorytm szyfrowania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96594-201"><see langword="true" /> if the encryption algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-202">`algorithm` pobiera w porównaniu do ciąg zwrócony przez <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</span><span class="sxs-lookup"><span data-stu-id="96594-202">`algorithm` gets compared to the string returned from <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptionKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsEncryptionKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEncryptionKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEncryptionKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEncryptionKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="96594-203">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="96594-203">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="96594-204">Wskazuje, czy obsługiwane jest Algorytm wyprowadzania klucza szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="96594-204">Indicates whether an encryption key derivation algorithm is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="96594-205"><see langword="true" /> Jeśli jest obsługiwany algorytm wyprowadzania klucza szyfrowania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96594-205"><see langword="true" /> if the encryption key derivation algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignatureKeyDerivationAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSignatureKeyDerivationAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignatureKeyDerivationAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignatureKeyDerivationAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignatureKeyDerivationAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="96594-206">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="96594-206">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="96594-207">Wskazuje, czy obsługiwane jest Algorytm wyprowadzania klucza podpisu.</span><span class="sxs-lookup"><span data-stu-id="96594-207">Indicates whether a signature key derivation algorithm is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="96594-208"><see langword="true" /> Jeśli jest obsługiwany algorytm wyprowadzania klucza podpisu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96594-208"><see langword="true" /> if the signature key derivation algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyLengthSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsSymmetricKeyLengthSupported (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyLengthSupported(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsSymmetricKeyLengthSupported (length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsSymmetricKeyLengthSupported(int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="96594-209">Długość klucza do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="96594-209">The key length to check.</span></span></param>
        <summary><span data-ttu-id="96594-210">W przypadku przesłonięcia w klasie pochodnej, wskazuje, czy określonej długości klucza symetrycznego jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="96594-210">When overridden in a derived class, indicates whether a particular symmetric key length is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="96594-211"><see langword="true" /> Jeśli długość klucza symetrycznego jest obsługiwany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96594-211"><see langword="true" /> if the symmetric key length is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-212">`length` Jest porównywany z zakresu wartości w zależności od podklasy.</span><span class="sxs-lookup"><span data-stu-id="96594-212">The `length` is compared to a range of values depending on the subclass.</span></span> <span data-ttu-id="96594-213">Na przykład w `TripleDES` podklasy, ta metoda sprawdza, czy `length` wynosi 192-256, włącznie.</span><span class="sxs-lookup"><span data-stu-id="96594-213">For example, in the `TripleDES` subclass, this method verifies that `length` is between 192 and 256, inclusive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricKeyWrapAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricKeyWrapAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricKeyWrapAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricKeyWrapAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricKeyWrapAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="96594-214">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="96594-214">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="96594-215">Wskazuje, czy obsługiwane jest algorytm zawijania klucza symetrycznego.</span><span class="sxs-lookup"><span data-stu-id="96594-215">Indicates whether a symmetric key wrap algorithm is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="96594-216"><see langword="true" /> Jeśli jest obsługiwany algorytm zawijania klucza symetrycznego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96594-216"><see langword="true" /> if the symmetric key wrap algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricSignatureAlgorithmSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSymmetricSignatureAlgorithmSupported (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSymmetricSignatureAlgorithmSupported(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSymmetricSignatureAlgorithmSupported (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSymmetricSignatureAlgorithmSupported(System::String ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="96594-217">Nazwa algorytmu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="96594-217">The algorithm name to check.</span></span></param>
        <summary><span data-ttu-id="96594-218">Wskazuje, czy obsługiwane jest algorytmu symetrycznego podpisu.</span><span class="sxs-lookup"><span data-stu-id="96594-218">Indicates whether a symmetric signature algorithm is supported.</span></span></summary>
        <returns>
          <span data-ttu-id="96594-219"><see langword="true" /> Jeśli jest obsługiwany algorytm podpisu symetrycznego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96594-219"><see langword="true" /> if the symmetric signature algorithm is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDes">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDes As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDes { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-220">Pobiera pakiet algorytm Triple Data Encryption Standard (DES).</span><span class="sxs-lookup"><span data-stu-id="96594-220">Gets the Triple Data Encryption Standard (DES) algorithm suite.</span></span></summary>
        <value><span data-ttu-id="96594-221">Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span><span class="sxs-lookup"><span data-stu-id="96594-221">The Triple DES <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-222"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-222">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesRsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesRsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesRsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-223">Pobiera pakiet algorytmów, które używa RSA15 jako algorytm zawijania klucza i 192-bitowych Triple DES Data Encryption Standard () jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-223">Gets an algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-224">Pakiet algorytmów, które używa RSA15 jako algorytm zawijania klucza i 192-bitowych Triple DES Data Encryption Standard () jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-224">An algorithm suite that uses RSA15 as the key wrap algorithm and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-225"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-225">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-226">Pobiera pakiet algorytmu, który używa SHA256 Porządkowanie podpisu i 192-bitowych Triple DES Data Encryption Standard () jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-226">Gets an algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-227">Pakiet algorytmów używa SHA256 Porządkowanie podpisu i 192-bitowych Triple DES Data Encryption Standard () jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-227">An algorithm suite that uses SHA256 for the signature digest and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-228"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-228">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TripleDesSha256Rsa15">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TripleDesSha256Rsa15 As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Security::SecurityAlgorithmSuite ^ TripleDesSha256Rsa15 { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="96594-229">Pobiera pakiet algorytmów używającą RSA15 jako algorytm zawijania klucza, SHA256 dla skrótu podpisu i 192-bitowych Triple DES Data Encryption Standard () jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-229">Gets an algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></summary>
        <value><span data-ttu-id="96594-230">Pakiet algorytmów używa RSA15 jako algorytm zawijania klucza, SHA256 dla skrótu podpisu i 192-bitowych Triple DES Data Encryption Standard () jako algorytm szyfrowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="96594-230">An algorithm suite that uses RSA15 as the key wrap algorithm, SHA256 for the signature digest, and 192-bit Triple Data Encryption Standard (DES) as the message encryption algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96594-231"><xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Zwracane jest podklasy wewnętrzne, zastępujący niektórych właściwości określenie wartości domyślne, a także niektóre metody.</span><span class="sxs-lookup"><span data-stu-id="96594-231">The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> returned is actually an internal subclass that overrides some of the properties specifying default values as well as some of the methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>