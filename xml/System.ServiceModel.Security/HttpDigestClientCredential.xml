<Type Name="HttpDigestClientCredential" FullName="System.ServiceModel.Security.HttpDigestClientCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6523b6b95dfab46c208ff494d08b86b2deba2198" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39865819" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpDigestClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpDigestClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.HttpDigestClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpDigestClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpDigestClientCredential sealed" />
  <TypeSignature Language="F#" Value="type HttpDigestClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0f54c-101">Używany do uwierzytelniania szyfrowanego klientów HTTP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f54c-101">Used for digest authentication of HTTP clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f54c-102">Uwierzytelnianie szyfrowane weryfikuje, że obie strony do komunikacji wiedzą, Wspólny klucz tajny (hasło).</span><span class="sxs-lookup"><span data-stu-id="0f54c-102">Digest authentication verifies that both parties to a communication know a shared secret (a password).</span></span> <span data-ttu-id="0f54c-103">Uwierzytelnianie jest wykonywane bez wysyłania hasła niezaszyfrowane.</span><span class="sxs-lookup"><span data-stu-id="0f54c-103">Authentication is done without sending the password in the clear.</span></span> <span data-ttu-id="0f54c-104">Uwierzytelnianie szyfrowane jest oparty na modelu odpowiedź na żądanie.</span><span class="sxs-lookup"><span data-stu-id="0f54c-104">Digest authentication is based on a challenge-response paradigm.</span></span> <span data-ttu-id="0f54c-105">Wyzwania schemat szyfrowane przy użyciu nonce ("Liczba użyć raz") wartość.</span><span class="sxs-lookup"><span data-stu-id="0f54c-105">The Digest scheme challenges using a nonce ("number used once") value.</span></span> <span data-ttu-id="0f54c-106">Odpowiedzi muszą zawierać sumy kontrolnej nazwę użytkownika, hasło, wartość jednorazowy, metodę HTTP i żądanego identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="0f54c-106">The response must contain a checksum of the user name, the password, the nonce value, the HTTP method, and the requested URI.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel AllowedImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AllowedImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f54c-107">Pobiera lub ustawia poziom personifikacji, umożliwiająca klienta przy użyciu podanych poświadczeń klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f54c-107">Gets or sets the level of impersonation that the client allows with the client credential provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f54c-108">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> Czy klienta daje serwer jako część uwierzytelniania szyfrowanego protokołu HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f54c-108">The <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> that the client grants the server as part of HTTP digest authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f54c-109">Dopuszczalne wartości obejmują:</span><span class="sxs-lookup"><span data-stu-id="0f54c-109">Allowable values include:</span></span>  
  
 <span data-ttu-id="0f54c-110"><xref:System.Security.Principal.TokenImpersonationLevel.Delegation>,</span><span class="sxs-lookup"><span data-stu-id="0f54c-110"><xref:System.Security.Principal.TokenImpersonationLevel.Delegation>,</span></span>  
  
 <span data-ttu-id="0f54c-111"><xref:System.Security.Principal.TokenImpersonationLevel.Identification>, a</span><span class="sxs-lookup"><span data-stu-id="0f54c-111"><xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and</span></span>  
  
 <span data-ttu-id="0f54c-112"><xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>.</span><span class="sxs-lookup"><span data-stu-id="0f54c-112"><xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>.</span></span>  
  
 <span data-ttu-id="0f54c-113">Ze względu na ograniczenia uwierzytelniania szyfrowanego, gdy klient korzysta z poświadczeń innych niż domyślne, tylko `Impersonation` i `Delegation` poziomy są dozwolone.</span><span class="sxs-lookup"><span data-stu-id="0f54c-113">Due to the limitations of Digest authentication, when the client is using non-default credentials, only `Impersonation` and `Delegation` levels are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f54c-114">Poniższy przykład pokazuje, jak ustawić tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="0f54c-114">The following example shows how to set this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#1)]
 [!code-vb[S_UE_HttpDigestClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_httpdigestclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ ClientCredential { System::Net::NetworkCredential ^ get(); void set(System::Net::NetworkCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredential : System.Net.NetworkCredential with get, set" Usage="System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f54c-115">Pobiera lub ustawia poświadczenia sieciowe, które ma być używany do uwierzytelniania na podstawie skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f54c-115">Gets or sets the network credential to be used for digest-based authentication.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f54c-116">
            <see cref="T:System.Net.NetworkCredential" /> Ma być używany do uwierzytelniania na podstawie skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f54c-116">The <see cref="T:System.Net.NetworkCredential" /> to be used for digest-based authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f54c-117">Jeśli nie zostanie określony, będą używane domyślne poświadczenia wątku.</span><span class="sxs-lookup"><span data-stu-id="0f54c-117">If not specified, the default thread credential will be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f54c-118">W poniższych przykładach kodu pokazano, jak można uwierzytelnić klienta jako inny podmiot zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="0f54c-118">The following code examples show how to authenticate the client as a different principal.</span></span>  
  
 <span data-ttu-id="0f54c-119">Jest to jak zmienić właściwości wystąpienia <xref:System.Net.NetworkCredential> klasę, która jest zwracana przez tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="0f54c-119">This is how to change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#2)]  
  
 <span data-ttu-id="0f54c-120">A Oto jak utworzyć nowe wystąpienie klasy <xref:System.Net.NetworkCredential> klasy i przypisz je do tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="0f54c-120">And here is how to create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>