<Type Name="IdentityVerifier" FullName="System.ServiceModel.Security.IdentityVerifier">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab320a386aa6febb6e7b4de02f50187645e490f0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69234357" /></Metadata><TypeSignature Language="C#" Value="public abstract class IdentityVerifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IdentityVerifier extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.IdentityVerifier" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IdentityVerifier" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdentityVerifier abstract" />
  <TypeSignature Language="F#" Value="type IdentityVerifier = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Klasa <see langword="abstract" /> bazowa, która może zostać wdrożona w celu sprawdzenia oczekiwanej tożsamości względem kontekstu autoryzacji, który reprezentuje zdalny punkt końcowy lub do utworzenia tożsamości na podstawie adresu punktu końcowego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Infrastruktura WCF najpierw wywołuje <xref:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity%2A> metodę w celu pobrania tożsamości usługi z wiadomości. Następnie infrastruktura wywołuje <xref:System.ServiceModel.Security.IdentityVerifier.CheckAccess%2A> metodę z zwracanymi <xref:System.ServiceModel.EndpointIdentity> i <xref:System.IdentityModel.Policy.AuthorizationContext>.  
  
 Aby uzyskać więcej informacji na temat implementowania klasy [, zobacz How to: Utwórz niestandardowego weryfikatora](~/docs/framework/wcf/extending/how-to-create-a-custom-client-identity-verifier.md)tożsamości klienta.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f2d34e43-fa8b-46d2-91cf-d2960e13e16b">Instrukcje: tworzenie niestandardowego weryfikatora tożsamości klienta</related>
    <related type="Article" href="https://msdn.microsoft.com/library/a4c8f52c-5b30-45c4-a545-63244aba82be">Określanie tożsamości usługi do uwierzytelniania</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IdentityVerifier ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IdentityVerifier();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie tej klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public abstract bool CheckAccess (System.ServiceModel.EndpointIdentity identity, System.IdentityModel.Policy.AuthorizationContext authContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.EndpointIdentity identity, class System.IdentityModel.Policy.AuthorizationContext authContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CheckAccess(System.ServiceModel.EndpointIdentity,System.IdentityModel.Policy.AuthorizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CheckAccess (identity As EndpointIdentity, authContext As AuthorizationContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CheckAccess(System::ServiceModel::EndpointIdentity ^ identity, System::IdentityModel::Policy::AuthorizationContext ^ authContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.EndpointIdentity * System.IdentityModel.Policy.AuthorizationContext -&gt; bool" Usage="identityVerifier.CheckAccess (identity, authContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="authContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
      </Parameters>
      <Docs>
        <param name="identity"><see cref="T:System.ServiceModel.EndpointIdentity" /> Do zweryfikowania.</param>
        <param name="authContext"><see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> Aby<paramref name="identity" /> przetestować.</param>
        <summary>Implementuje metodę weryfikacji tożsamości.</summary>
        <returns><see langword="true" />Jeśli tożsamość jest zweryfikowana; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Security.IdentityVerifier CreateDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Security.IdentityVerifier CreateDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.CreateDefault" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault () As IdentityVerifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Security::IdentityVerifier ^ CreateDefault();" />
      <MemberSignature Language="F#" Value="static member CreateDefault : unit -&gt; System.ServiceModel.Security.IdentityVerifier" Usage="System.ServiceModel.Security.IdentityVerifier.CreateDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.IdentityVerifier</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy domyślne wystąpienie tej klasy.</summary>
        <returns>Domyślne wystąpienie <see cref="T:System.ServiceModel.Security.IdentityVerifier" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetIdentity">
      <MemberSignature Language="C#" Value="public abstract bool TryGetIdentity (System.ServiceModel.EndpointAddress reference, out System.ServiceModel.EndpointIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetIdentity(class System.ServiceModel.EndpointAddress reference, [out] class System.ServiceModel.EndpointIdentity&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.IdentityVerifier.TryGetIdentity(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointIdentity@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetIdentity (reference As EndpointAddress, ByRef identity As EndpointIdentity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetIdentity(System::ServiceModel::EndpointAddress ^ reference, [Runtime::InteropServices::Out] System::ServiceModel::EndpointIdentity ^ % identity);" />
      <MemberSignature Language="F#" Value="abstract member TryGetIdentity : System.ServiceModel.EndpointAddress *  -&gt; bool" Usage="identityVerifier.TryGetIdentity (reference, identity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reference"><see cref="T:System.ServiceModel.EndpointAddress" /> Służy do tworzenia tożsamości.</param>
        <param name="identity">Zwracana <see cref="T:System.ServiceModel.EndpointIdentity" /> wartość.</param>
        <summary>Próbuje utworzyć tożsamość z punktu końcowego.</summary>
        <returns><see langword="true" />Jeśli tożsamość jest zwracana; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.ServiceModel.Security.IdentityVerifier> <xref:System.ServiceModel.EndpointAddress.Uri%2A> <xref:System.ServiceModel.EndpointIdentity> <xref:System.ServiceModel.EndpointAddress>tworzy na podstawieczęścinazwyhosta,jeślijawnieniezostałaokreślonajakoczęśćelementu.<xref:System.ServiceModel.DnsEndpointIdentity>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
