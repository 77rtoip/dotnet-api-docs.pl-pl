<Type Name="X509ServiceCertificateAuthentication" FullName="System.ServiceModel.Security.X509ServiceCertificateAuthentication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ffe8228d8452e191852760270ce997bcec08648" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34314201" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509ServiceCertificateAuthentication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509ServiceCertificateAuthentication extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public Class X509ServiceCertificateAuthentication" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509ServiceCertificateAuthentication" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje ustawienia używane przez serwer proxy klienta do uwierzytelniania certyfikatów usługi, które są uzyskiwane przy użyciu negocjacji SSL/TLS.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia użycie tej klasy.  
  
 [!code-csharp[S_UEX509ServiceCertificateAuthentication#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uex509servicecertificateauthentication/cs/client.cs#4)]
 [!code-vb[S_UEX509ServiceCertificateAuthentication#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uex509servicecertificateauthentication/vb/client.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509ServiceCertificateAuthentication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509ServiceCertificateAuthentication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509ServiceCertificateAuthentication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CertificateValidationMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateValidationMode CertificateValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.X509CertificateValidationMode CertificateValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateValidationMode As X509CertificateValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509CertificateValidationMode CertificateValidationMode { System::ServiceModel::Security::X509CertificateValidationMode get(); void set(System::ServiceModel::Security::X509CertificateValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb walidacji certyfikatu.</summary>
        <value>Wartość z wyliczenia w <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To wyliczenie przechwytuje opcje ustalania okres ważności certyfikatu usługi uzyskany przy użyciu negocjacji SSL/TLS. Aby uzyskać listę elementy członkowskie wyliczenia, zobacz <xref:System.ServiceModel.Security.X509CertificateValidationMode>.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawić tę właściwość.  
  
 [!code-csharp[S_UEX509ServiceCertificateAuthentication#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uex509servicecertificateauthentication/cs/client.cs#0)]
 [!code-vb[S_UEX509ServiceCertificateAuthentication#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uex509servicecertificateauthentication/vb/client.vb#0)]  
  
 Właściwość można ustawić w taki sposób, w pliku konfiguracji.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomCertificateValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.X509CertificateValidator CustomCertificateValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.X509CertificateValidator CustomCertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomCertificateValidator As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::X509CertificateValidator ^ CustomCertificateValidator { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); void set(System::IdentityModel::Selectors::X509CertificateValidator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia moduł weryfikacji certyfikatów niestandardowego klienta.</summary>
        <value>Moduł weryfikacji certyfikatów klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Communication Foundation (WCF) zawiera domyślne klienta moduł weryfikacji certyfikatów, która weryfikuje certyfikatu klienta w magazynie zaufanych osób i sprawdza również, że certyfikat jest częścią łańcucha łączącego się prawidłowy główny. Można uzyskać różne zachowanie można zaimplementować niestandardowego modułu weryfikacji. Ta właściwość umożliwia określenie niestandardowego modułu weryfikacji.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawić tę właściwość.  
  
 [!code-csharp[S_UEX509ServiceCertificateAuthentication#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uex509servicecertificateauthentication/cs/client.cs#1)]
 [!code-vb[S_UEX509ServiceCertificateAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uex509servicecertificateauthentication/vb/client.vb#1)]  
  
 Właściwość można ustawić w taki sposób, w pliku konfiguracji.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Próbowano ustawić, gdy poświadczenia jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="RevocationMode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RevocationMode As X509RevocationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509RevocationMode RevocationMode { System::Security::Cryptography::X509Certificates::X509RevocationMode get(); void set(System::Security::Cryptography::X509Certificates::X509RevocationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509RevocationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb odwołania certyfikatu dla ChainTrust i tryb walidacji certyfikatu PeerOrChainTrust X.509.</summary>
        <value>Jedna z wartości w <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />: <see langword="NoCheck" />, <see langword="Online" />, lub <see langword="Offline" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas korzystania z certyfikatów, system weryfikuje, czy certyfikat klienta nie został odwołany, sprawdzając, czy certyfikat klienta nie jest na liście odwołanych certyfikatów. Tego wyboru można przeprowadzić sprawdzania w trybie online lub Sprawdzanie listy odwołania pamięci podręcznej. Sprawdzanie odwołań może być wyłączone przez ustawienie dla tej właściwości `NoCheck`.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawić tę właściwość.  
  
 [!code-csharp[S_UEX509ServiceCertificateAuthentication#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uex509servicecertificateauthentication/cs/client.cs#2)]
 [!code-vb[S_UEX509ServiceCertificateAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uex509servicecertificateauthentication/vb/client.vb#2)]  
  
 Właściwość można ustawić w taki sposób, w pliku konfiguracji.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Próbowano ustawić, gdy poświadczenia jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="TrustedStoreLocation">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.StoreLocation TrustedStoreLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.StoreLocation TrustedStoreLocation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.TrustedStoreLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property TrustedStoreLocation As StoreLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::StoreLocation TrustedStoreLocation { System::Security::Cryptography::X509Certificates::StoreLocation get(); void set(System::Security::Cryptography::X509Certificates::StoreLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.StoreLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia lokalizację magazynu zaufanych, w którego kontekście jest weryfikowana w łańcuchu certyfikatów klienta.</summary>
        <value>Lokalizacja magazynu zaufanych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa, czy można zweryfikować łańcucha certyfikatów X.509 będzie można używać kontekstu komputera lub użytkownika.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawić tę właściwość.  
  
 [!code-csharp[S_UEX509ServiceCertificateAuthentication#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uex509servicecertificateauthentication/cs/client.cs#3)]
 [!code-vb[S_UEX509ServiceCertificateAuthentication#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uex509servicecertificateauthentication/vb/client.vb#3)]  
  
 Właściwość można ustawić w taki sposób, w pliku konfiguracji.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Próbowano ustawić, gdy poświadczenia jest tylko do odczytu.</exception>
      </Docs>
    </Member>
  </Members>
</Type>