<Type Name="X509ClientCertificateAuthentication" FullName="System.ServiceModel.Security.X509ClientCertificateAuthentication">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f254d8db04217477a234f0c22ef167856d610b27" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69148720" /></Metadata><TypeSignature Language="C#" Value="public class X509ClientCertificateAuthentication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509ClientCertificateAuthentication extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509ClientCertificateAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public Class X509ClientCertificateAuthentication" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509ClientCertificateAuthentication" />
  <TypeSignature Language="F#" Value="type X509ClientCertificateAuthentication = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa właściwości uwierzytelniania na potrzeby weryfikacji certyfikatu klienta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli jest ustawiona na <xref:System.ServiceModel.Security.X509CertificateValidationMode.Custom>, należy utworzyć niestandardowy <xref:System.IdentityModel.Selectors.X509CertificateValidator> moduł sprawdzania poprawności certyfikatu, który dziedziczy z klasy. <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode%2A> Aby uzyskać więcej informacji, zobacz [jak: Tworzenie usługi korzystającej z niestandardowego modułu weryfikacji](~/docs/framework/wcf/extending/how-to-create-a-service-that-employs-a-custom-certificate-validator.md)certyfikatów.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawienia tej właściwości.  
  
 [!code-csharp[X509ClientCertificateAuthentication#1](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#1)]
 [!code-vb[X509ClientCertificateAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#1)]  
  
 Właściwość można również ustawić w pliku konfiguracji.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust' />  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />
    <related type="Article" href="https://msdn.microsoft.com/library/bb0190ff-0738-4e54-8d22-c97d343708bf">Instrukcje: Tworzenie usługi korzystającej z niestandardowego modułu weryfikacji certyfikatów</related>
    <related type="Article" href="https://msdn.microsoft.com/library/6ffb8682-8f07-4a45-afbb-8d2487e9dbc3">Praca z certyfikatami</related>
  </Docs>
  <Members>
    <Member MemberName="CertificateValidationMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateValidationMode CertificateValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.X509CertificateValidationMode CertificateValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateValidationMode As X509CertificateValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509CertificateValidationMode CertificateValidationMode { System::ServiceModel::Security::X509CertificateValidationMode get(); void set(System::ServiceModel::Security::X509CertificateValidationMode value); };" />
      <MemberSignature Language="F#" Value="member this.CertificateValidationMode : System.ServiceModel.Security.X509CertificateValidationMode with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb walidacji certyfikatu.</summary>
        <value>Jedna z <see cref="T:System.ServiceModel.Security.X509CertificateValidationMode" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dozwolone wartości <xref:System.ServiceModel.Security.X509CertificateValidationMode> :  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode.ChainTrust>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode.Custom>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode.None>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode.PeerOrChainTrust>  
  
-   <xref:System.ServiceModel.Security.X509CertificateValidationMode.PeerTrust>  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode%2A> do drukowania na ekranie.  
  
 [!code-csharp[X509ClientCertificateAuthentication#7](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#7)]
 [!code-vb[X509ClientCertificateAuthentication#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#7)]   
  
 Właściwość można również ustawić w pliku konfiguracji.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust' />  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomCertificateValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.X509CertificateValidator CustomCertificateValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.X509CertificateValidator CustomCertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CustomCertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomCertificateValidator As X509CertificateValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::X509CertificateValidator ^ CustomCertificateValidator { System::IdentityModel::Selectors::X509CertificateValidator ^ get(); void set(System::IdentityModel::Selectors::X509CertificateValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomCertificateValidator : System.IdentityModel.Selectors.X509CertificateValidator with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.CustomCertificateValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.X509CertificateValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia niestandardowy moduł sprawdzania poprawności certyfikatu klienta.</summary>
        <value>Niestandardowy moduł sprawdzania poprawności certyfikatu klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość jest ustawiona na <xref:System.ServiceModel.Security.X509CertificateValidationMode.Custom> <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.CustomCertificateValidator%2A> , należy ustawić właściwość <xref:System.IdentityModel.Selectors.X509CertificateValidator> na niestandardowy moduł sprawdzania poprawności, który dziedziczy z klasy. <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode%2A>  
  
 Aby uzyskać więcej informacji, zobacz [jak: Tworzenie usługi korzystającej z niestandardowego modułu weryfikacji](~/docs/framework/wcf/extending/how-to-create-a-service-that-employs-a-custom-certificate-validator.md)certyfikatów.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawienia tej właściwości.  
  
 [!code-csharp[X509ClientCertificateAuthentication#2](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#2)]
 [!code-vb[X509ClientCertificateAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#2)]  
  
 Właściwość można również ustawić w pliku konfiguracji.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='Custom' customCertificateValidatorType='Samples.MyCertificateValidator, Samples' />  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see langword="set" />gdy poświadczenie jest tylko do odczytu.</exception>
        <altmember cref="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.CertificateValidationMode" />
        <altmember cref="T:System.IdentityModel.Selectors.X509CertificateValidator" />
        <related type="Article" href="https://msdn.microsoft.com/library/bb0190ff-0738-4e54-8d22-c97d343708bf">Instrukcje: Tworzenie usługi korzystającej z niestandardowego modułu weryfikacji certyfikatów</related>
      </Docs>
    </Member>
    <Member MemberName="IncludeWindowsGroups">
      <MemberSignature Language="C#" Value="public bool IncludeWindowsGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeWindowsGroups" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.IncludeWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeWindowsGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeWindowsGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeWindowsGroups : bool with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.IncludeWindowsGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy grupy systemu Windows znajdują się w kontekście autoryzacji.</summary>
        <value><see langword="true" />Jeśli grupy systemu Windows są uwzględnione w kontekście autoryzacji; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest prawidłowa tylko wtedy, <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount%2A> gdy właściwość jest ustawiona `true`na.  
  
 Ustaw tę właściwość na `false` tylko wtedy, gdy nie musisz określać listy grup, do których należy użytkownik — może to spowodować, że wydajność aplikacji i autoryzacji nie wymagają grup systemu Windows.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawienia tej właściwości.  
  
 [!code-csharp[X509ClientCertificateAuthentication#3](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#3)]
 [!code-vb[X509ClientCertificateAuthentication#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#3)]  
  
 Właściwość można również ustawić w pliku konfiguracji.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication includeWindowsGroups ='true'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapClientCertificateToWindowsAccount">
      <MemberSignature Language="C#" Value="public bool MapClientCertificateToWindowsAccount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapClientCertificateToWindowsAccount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount" />
      <MemberSignature Language="VB.NET" Value="Public Property MapClientCertificateToWindowsAccount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapClientCertificateToWindowsAccount { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MapClientCertificateToWindowsAccount : bool with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.MapClientCertificateToWindowsAccount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy certyfikat jest mapowany na konta systemu Windows.</summary>
        <value><see langword="true" />Jeśli certyfikat jest mapowany na konta systemu Windows; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku korzystania z typu poświadczeń klienta certyfikatu w powiązaniach certyfikat nie jest mapowany na konta systemu Windows. To zachowanie można zastąpić za pomocą tej właściwości. Gdy ta właściwość jest ustawiona na `true`, powoduje, że tożsamość z certyfikatu klienta ma być mapowana na konto systemu Windows.  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawienia tej właściwości.  
  
 [!code-csharp[X509ClientCertificateAuthentication#4](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#4)]
 [!code-vb[X509ClientCertificateAuthentication#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#4)]  
  
 Właściwość można również ustawić w pliku konfiguracji.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication mapClientCertificateToWindowsAccount='true'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see langword="set" />gdy poświadczenie jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="RevocationMode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.X509RevocationMode RevocationMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.RevocationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RevocationMode As X509RevocationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509RevocationMode RevocationMode { System::Security::Cryptography::X509Certificates::X509RevocationMode get(); void set(System::Security::Cryptography::X509Certificates::X509RevocationMode value); };" />
      <MemberSignature Language="F#" Value="member this.RevocationMode : System.Security.Cryptography.X509Certificates.X509RevocationMode with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.RevocationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509RevocationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb odwołania certyfikatu dla weryfikacji certyfikatu ChainTrust i PeerOrChainTrust X. 509.</summary>
        <value>Jedna z wartości <see cref="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" />w: <see langword="NoCheck" />, <see langword="Online" />, lub <see langword="Offline" />. Wartość domyślna to <see langword="Online" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku korzystania z certyfikatów system sprawdza, czy certyfikat klienta nie został odwołany, sprawdzając, czy certyfikat klienta nie znajduje się na liście odwołanych certyfikatów. Ten test można przeprowadzić przez sprawdzenie w trybie online lub sprawdzanie względem buforowanej listy odwołania. Sprawdzanie odwołania można wyłączyć przez ustawienie tej właściwości na <xref:System.Security.Cryptography.X509Certificates.X509RevocationMode.NoCheck>.  
  
 Aby uzyskać więcej informacji, zobacz [Praca z certyfikatami](~/docs/framework/wcf/feature-details/working-with-certificates.md).  
  
   
  
## Examples  
 Poniższy kod przedstawia sposób ustawienia tej właściwości.  
  
 [!code-csharp[X509ClientCertificateAuthentication#5](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#5)]
 [!code-vb[X509ClientCertificateAuthentication#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#5)]  
  
 Właściwość można również ustawić w pliku konfiguracji.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust'   revocationMode = 'NoCheck'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see langword="set" />gdy poświadczenie jest tylko do odczytu.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6ffb8682-8f07-4a45-afbb-8d2487e9dbc3">Praca z certyfikatami</related>
      </Docs>
    </Member>
    <Member MemberName="TrustedStoreLocation">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.StoreLocation TrustedStoreLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.X509Certificates.StoreLocation TrustedStoreLocation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509ClientCertificateAuthentication.TrustedStoreLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property TrustedStoreLocation As StoreLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::StoreLocation TrustedStoreLocation { System::Security::Cryptography::X509Certificates::StoreLocation get(); void set(System::Security::Cryptography::X509Certificates::StoreLocation value); };" />
      <MemberSignature Language="F#" Value="member this.TrustedStoreLocation : System.Security.Cryptography.X509Certificates.StoreLocation with get, set" Usage="System.ServiceModel.Security.X509ClientCertificateAuthentication.TrustedStoreLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.StoreLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia lokalizację zaufanego magazynu, w ramach której zostanie sprawdzony sprawdzanie poprawności łańcucha certyfikatów klienta.</summary>
        <value>Lokalizacja zaufanego magazynu, w ramach której jest sprawdzany łańcuch certyfikatów klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa, czy do sprawdzenia łańcucha certyfikatów X. 509 jest używany kontekst komputera lub użytkownika.  
  
   
  
## Examples  
 [!code-csharp[X509ClientCertificateAuthentication#6](~/samples/snippets/csharp/VS_Snippets_CFX/x509clientcertificateauthentication/cs/source.cs#6)]
 [!code-vb[X509ClientCertificateAuthentication#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/x509clientcertificateauthentication/vb/source.vb#6)]  
  
 Właściwość można również ustawić w pliku konfiguracji.  
  
```  
<serviceCredentials>  
  <clientCertificate>  
     <authentication certificateValidationMode='ChainTrust'   trustedStoreLocation = 'LocalMachine'/>  
  </clientCertificate>  
</serviceCredentials>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see langword="set" />gdy poświadczenie jest tylko do odczytu.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
