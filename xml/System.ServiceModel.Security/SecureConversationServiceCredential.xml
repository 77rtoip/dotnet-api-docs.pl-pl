<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecureConversationServiceCredential.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fc877fc4133501b86d3550e57af5fff851e60669.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc877fc4133501b86d3550e57af5fff851e60669</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Provides credential settings for a secure conversation service.</source>
          <target state="translated">Zawiera ustawienia poświadczeń dla usługi bezpiecznej konwersacji.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Secure conversations involve the exchange of multiple messages and use a Security Context Token (SCT) to ensure security.</source>
          <target state="translated">Bezpiecznych konwersacji obejmują wymiany wiele komunikatów i użyj narzędzia zabezpieczeń kontekstu tokenu (SCT) do zapewnienia bezpieczeństwa.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The SCT is shared among the communicating parties for the lifetime of a communications session.</source>
          <target state="translated">SCT współużytkowany komunikującymi się Stronami przez czas ich istnienia sesji komunikacji.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>A service can issue two different kinds of SCTs:</source>
          <target state="translated">Usługa może wystawiać dwóch różnych rodzajów SCTs:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The first is a session-based SCT that contains a unique id. Messages carry only the id, and the service maintains a state-mapping cache that maps between the SCT ids and contents (such as claims, security keys, and so on).</source>
          <target state="translated">Pierwsza to SCT opartymi na sesji, który zawiera unikatowy identyfikator. Tylko identyfikator przenoszenia wiadomości, a usługa zachowuje mapowanie stanu pamięci podręcznej, mapująca się między identyfikatorami SCT i zawartości (na przykład oświadczenia, kluczy zabezpieczeń i tak dalej).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>A well-behaved client must send an SCT cancellation to help the service optimize the cache resources.</source>
          <target state="translated">Dobrze behaved klient musi wysłać anulowania SCT, aby ułatwić usługi optymalizacji zasobów pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>If you instantiate this class by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;</ph> with the <ph id="ph2">`requireCancellation`</ph> parameter equal to <ph id="ph3">`true`</ph>, the SCT is issued in this manner.</source>
          <target state="translated">Jeśli wystąpienia tej klasy, wywołując <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;</ph> z <ph id="ph2">`requireCancellation`</ph> parametru równa <ph id="ph3">`true`</ph>, SCT wystawiony w ten sposób.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The second is a self-contained SCT that resides in a cookie on the client.</source>
          <target state="translated">Drugim jest niezależna SCT, która znajduje się w pliku cookie na komputerze klienckim.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>This SCT contains the entire state information, so requires neither state management from the service nor SCT cancellation from the client.</source>
          <target state="translated">Ta SCT zawiera informacje o stanie całego, wymaga stanu zarządzania z usługi ani anulowania SCT od klienta.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>This is sometimes called a "cookie-mode" SCT.</source>
          <target state="translated">Jest to czasem nazywane SCT "Tryb plików cookie".</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Because the SCT contains the entire state information, its size is larger than in the session-based case.</source>
          <target state="translated">Ponieważ SCT zawiera informacje o stanie całego, jego rozmiar jest większy niż w przypadku opartymi na sesji.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>With session-based SCTs, the service stores much of the state information.</source>
          <target state="translated">Z opartymi na sesji SCTs usługi przechowuje podobne informacje o stanie.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>However, because it is self-contained, it can be used across service lifetime and persists across service shutdown and restart.</source>
          <target state="translated">Jednak ponieważ jest ona niezależne, można stosować w przypadku istnienia usługi i będzie się powtarzał przez zamknięcie usługi i uruchom ponownie.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>Gets a collection of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> claims for cookie serialization.</source>
          <target state="translated">Pobiera kolekcję <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> oświadczenia dla pliku cookie serializacji.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>A collection of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> claims for cookie serialization.</source>
          <target state="translated">Kolekcja <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> oświadczenia dla pliku cookie serializacji.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>To serialize claims into SCT cookies, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> as the default.</source>
          <target state="translated">Do serializacji oświadczenia do SCT plików cookie, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> używa <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> jako domyślny.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>Because the Claim resource is extensible, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> allows you to provide a list of known resource types.</source>
          <target state="translated">Ponieważ zasób oświadczenia jest rozszerzalny, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> umożliwia podanie listy zasoby znanych typów.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>This assists the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> during deserialization of the claims in the cookie so that it can return the original strongly-typed objects.</source>
          <target state="translated">Pomaga to <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> podczas deserializacji oświadczeń w pliku cookie, aby przywrócić oryginalny silnie typizowanych obiektów.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>The following code shows how to get this property.</source>
          <target state="translated">Poniższy kod przedstawia sposób pobrania tej właściwości.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>Gets or sets a customized <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> for encoding and decoding cookie serialization.</source>
          <target state="translated">Pobiera lub ustawia dostosowany <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> kodowania i dekodowania serializacji pliku cookie.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> object, which is a customization of <ph id="ph2">&lt;see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> obiektu, który jest dostosowanie z <ph id="ph2">&lt;see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>In "cookie mode", a service issues the client a security context token (SCT) in the form of a cookie to the client so that it does not have to maintain any security state.</source>
          <target state="translated">W "Tryb plików cookie" Usługa wystawia klienta token kontekstu zabezpieczeń (SCT) w postaci pliku cookie do klienta, dzięki czemu nie trzeba zachować każdy stan zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>The client sends the cookie back in the request message so that the service knows how to unprotect and verify the request message.</source>
          <target state="translated">Klient wysyła plik cookie w komunikacie żądania, aby usługa potrafi usunięcia ochrony i sprawdź komunikat żądania.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>Because the SCT is often transmitted over a non-secure network, it must be protected.</source>
          <target state="translated">Ponieważ SCT często są przesyłane przez sieć niezabezpieczone, muszą być chronione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>By default, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses the <ph id="ph2">&lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;</ph> class to protect the cookie using the Data Protection API (DPAPI).</source>
          <target state="translated">Domyślnie <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> używa <ph id="ph2">&lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;</ph> klasę, aby chronić plik cookie przy użyciu interfejsu API ochrony danych (DPAPI).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>For DPAPI to work in a Web farm environment, all the backend services must run as the same domain user account.</source>
          <target state="translated">Dla DPAPI do pracy w środowisku farmy sieci Web wszystkie usługi wewnętrznej bazy danych musi działać jako tego samego konta użytkownika domeny.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>In other words, if the service is Web hosted, then the Internet Information Services (IIS) worker process must be configured to run as a domain user.</source>
          <target state="translated">Innymi słowy Jeśli usługa jest obsługiwana w sieci Web, następnie proces roboczy usług Internet Information Services (IIS) musi być skonfigurowana do uruchamiania jako użytkownik domeny.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>This property enables you to use a customized <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt;</ph> to encrypt and decrypt the cookie and not depend on DPAPI.</source>
          <target state="translated">Ta właściwość umożliwia używanie dostosowany <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt;</ph> do szyfrowania i odszyfrowywania pliku cookie i nie zależą od DPAPI.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>The following code shows how to set this property.</source>
          <target state="translated">Poniższy kod przedstawia sposób ustawić tę właściwość.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>