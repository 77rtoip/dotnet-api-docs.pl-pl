<Type Name="ImpersonateOnSerializingReplyMessageProperty" FullName="System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77b1619b5e32652ef15bcebe47905a56f7e8803f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55375464" /></Metadata><TypeSignature Language="C#" Value="public class ImpersonateOnSerializingReplyMessageProperty : System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImpersonateOnSerializingReplyMessageProperty extends System.Object implements class System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" />
  <TypeSignature Language="VB.NET" Value="Public Class ImpersonateOnSerializingReplyMessageProperty&#xA;Implements IMessageProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImpersonateOnSerializingReplyMessageProperty : System::ServiceModel::Channels::IMessageProperty" />
  <TypeSignature Language="F#" Value="type ImpersonateOnSerializingReplyMessageProperty = class&#xA;    interface IMessageProperty" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IMessageProperty</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0b056-101">Klasa pomocnika, aby umożliwić personifikacji podczas serializacji treści komunikatu odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="0b056-101">A helper class to enable impersonation while serializing the body of the reply message.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.IMessageProperty CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IMessageProperty CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As IMessageProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::IMessageProperty ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="abstract member CreateCopy : unit -&gt; System.ServiceModel.Channels.IMessageProperty&#xA;override this.CreateCopy : unit -&gt; System.ServiceModel.Channels.IMessageProperty" Usage="impersonateOnSerializingReplyMessageProperty.CreateCopy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IMessageProperty.CreateCopy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IMessageProperty</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b056-102">Tworzy kopię właściwości wiadomości.</span><span class="sxs-lookup"><span data-stu-id="0b056-102">Creates a copy of the message property.</span></span></summary>
        <returns><span data-ttu-id="0b056-103">Kopiowanie właściwości wiadomości.</span><span class="sxs-lookup"><span data-stu-id="0b056-103">The copy of the message property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public static string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b056-104">Pobiera nazwę właściwości wiadomości.</span><span class="sxs-lookup"><span data-stu-id="0b056-104">Gets the name of the message property.</span></span></summary>
        <value><span data-ttu-id="0b056-105">Nazwa właściwości wiadomości.</span><span class="sxs-lookup"><span data-stu-id="0b056-105">The name of the message property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartImpersonation">
      <MemberSignature Language="C#" Value="public void StartImpersonation (out IDisposable impersonationContext, out System.Security.Principal.IPrincipal originalPrincipal, out bool isThreadPrincipalSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartImpersonation([out] class System.IDisposable&amp; impersonationContext, [out] class System.Security.Principal.IPrincipal&amp; originalPrincipal, [out] bool&amp; isThreadPrincipalSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartImpersonation (ByRef impersonationContext As IDisposable, ByRef originalPrincipal As IPrincipal, ByRef isThreadPrincipalSet As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartImpersonation([Runtime::InteropServices::Out] IDisposable ^ % impersonationContext, [Runtime::InteropServices::Out] System::Security::Principal::IPrincipal ^ % originalPrincipal, [Runtime::InteropServices::Out] bool % isThreadPrincipalSet);" />
      <MemberSignature Language="F#" Value="member this.StartImpersonation :  *  *  -&gt; unit" Usage="impersonateOnSerializingReplyMessageProperty.StartImpersonation (impersonationContext, originalPrincipal, isThreadPrincipalSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impersonationContext" Type="System.IDisposable" RefType="out" />
        <Parameter Name="originalPrincipal" Type="System.Security.Principal.IPrincipal" RefType="out" />
        <Parameter Name="isThreadPrincipalSet" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="impersonationContext"><span data-ttu-id="0b056-106">Po powrocie z tej metody zawiera spersonifikowanego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="0b056-106">When this method returns, contains the impersonated context.</span></span> <span data-ttu-id="0b056-107">Ten parametr jest traktowany jako niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="0b056-107">This parameter is treated as uninitialized.</span></span></param>
        <param name="originalPrincipal"><span data-ttu-id="0b056-108">Po powrocie z tej metody zawiera oryginalnego głównego partnera w wątku przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="0b056-108">When this method returns, contains the original principal on the thread before invoking this method.</span></span> <span data-ttu-id="0b056-109">Ten parametr jest traktowany jako niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="0b056-109">This parameter is treated as uninitialized.</span></span></param>
        <param name="isThreadPrincipalSet"><span data-ttu-id="0b056-110">Po powrocie z tej metody zawiera wartość, która wskazuje, czy podmiot zabezpieczeń został ustawiony na wątku przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="0b056-110">When this method returns, contains a value that indicates whether the principal was set on the thread by this method.</span></span> <span data-ttu-id="0b056-111">Ten parametr zwraca <see langword="false" /> jeśli kontekst operacji nie jest dostępny do personifikacji.</span><span class="sxs-lookup"><span data-stu-id="0b056-111">This parameter returns <see langword="false" /> if the operation context was not available to impersonate.</span></span> <span data-ttu-id="0b056-112">Ten parametr jest traktowany jako niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="0b056-112">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="0b056-113">Rozpoczyna się personifikacji z kontekstem obiektu wywołującego, jeśli personifikacja jest włączona w usłudze i ustawia odpowiednie jednostki w wątku, zgodnie z konfiguracji usługi.</span><span class="sxs-lookup"><span data-stu-id="0b056-113">Starts impersonating with the caller's context if impersonation is enabled on the service and sets the appropriate principal on the thread as per the service configuration.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopImpersonation">
      <MemberSignature Language="C#" Value="public void StopImpersonation (IDisposable impersonationContext, System.Security.Principal.IPrincipal originalPrincipal, bool isThreadPrincipalSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopImpersonation(class System.IDisposable impersonationContext, class System.Security.Principal.IPrincipal originalPrincipal, bool isThreadPrincipalSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopImpersonation (impersonationContext As IDisposable, originalPrincipal As IPrincipal, isThreadPrincipalSet As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopImpersonation(IDisposable ^ impersonationContext, System::Security::Principal::IPrincipal ^ originalPrincipal, bool isThreadPrincipalSet);" />
      <MemberSignature Language="F#" Value="member this.StopImpersonation : IDisposable * System.Security.Principal.IPrincipal * bool -&gt; unit" Usage="impersonateOnSerializingReplyMessageProperty.StopImpersonation (impersonationContext, originalPrincipal, isThreadPrincipalSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impersonationContext" Type="System.IDisposable" />
        <Parameter Name="originalPrincipal" Type="System.Security.Principal.IPrincipal" />
        <Parameter Name="isThreadPrincipalSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="impersonationContext"><span data-ttu-id="0b056-114">Kontekst personifikacji, aby przywrócić.</span><span class="sxs-lookup"><span data-stu-id="0b056-114">The impersonation context to revert.</span></span></param>
        <param name="originalPrincipal"><span data-ttu-id="0b056-115">Oryginalny podmiot zabezpieczeń można ustawić w wątku.</span><span class="sxs-lookup"><span data-stu-id="0b056-115">The original principal to set on the thread.</span></span></param>
        <param name="isThreadPrincipalSet"><span data-ttu-id="0b056-116">Wartość, która wskazuje, czy główny wątek został ustawiony podczas personifikacji.</span><span class="sxs-lookup"><span data-stu-id="0b056-116">A value that indicates whether the thread principal was set during impersonation.</span></span> <span data-ttu-id="0b056-117"><see langword="true" /> Jeśli ustawiono podmiotu zabezpieczeń; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b056-117"><see langword="true" /> if the principal was set; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0b056-118">Przywraca personifikacji i ustawia określony oryginalnego głównego wątku.</span><span class="sxs-lookup"><span data-stu-id="0b056-118">Reverts impersonation and sets the specified original principal on the thread.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGet">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b056-119">Pobiera <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> właściwości z określonego komunikatu lub właściwości komunikatu.</span><span class="sxs-lookup"><span data-stu-id="0b056-119">Gets the <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> property from the specified message or message properties.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGet(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&amp; property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGet(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Security::ImpersonateOnSerializingReplyMessageProperty ^ % property);" />
      <MemberSignature Language="F#" Value="static member TryGet : System.ServiceModel.Channels.Message *  -&gt; bool" Usage="System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet (message, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="property" Type="System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0b056-120">Komunikat, z którego mają zostać wyodrębnione właściwości.</span><span class="sxs-lookup"><span data-stu-id="0b056-120">The message from which to extract the property.</span></span></param>
        <param name="property"><span data-ttu-id="0b056-121">Po powrocie z tej metody zawiera <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> właściwość wyodrębniony z komunikatu.</span><span class="sxs-lookup"><span data-stu-id="0b056-121">When this method returns, contains the <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> property extracted from the message.</span></span></param>
        <summary><span data-ttu-id="0b056-122">Pobiera <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> właściwości z określonego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="0b056-122">Gets the <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> property from the specified message.</span></span></summary>
        <returns><span data-ttu-id="0b056-123"><see langword="true" /> Jeśli właściwość została odnaleziona; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b056-123"><see langword="true" /> if the  property was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGet(class System.ServiceModel.Channels.MessageProperties properties, [out] class System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty&amp; property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGet (properties As MessageProperties, ByRef property As ImpersonateOnSerializingReplyMessageProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGet(System::ServiceModel::Channels::MessageProperties ^ properties, [Runtime::InteropServices::Out] System::ServiceModel::Security::ImpersonateOnSerializingReplyMessageProperty ^ % property);" />
      <MemberSignature Language="F#" Value="static member TryGet : System.ServiceModel.Channels.MessageProperties *  -&gt; bool" Usage="System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet (properties, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.ServiceModel.Channels.MessageProperties" />
        <Parameter Name="property" Type="System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" RefType="out" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="0b056-124">Obiekt właściwości komunikatu z którego mają zostać wyodrębnione właściwości.</span><span class="sxs-lookup"><span data-stu-id="0b056-124">The message properties object from which to extract the property.</span></span></param>
        <param name="property"><span data-ttu-id="0b056-125">Po powrocie z tej metody zawiera <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> właściwość wyodrębniony z komunikatu.</span><span class="sxs-lookup"><span data-stu-id="0b056-125">When this method returns, contains the <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> property extracted from the message.</span></span></param>
        <summary><span data-ttu-id="0b056-126">Pobiera <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> właściwości z określonego <see cref="T:System.ServiceModel.Channels.MessageProperties" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="0b056-126">Gets the <see cref="T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty" /> property from the specified <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object.</span></span></summary>
        <returns><span data-ttu-id="0b056-127"><see langword="true" /> Jeśli właściwość została odnaleziona; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0b056-127"><see langword="true" /> if the  property was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>