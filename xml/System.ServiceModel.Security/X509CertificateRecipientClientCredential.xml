<Type Name="X509CertificateRecipientClientCredential" FullName="System.ServiceModel.Security.X509CertificateRecipientClientCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="272c9ab46f14ee04a4e7a7b068b39d37710dbb37" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69233735" /></Metadata><TypeSignature Language="C#" Value="public sealed class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateRecipientClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateRecipientClientCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateRecipientClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje ustawienia używane przez klienta do weryfikowania certyfikatu przedstawionego przez usługę przy użyciu uwierzytelniania SSL. Zawiera również certyfikat dla usługi, która jest jawnie skonfigurowana na kliencie do szyfrowania komunikatów w usłudze przy użyciu zabezpieczeń komunikatów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest używana przez <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A> Właściwość <xref:System.ServiceModel.Description.ClientCredentials> w klasie.  
  
   
  
## Examples  
 Ten kod pokazuje jeden ze sposobów tworzenia wystąpienia tej klasy.  
  
 [!code-csharp[c_CreateSTS#18](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#18)]
 [!code-vb[c_CreateSTS#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#18)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ClientCredentials.ServiceCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ Authentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ustawienia używane do weryfikacji certyfikatu usługi uzyskanego przy użyciu uwierzytelniania SSL.</summary>
        <value>Ustawienia używane do weryfikowania certyfikatu usługi uzyskanego przy użyciu uwierzytelniania SSL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication> Klasa reprezentuje ustawienia używane przez serwer proxy klienta do uwierzytelniania certyfikatów usługi, które są uzyskiwane przy użyciu negocjacji SSL/TLS.  
  
   
  
## Examples  
 Ten kod pokazuje, jak uzyskać dostęp do tej właściwości.  
  
 [!code-csharp[c_CreateSTS#21](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultCertificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ DefaultCertificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCertificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia domyślny certyfikat używany przez usługę.</summary>
        <value>Domyślny certyfikat używany przez usługę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku powiązań korzystających z zabezpieczeń komunikatów opartych na certyfikatach ten certyfikat jest używany do szyfrowania komunikatów do usługi i powinien być używany przez usługę do podpisywania odpowiedzi do klienta.  
  
   
  
## Examples  
 Ten kod pokazuje, jak uzyskać dostęp do tej właściwości.  
  
 [!code-csharp[c_CreateSTS#24](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podjęto próbę ustawienia, gdy poświadczenie jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScopedCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Uri, class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScopedCertificates As Dictionary(Of Uri, X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ ScopedCertificates { System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScopedCertificates : System.Collections.Generic.Dictionary&lt;Uri, System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera certyfikat z określonym zakresem, który będzie używany do reprezentowania usługi, z którą komunikuje się klient.</summary>
        <value>Certyfikat z określonym zakresem, który będzie używany do reprezentowania usługi, z którą komunikuje się klient.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia klientowi skonfigurowanie certyfikatu usługi do użycia na podstawie adresu URL usługi, z którą komunikuje się. Jest to szczególnie przydatne w scenariuszach wystawionych tokenów, w których klient może komunikować się z wieloma usługami (usługą końcową oraz usługami tokenów zabezpieczających). W przypadku powiązań korzystających z zabezpieczeń komunikatów opartych na certyfikatach ten certyfikat jest używany do szyfrowania komunikatów do usługi i powinien być używany przez usługę do podpisywania odpowiedzi do klienta.  
  
 Jeśli powiązanie wymaga certyfikatu dla usługi i nie zostanie znaleziony `ScopedCertificates`konkretny certyfikat dla adresu URL usługi, zostanie użyty certyfikat domyślny.  
  
   
  
## Examples  
 Ten kod pokazuje, jak ustawić tę właściwość.  
  
 [!code-csharp[c_CreateSTS#33](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podjęto próbę ustawienia, gdy poświadczenie jest tylko do odczytu.</exception>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDefaultCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa domyślny certyfikat używany przez usługę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te metody otrzymują certyfikat ze sklepu w określonej lokalizacji, który odpowiada określonym parametrom.  
  
 W przypadku powiązań korzystających z zabezpieczeń komunikatów opartych na certyfikatach ten certyfikat jest używany do szyfrowania komunikatów do usługi i powinien być używany przez usługę do podpisywania odpowiedzi do klienta.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">Nazwa wyróżniająca podmiotu.</param>
        <param name="storeLocation">Lokalizacja magazynu certyfikatów używanego przez usługę w celu uzyskania certyfikatu usługi.</param>
        <param name="storeName">Nazwa magazynu certyfikatów X. 509 do otwarcia.</param>
        <summary>Określa domyślny certyfikat używany przez usługę. W przypadku powiązań korzystających z zabezpieczeń komunikatów opartych na certyfikatach ten certyfikat jest używany do szyfrowania komunikatów do usługi i powinien być używany przez usługę do podpisywania odpowiedzi do klienta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera certyfikat ze sklepu w określonej lokalizacji, który jest zgodny z `subjectName` parametrem.  
  
 Wartości dla `storeLocation` są zawarte <xref:System.Security.Cryptography.X509Certificates.StoreLocation> w wyliczeniu:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: Magazyn certyfikatów przypisany do komputera lokalnego.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: Magazyn certyfikatów używany przez bieżącego użytkownika (domyślnie).  
  
 Jeśli aplikacja działa w ramach konta systemowego, certyfikat zazwyczaj znajduje się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>temacie. Jeśli aplikacja jest uruchomiona w ramach konta użytkownika, certyfikat zazwyczaj znajduje się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>temacie.  
  
 Wartości dla `storeName` są zawarte <xref:System.Security.Cryptography.X509Certificates.StoreName> w wyliczeniu.  
  
   
  
## Examples  
 Poniższy kod używa tej metody do określenia certyfikatu X. 509 do użycia.  
  
 [!code-csharp[c_CreateSTS#23](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="subjectName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podjęto próbę ustawienia, gdy poświadczenie jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Lokalizacja magazynu certyfikatów używanego przez usługę w celu uzyskania certyfikatu usługi.</param>
        <param name="storeName">Nazwa magazynu certyfikatów X. 509 do otwarcia.</param>
        <param name="findType">Typ wyszukiwania X. 509, który ma zostać wykonany.</param>
        <param name="findValue">Wartość do wyszukania w magazynie certyfikatów X. 509.</param>
        <summary>Określa domyślny certyfikat używany przez usługę. W przypadku powiązań korzystających z zabezpieczeń komunikatów opartych na certyfikatach ten certyfikat jest używany do szyfrowania komunikatów do usługi i powinien być używany przez usługę do podpisywania odpowiedzi do klienta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera certyfikat ze sklepu w określonej lokalizacji zgodnej z `findType` parametrami i. `findValue`  
  
 Wartości dla `storeLocation` są zawarte <xref:System.Security.Cryptography.X509Certificates.StoreLocation> w wyliczeniu:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: Magazyn certyfikatów przypisany do komputera lokalnego.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: Magazyn certyfikatów używany przez bieżącego użytkownika (domyślnie).  
  
 Jeśli aplikacja działa w ramach konta systemowego, certyfikat zazwyczaj znajduje się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>temacie. Jeśli aplikacja jest uruchomiona w ramach konta użytkownika, certyfikat zazwyczaj znajduje się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>temacie.  
  
 Wartości dla `storeName` są zawarte <xref:System.Security.Cryptography.X509Certificates.StoreName> w wyliczeniu.  
  
 Wartości dla `findType` są zawarte <xref:System.Security.Cryptography.X509Certificates.X509FindType> w wyliczeniu.  
  
 Najczęściej używanym wyliczeniem jest <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, co oznacza, że wyszukiwanie w nazwie podmiotu certyfikatów w określonym sklepie nie uwzględnia wielkości liter. Może to być nieprecyzyjne wyszukiwanie. Jeśli nie zostaną znalezione żadne certyfikaty lub wiele certyfikatów zgodnych z kryteriami <xref:System.InvalidOperationException> , jest zgłaszany.  
  
   
  
## Examples  
 Poniższy kod używa tej metody do określenia certyfikatu X. 509 do użycia.  
  
 [!code-csharp[c_CreateSTS#22](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="findValue" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podjęto próbę ustawienia, gdy poświadczenie jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetScopedCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia certyfikat z magazynu i zapisuje go w kolekcji indeksowanej przez adres URL, który ustawia zakres.</summary>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (subjectName, storeLocation, storeName, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="subjectName">W pełni kwalifikowana nazwa podmiotu.</param>
        <param name="storeLocation">Lokalizacja magazynu certyfikatów używanego przez usługę w celu uzyskania certyfikatu usługi.</param>
        <param name="storeName">Nazwa magazynu certyfikatów X. 509 do otwarcia.</param>
        <param name="targetService">Adres URL, który ustawia zakres.</param>
        <summary>Ustawia certyfikat według nazwy podmiotu, lokalizacji magazynu certyfikatów i nazwy magazynu certyfikatów i zapisuje je w kolekcji, która będzie używana dla adresu URL, który ustawia zakres.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości dla `storeLocation` są zawarte <xref:System.Security.Cryptography.X509Certificates.StoreLocation> w wyliczeniu:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: Magazyn certyfikatów przypisany do komputera lokalnego.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: Magazyn certyfikatów używany przez bieżącego użytkownika (domyślnie).  
  
 Jeśli aplikacja działa w ramach konta systemowego, certyfikat zazwyczaj znajduje się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>temacie. Jeśli aplikacja jest uruchomiona w ramach konta użytkownika, certyfikat zazwyczaj znajduje się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>temacie.  
  
 Wartości dla `storeName` są zawarte <xref:System.Security.Cryptography.X509Certificates.StoreName> w wyliczeniu.  
  
   
  
## Examples  
 Ten kod pokazuje, jak wywołać tę metodę.  
  
 [!code-csharp[c_CreateSTS#25](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="subjectName" />lub <paramref name="targetService" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podjęto próbę ustawienia, gdy poświadczenie jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (storeLocation, storeName, findType, findValue, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="storeLocation">Lokalizacja magazynu certyfikatów używanego przez usługę w celu uzyskania certyfikatu usługi.</param>
        <param name="storeName">Nazwa magazynu certyfikatów X. 509 do otwarcia.</param>
        <param name="findType">Typ wyszukiwania X. 509, który ma zostać wykonany.</param>
        <param name="findValue">Wartość do wyszukania w magazynie certyfikatów X. 509.</param>
        <param name="targetService">Adres URL, który ustawia zakres.</param>
        <summary>Ustawia certyfikat według lokalizacji magazynu certyfikatów, nazwy magazynu certyfikatów, typu wyszukiwania X. 509 i wartości do wyszukania, a następnie zapisuje je w kolekcji, która będzie używana dla adresu URL, który ustawia zakres.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości dla `storeLocation` są zawarte <xref:System.Security.Cryptography.X509Certificates.StoreLocation> w wyliczeniu:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: Magazyn certyfikatów przypisany do komputera lokalnego.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: Magazyn certyfikatów używany przez bieżącego użytkownika (domyślnie).  
  
 Jeśli aplikacja działa w ramach konta systemowego, certyfikat zazwyczaj znajduje się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>temacie. Jeśli aplikacja jest uruchomiona w ramach konta użytkownika, certyfikat zazwyczaj znajduje się w <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>temacie.  
  
 Wartości dla `storeName` są zawarte <xref:System.Security.Cryptography.X509Certificates.StoreName> w wyliczeniu.  
  
 Wartości dla `findType` są zawarte <xref:System.Security.Cryptography.X509Certificates.X509FindType> w wyliczeniu.  
  
 Najczęściej używanym wyliczeniem jest <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, co oznacza, że wyszukiwanie w nazwie podmiotu certyfikatów w określonym sklepie nie uwzględnia wielkości liter. Może to być nieprecyzyjne wyszukiwanie. Jeśli nie zostaną znalezione żadne certyfikaty lub wiele certyfikatów zgodnych z kryteriami <xref:System.InvalidOperationException> , zostanie zgłoszony.  
  
   
  
## Examples  
 Ten kod pokazuje, jak wywołać tę metodę.  
  
 [!code-csharp[c_CreateSTS#20](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#20)]
 [!code-vb[c_CreateSTS#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="findValue" />lub <paramref name="targetService" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podjęto próbę ustawienia, gdy poświadczenie jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="SslCertificateAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property SslCertificateAuthentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ SslCertificateAuthentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); void set(System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SslCertificateAuthentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia moduł sprawdzania poprawności certyfikatu protokołu SSL do użycia.</summary>
        <value><see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" /> Wystąpienie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia korzystanie z programu WCF X509CertificateValidator do weryfikowania certyfikatu serwera na kliencie WCF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
