<Type Name="WindowsClientCredential" FullName="System.ServiceModel.Security.WindowsClientCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17aa4916ee48a89f1e04fbcea57811d4c4c1db02" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69103505" /></Metadata><TypeSignature Language="C#" Value="public sealed class WindowsClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowsClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.WindowsClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowsClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsClientCredential sealed" />
  <TypeSignature Language="F#" Value="type WindowsClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Umożliwia określenie właściwości związanych z poświadczeniami systemu Windows, które będą używane do reprezentowania klienta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.WindowsClientCredential> Włącza ustawienie właściwości klienta systemu Windows używane podczas komunikowania się z usługą. <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> Ustawia poziom personifikacji, którą usługa może przyjąć podczas personifikowania klienta. <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> Umożliwia klientowi uwierzytelnianie przy użyciu nazwy użytkownika i hasła do usługi. Określa <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> , czy można użyć protokołu NTLM do uwierzytelnienia klienta, jeśli nie jest używany protokół Kerberos.  
  
   
  
## Examples  
 Poniższy przykład tworzy klienta i pobiera odwołanie do <xref:System.ServiceModel.Security.WindowsClientCredential>. Kod zmieni <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> się na nową wartość.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel AllowedImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AllowedImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia dozwolony poziom personifikacji.</summary>
        <value>Jedna z <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa poziom personifikacji przyznany przez klienta na serwerze podczas korzystania z uwierzytelniania negocjowanego interfejsu SSPI systemu Windows. Należy zauważyć, że poziom personifikacji uzyskany przez serwer, gdy personifikuje token klienta, nie jest wyłącznie funkcją tego ustawienia. Jest to również funkcja skojarzonych uprawnień i ustawień domeny dla konta, w którym jest uruchomiona usługa.  
  
 Klient musi jawnie ustawić dozwolony poziom personifikacji przy użyciu tej właściwości.  
  
 Gdy klient określi personifikację anonimową, klient zawsze jest uwierzytelniany w usłudze jako anonimowe nawet wtedy, gdy w usłudze nie jest wykonywana personifikacja. Jest to spowodowane zachowaniem systemu operacyjnego Windows.  
  
 Aby uzyskać więcej informacji na temat personifikacji systemu Windows, przejdź do obszaru [personifikacja i wycofywanie](https://go.microsoft.com/fwlink/?LinkId=96178). Aby uzyskać więcej informacji na temat personifikacji przy użyciu Windows Communication Foundation, zobacz [delegowanie i personifikacja](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić tę właściwość.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNtlm">
      <MemberSignature Language="C#" Value="public bool AllowNtlm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNtlm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNtlm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNtlm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNtlm : bool with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is deprecated and is maintained for backward compatibility only. The local machine policy will be used to determine if NTLM should be used.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy uwierzytelnianie NTLM powinno być dozwolone jako uwierzytelnianie negocjowane w systemie Windows SSPI.</summary>
        <value><see langword="true" />Jeśli uwierzytelnianie NTLM powinno być dozwolone jako uwierzytelnianie negocjowane w systemie <see langword="false" /> Windows SSPI, w przeciwnym razie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości `true` umożliwia uwierzytelnianie w przypadku, gdy protokół Kerberos jest niedostępny.  
  
 Ustawienie tej właściwości `false` powoduje, że Windows Communication Foundation (WCF), aby najlepszym wysiłku zgłosić wyjątek, jeśli jest używany protokół NTLM. Należy pamiętać, że ustawienie tej `false` właściwości na nie zapobiega wysyłaniu poświadczeń NTLM za pośrednictwem sieci.  
  
 Niektóre wdrożenia, takie jak grupy robocze i konta lokalne, wymagają uwierzytelniania NTLM. Ustawienie tej flagi na `false` w ramach takich wdrożeń spowoduje błędy uwierzytelniania podczas korzystania z programu WCF. W przypadku wdrożenia wymagającego uwierzytelniania wzajemnego (obsługiwanego tylko przez protokół Kerberos) Ustaw tę `false`flagę na.  
  
 NTLM (Windows NT LAN Manager) jest protokołem uwierzytelniania używanym w sieciach zawierających systemy z systemem operacyjnym Windows NT oraz w systemach autonomicznych.  
  
 Pakiet zabezpieczeń Microsoft Kerberos zapewnia większe bezpieczeństwo niż w przypadku systemów w sieci. Mimo że protokół Microsoft Kerberos jest wybranym protokołem, uwierzytelnianie NTLM jest nadal obsługiwane i musi być używane do uwierzytelniania w sieci, jeśli sieć zawiera systemy z systemami Windows NT 4,0 i wcześniejszymi oraz w systemach autonomicznych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ ClientCredential { System::Net::NetworkCredential ^ get(); void set(System::Net::NetworkCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredential : System.Net.NetworkCredential with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poświadczenie klienta systemu Windows.</summary>
        <value><see cref="T:System.Net.NetworkCredential" /> Dla klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie poświadczenia bieżącego wątku są używane przez program WCF do wykonywania uwierzytelniania negocjowanego z systemem Windows SSPI.  
  
 Aby uwierzytelnić klienta jako innego podmiotu zabezpieczeń, zmień właściwości instancji <xref:System.Net.NetworkCredential> klasy zwracanej przez tę właściwość. Alternatywnie Utwórz nowe wystąpienie <xref:System.Net.NetworkCredential> klasy i przypisz je do tej właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia sposób uwierzytelniania klienta jako innego podmiotu zabezpieczeń.  
  
 W ten sposób można zmienić właściwości wystąpienia <xref:System.Net.NetworkCredential> klasy zwracanej przez tę właściwość.  
  
 [!code-csharp[WindowsClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#2)]  
  
 W ten sposób można utworzyć nowe wystąpienie <xref:System.Net.NetworkCredential> klasy i przypisać je do tej właściwości.  
  
 [!code-csharp[WindowsClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
