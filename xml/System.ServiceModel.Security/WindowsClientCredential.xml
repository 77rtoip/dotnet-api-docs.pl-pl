<Type Name="WindowsClientCredential" FullName="System.ServiceModel.Security.WindowsClientCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8f4bcd41908e0a109ad94880ff1145d09c1707d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36612273" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WindowsClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowsClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.WindowsClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowsClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsClientCredential sealed" />
  <TypeSignature Language="F#" Value="type WindowsClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Umożliwia określenie właściwości powiązanych z poświadczeń systemu Windows do użycia do reprezentacji klienta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.WindowsClientCredential> Umożliwia ustawienie właściwości klienta systemu Windows używane podczas komunikacji z usługą. <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> Ustawia poziom personifikacji usługi można założyć, gdy Personifikowanie klienta. <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A> Przez klienta do uwierzytelniania za pomocą nazwy użytkownika i hasła do usługi. <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> Określa, czy NTLM może służyć do uwierzytelniania klienta, jeśli nie jest używany protokół Kerberos.  
  
   
  
## Examples  
 Poniższy przykład tworzy klienta i pobiera odwołanie do <xref:System.ServiceModel.Security.WindowsClientCredential>. Następnie zmiany kodu <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A> na nową wartość.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel AllowedImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AllowedImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poziom personifikacji dozwolonych.</summary>
        <value>Jeden z <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa poziom personifikacji przyznanych przez klienta do serwera podczas korzystania z uwierzytelniania negocjowanie interfejsu SSPI systemu Windows. Należy pamiętać, że poziom personifikacji uzyskiwane przez serwer podczas personifikuje token klienta nie jest funkcją wyłącznie tego ustawienia. Istnieje również funkcja skojarzone uprawnienia i ustawienia domeny dla konta, w którym usługa jest uruchomiona.  
  
 Klient musi jawnie ustawić poziom personifikacji dozwolonych za pomocą tej właściwości.  
  
 Gdy klient określa anonimowe personifikacji klienta zawsze uwierzytelnia się w usłudze jako użytkownik anonimowy nawet wtedy, gdy personifikacji nie jest wykonywana na usługę. Jest to spowodowane podstawowej zachowania systemu operacyjnego Windows.  
  
 Aby uzyskać więcej informacji o personifikacji systemu Windows, przejdź do [personifikacja i przywracanie](http://go.microsoft.com/fwlink/?LinkId=96178). Aby uzyskać więcej informacji o personifikacji za pomocą programu Windows Communication Foundation, zobacz [delegowanie i personifikacja](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md).  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób ustawić tę właściwość.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNtlm">
      <MemberSignature Language="C#" Value="public bool AllowNtlm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNtlm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNtlm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNtlm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNtlm : bool with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy powinno być dozwolone uwierzytelnianie NTLM, uwierzytelniania negocjowanie interfejsu SSPI systemu Windows.</summary>
        <value>
          <see langword="true" /> Jeśli uwierzytelnianie NTLM powinno być dozwolone jako negocjowanie interfejsu SSPI systemu Windows authentication <see langword="false" /> inaczej. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości na `true` umożliwia uwierzytelnianie do poziomu starszej wersji NTLM Jeśli protokołu Kerberos nie jest dostępna.  
  
 Ustawienie tej właściwości na `false` powoduje, że Windows Communication Foundation (WCF) aby optymalnych zostać zgłoszony wyjątek, jeśli używane jest uwierzytelnianie NTLM. Należy pamiętać, że ustawienie tej właściwości na `false` może uniemożliwia poświadczeń NTLM są przesyłane przez sieć.  
  
 Niektórych wdrożeń, takich jak grupach roboczych i kontami lokalnymi wymagają uwierzytelniania NTLM. Ustawienie tej flagi na `false` w wyniku wdrożenia, takie błędy uwierzytelniania w przypadku korzystania z usługi WCF. We wdrożeniu, które wymagają uwierzytelniania wzajemnego (obsługiwane tylko przez protokół Kerberos), ustaw wartość tej flagi `false`.  
  
 NTLM (system Windows NT LAN Manager) to protokół uwierzytelniania używany w sieciach, w których działa system operacyjny Windows NT i w systemach autonomicznych.  
  
 Pakiet zabezpieczeń Microsoft Kerberos zapewnia wyższy poziom zabezpieczeń niż NTLM do systemów w sieci. Mimo że Microsoft Kerberos to protokół wybór, uwierzytelnianie NTLM jest nadal obsługiwane i musi być używany do uwierzytelniania sieciowego, jeśli sieć zawiera z wersjami systemu Windows NT 4.0 i starszych systemach i w systemach autonomicznych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ ClientCredential { System::Net::NetworkCredential ^ get(); void set(System::Net::NetworkCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredential : System.Net.NetworkCredential with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poświadczenia klienta systemu Windows.</summary>
        <value>
          <see cref="T:System.Net.NetworkCredential" /> Dla klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie bieżący wątek poświadczenia są używane przez usługi WCF dla uwierzytelniania negocjowanie interfejsu SSPI systemu Windows.  
  
 Na potrzeby uwierzytelniania klienta jako inny podmiot zabezpieczeń, zmień właściwości wystąpienia <xref:System.Net.NetworkCredential> klasy, która jest zwracana przez tę właściwość. Można również utworzyć nowe wystąpienie klasy <xref:System.Net.NetworkCredential> klasy i przypisz je do tej właściwości.  
  
   
  
## Examples  
 W poniższych przykładach kodu przedstawiają sposób uwierzytelniania klienta jako inny podmiot zabezpieczeń.  
  
 Jak zmienić właściwości wystąpienia jest <xref:System.Net.NetworkCredential> klasy, która jest zwracana przez tę właściwość.  
  
 [!code-csharp[WindowsClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#2)]  
  
 Sposób utworzyć nowe wystąpienie klasy <xref:System.Net.NetworkCredential> klasy i przypisz je do tej właściwości.  
  
 [!code-csharp[WindowsClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>