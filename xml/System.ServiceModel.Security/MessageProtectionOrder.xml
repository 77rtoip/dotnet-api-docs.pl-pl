<Type Name="MessageProtectionOrder" FullName="System.ServiceModel.Security.MessageProtectionOrder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="023163d1a1bd6c143debb822a30b7762ef9aef30" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69149050" /></Metadata><TypeSignature Language="C#" Value="public enum MessageProtectionOrder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MessageProtectionOrder extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.MessageProtectionOrder" />
  <TypeSignature Language="VB.NET" Value="Public Enum MessageProtectionOrder" />
  <TypeSignature Language="C++ CLI" Value="public enum class MessageProtectionOrder" />
  <TypeSignature Language="F#" Value="type MessageProtectionOrder = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa kolejność operacji chroniących wiadomość.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To wyliczenie jest używane <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A?displayProperty=nameWithType> z właściwością <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement> <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> i <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder%2A?displayProperty=nameWithType> właściwością klas.  
  
 Jeśli komunikat jest narażony na atak typu Digest (na przykład krótki lub Entropia jest niska), należy użyć opcji SignBeforeEncryptAndEncryptSignature lub EncryptBeforeSign. (*Entropia* to losowe dane dostarczane przez serwer, klienta lub oba te elementy, które są używane do tworzenia klucza współużytkowanego do szyfrowania i odszyfrowywania danych).  
  
## <a name="what-is-ordered"></a>Co jest uporządkowane?  
 Usługa WCF oferuje trzy różne poziomy ochrony, które określają sposób zabezpieczania komunikatów przy użyciu zabezpieczeń komunikatów protokołu SOAP. Wartość domyślna to SignBeforeEncryptAndEncryptSignature. To ustawienie najpierw podpisuje komunikat, szyfruje treść wiadomości, a następnie szyfruje podpis XML. Zmniejsza to prawdopodobieństwo pomyślnego ataku z odzgadywaniem kryptograficznym do podpisu.  
  
 Jednak użycie domyślnego ma wpływ na wydajność. W efekcie istnieje kompromis dotyczący wydajności w celu zwiększenia bezpieczeństwa. Szyfrowanie sygnatury może zmniejszyć wydajność między 10% a 40 procent. Jeśli zawartość danych komunikatu ma niską wartość, a przepustowość wydajności jest bardziej znacząca, użyj SignBeforeEncrypt. To ustawienie oznacza, że skrót sygnatury jest wysyłany w postaci zwykłego tekstu, a w rezultacie komunikat jest bardziej narażony na ataki typu "niska Entropia".  
  
## <a name="custom-bindings-only"></a>Tylko powiązania niestandardowe  
 Aby zmienić `MessageProtectionOrder` właściwość, wymagane jest utworzenie niestandardowego powiązania zabezpieczeń. Aby uzyskać więcej informacji na temat tworzenia powiązań niestandardowych, zobacz [Tworzenie powiązań zdefiniowanych przez użytkownika](~/docs/framework/wcf/extending/creating-user-defined-bindings.md). Aby uzyskać więcej informacji o tworzeniu niestandardowego powiązania dla określonego trybu uwierzytelniania, zobacz [How to: Utwórz elementu SecurityBindingElement dla określonego trybu](~/docs/framework/wcf/feature-details/how-to-create-a-securitybindingelement-for-a-specified-authentication-mode.md)uwierzytelniania.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> element i ustawia jego <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder%2A> właściwość na SignBeforeEncrypt.  
  
 [!code-csharp[c_CustomBinding#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_custombinding/cs/c_custombinding.cs#3)]
 [!code-vb[c_CustomBinding#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_custombinding/vb/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Security.MessageProtectionOrder" />
    <altmember cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />
    <altmember cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />
    <related type="Article" href="https://msdn.microsoft.com/library/203a9f9e-3a73-427c-87aa-721c56265b29">Instrukcje: tworzenie niestandardowego wiązania za pomocą elementu SecurityBindingElement</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c4960675-d701-4bc9-b400-36a752fdd08b">Tworzenie powiązań zdefiniowanych przez użytkownika i elementów powiązania</related>
    <related type="Article" href="https://msdn.microsoft.com/library/a7c7747a-5b8c-463f-8493-7266dac75066">Instrukcje: tworzenie elementu SecurityBindingElement dla określonego trybu uwierzytelniania</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0868866d-40b4-4341-8e42-eee3b7f15b69">Szyfrowanie podpisów cyfrowych</related>
  </Docs>
  <Members>
    <Member MemberName="EncryptBeforeSign">
      <MemberSignature Language="C#" Value="EncryptBeforeSign" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder EncryptBeforeSign = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign" />
      <MemberSignature Language="VB.NET" Value="EncryptBeforeSign" />
      <MemberSignature Language="C++ CLI" Value="EncryptBeforeSign" />
      <MemberSignature Language="F#" Value="EncryptBeforeSign = 2" Usage="System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Określa, że komunikat protokołu SOAP jest szyfrowany przed wygenerowaniem podpisu cyfrowego dla wiadomości protokołu SOAP.</summary>
      </Docs>
    </Member>
    <Member MemberName="SignBeforeEncrypt">
      <MemberSignature Language="C#" Value="SignBeforeEncrypt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder SignBeforeEncrypt = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />
      <MemberSignature Language="VB.NET" Value="SignBeforeEncrypt" />
      <MemberSignature Language="C++ CLI" Value="SignBeforeEncrypt" />
      <MemberSignature Language="F#" Value="SignBeforeEncrypt = 0" Usage="System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Określa, że podpis cyfrowy jest generowany dla komunikatu protokołu SOAP przed zaszyfrowaniem jakiejkolwiek części komunikatu protokołu SOAP, ale podpis cyfrowy nie jest szyfrowany.</summary>
      </Docs>
    </Member>
    <Member MemberName="SignBeforeEncryptAndEncryptSignature">
      <MemberSignature Language="C#" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder SignBeforeEncryptAndEncryptSignature = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="VB.NET" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="C++ CLI" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="F#" Value="SignBeforeEncryptAndEncryptSignature = 1" Usage="System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Określa, że podpis cyfrowy jest generowany dla komunikatu protokołu SOAP przed zaszyfrowaniem jakiejkolwiek części komunikatu protokołu SOAP, a podpis cyfrowy jest szyfrowany.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
