<Type Name="MessageProtectionOrder" FullName="System.ServiceModel.Security.MessageProtectionOrder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16b35a39c0bca72932e9f3ee04de23147f87a33f" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51883901" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MessageProtectionOrder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MessageProtectionOrder extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.MessageProtectionOrder" />
  <TypeSignature Language="VB.NET" Value="Public Enum MessageProtectionOrder" />
  <TypeSignature Language="C++ CLI" Value="public enum class MessageProtectionOrder" />
  <TypeSignature Language="F#" Value="type MessageProtectionOrder = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa kolejność operacji, służących do ochrony wiadomości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To wyliczenie jest używane z <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A?displayProperty=nameWithType> właściwość <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement> i <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder%2A?displayProperty=nameWithType> właściwość <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> klasy.  
  
 Jeśli komunikat jest narażony na atak szyfrowanego (na przykład, jeśli komunikat jest krótki lub brakuje entropii), należy użyć opcji SignBeforeEncryptAndEncryptSignature lub EncryptBeforeSign. (*Entropii* jest losowe dane dostarczane przez serwer i/lub klienta i służy do tworzenia klucza wstępnego, szyfrowania i odszyfrowywania danych.)  
  
## <a name="what-is-ordered"></a>Co to są porządkowane?  
 Usługi WCF oferuje trzech różnych poziomów ochrony, które określają, jak wiadomości są zabezpieczone przy użyciu zabezpieczeń wiadomości protokołu SOAP. Wartość domyślna to SignBeforeEncryptAndEncryptSignature. To ustawienie najpierw zarejestruje komunikat, szyfruje treść komunikatu i następnie szyfruje podpis XML. Zmniejsza to prawdopodobieństwo kryptograficznych odgadnięcia ataku podpis.  
  
 Jednak przy użyciu domyślnego ma wpływ na wydajność. W praktyce jest to z kompromisem wydajności w celu zwiększenia bezpieczeństwa. Szyfrowanie podpis może obniżyć wydajność, od 10 procent do 40 procent. Jeśli zawartość danych komunikatu ma niską wartość, a przepływność wydajności jest bardziej znaczące, należy użyć SignBeforeEncrypt. To ustawienie, porządkowanie podpisu jest wysyłane w postaci zwykłego tekstu, a zatem komunikat jest bardziej narażone na ataki odgadnięcia i sprawdź na niski entropii.  
  
## <a name="custom-bindings-only"></a>Tylko powiązań niestandardowych  
 Aby zmienić `MessageProtectionOrder` właściwość wymaga tworzenie powiązania niestandardowego zabezpieczeń. Aby uzyskać więcej informacji na temat tworzenia powiązań niestandardowych, zobacz [powiązania Creating User-Defined](~/docs/framework/wcf/extending/creating-user-defined-bindings.md). Aby uzyskać więcej informacji na temat tworzenia niestandardowego powiązania dla trybu uwierzytelniania określonych zobacz [porady: Tworzenie elementu SecurityBindingElement dla trybu uwierzytelniania określone](~/docs/framework/wcf/feature-details/how-to-create-a-securitybindingelement-for-a-specified-authentication-mode.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> elementu i ustawia jego <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder%2A> właściwość SignBeforeEncrypt.  
  
 [!code-csharp[c_CustomBinding#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_custombinding/cs/c_custombinding.cs#3)]
 [!code-vb[c_CustomBinding#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_custombinding/vb/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Security.MessageProtectionOrder" />
    <altmember cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />
    <altmember cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />
    <related type="Article" href="https://msdn.microsoft.com/library/203a9f9e-3a73-427c-87aa-721c56265b29">Instrukcje: Tworzenie niestandardowego powiązania za pomocą elementu SecurityBindingElement</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c4960675-d701-4bc9-b400-36a752fdd08b">Tworzenie powiązań zdefiniowanych przez użytkownika i elementy powiązań</related>
    <related type="Article" href="https://msdn.microsoft.com/library/a7c7747a-5b8c-463f-8493-7266dac75066">Instrukcje: Tworzenie elementu SecurityBindingElement dla określonego trybu uwierzytelniania</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0868866d-40b4-4341-8e42-eee3b7f15b69">Szyfrowanie podpisów cyfrowych</related>
  </Docs>
  <Members>
    <Member MemberName="EncryptBeforeSign">
      <MemberSignature Language="C#" Value="EncryptBeforeSign" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder EncryptBeforeSign = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign" />
      <MemberSignature Language="VB.NET" Value="EncryptBeforeSign" />
      <MemberSignature Language="C++ CLI" Value="EncryptBeforeSign" />
      <MemberSignature Language="F#" Value="EncryptBeforeSign = 2" Usage="System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Określa, że komunikat protokołu SOAP są szyfrowane przed wygenerowaniem podpisu cyfrowego komunikatu protokołu SOAP.</summary>
      </Docs>
    </Member>
    <Member MemberName="SignBeforeEncrypt">
      <MemberSignature Language="C#" Value="SignBeforeEncrypt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder SignBeforeEncrypt = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />
      <MemberSignature Language="VB.NET" Value="SignBeforeEncrypt" />
      <MemberSignature Language="C++ CLI" Value="SignBeforeEncrypt" />
      <MemberSignature Language="F#" Value="SignBeforeEncrypt = 0" Usage="System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Określa, czy podpis cyfrowy jest generowany dla komunikatu protokołu SOAP, zanim jakiejkolwiek jego części komunikatu protokołu SOAP jest zaszyfrowany, ale podpis cyfrowy nie są szyfrowane.</summary>
      </Docs>
    </Member>
    <Member MemberName="SignBeforeEncryptAndEncryptSignature">
      <MemberSignature Language="C#" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder SignBeforeEncryptAndEncryptSignature = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="VB.NET" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="C++ CLI" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="F#" Value="SignBeforeEncryptAndEncryptSignature = 1" Usage="System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Określa, czy podpis cyfrowy jest generowany dla komunikatu protokołu SOAP, zanim jakiejkolwiek jego części komunikatu protokołu SOAP są szyfrowane, a podpis cyfrowy jest zaszyfrowany.</summary>
      </Docs>
    </Member>
  </Members>
</Type>