<Type Name="HttpRequestCachePolicy" FullName="System.Net.Cache.HttpRequestCachePolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="70d9247580af3dd8cff4f6dabe61c211c283480e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30558685" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpRequestCachePolicy : System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpRequestCachePolicy extends System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.Cache.HttpRequestCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpRequestCachePolicy&#xA;Inherits RequestCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestCachePolicy : System::Net::Cache::RequestCachePolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Cache.RequestCachePolicy</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa buforowania wymagania aplikacji dotyczące zasobów uzyskany przy użyciu <see cref="T:System.Net.HttpWebRequest" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić domyślnych zasad pamięci podręcznej dla aplikacji za pomocą <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> pliki konfiguracji właściwości albo aplikacji lub komputera. Aby uzyskać więcej informacji, zobacz [ &lt;requestCaching —&gt; elementu (ustawienia sieciowe)](~/docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md).  
  
 Można określić zasady pamięci podręcznej dla poszczególnych żądania przy użyciu <xref:System.Net.WebRequest.CachePolicy%2A> właściwości.  
  
 Buforowanie dla usług sieci Web nie jest obsługiwane.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy domyślne zasady pamięci podręcznej dla domeny aplikacji i przesłania go na żądanie.  
  
 [!code-cpp[NclSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NclSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwości <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie zasady pamięci podręcznej, za pomocą tego konstruktora.  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(DateTime cacheSyncDate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheSyncDate">A <see cref="T:System.DateTime" /> obiektu, który określa czas, kiedy musi ponownie sprawdzić poprawności zasobów przechowywanych w pamięci podręcznej.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> przy użyciu określonego pamięci podręcznej Data synchronizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Data synchronizacji pamięci podręcznej umożliwia określenie Data bezwzględna, gdy musi ponownie sprawdzić poprawności zawartości z pamięci podręcznej. Jeśli wpis pamięci podręcznej ostatniego został sprawdzony ponownie wcześniejsza od daty synchronizacji pamięci podręcznej, występuje ponowna Walidacja z serwerem. Jeśli wpis pamięci podręcznej został sprawdzony ponownie po dacie synchronizacji pamięci podręcznej, nie ma żadnych wymagań ponownego sprawdzania poprawności serwera powodujących, że wpis pamięci podręcznej jest nieprawidłowy wpis z pamięci podręcznej jest używany. Data synchronizacji pamięci podręcznej zostanie ustawiona na datę w przyszłości, wpis jest sprawdzony ponownie za każdym razem, dopóki nie przekazuje Data synchronizacji pamięci podręcznej.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwości <xref:System.Net.Cache.HttpRequestCacheLevel.Default>. <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> Właściwość jest inicjowana na `cacheSyncDate`.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano tworzenie zasady pamięci podręcznej na podstawie daty synchronizacji pamięci podręcznej.  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpRequestCacheLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpRequestCacheLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (level As HttpRequestCacheLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpRequestCacheLevel level);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="level" Type="System.Net.Cache.HttpRequestCacheLevel" />
      </Parameters>
      <Docs>
        <param name="level">
          <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> Wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> przy użyciu określonego pamięci podręcznej zasad.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwości `level`.  
  
 <xref:System.Net.Cache.HttpRequestCacheLevel> Wartość określa, czy buforowanie jest włączone i stosowania pamięci podręcznej. Aby uzyskać dodatkowe informacje, zobacz <xref:System.Net.Cache.HttpRequestCacheLevel> dokumentacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazano tworzenie zasady pamięci podręcznej, które umożliwia znalezione zasoby w pamięci podręcznej do użycia z pamięci podręcznej.  
  
 [!code-cpp[NclSimpleCache#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#12)]
 [!code-csharp[NclSimpleCache#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan ageOrFreshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, ageOrFreshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="ageOrFreshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">Jedną z następujących <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> wartości wyliczenia: <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />, <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" />, lub <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" />.</param>
        <param name="ageOrFreshOrStale">A <see cref="T:System.TimeSpan" /> wartość, która określa ilość czasu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> przy użyciu określonego wieku wartości formantu i godziny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `cacheAgeControl` Wartość określa znaczenie `ageOrFreshOrStale` wartość parametru i jest używany do ustawiania właściwości skojarzonej. Na przykład po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwości ustawiono wartość `ageOrFreshOrStale` parametru.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwości <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, tworzenie na podstawie świeżości minimalne zasady pamięci podręcznej.  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość określona dla <paramref name="cacheAgeControl" /> parametru nie można używać z tego konstruktora.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">
          <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> Wartość.</param>
        <param name="maxAge">A <see cref="T:System.TimeSpan" /> wartość, która określa maksymalny wiek dla zasobów.</param>
        <param name="freshOrStale">A <see cref="T:System.TimeSpan" /> wartość, która określa ilość czasu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> przy użyciu określony maksymalny wiek, wieku formantu wartości i wartości godziny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `cacheAgeControl` Wartość jest używana do interpretowania znaczenie `freshOrStale` wartość parametru i zestaw skojarzonej właściwości. Na przykład po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwości ustawiono wartość `freshOrStale` parametru. Po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> właściwość jest ustawiona, używając wartości `maxAge` parametru i <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość jest ustawiona, używając wartości `freshOrStale` parametru.  
  
 Należy pamiętać, że jeśli nie podasz <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> lub <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> nie ustawiono właściwości.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwości <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano tworzenie zasady pamięci podręcznej na podstawie świeżości minimalny i maksymalny wiek.  
  
 [!code-cpp[NclSimpleCache#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#9)]
 [!code-csharp[NclSimpleCache#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość określona dla <paramref name="cacheAgeControl" /> parametr jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale, valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan, cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">
          <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> Wartość.</param>
        <param name="maxAge">A <see cref="T:System.TimeSpan" /> wartość, która określa maksymalny wiek dla zasobów.</param>
        <param name="freshOrStale">A <see cref="T:System.TimeSpan" /> wartość, która określa ilość czasu.</param>
        <param name="cacheSyncDate">A <see cref="T:System.DateTime" /> obiektu, który określa czas, kiedy musi ponownie sprawdzić poprawności zasobów przechowywanych w pamięci podręcznej.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> przy użyciu określonego maksymalny wiek, wartość formantu wiek, wartość czasu i pamięci podręcznej Data synchronizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `cacheAgeControl` Wartość jest używana do interpretowania znaczenie `freshOrStale` wartość parametru i zestaw skojarzonej właściwości. Na przykład po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwości ustawiono wartość `freshOrStale` parametru. Po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> właściwość jest ustawiona, używając wartości `maxAge` parametru i <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość jest ustawiona, używając wartości `freshOrStale` parametru.  
  
 Należy pamiętać, że jeśli nie podasz <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> lub <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> nie ustawiono właściwości.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> właściwości `cacheSyncDate`i inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwości <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano tworzenie zasady pamięci podręcznej na podstawie świeżości minimalne, maksymalny wiek i Data synchronizacji pamięci podręcznej.  
  
 [!code-cpp[NclSimpleCache#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#10)]
 [!code-csharp[NclSimpleCache#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheSyncDate">
      <MemberSignature Language="C#" Value="public DateTime CacheSyncDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CacheSyncDate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheSyncDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CacheSyncDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera datę synchronizacji pamięci podręcznej dla tego wystąpienia.</summary>
        <value>A <see cref="T:System.DateTime" /> określona wartość Data utworzenia tego wystąpienia. Jeśli nie określono daty, wartość tej właściwości jest <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Data synchronizacji pamięci podręcznej umożliwia określenie Data bezwzględna, gdy musi ponownie sprawdzić poprawności zawartości z pamięci podręcznej. Jeśli wpis pamięci podręcznej ostatniego został sprawdzony ponownie wcześniejsza od daty synchronizacji pamięci podręcznej, występuje ponowna Walidacja z serwerem. Jeśli wpis pamięci podręcznej został sprawdzony ponownie po dacie synchronizacji pamięci podręcznej, nie ma żadnych wymagań ponownego sprawdzania poprawności serwera powodujących, że wpis pamięci podręcznej jest nieprawidłowy wpis z pamięci podręcznej jest używany. Data synchronizacji pamięci podręcznej zostanie ustawiona na datę w przyszłości, wpis jest sprawdzony ponownie za każdym razem, dopóki nie przekazuje Data synchronizacji pamięci podręcznej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia wartość tej właściwości.  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Net.Cache.HttpRequestCacheLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Cache.HttpRequestCacheLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As HttpRequestCacheLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::HttpRequestCacheLevel Level { System::Net::Cache::HttpRequestCacheLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> wartość, która została określona podczas tworzenia tego wystąpienia.</summary>
        <value>A <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> wartość, która określa zachowanie pamięci podręcznej dla zasobów, które zostały utworzone przy użyciu <see cref="T:System.Net.HttpWebRequest" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje zazwyczaj używają <xref:System.Net.Cache.HttpRequestCacheLevel.Default> jako ich poziomu zasad pamięci podręcznej. <xref:System.Net.WebRequest.CachePolicy%2A> Właściwości, jeśli nie `null`, określa zasady pamięci podręcznej dla żądania. Domyślne zasady domeny aplikacji można ustawić za pomocą <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> właściwości lub za pomocą ustawień na maszynie lub pliki konfiguracji aplikacji. Aby uzyskać więcej informacji, zobacz [ &lt;requestCaching —&gt; elementu (ustawienia sieciowe)](~/docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyświetlania wartości tej właściwości.  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan MaxAge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxAge" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxAge As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxAge { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera maksymalny wiek dozwolony dla zasobu zwrócony z pamięci podręcznej.</summary>
        <value>A <see cref="T:System.TimeSpan" /> określona wartość, która ma ustawioną wartość maksymalny wiek utworzenia tego wystąpienia. Jeśli nie określono daty, wartość tej właściwości jest <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli buforowaną kopię zasobu jest starsza niż wartość czasu, zasób musi ponownie sprawdzić poprawności. Określono wartość dla tej właściwości, gdy wystąpienie jest utworzony.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyświetlania wartości tej właściwości.  
  
 [!code-cpp[NclSimpleCache#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#7)]
 [!code-csharp[NclSimpleCache#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxStale">
      <MemberSignature Language="C#" Value="public TimeSpan MaxStale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxStale" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxStale As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxStale { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość maksymalna nieaktualności jest dozwolony dla zasobu zwrócony z pamięci podręcznej.</summary>
        <value>A <see cref="T:System.TimeSpan" /> określona wartość, która jest ustawiona na wartość maksymalną nieaktualności utworzenia tego wystąpienia. Jeśli nie określono daty, wartość tej właściwości jest <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa czas, po wygaśnięciu zawartości, w którym jest dopuszczalne buforowaną kopię zasobu. Określono wartość dla tej właściwości, gdy wystąpienie jest utworzony.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyświetlania wartości tej właściwości.  
  
 [!code-cpp[NclSimpleCache#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#6)]
 [!code-csharp[NclSimpleCache#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinFresh">
      <MemberSignature Language="C#" Value="public TimeSpan MinFresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MinFresh" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinFresh As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MinFresh { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalne świeżości, który jest dozwolony dla zasobu zwrócony z pamięci podręcznej.</summary>
        <value>A <see cref="T:System.TimeSpan" /> określona wartość, która określa minimalną świeżości utworzenia tego wystąpienia. Jeśli nie określono daty, wartość tej właściwości jest <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość określa czas wygaśnięcia zawartości, w którym jest dopuszczalne buforowaną kopię zasobu. Określono wartość dla tej właściwości, gdy wystąpienie jest utworzony.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wyświetlania wartości tej właściwości.  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację ciągu tego wystąpienia.</summary>
        <returns>A <see cref="T:System.String" /> wartości, która zawiera wartości właściwości dla tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg zawiera etykietę, która identyfikuje właściwość znakiem dwukropka (":") i wartość. Właściwości są oddzielone spacją.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wywołanie tej metody.  
  
 [!code-cpp[NclSimpleCache#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#1)]
 [!code-csharp[NclSimpleCache#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>