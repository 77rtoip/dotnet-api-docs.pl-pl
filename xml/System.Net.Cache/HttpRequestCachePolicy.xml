<Type Name="HttpRequestCachePolicy" FullName="System.Net.Cache.HttpRequestCachePolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cba77c1e7532b0ba4bee8c08fbc304601235d66e" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39871351" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpRequestCachePolicy : System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpRequestCachePolicy extends System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.Cache.HttpRequestCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpRequestCachePolicy&#xA;Inherits RequestCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestCachePolicy : System::Net::Cache::RequestCachePolicy" />
  <TypeSignature Language="F#" Value="type HttpRequestCachePolicy = class&#xA;    inherit RequestCachePolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Cache.RequestCachePolicy</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa aplikację wymagania buforowania dla zasobów pobranych przy użyciu <see cref="T:System.Net.HttpWebRequest" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy określić domyślne zasady pamięci podręcznej dla aplikacji za pomocą <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> pliki konfiguracji właściwości lub aplikacji lub maszyny. Aby uzyskać więcej informacji, zobacz [ &lt;requestCaching —&gt; — Element (ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md).  
  
 Zasady pamięci podręcznej dla pojedynczego żądania można określić za pomocą <xref:System.Net.WebRequest.CachePolicy%2A> właściwości.  
  
 Buforowanie dla usług sieci Web nie jest obsługiwane.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy pamięć podręczną domyślnych zasad domeny aplikacji i zastępuje ją na żądanie.  
  
 [!code-cpp[NclSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NclSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie zasad pamięci podręcznej, za pomocą tego konstruktora.  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(DateTime cacheSyncDate);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : DateTime -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy cacheSyncDate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheSyncDate">Element <see cref="T:System.DateTime" /> obiektu, który określa czas, kiedy zasobów przechowywanych w pamięci podręcznej musi być sprawdzony ponownie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> przy użyciu Data synchronizacji określonego pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Data synchronizacji pamięci podręcznej umożliwia określenie Data bezwzględna po zawartości z pamięci podręcznej musi być sprawdzony ponownie. Jeśli wpis pamięci podręcznej ostatniego został sprawdzony ponownie przed datą synchronizacji pamięci podręcznej, następuje ponowne sprawdzenie poprawności na serwerze. Jeśli wpis pamięci podręcznej został sprawdzony ponownie po dacie synchronizacji pamięci podręcznej, nie ma żadnych wymagań ponownego sprawdzania poprawności serwera, które należy wprowadzić nieprawidłowy wpis pamięci podręcznej zapisu z pamięci podręcznej jest używany. Data synchronizacji pamięci podręcznej jest ustawiony na datę wypadającą w przyszłości, wpis jest sprawdzony ponownie za każdym razem, gdy żądanie, dopóki nie przekazuje Data synchronizacji pamięci podręcznej.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość <xref:System.Net.Cache.HttpRequestCacheLevel.Default>. <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> Właściwość jest inicjowana do `cacheSyncDate`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, tworząc zasady pamięci podręcznej na podstawie daty synchronizacji pamięci podręcznej.  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpRequestCacheLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpRequestCacheLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (level As HttpRequestCacheLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpRequestCacheLevel level);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpRequestCacheLevel -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy level" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="level" Type="System.Net.Cache.HttpRequestCacheLevel" />
      </Parameters>
      <Docs>
        <param name="level">
          <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> Wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> przy użyciu zasad określony pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość `level`.  
  
 <xref:System.Net.Cache.HttpRequestCacheLevel> Wartość określa, czy włączone jest buforowanie, a kiedy używać pamięci podręcznej. Aby uzyskać więcej informacji, zobacz <xref:System.Net.Cache.HttpRequestCacheLevel> dokumentacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, tworząc zasady pamięci podręcznej, umożliwiająca zasobów znaleziony w pamięci podręcznej do użycia z pamięci podręcznej.  
  
 [!code-cpp[NclSimpleCache#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#12)]
 [!code-csharp[NclSimpleCache#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan ageOrFreshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, ageOrFreshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, ageOrFreshOrStale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="ageOrFreshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">Jedną z następujących <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> wartości wyliczenia: <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />, <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" />, lub <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" />.</param>
        <param name="ageOrFreshOrStale">A <see cref="T:System.TimeSpan" /> wartość, która określa ilość czasu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> przy użyciu wartości kontrolki i godziny określonej wieku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `cacheAgeControl` Wartość określa znaczenie `ageOrFreshOrStale` wartość parametru i służy do ustawiania właściwości skojarzonej. Na przykład po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość jest ustawiona na wartość `ageOrFreshOrStale` parametru.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, tworzenia zasad pamięci podręcznej na podstawie świeżości minimalnej.  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość określona dla <paramref name="cacheAgeControl" /> nie można użyć parametru za pomocą tego konstruktora.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan * TimeSpan -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, maxAge, freshOrStale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">
          <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> Wartość.</param>
        <param name="maxAge">A <see cref="T:System.TimeSpan" /> wartość, która określa maksymalny wiek dla zasobów.</param>
        <param name="freshOrStale">A <see cref="T:System.TimeSpan" /> wartość, która określa ilość czasu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy przy użyciu określony maksymalny wiek, wartość kontroli wieku i wartości godziny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `cacheAgeControl` Wartość jest używana do interpretacji znaczenie `freshOrStale` wartość parametru i ustaw właściwości skojarzonej. Na przykład po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość jest ustawiona na wartość `freshOrStale` parametru. Po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> właściwość można ustawić przy użyciu wartości `maxAge` parametru i <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość można ustawić przy użyciu wartości `freshOrStale` parametru.  
  
 Należy pamiętać, że jeśli nie określisz <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> lub <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> nie ustawiono właściwości.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, tworząc zasady pamięci podręcznej na podstawie świeżości minimalny i maksymalny wiek.  
  
 [!code-cpp[NclSimpleCache#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#9)]
 [!code-csharp[NclSimpleCache#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość określona dla <paramref name="cacheAgeControl" /> parametr jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale, valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan, cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan * TimeSpan * DateTime -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, maxAge, freshOrStale, cacheSyncDate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">
          <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> Wartość.</param>
        <param name="maxAge">A <see cref="T:System.TimeSpan" /> wartość, która określa maksymalny wiek dla zasobów.</param>
        <param name="freshOrStale">A <see cref="T:System.TimeSpan" /> wartość, która określa ilość czasu.</param>
        <param name="cacheSyncDate">Element <see cref="T:System.DateTime" /> obiektu, który określa czas, kiedy zasobów przechowywanych w pamięci podręcznej musi być sprawdzony ponownie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> przy użyciu określony maksymalny wiek, wartość kontroli wieku, wartość czasu i Data synchronizacji w pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `cacheAgeControl` Wartość jest używana do interpretacji znaczenie `freshOrStale` wartość parametru i ustaw właściwości skojarzonej. Na przykład po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość jest ustawiona na wartość `freshOrStale` parametru. Po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> właściwość można ustawić przy użyciu wartości `maxAge` parametru i <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość można ustawić przy użyciu wartości `freshOrStale` parametru.  
  
 Należy pamiętać, że jeśli nie określisz <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> lub <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>, <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> nie ustawiono właściwości.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> właściwości `cacheSyncDate`i inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, tworząc zasady pamięci podręcznej na podstawie świeżości minimalny, maksymalny wiek i Data synchronizacji pamięci podręcznej.  
  
 [!code-cpp[NclSimpleCache#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#10)]
 [!code-csharp[NclSimpleCache#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheSyncDate">
      <MemberSignature Language="C#" Value="public DateTime CacheSyncDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CacheSyncDate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheSyncDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CacheSyncDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheSyncDate : DateTime" Usage="System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera datę synchronizacji pamięci podręcznej dla tego wystąpienia.</summary>
        <value>A <see cref="T:System.DateTime" /> wartość do wartości typu date określone podczas tworzenia tego wystąpienia. Jeśli nie określono daty, wartość tej właściwości jest <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Data synchronizacji pamięci podręcznej umożliwia określenie Data bezwzględna po zawartości z pamięci podręcznej musi być sprawdzony ponownie. Jeśli wpis pamięci podręcznej ostatniego został sprawdzony ponownie przed datą synchronizacji pamięci podręcznej, następuje ponowne sprawdzenie poprawności na serwerze. Jeśli wpis pamięci podręcznej został sprawdzony ponownie po dacie synchronizacji pamięci podręcznej, nie ma żadnych wymagań ponownego sprawdzania poprawności serwera, które należy wprowadzić nieprawidłowy wpis pamięci podręcznej zapisu z pamięci podręcznej jest używany. Data synchronizacji pamięci podręcznej jest ustawiony na datę wypadającą w przyszłości, wpis jest sprawdzony ponownie za każdym razem, gdy żądanie, dopóki nie przekazuje Data synchronizacji pamięci podręcznej.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartość tej właściwości.  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Net.Cache.HttpRequestCacheLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Cache.HttpRequestCacheLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As HttpRequestCacheLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::HttpRequestCacheLevel Level { System::Net::Cache::HttpRequestCacheLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Net.Cache.HttpRequestCacheLevel" Usage="System.Net.Cache.HttpRequestCachePolicy.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> wartość, która została określona podczas tworzenia tego wystąpienia.</summary>
        <value>A <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> wartość, która określa zachowanie pamięci podręcznej dla zasobów, które zostały utworzone przy użyciu <see cref="T:System.Net.HttpWebRequest" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje zazwyczaj używają <xref:System.Net.Cache.HttpRequestCacheLevel.Default> jako ich poziom zasad pamięci podręcznej. <xref:System.Net.WebRequest.CachePolicy%2A> Właściwość, jeśli nie `null`, określa zasady pamięci podręcznej dla żądania. Domyślne zasady domeny aplikacji można ustawić za pomocą <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> właściwości lub za pomocą ustawień na maszynie lub pliki konfiguracyjne aplikacji. Aby uzyskać więcej informacji, zobacz [ &lt;requestCaching —&gt; — Element (ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wyświetlanie wartość tej właściwości.  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan MaxAge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxAge" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxAge As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxAge { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxAge : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MaxAge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera maksymalny wiek dozwolony dla zasobu zwrócony z pamięci podręcznej.</summary>
        <value>A <see cref="T:System.TimeSpan" /> wartość, która ma ustawioną wartość maksymalny wiek określone podczas tworzenia tego wystąpienia. Jeśli nie określono daty, wartość tej właściwości jest <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli pamięci podręcznej kopię zasobu jest starsza niż wartość w określonym czasie, sprawdzony musi ponownie zasobu. Wartość tej właściwości jest określona, gdy wystąpienie jest konstruowany.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wyświetlanie wartość tej właściwości.  
  
 [!code-cpp[NclSimpleCache#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#7)]
 [!code-csharp[NclSimpleCache#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxStale">
      <MemberSignature Language="C#" Value="public TimeSpan MaxStale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxStale" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxStale As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxStale { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxStale : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MaxStale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość maksymalna nieaktualność, który jest dozwolony dla zasobu zwrócony z pamięci podręcznej.</summary>
        <value>A <see cref="T:System.TimeSpan" /> wartość, która ma ustawioną wartość maksymalna nieaktualność określone podczas tworzenia tego wystąpienia. Jeśli nie określono daty, wartość tej właściwości jest <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa ilość czasu, po wygaśnięciu zawartości, w którym jest dopuszczalne pamięci podręcznej kopię zasobu. Wartość tej właściwości jest określona, gdy wystąpienie jest konstruowany.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wyświetlanie wartość tej właściwości.  
  
 [!code-cpp[NclSimpleCache#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#6)]
 [!code-csharp[NclSimpleCache#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinFresh">
      <MemberSignature Language="C#" Value="public TimeSpan MinFresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MinFresh" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinFresh As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MinFresh { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MinFresh : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MinFresh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalna świeżość, który jest dozwolony dla zasobu zwrócony z pamięci podręcznej.</summary>
        <value>A <see cref="T:System.TimeSpan" /> wartość, która określa minimalna świeżość określone podczas tworzenia tego wystąpienia. Jeśli nie określono daty, wartość tej właściwości jest <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość określa ilość czasu wygaśnięcia zawartości, w którym jest dopuszczalne pamięci podręcznej kopię zasobu. Wartość tej właściwości jest określona, gdy wystąpienie jest konstruowany.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wyświetlanie wartość tej właściwości.  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="httpRequestCachePolicy.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację ciągu tego wystąpienia.</summary>
        <returns>A <see cref="T:System.String" /> wartość, która zawiera wartości właściwości dla tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg zawiera etykietę, która identyfikuje właściwość z dwukropkiem (":") i wartość. Właściwości są oddzielone spacją.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie tej metody.  
  
 [!code-cpp[NclSimpleCache#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#1)]
 [!code-csharp[NclSimpleCache#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>