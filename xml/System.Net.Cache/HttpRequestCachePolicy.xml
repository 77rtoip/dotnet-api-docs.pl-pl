<Type Name="HttpRequestCachePolicy" FullName="System.Net.Cache.HttpRequestCachePolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="691f825661eb5e45714776eb01e96940b1175989" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69115536" /></Metadata><TypeSignature Language="C#" Value="public class HttpRequestCachePolicy : System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpRequestCachePolicy extends System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.Cache.HttpRequestCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpRequestCachePolicy&#xA;Inherits RequestCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestCachePolicy : System::Net::Cache::RequestCachePolicy" />
  <TypeSignature Language="F#" Value="type HttpRequestCachePolicy = class&#xA;    inherit RequestCachePolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Cache.RequestCachePolicy</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje wymagania dotyczące buforowania aplikacji dla zasobów uzyskanych za pomocą <see cref="T:System.Net.HttpWebRequest" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić domyślne zasady pamięci podręcznej dla aplikacji przy użyciu <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> właściwości lub plików konfiguracji aplikacji lub komputera. Aby uzyskać więcej informacji, [ &lt;zobacz&gt; requestCaching element (Ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md).  
  
 Zasady pamięci podręcznej dla poszczególnych żądań można określić przy użyciu <xref:System.Net.WebRequest.CachePolicy%2A> właściwości.  
  
 Buforowanie dla usług sieci Web nie jest obsługiwane.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy domyślne zasady pamięci podręcznej dla domeny aplikacji i zastępuje je dla żądania.  
  
 [!code-cpp[NclSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NclSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/network-programming/cache-management-for-network-applications.md">Zarządzanie pamięcią podręczną dla aplikacji sieciowych</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość do <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak ustawić zasady pamięci podręcznej za pomocą tego konstruktora.  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(DateTime cacheSyncDate);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : DateTime -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy cacheSyncDate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheSyncDate"><see cref="T:System.DateTime" /> Obiekt, który określa czas, w którym zasoby przechowywane w pamięci podręcznej muszą zostać ponownie zweryfikowane.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy przy użyciu określonej daty synchronizacji pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Data synchronizacji pamięci podręcznej pozwala określić datę bezwzględną w przypadku konieczności ponownego zweryfikowania zawartości w pamięci podręcznej. Jeśli wpis pamięci podręcznej został ostatnio ponownie sprawdzony przed datą synchronizacji pamięci podręcznej, następuje ponowne sprawdzenie poprawności z serwerem. Jeśli wpis pamięci podręcznej został ponownie zweryfikowany po dacie synchronizacji pamięci podręcznej i nie ma wymagań dotyczących ponownego sprawdzania poprawności serwera, które wprowadzają nieprawidłowy wpis w pamięci podręcznej, zostanie użyty wpis z pamięci. Jeśli Data synchronizacji pamięci podręcznej jest ustawiona na datę przyszłą, wpis zostanie ponownie zweryfikowany za każdym razem, gdy żądanie zostanie wysłane do momentu, aż upłynie Data synchronizacji pamięci podręcznej.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość do <xref:System.Net.Cache.HttpRequestCacheLevel.Default>. Właściwość jest inicjowana do `cacheSyncDate`. <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Tworzenie zasad pamięci podręcznej na podstawie daty synchronizacji pamięci podręcznej.  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpRequestCacheLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpRequestCacheLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (level As HttpRequestCacheLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpRequestCacheLevel level);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpRequestCacheLevel -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy level" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="level" Type="System.Net.Cache.HttpRequestCacheLevel" />
      </Parameters>
      <Docs>
        <param name="level"><see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> Wartość.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy przy użyciu określonych zasad pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość do `level`.  
  
 <xref:System.Net.Cache.HttpRequestCacheLevel> Wartość określa, czy buforowanie jest włączone i kiedy można używać pamięci podręcznej. Aby uzyskać dodatkowe informacje, zapoznaj się z <xref:System.Net.Cache.HttpRequestCacheLevel> dokumentacją.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Tworzenie zasad pamięci podręcznej, które umożliwiają zasobom znajdującym się w pamięci podręcznej użycie z pamięci podręcznej.  
  
 [!code-cpp[NclSimpleCache#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#12)]
 [!code-csharp[NclSimpleCache#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan ageOrFreshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, ageOrFreshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, ageOrFreshOrStale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="ageOrFreshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">Jedna z następujących <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> wartości wyliczenia: <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />, <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" />, lub <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" />.</param>
        <param name="ageOrFreshOrStale"><see cref="T:System.TimeSpan" /> Wartość określająca ilość czasu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy przy użyciu określonych wartości kontroli wieku i czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość definiuje znaczenie `ageOrFreshOrStale` wartości parametru i służy do ustawiania skojarzonej właściwości. `cacheAgeControl` Na przykład po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale> <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość jest ustawiana `ageOrFreshOrStale` na wartość parametru.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość do <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Tworzenie zasad pamięci podręcznej na podstawie minimalnej wartości Aktualności.  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość określona dla <paramref name="cacheAgeControl" /> parametru nie może być używana z tym konstruktorem.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan * TimeSpan -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, maxAge, freshOrStale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl"><see cref="T:System.Net.Cache.HttpCacheAgeControl" /> Wartość.</param>
        <param name="maxAge"><see cref="T:System.TimeSpan" /> Wartość określająca maksymalny wiek zasobów.</param>
        <param name="freshOrStale"><see cref="T:System.TimeSpan" /> Wartość określająca ilość czasu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy przy użyciu określonego maksymalnego wieku, wartości kontroli wieku i wartości czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość jest używana do interpretowania znaczenia `freshOrStale` wartości parametru i ustawiania skojarzonej właściwości. `cacheAgeControl` Na przykład po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale> <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość jest ustawiana `freshOrStale` na wartość parametru. Po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> właściwość jest ustawiana `maxAge` za pomocą wartości parametru, a <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość jest ustawiana za pomocą wartości `freshOrStale` parametru.  
  
 Należy pamiętać, że jeśli <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> nie <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>określono lub <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> , właściwość nie jest ustawiona.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość do <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Tworzenie zasad pamięci podręcznej na podstawie minimalnej wartości Aktualności i maksymalnego wieku.  
  
 [!code-cpp[NclSimpleCache#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#9)]
 [!code-csharp[NclSimpleCache#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość określona dla <paramref name="cacheAgeControl" /> parametru jest nieprawidłowa.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale, valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan, cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan * TimeSpan * DateTime -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, maxAge, freshOrStale, cacheSyncDate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl"><see cref="T:System.Net.Cache.HttpCacheAgeControl" /> Wartość.</param>
        <param name="maxAge"><see cref="T:System.TimeSpan" /> Wartość określająca maksymalny wiek zasobów.</param>
        <param name="freshOrStale"><see cref="T:System.TimeSpan" /> Wartość określająca ilość czasu.</param>
        <param name="cacheSyncDate"><see cref="T:System.DateTime" /> Obiekt, który określa czas, w którym zasoby przechowywane w pamięci podręcznej muszą zostać ponownie zweryfikowane.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> klasy przy użyciu określonego maksymalnego wieku, wartości kontroli wieku, wartości czasu i daty synchronizacji pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość jest używana do interpretowania znaczenia `freshOrStale` wartości parametru i ustawiania skojarzonej właściwości. `cacheAgeControl` Na przykład po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale> <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość jest ustawiana `freshOrStale` na wartość parametru. Po określeniu <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> właściwość jest ustawiana `maxAge` za pomocą wartości parametru, a <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> właściwość jest ustawiana za pomocą wartości `freshOrStale` parametru.  
  
 Należy pamiętać, że jeśli <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> nie <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>określono lub <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> , właściwość nie jest ustawiona.  
  
 Ten konstruktor inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> właściwość do `cacheSyncDate`i inicjuje <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> właściwość w <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Tworzenie zasad pamięci podręcznej na podstawie minimalnej wartości Aktualności, maksymalnego wieku i daty synchronizacji pamięci podręcznej.  
  
 [!code-cpp[NclSimpleCache#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#10)]
 [!code-csharp[NclSimpleCache#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheSyncDate">
      <MemberSignature Language="C#" Value="public DateTime CacheSyncDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CacheSyncDate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheSyncDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CacheSyncDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheSyncDate : DateTime" Usage="System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera datę synchronizacji pamięci podręcznej dla tego wystąpienia.</summary>
        <value><see cref="T:System.DateTime" /> Wartość ustawiona na datę określoną podczas tworzenia tego wystąpienia. Jeśli Data nie została określona, wartość tej właściwości to <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Data synchronizacji pamięci podręcznej pozwala określić datę bezwzględną w przypadku konieczności ponownego zweryfikowania zawartości w pamięci podręcznej. Jeśli wpis pamięci podręcznej został ostatnio ponownie sprawdzony przed datą synchronizacji pamięci podręcznej, następuje ponowne sprawdzenie poprawności z serwerem. Jeśli wpis pamięci podręcznej został ponownie zweryfikowany po dacie synchronizacji pamięci podręcznej i nie ma wymagań dotyczących ponownego sprawdzania poprawności serwera, które wprowadzają nieprawidłowy wpis w pamięci podręcznej, zostanie użyty wpis z pamięci. Jeśli Data synchronizacji pamięci podręcznej jest ustawiona na datę przyszłą, wpis zostanie ponownie zweryfikowany za każdym razem, gdy żądanie zostanie wysłane do momentu, aż upłynie Data synchronizacji pamięci podręcznej.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartość tej właściwości.  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Net.Cache.HttpRequestCacheLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Cache.HttpRequestCacheLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As HttpRequestCacheLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::HttpRequestCacheLevel Level { System::Net::Cache::HttpRequestCacheLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Net.Cache.HttpRequestCacheLevel" Usage="System.Net.Cache.HttpRequestCachePolicy.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> Pobiera wartość określoną podczas tworzenia tego wystąpienia.</summary>
        <value>Wartość określająca zachowanie pamięci podręcznej dla zasobów uzyskanych za <see cref="T:System.Net.HttpWebRequest" /> pomocą obiektów. <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje zwykle używają <xref:System.Net.Cache.HttpRequestCacheLevel.Default> ich poziomu zasad pamięci podręcznej. Właściwość, jeśli nie `null`, określa zasady pamięci podręcznej stosowane dla żądania. <xref:System.Net.WebRequest.CachePolicy%2A> Zasady domyślne dla domeny aplikacji można ustawić przy użyciu <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> właściwości lub ustawień w plikach konfiguracji komputera lub aplikacji. Aby uzyskać więcej informacji, [ &lt;zobacz&gt; requestCaching element (Ustawienia sieci)](~/docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Wyświetlanie wartości tej właściwości.  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan MaxAge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxAge" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxAge As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxAge { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxAge : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MaxAge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera maksymalny wiek dozwolony dla zasobu zwróconego z pamięci podręcznej.</summary>
        <value><see cref="T:System.TimeSpan" /> Wartość, która jest ustawiona na maksymalną wartość wieku określoną podczas tworzenia tego wystąpienia. Jeśli Data nie została określona, wartość tej właściwości to <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli buforowana kopia zasobu jest starsza niż określona wartość czasu, należy ponownie sprawdzić poprawność zasobu. Wartość tej właściwości jest określana podczas konstruowania wystąpienia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Wyświetlanie wartości tej właściwości.  
  
 [!code-cpp[NclSimpleCache#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#7)]
 [!code-csharp[NclSimpleCache#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxStale">
      <MemberSignature Language="C#" Value="public TimeSpan MaxStale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxStale" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxStale As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxStale { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxStale : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MaxStale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera maksymalną wartość nieodświeżoną, która jest dozwolona dla zasobu zwróconego z pamięci podręcznej.</summary>
        <value><see cref="T:System.TimeSpan" /> Wartość, która jest ustawiona na maksymalną wartość nieodświeżoną określoną podczas tworzenia tego wystąpienia. Jeśli Data nie została określona, wartość tej właściwości to <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa czas, po jakim wygasa zawartość w pamięci podręcznej, w której jest akceptowalna buforowana kopia zasobu. Wartość tej właściwości jest określana podczas konstruowania wystąpienia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Wyświetlanie wartości tej właściwości.  
  
 [!code-cpp[NclSimpleCache#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#6)]
 [!code-csharp[NclSimpleCache#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinFresh">
      <MemberSignature Language="C#" Value="public TimeSpan MinFresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MinFresh" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinFresh As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MinFresh { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MinFresh : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MinFresh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalną wartość Aktualności, która jest dozwolona dla zasobu zwróconego z pamięci podręcznej.</summary>
        <value><see cref="T:System.TimeSpan" /> Wartość określająca minimalną świeżość określoną podczas tworzenia tego wystąpienia. Jeśli Data nie została określona, wartość tej właściwości to <see cref="F:System.DateTime.MinValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość określa czas przed wygaśnięciem zawartości, podczas którego jest akceptowalna buforowana kopia zasobu. Wartość tej właściwości jest określana podczas konstruowania wystąpienia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Wyświetlanie wartości tej właściwości.  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="httpRequestCachePolicy.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg reprezentujący to wystąpienie.</summary>
        <returns><see cref="T:System.String" /> Wartość, która zawiera wartości właściwości dla tego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg zawiera etykietę, która identyfikuje właściwość, po której następuje dwukropek (":") i wartość. Właściwości są oddzielone pojedynczym odstępem.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie tej metody.  
  
 [!code-cpp[NclSimpleCache#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#1)]
 [!code-csharp[NclSimpleCache#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
