<Type Name="FormsAuthentication" FullName="System.Web.Security.FormsAuthentication">
  <Metadata><Meta Name="ms.openlocfilehash" Value="007c4f529bbabf3c1eaae7a25ce36d3139a7ea1d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69135549" /></Metadata><TypeSignature Language="C#" Value="public sealed class FormsAuthentication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FormsAuthentication extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.FormsAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FormsAuthentication" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormsAuthentication sealed" />
  <TypeSignature Language="F#" Value="type FormsAuthentication = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zarządza usługami uwierzytelniania formularzy dla aplikacji sieci Web. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uwierzytelnianie formularzy umożliwia weryfikację użytkownika i hasła dla aplikacji sieci Web, które nie wymagają uwierzytelniania systemu Windows. Dzięki uwierzytelnianiu formularzy informacje o użytkowniku są przechowywane w zewnętrznym źródle danych, takim <xref:System.Web.Security.Membership> jak baza danych lub w pliku konfiguracyjnym aplikacji. Po uwierzytelnieniu użytkownika uwierzytelnianie formularzy zachowuje bilet uwierzytelniania w pliku cookie lub w adresie URL, dzięki czemu uwierzytelniony użytkownik nie musi podawać poświadczeń dla każdego żądania.  
  
 Uwierzytelnianie formularzy jest włączane przez ustawienie `mode` atrybutu elementu konfiguracji [uwierzytelniania](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/532aee0e(v%3dvs.100)) na `Forms`. Można wymagać, aby wszystkie żądania do aplikacji zawierały prawidłowy bilet uwierzytelniania użytkownika przy użyciu elementu konfiguracji [autoryzacji](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/8d82143t(v%3dvs.100)) , aby odmówić żądania dowolnego nieznanego użytkownika, jak pokazano w poniższym przykładzie.  
  
```  
<system.web>  
  <authentication mode="Forms">  
    <forms loginUrl="login.aspx" />  
  </authentication>  
  <authorization>  
    <deny users="?" />  
  </authorization>  
</system.web>  
```  
  
 W poprzednim przykładzie każde żądanie dotyczące strony ASP.NET, która jest częścią aplikacji, wymaga prawidłowej nazwy użytkownika, która jest dostarczana przez uwierzytelnianie formularzy. Jeśli nazwa użytkownika nie istnieje, żądanie jest przekierowywane do skonfigurowanego <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 <xref:System.Web.Security.FormsAuthentication> Klasa zapewnia dostęp do metod i właściwości, których można użyć w aplikacji, która uwierzytelnia użytkowników. Metoda przekierowuje przeglądarkę do skonfigurowanego <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> dla użytkowników, aby zalogować się do aplikacji. <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Metoda przekierowuje uwierzytelnionego użytkownika z powrotem do oryginalnego chronionego adresu URL, którego zażądano lub <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>do. <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Istnieją także metody umożliwiające zarządzanie biletami uwierzytelniania formularzy, w razie potrzeby.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia plik Web. config dla aplikacji ASP.NET, która korzysta z dostawcy członkostwa ASP.NET na potrzeby uwierzytelniania formularzy i wymaga uwierzytelnienia wszystkich użytkowników.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 Poniższy przykład kodu przedstawia stronę logowania dla aplikacji ASP.NET, która korzysta z uwierzytelniania formularzy i członkostwa w ASP.NET.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">Aby użyć <see cref="T:System.Web.Security.FormsAuthentication" /> klasy w środowisku hostowanym. Wartość żądania: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Wartość uprawnienia: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <related type="Article" href="https://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">Dostawca uwierzytelniania formularzy</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthentication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormsAuthentication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Security.FormsAuthentication" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor nie jest przeznaczony do użycia z Twojego kodu.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static bool Authenticate (string name, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Authenticate(string name, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (name As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Authenticate(System::String ^ name, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * string -&gt; bool" Usage="System.Web.Security.FormsAuthentication.Authenticate (name, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.ValidateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa użytkownika.</param>
        <param name="password">Hasło użytkownika.</param>
        <summary>Sprawdza poprawność nazwy użytkownika i hasła do poświadczeń przechowywanych w pliku konfiguracyjnym aplikacji.</summary>
        <returns><see langword="true" />Jeśli nazwa użytkownika i hasło są prawidłowe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda uwierzytelnianie weryfikuje poświadczenia użytkownika, które są przechowywane w sekcji [poświadczenia](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e01fc50a(v%3dvs.100)) w pliku konfiguracyjnym aplikacji. Alternatywnie możesz użyć członkostwa ASP.NET do przechowywania poświadczeń użytkownika i wywoływać, <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> aby zweryfikować poświadczenia. Aby uzyskać więcej informacji, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 W celu zwiększenia bezpieczeństwa można szyfrować hasła przechowywane w pliku konfiguracyjnym aplikacji przy użyciu <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia poświadczenia użytkownika przechowywane w pliku Web. config aplikacji. Wartości hasła zostały zmieszane przy użyciu <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> metody.  
  
 `<authentication mode="Forms">`  
  
 `<forms loginUrl="login.aspx">`  
  
 `<credentials passwordFormat="SHA1">`  
  
 `<user name="user1"   password="27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C" />`  
  
 `<user name="user2"   password="D108F80936F78DFDD333141EBC985B0233A30C7A" />`  
  
 `<user name="user3" password="7BDB09781A3F23885CD43177C0508B375CB1B7E9"/>`  
  
 `</credentials>`  
  
 `</forms>`  
  
 `</authentication>`  
  
 Poniższy przykład kodu przedstawia stronę logowania, która używa <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> metody do weryfikowania poświadczeń użytkownika.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieDomain">
      <MemberSignature Language="C#" Value="public static string CookieDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CookieDomain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieDomain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CookieDomain { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieDomain : string" Usage="System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość domeny pliku cookie uwierzytelniania formularzy.</summary>
        <value>Plik <see cref="P:System.Web.HttpCookie.Domain" /> cookie z uwierzytelnianiem formularzy. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy `domain` użyciu atrybutu elementu konfiguracji [formularzy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) . <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> Wartość <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> właściwości <xref:System.Web.HttpCookie.Domain%2A> określa, że plik cookie będzie używany dla programu.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia `domain` atrybut w pliku Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    domain="contoso.com" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy aplikacja jest skonfigurowana do uwierzytelniania formularzy bez plików cookie.</summary>
        <value>Jedna z <see cref="T:System.Web.HttpCookieMode" /> wartości, która wskazuje, czy aplikacja jest skonfigurowana pod kątem uwierzytelniania formularzy bez plików cookie. Wartość domyślna to <see cref="F:System.Web.HttpCookieMode.UseDeviceProfile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość odzwierciedla wartość `cookieless` atrybutu elementu konfiguracji [formularzy.](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> Właściwość określa, <xref:System.Web.Security.FormsAuthenticationTicket> czy wartość będzie przechowywana w pliku cookie sesji w <xref:System.Web.HttpRequest.QueryString%2A> przeglądarce, czy przechowywana we właściwości. <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>  
  
> [!NOTE]
>  <xref:System.Web.Security.FormsAuthenticationTicket> Gdy wartość jest przechowywana w identyfikatorze URI, Długość wygenerowanego identyfikatora URI może być dłuższa niż maksymalna dozwolona długość. Najprawdopodobniej występuje, <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> gdy właściwość jest ustawiona na nazwę aplikacji, a nazwa aplikacji jest długa (40 lub więcej znaków), jeśli nazwy użytkowników w aplikacji są długie lub długie <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> <xref:System.Web.Security.FormsAuthenticationTicket> ciągi są przechowywane w wartościami. Jeśli wygenerowany identyfikator URI jest zbyt długi, serwer sieci Web zwróci `400 - Bad Request` błąd.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia `cookieless` atrybut na `AutoDetect` w pliku Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="AutoDetect" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieSameSite">
      <MemberSignature Language="C#" Value="public static System.Web.SameSiteMode CookieSameSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.SameSiteMode CookieSameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieSameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::SameSiteMode CookieSameSite { System::Web::SameSiteMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieSameSite : System.Web.SameSiteMode" Usage="System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość atrybutu SameSite pliku cookie.</summary>
        <value>Jedna z wartości wyliczenia, która reprezentuje Tryb wymuszania pliku cookie. Wartość domyślna to <see cref="F:System.Web.SameSiteMode.Lax" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiesSupported">
      <MemberSignature Language="C#" Value="public static bool CookiesSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CookiesSupported" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookiesSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CookiesSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiesSupported : bool" Usage="System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy aplikacja jest skonfigurowana do obsługi uwierzytelniania formularzy bez plików cookie.</summary>
        <value><see langword="false" />Jeśli aplikacja jest skonfigurowana do obsługi uwierzytelniania formularzy bez plików cookie; w przeciwnym razie. <see langword="true" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zwraca wartość na podstawie <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> wartości i możliwości przeglądarki. <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>  
  
-   Jeśli właściwość jest ustawiona na <xref:System.Web.HttpCookieMode.UseCookies>, właściwość zwróci <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> `true`wartość. <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>  
  
-   Jeśli właściwość jest ustawiona na <xref:System.Web.HttpCookieMode.UseUri>, właściwość zwróci <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> `false`wartość. <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>  
  
-   <xref:System.Web.HttpCookieMode.AutoDetect> <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> `true` `false`Jeśli właściwość jest ustawiona na, właściwość zwróci wartość, jeśli przeglądarka obsługuje pliki cookie i pliki cookie są włączone. w przeciwnym razie właściwość zwróci wartość <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>. <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>  
  
-   <xref:System.Web.HttpCookieMode.UseDeviceProfile> <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> <xref:System.Web.HttpRequest.Browser%2A> <xref:System.Web.HttpContext.Request%2A> Jeśli właściwość jest ustawiona na`true` , właściwość zwróci wartość, jeśli dla<xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> bieżącej obsługuje zarówno pliki cookie, jak i przekierowania z plikami cookie; w przeciwnym razie <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> Właściwość zwróci wartość `false`.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia `cookieless` atrybut na <xref:System.Web.HttpCookieMode.UseUri> w pliku Web. config. Ta konfiguracja spowoduje <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> zwrócenie `false`właściwości.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket Decrypt(string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Decrypt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decrypt (encryptedTicket As String) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ Decrypt(System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="static member Decrypt : string -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.Decrypt encryptedTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedTicket">Zaszyfrowanego biletu uwierzytelniania.</param>
        <summary><see cref="T:System.Web.Security.FormsAuthenticationTicket" /> Tworzy obiekt na podstawie zaszyfrowanego biletu uwierzytelniania formularza przesłanego do metody.</summary>
        <returns>Element <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> obiektu. Jeśli parametr nie jest prawidłowym biletem, <see langword="null" /> jest zwracany. <paramref name="encryptedTicket" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="encryptedTicket" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="encryptedTicket" />jest pustym ciągiem ("").  
  
—lub— 
Długość <paramref name="encryptedTicket" /> jest większa niż 4096 znaków.  
  
—lub— 
 <paramref name="encryptedTicket" />ma nieprawidłowy format.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultUrl">
      <MemberSignature Language="C#" Value="public static string DefaultUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultUrl : string" Usage="System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres URL, na <see cref="T:System.Web.Security.FormsAuthentication" /> który Klasa będzie przekierowywać, jeśli nie określono adresu URL przekierowania.</summary>
        <value>Adres URL, na <see cref="T:System.Web.Security.FormsAuthentication" /> który Klasa będzie przekierowywać, jeśli nie określono adresu URL przekierowania. Wartość domyślna to "default. aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy `defaultUrl` użyciu atrybutu elementu konfiguracji [formularzy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) . <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Właściwość jest używana przez metodę, <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Jeśli żaden zwrotny adres URL nie jest uwzględniony w żądaniu. <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Podobnie Metoda zwróci wartość, <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Jeśli w żądaniu nie zostanie uwzględniony zwrotny adres URL. <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia `defaultUrl` atrybut w pliku Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCrossAppRedirects">
      <MemberSignature Language="C#" Value="public static bool EnableCrossAppRedirects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCrossAppRedirects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnableCrossAppRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCrossAppRedirects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableCrossAppRedirects : bool" Usage="System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy uwierzytelniony użytkownik może zostać przekierowany do adresów URL w innych aplikacjach sieci Web.</summary>
        <value><see langword="true" />Jeśli uwierzytelniony użytkownik może zostać przekierowany do adresów URL w innych aplikacjach sieci Web; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest ustawiana `enableCrossAppRedirects` za pomocą atrybutu elementu konfiguracji [formularzy.](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>  
  
 Właściwość jest sprawdzana <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> w metodzie, gdy adres URL przekierowania nie wskazuje na stronę w bieżącej aplikacji. <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Jeśli <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> jest `true`, przekierowanie jest wykonywane. Jeśli tak `false` <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> , przeglądarka zostanie przekierowana do strony zdefiniowanej we właściwości.  
  
> [!NOTE]
>  Po przekierowaniu stron między aplikacjami należy upewnić się, że określone atrybuty w elemencie konfiguracji [formularzy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) są zduplikowane w aplikacjach uwierzytelnionych. Aby uzyskać więcej informacji i zapoznać się z przykładem, zobacz [uwierzytelnianie formularzy w aplikacjach](https://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7).  
  
> [!IMPORTANT]
>  Jeśli przekierowania między aplikacjami są dozwolone, witryna jest narażona na wykorzystanie luki w zabezpieczeniach, która kieruje użytkowników do złośliwej witryny sieci Web, ale używa strony logowania do witryny. Należy zawsze sprawdzić, czy adres URL przekierowania zwracany przez <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metodę jest oczekiwanym adresem URL, aby upewnić się, że zezwala się na przekierowania tylko do zatwierdzonych witryn sieci Web. Należy również sprawdzić, czy adres URL przekierowania używa odpowiedniego protokołu (HTTP lub HTTPS). Aby wykonać te weryfikacje, można dodać procedurę obsługi zdarzeń ogłaszania zwrotnego do strony logowania lub dodać procedurę obsługi dla <xref:System.Web.UI.WebControls.Login.LoggedIn> zdarzenia <xref:System.Web.UI.WebControls.Login> formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia `enableCrossAppRedirects` atrybut na `true` w pliku Web. config dla aplikacji ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri"  
    requireSSL="true"   
    enableCrossAppRedirects="true" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableFormsAuthentication">
      <MemberSignature Language="C#" Value="public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableFormsAuthentication(class System.Collections.Specialized.NameValueCollection configurationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableFormsAuthentication (configurationData As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableFormsAuthentication(System::Collections::Specialized::NameValueCollection ^ configurationData);" />
      <MemberSignature Language="F#" Value="static member EnableFormsAuthentication : System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="System.Web.Security.FormsAuthentication.EnableFormsAuthentication configurationData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationData" Type="System.Collections.Specialized.NameValueCollection" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="configurationData">Kolekcja wartości nazwy, która zawiera wartości dla "defaultUrl" i/lub "loginUrl". Parametr może mieć wartość null, jeśli nie ma żadnych wartości dla domyślnego adresu URL lub adresu URL logowania.</param>
        <summary>Włącza uwierzytelnianie formularzy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwość jest `null`, ta właściwość jest ustawiona na `configurationData` domyślną wartość adresu URL z parametru. <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Jeśli właściwość jest `null`, ta właściwość jest ustawiona na wartość adresu URL `configurationData` logowania z parametru. <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Aplikacja nie znajduje się w fazie inicjowania przed uruchomieniem.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encrypt(class System.Web.Security.FormsAuthenticationTicket ticket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encrypt (ticket As FormsAuthenticationTicket) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encrypt(System::Web::Security::FormsAuthenticationTicket ^ ticket);" />
      <MemberSignature Language="F#" Value="static member Encrypt : System.Web.Security.FormsAuthenticationTicket -&gt; string" Usage="System.Web.Security.FormsAuthentication.Encrypt ticket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticket" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="ticket"><see cref="T:System.Web.Security.FormsAuthenticationTicket" /> Obiekt, za pomocą którego ma zostać utworzony bilet szyfrowanych formularzy — uwierzytelnianie.</param>
        <summary>Tworzy ciąg zawierający zaszyfrowane formularze — bilet uwierzytelniania odpowiedni do użycia w pliku cookie protokołu HTTP.</summary>
        <returns>Ciąg zawierający bilet uwierzytelniania w postaci zaszyfrowanej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu zapisuje wynik <xref:System.Web.Security.FormsAuthentication.Encrypt%2A> metody w pliku cookie przy <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> użyciu właściwości i przekierowuje użytkownika do adresu URL zwróconego przez <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metodę.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ticket" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookieName">
      <MemberSignature Language="C#" Value="public static string FormsCookieName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookieName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookieName : string" Usage="System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę pliku cookie służącego do przechowywania biletu uwierzytelniania formularzy.</summary>
        <value>Nazwa pliku cookie służącego do przechowywania biletu uwierzytelniania formularzy. Wartość domyślna to ". ASPXAUTH ".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy `name` użyciu atrybutu elementu konfiguracji [formularzy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) . <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> Służy do odwoływania się do pliku cookie, w <xref:System.Web.Security.FormsAuthenticationTicket> którym są przechowywane informacje. <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> wartość właściwości przy `name` użyciu atrybutu w pliku Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    name=".ASPXFORMSAUTH" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookiePath">
      <MemberSignature Language="C#" Value="public static string FormsCookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookiePath : string" Usage="System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę do pliku cookie uwierzytelniania formularzy.</summary>
        <value>Ścieżka pliku cookie, w którym są przechowywane informacje o biletu uwierzytelniania formularzy. Wartość domyślna to "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET `path` przy użyciu atrybutu elementu konfiguracji [formularzy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) . <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Określa plik cookie, w którym są przechowywane <xref:System.Web.Security.FormsAuthenticationTicket> informacje. <xref:System.Web.HttpCookie.Path%2A> <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> wartość właściwości przy `path` użyciu atrybutu w pliku Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy plik cookie uwierzytelniania dla danej nazwy użytkownika.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie"><see langword="true" />Aby utworzyć trwały plik cookie (taki, który jest zapisywany w sesji przeglądarki); w przeciwnym razie. <see langword="false" /></param>
        <summary>Tworzy plik cookie uwierzytelniania dla danej nazwy użytkownika. Nie ustawia to pliku cookie jako części odpowiedzi wychodzącej, dzięki czemu aplikacja może mieć większą kontrolę nad sposobem wystawiania plików cookie.</summary>
        <returns><see cref="T:System.Web.HttpCookie" /> Zawiera informacje o biletach szyfrowanych formularzy. Zostanie użyta wartość <see cref="P:System.Web.Security.FormsAuthentication.FormsCookiePath" /> domyślna właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ścieżka pliku cookie jest określana przez <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> właściwość.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool * string -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie"><see langword="true" />Aby utworzyć trwały plik cookie (taki, który jest zapisywany w sesji przeglądarki); w przeciwnym razie. <see langword="false" /></param>
        <param name="strCookiePath"><see cref="P:System.Web.HttpCookie.Path" /> Plik cookie uwierzytelniania.</param>
        <summary>Tworzy plik cookie uwierzytelniania dla danej nazwy użytkownika. Nie ustawia to pliku cookie jako części odpowiedzi wychodzącej.</summary>
        <returns><see cref="T:System.Web.HttpCookie" /> Zawiera informacje o biletach szyfrowanych formularzy.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRedirectUrl">
      <MemberSignature Language="C#" Value="public static string GetRedirectUrl (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRedirectUrl(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRedirectUrl (userName As String, createPersistentCookie As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRedirectUrl(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetRedirectUrl : string * bool -&gt; string" Usage="System.Web.Security.FormsAuthentication.GetRedirectUrl (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie">Ten parametr jest ignorowany.</param>
        <summary>Zwraca adres URL przekierowania dla oryginalnego żądania, które spowodowało przekierowanie do strony logowania.</summary>
        <returns>Ciąg, który zawiera adres URL przekierowania, lub wartość <paramref name="userName" /> null, jeśli ma wartość null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można użyć, jeśli chcesz wykonać przekierowanie w kodzie aplikacji zamiast korzystać <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> z metody.  
  
 Metoda zwraca adres URL określony w ciągu zapytania `ReturnURL` przy użyciu nazwy zmiennej. <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Na przykład w adresie URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx` <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Metoda zwraca zwrotny adres URL `caller.aspx`. Jeśli zmienna nie istnieje <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> , Metoda <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> zwraca adres URL we właściwości. `ReturnURL`  
  
 ASP.NET automatycznie dodaje zwrotny adres URL, gdy przeglądarka zostanie przekierowana na stronę logowania.  
  
 Domyślnie `ReturnUrl` zmienna musi odwoływać się do strony w bieżącej aplikacji. Jeśli `ReturnUrl` odwołuje się do strony w innej aplikacji lub na innym serwerze <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> , metody <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> zwracają adres URL we właściwości. Jeśli chcesz zezwolić na adres URL powrotu do odwoływania się do <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> strony spoza bieżącej aplikacji, musisz ustawić właściwość, aby `true` użyć `enableCrossAppRedirects` atrybutu elementu konfiguracji [formularzy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) .  

Ta metoda nie tworzy pliku cookie.
  
> [!IMPORTANT]
>  <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Ustawienie właściwościnatak,abyzezwolićnaprzekierowaniamiędzyaplikacjami,jestpotencjalnym`true` zagrożeniem bezpieczeństwa. Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu przekierowuje uwierzytelnionych użytkowników do adresu URL zwróconego przez <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metodę.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="HashPasswordForStoringInConfigFile">
      <MemberSignature Language="C#" Value="public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HashPasswordForStoringInConfigFile(string password, string passwordFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashPasswordForStoringInConfigFile (password As String, passwordFormat As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HashPasswordForStoringInConfigFile(System::String ^ password, System::String ^ passwordFormat);" />
      <MemberSignature Language="F#" Value="static member HashPasswordForStoringInConfigFile : string * string -&gt; string" Usage="System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (password, passwordFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.CreateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="passwordFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">Hasło do skrótu.</param>
        <param name="passwordFormat">Algorytm skrótu, który ma być używany. <paramref name="passwordFormat" />reprezentuje jedną z wartości <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" />wyliczenia. <see langword="String" /></param>
        <summary>Tworzy hasło skrótu odpowiednie do przechowywania w pliku konfiguracji na podstawie określonego hasła i algorytmu wyznaczania wartości skrótu.</summary>
        <returns>Hasło skrótu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> Metoda tworzy skrótową wartość hasła, która może być używana podczas przechowywania poświadczeń uwierzytelniania formularzy w pliku konfiguracyjnym aplikacji.  
  
 Poświadczenia uwierzytelniania przechowywane w pliku konfiguracji aplikacji są używane przez <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> metodę do weryfikowania haseł dla użytkowników aplikacji. Alternatywnie można użyć członkostwa ASP.NET do przechowywania poświadczeń użytkownika. Aby uzyskać więcej informacji, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
   
  
## Examples  
 Poniższy przykład kodu przyjmuje nazwę użytkownika, hasło i typ skrótu i wyświetla sekcję [poświadczeń](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e01fc50a(v%3dvs.100)) konfiguracji, która zawiera definicję użytkownika i hasło skrótu.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[FormsAuthenticationHashPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationHashPassword/CS/formsauthenticationhashpasswordcs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationHashPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationHashPassword/VB/formsauthenticationhashpasswordvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="password" />była<see langword="null" />  
  
—lub— 
 <paramref name="passwordFormat" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="passwordFormat" />nie jest prawidłową <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" /> wartością.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Initialize();" />
      <MemberSignature Language="F#" Value="static member Initialize : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Security.FormsAuthentication" /> Inicjuje obiekt na podstawie ustawień konfiguracji aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana, <xref:System.Web.Security.FormsAuthenticationModule> gdy <xref:System.Web.Security.FormsAuthentication> tworzy wystąpienie klasy. <xref:System.Web.Security.FormsAuthentication.Initialize%2A> Ta metoda nie jest przeznaczona do wywoływania z kodu.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public static bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy uwierzytelnianie formularzy jest włączone.</summary>
        <value><see langword="true" />Jeśli jest włączone uwierzytelnianie formularzy, w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginUrl">
      <MemberSignature Language="C#" Value="public static string LoginUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string LoginUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoginUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LoginUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoginUrl : string" Usage="System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres URL strony logowania, do której <see cref="T:System.Web.Security.FormsAuthentication" /> zostanie przekierowany Klasa.</summary>
        <value>Adres URL strony logowania, do której <see cref="T:System.Web.Security.FormsAuthentication" /> zostanie przekierowany Klasa. Wartość domyślna to "login. aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy `loginUrl` użyciu atrybutu elementu konfiguracji [formularzy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) . <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> Jest używana<xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> przez metodę.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia `loginUrl` atrybut w pliku Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectFromLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekierowuje uwierzytelnionego użytkownika z powrotem do pierwotnie żądanego adresu URL lub domyślnego adresu URL.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie"><see langword="true" />Aby utworzyć trwały plik cookie (taki, który jest zapisywany w sesji przeglądarki); w przeciwnym razie. <see langword="false" /></param>
        <summary>Przekierowuje uwierzytelnionego użytkownika z powrotem do pierwotnie żądanego adresu URL lub domyślnego adresu URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda przekierowuje do adresu URL określonego w ciągu zapytania `ReturnURL` przy użyciu nazwy zmiennej. <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Na przykład, w adresie `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`URL <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> , Metoda przekierowuje do zwrotnego adresu URL `caller.aspx`. Jeśli zmienna nie istnieje <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> , Metoda przekierowuje <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> do adresu URL we właściwości. `ReturnURL`  
  
 ASP.NET automatycznie dodaje zwrotny adres URL, gdy przeglądarka zostanie przekierowana na stronę logowania.  
  
 Domyślnie `ReturnUrl` zmienna musi odwoływać się do strony w bieżącej aplikacji. Jeśli `ReturnUrl` odwołuje się do strony w innej aplikacji lub na innym serwerze <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> , metody przekierują <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> do adresu URL we właściwości. Jeśli chcesz zezwolić na przekierowania na stronę spoza bieżącej aplikacji, musisz ustawić <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwość, aby `true` użyć `enableCrossAppRedirects` atrybutu elementu konfiguracji [formularzy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) .  
  
> [!IMPORTANT]
>  <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Ustawienie właściwościnatak,abyzezwolićnaprzekierowaniamiędzyaplikacjami,jestpotencjalnym`true` zagrożeniem bezpieczeństwa. Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwość.  
  
 `true` <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> `true`Jeśli właściwość ma wartość, `ReturnUrl` a<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> zmienna znajduje się w bieżącej aplikacji lub właściwość to, metoda wystawia bilet uwierzytelniania i umieści ją w <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> domyślny plik cookie przy <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> użyciu metody.  
  
 Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest`false` , a ścieżka przekierowania dotyczy adresu URL w bieżącej aplikacji, bilet zostanie wystawiony jako część adresu URL przekierowania. Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> <xref:System.Web.HttpRequest.QueryString%2A> <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> ma wartośćis`false`, a adres URL przekierowania nie odwołuje się do strony w bieżącej aplikacji, metoda wystawia bilet uwierzytelniania i umieści ją we właściwości. <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> `true`  
  
   
  
## Examples  
 Poniższy przykład kodu przekierowuje zweryfikowanych użytkowników do pierwotnie żądanego adresu URL lub <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. W przykładzie kodu jest stosowane członkostwo ASP.NET do weryfikowania użytkowników. Aby uzyskać więcej informacji na temat członkostwa w ASP.NET, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Zwrotny adres URL określony w ciągu zapytania zawiera protokół inny niż HTTP: lub HTTPS:.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie"><see langword="true" />Aby utworzyć trwały plik cookie (taki, który jest zapisywany w sesji przeglądarki); w przeciwnym razie. <see langword="false" /></param>
        <param name="strCookiePath">Ścieżka pliku cookie dla biletu uwierzytelniania formularzy.</param>
        <summary>Przekierowuje uwierzytelnionego użytkownika z powrotem do pierwotnie żądanego adresu URL lub domyślnego adresu URL przy użyciu określonej ścieżki cookie dla pliku cookie uwierzytelniania formularzy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda przekierowuje do zwrotnego adresu URL określonego w ciągu zapytania `ReturnURL` przy użyciu nazwy zmiennej. <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Na przykład, w adresie `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`URL <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> , Metoda przekierowuje do zwrotnego adresu URL `caller.aspx`. Jeśli zmienna nie istnieje <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> , Metoda przekierowuje <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> do adresu URL we właściwości. `ReturnURL`  
  
 ASP.NET automatycznie dodaje zwrotny adres URL, gdy przeglądarka zostanie przekierowana na stronę logowania.  
  
 Domyślnie `ReturnUrl` zmienna musi odwoływać się do strony w bieżącej aplikacji. Jeśli `ReturnUrl` odwołuje się do strony w innej aplikacji lub na innym serwerze <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> , Metoda przekierowuje <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> do adresu URL we właściwości. Jeśli chcesz zezwolić na przekierowania na stronę spoza bieżącej aplikacji, musisz ustawić <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwość, aby `true` użyć `enableCrossAppRedirects` atrybutu elementu konfiguracji [formularzy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) .  
  
> [!IMPORTANT]
>  <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Ustawienie właściwościnatak,abyzezwolićnaprzekierowaniamiędzyaplikacjami,jestpotencjalnym`true` zagrożeniem bezpieczeństwa. Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwość.  
  
 `true` <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> `true`Jeśli właściwość ma wartość, `ReturnUrl` a<xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> zmienna znajduje się w bieżącej aplikacji lub właściwość to, metoda wystawia bilet uwierzytelniania i umieści ją w <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> plik cookie określony przez `strCookiePath` parametr <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> przy użyciu metody.  
  
 Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest`false` , a ścieżka przekierowania dotyczy adresu URL w bieżącej aplikacji, bilet zostanie wystawiony jako część adresu URL przekierowania. Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> <xref:System.Web.HttpRequest.QueryString%2A> <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> ma wartośćis`false`, a adres URL przekierowania nie odwołuje się do strony w bieżącej aplikacji, metoda wystawia bilet uwierzytelniania i umieści ją we właściwości. <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Zwrotny adres URL określony w ciągu zapytania zawiera protokół inny niż HTTP: lub HTTPS:.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekierowuje przeglądarkę do adresu URL logowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda przekierowuje przeglądarkę do programu <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>. <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>  
  
 <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Metoda nie czyści pliku cookie uwierzytelniania formularzy. Możesz użyć <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metody w połączeniu <xref:System.Web.Security.FormsAuthentication.SignOut%2A> z metodą, aby zarejestrować jednego użytkownika i umożliwić innym użytkownikowi logowanie się.  
  
 W przeciwieństwie <xref:System.Web.HttpResponse.Redirect%2A?displayProperty=nameWithType> do metody, ta metoda nie kończy żądania przez wywołanie. <xref:System.Web.HttpResponse.End%2A?displayProperty=nameWithType> Oznacza to, że kod, który <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> następuje po wywołaniu metody, zostanie uruchomiony.  
  
   
  
## Examples  
 Poniższy przykład kodu czyści plik cookie uwierzytelniania formularzy przy użyciu <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metody i przekierowuje użytkownika do strony logowania <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> przy użyciu metody.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage();" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przekierowuje przeglądarkę do adresu URL logowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda przekierowuje przeglądarkę do programu <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>. <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>  
  
 <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Metoda nie czyści pliku cookie uwierzytelniania formularzy. Możesz użyć <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metody w połączeniu <xref:System.Web.Security.FormsAuthentication.SignOut%2A> z metodą, aby zarejestrować jednego użytkownika i umożliwić innym użytkownikowi logowanie się.  
  
   
  
## Examples  
 Poniższy przykład kodu czyści plik cookie uwierzytelniania formularzy przy użyciu <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metody i przekierowuje użytkownika do strony logowania <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> przy użyciu metody.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage (string extraQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage(string extraQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage (extraQueryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage(System::String ^ extraQueryString);" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage extraQueryString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraQueryString" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="extraQueryString">Ciąg zapytania, który ma zostać uwzględniony w adresie URL przekierowania.</param>
        <summary>Przekierowuje przeglądarkę do adresu URL logowania z określonym ciągiem zapytania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda przekierowuje przeglądarkę do programu <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> i <xref:System.Management.ManagementQuery.QueryString%2A> zawiera `extraQueryString` wartość jako dla przekierowanego adresu URL. <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>  
  
 <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Metoda nie czyści pliku cookie uwierzytelniania formularzy. Możesz użyć <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metody w połączeniu <xref:System.Web.Security.FormsAuthentication.SignOut%2A> z metodą, aby zarejestrować jednego użytkownika i umożliwić innym użytkownikowi logowanie się.  
  
   
  
## Examples  
 Poniższy przykład kodu czyści plik cookie uwierzytelniania formularzy przy użyciu <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metody i przekierowuje użytkownika do strony logowania <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> przy użyciu metody.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signout2cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signout2vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RenewTicketIfOld">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld(class System.Web.Security.FormsAuthenticationTicket tOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RenewTicketIfOld (tOld As FormsAuthenticationTicket) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ RenewTicketIfOld(System::Web::Security::FormsAuthenticationTicket ^ tOld);" />
      <MemberSignature Language="F#" Value="static member RenewTicketIfOld : System.Web.Security.FormsAuthenticationTicket -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.RenewTicketIfOld tOld" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tOld" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="tOld">Bilet uwierzytelniania formularzy do zaktualizowania.</param>
        <summary>Warunkowo aktualizuje datę i godzinę wydania oraz datę i godzinę wygaśnięcia dla <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</summary>
        <returns>Zaktualizowano <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda aktualizuje datę i godzinę wygaśnięcia dostarczone <xref:System.Web.Security.FormsAuthenticationTicket> , jeśli bieżąca <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> Data i godzina minus wartość jest większa niż <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> wartość pomniejszona o bieżącą datę i godzinę. <xref:System.Web.Security.FormsAuthentication.RenewTicketIfOld%2A>  
  
 Bilet jest aktualizowany <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> z właściwością ustawioną na bieżącą datę i godzinę <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> , a właściwość ustawiona na bieżącą datę i godzinę oraz oryginalną <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> wartość minus pierwotna <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> wartość.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RequireSSL">
      <MemberSignature Language="C#" Value="public static bool RequireSSL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequireSSL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequireSSL : bool" Usage="System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy plik cookie z uwierzytelnianiem formularzy wymaga protokołu SSL, aby można było zwrócić do serwera.</summary>
        <value><see langword="true" />Jeśli protokół SSL jest wymagany do zwrócenia pliku cookie uwierzytelniania formularzy na serwer; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy `requireSSL` użyciu atrybutu elementu konfiguracji [formularzy](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) . <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> W pliku Web. config aplikacji ASP.NET można określić, czy protokół SSL (SSL) musi zwrócić plik cookie uwierzytelniania formularzy do serwera przez ustawienie `requireSSL` atrybutu. Aby uzyskać więcej informacji, zobacz <xref:System.Web.HttpCookie.Secure%2A>.  
  
 Zaleca się, aby w `requireSSL` przypadku skonfigurowania `false`usługi jako `slidingExpiration` `false`, aby skrócić czas, w którym bilet jest prawidłowy.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia `requireSSL` atrybut w pliku Web. config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    requireSSL="true"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy bilet uwierzytelniania dla podanej nazwy użytkownika i dodaje go do kolekcji plików cookie odpowiedzi lub do adresu URL, jeśli używasz uwierzytelniania bezplikowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje bilet uwierzytelniania formularzy do kolekcji cookies lub adres URL, jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false`. <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Bilet uwierzytelnianie formularzy dostarcza informacje o uwierzytelnianiu do następnego żądania wykonanego przez przeglądarkę. Przy użyciu uwierzytelniania formularzy można użyć <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metody, aby uwierzytelnić użytkownika, ale nadal zachować kontrolę nad nawigacją za pomocą przekierowań.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Wyjaśniono Uwierzytelnianie formularzy w programie ASP.NET 2,0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Instrukcje: Korzystanie z członkostwa w ASP.NET 2,0</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika. Nie musi to być mapowane na konto systemu Windows.</param>
        <param name="createPersistentCookie"><see langword="true" />Aby utworzyć trwały plik cookie (taki, który jest zapisywany w sesji przeglądarki); w przeciwnym razie. <see langword="false" /></param>
        <summary>Tworzy bilet uwierzytelniania dla podanej nazwy użytkownika i dodaje go do kolekcji plików cookie odpowiedzi lub do adresu URL, jeśli używasz uwierzytelniania bezplikowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje bilet uwierzytelniania formularzy do kolekcji cookies lub do adresu URL, jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false`. <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Bilet uwierzytelnianie formularzy dostarcza informacje o uwierzytelnianiu do następnego żądania wykonanego przez przeglądarkę. Przy użyciu uwierzytelniania formularzy można użyć <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metody, aby uwierzytelnić użytkownika, ale nadal zachować kontrolę nad nawigacją za pomocą przekierowań.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" />is <see langword="true" /> i <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> is .<see langword="false" /></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie"><see langword="true" />Aby utworzyć trwały plik cookie (taki, który jest zapisywany w sesji przeglądarki); w przeciwnym razie. <see langword="false" /></param>
        <param name="strCookiePath">Ścieżka pliku cookie dla biletu uwierzytelniania formularzy.</param>
        <summary>Tworzy bilet uwierzytelniania dla podanej nazwy użytkownika i dodaje go do kolekcji plików cookie odpowiedzi, przy użyciu podanej ścieżki pliku cookie lub przy użyciu adresu URL, jeśli używasz uwierzytelniania bezplikowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje bilet uwierzytelniania formularzy do kolekcji cookies lub adres URL, jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false`. <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Bilet uwierzytelnianie formularzy dostarcza informacje o uwierzytelnianiu do następnego żądania wykonanego przez przeglądarkę. Przy użyciu uwierzytelniania formularzy można użyć <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metody, aby uwierzytelnić użytkownika, ale nadal zachować kontrolę nad nawigacją za pomocą przekierowań.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" />is <see langword="true" /> i <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> is .<see langword="false" /></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Wyjaśniono Uwierzytelnianie formularzy w programie ASP.NET 2,0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Instrukcje: Korzystanie z członkostwa w ASP.NET 2,0</related>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignOut();" />
      <MemberSignature Language="F#" Value="static member SignOut : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa bilet uwierzytelniania formularzy z przeglądarki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda usuwa informacje o biletu uwierzytelniania formularzy z pliku cookie lub adresu URL, jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false`. <xref:System.Web.Security.FormsAuthentication.SignOut%2A> Możesz użyć <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metody w połączeniu <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> z metodą, aby zarejestrować jednego użytkownika i umożliwić innym użytkownikowi logowanie się.  
  
 W przypadku uruchamiania wyłącznie w trybie bez plików cookie lub w przypadku obsługi użytkowników uwierzytelnionych i anonimowych należy jawnie kontrolować przekierowanie do strony logowania, jeśli wymagana jest specjalna logika biznesowa do wykonania w wyniku usunięcia anonimowego identyfikatora.  
  
 Gdy wywoływana jest <xref:System.Web.HttpResponse.Redirect%2A> `endResponse` `false`Metoda, przekierowanie do strony logowania aplikacji jest wykonywane przez wywołanie metody z parametrem ustawionym na. <xref:System.Web.Security.FormsAuthentication.SignOut%2A> Przekierowanie nie odbywa się, dopóki bieżąca strona nie zostanie zakończona, więc można uruchomić dodatkowy kod. Jeśli kod nie zawiera jawnie przekierowania na inną stronę, użytkownik zostanie przekierowany do strony logowania skonfigurowanej w pliku konfiguracyjnym aplikacji.  
  
 <xref:System.Web.Security.FormsAuthentication.SignOut%2A> Wywołanie metody powoduje jedynie usunięcie pliku cookie uwierzytelniania formularzy. Serwer sieci Web nie przechowuje prawidłowych i wygasłych biletów uwierzytelniania na potrzeby późniejszego porównania. Powoduje to, że witryna jest narażona na atak metodą powtórzeń, Jeśli złośliwy użytkownik uzyska prawidłowy plik cookie uwierzytelniania formularzy. Aby zwiększyć bezpieczeństwo podczas korzystania z pliku cookie uwierzytelniania formularzy, należy wykonać następujące czynności:  
  
-   Użyj bezwzględnego wygaśnięcia plików cookie uwierzytelniania formularzy, <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> ustawiając właściwość `false`na. Ogranicza to okno, w którym można odtworzyć przejęty plik cookie.  
  
-   Tylko wydawanie i akceptowanie plików cookie uwierzytelniania za pośrednictwem SSL (SSL <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> ) przez `true` ustawienie właściwości na i przez uruchomienie całej witryny sieci Web w obszarze SSL. <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Ustawienie`true` właściwości zapewnia, że ASP.net nigdy nie wyśle pliku cookie uwierzytelniania do przeglądarki za pośrednictwem połączenia bez użycia protokołu SSL, jednak klient może nie przestrzegać bezpiecznego ustawienia w pliku cookie. Oznacza to, że klient może wysłać plik cookie uwierzytelniania formularzy za pośrednictwem połączenia bez użycia protokołu SSL, w związku z czym nie jest narażony na przejmowanie. Można zapobiec wysyłaniu przez klienta plików cookie uwierzytelniania formularzy w jasnym miejscu przez uruchomienie całej witryny sieci Web w ramach protokołu SSL.  
  
-   Użyj magazynu trwałego na serwerze, aby zarejestrować się, gdy użytkownik wylogowuje się z witryny sieci Web, a następnie użyj zdarzenia aplikacji, <xref:System.Web.HttpApplication.PostAuthenticateRequest> takiego jak zdarzenie, aby określić, czy bieżący użytkownik został uwierzytelniony przy użyciu uwierzytelniania formularzy. Jeśli użytkownik został uwierzytelniony przy użyciu uwierzytelniania formularzy, a jeśli informacje w magazynie trwałym wskazuje, że użytkownik jest wylogowany, natychmiast Wyczyść plik cookie uwierzytelniania i Przekieruj przeglądarkę z powrotem do strony logowania. Po pomyślnym zalogowaniu się zaktualizuj magazyn, aby odzwierciedlić, że użytkownik jest zalogowany. W przypadku korzystania z tej metody aplikacja musi śledzić stan zarejestrowanego użytkownika i musi wymusić wymuszenie wylogowania bezczynnych użytkowników.  
  
   
  
## Examples  
 Poniższy przykład kodu czyści plik cookie uwierzytelniania formularzy przy użyciu <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metody i przekierowuje użytkownika do strony logowania <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> przy użyciu metody.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Wyjaśniono Uwierzytelnianie formularzy w programie ASP.NET 2,0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Instrukcje: Korzystanie z członkostwa w ASP.NET 2,0</related>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public static bool SlidingExpiration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SlidingExpiration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : bool" Usage="System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wygasa przesuwanie jest włączone.</summary>
        <value><see langword="true" />Jeśli wygasa przesuwanie, w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest ustawiana `slidingExpiration` za pomocą atrybutu elementu konfiguracji [formularzy.](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1d3t3c61(v%3dvs.100)) <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A>  
  
 Wygaśnięcie wygasa resetuje czas wygaśnięcia dla prawidłowego pliku cookie uwierzytelniania, jeśli żądanie zostało wykonane i upłynie więcej niż połowę interwału limitu czasu. Jeśli plik cookie wygaśnie, użytkownik musi ponownie przeprowadzić uwierzytelnienie. Ustawienie właściwości w celu `false` zwiększenia bezpieczeństwa aplikacji przez ograniczenie czasu ważności pliku cookie uwierzytelniania na podstawie skonfigurowanej `timeout` wartości. <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A>  
  
 Firma Microsoft zaleca, aby w `requireSSL` przypadku `false`skonfigurowania `slidingExpiration` `false`usługi jako, aby skrócić czas, w którym bilet jest prawidłowy.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia `slidingExpiration` atrybut na `false` w pliku Web. config dla aplikacji ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    name=".ASPXFORMSAUTH"  
    cookieless="UseCookies"  
    requireSSL="true"   
    slidingExpiration="false" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Zabezpieczenia aplikacji sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="TicketCompatibilityMode">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TicketCompatibilityMode As TicketCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::TicketCompatibilityMode TicketCompatibilityMode { System::Web::Configuration::TicketCompatibilityMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TicketCompatibilityMode : System.Web.Configuration.TicketCompatibilityMode" Usage="System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TicketCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy do daty wygaśnięcia biletu ma być używany uniwersalny czas koordynowany (UTC) czy czas lokalny.</summary>
        <value>Wartość wskazująca, czy do daty wygaśnięcia biletu ma być używany uniwersalny czas koordynowany (UTC) czy czas lokalny.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public static TimeSpan Timeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan Timeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan" Usage="System.Web.Security.FormsAuthentication.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czas, po upływie którego wygasa bilet uwierzytelniania.</summary>
        <value>Ilość czasu przed wygaśnięciem biletu uwierzytelniania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
