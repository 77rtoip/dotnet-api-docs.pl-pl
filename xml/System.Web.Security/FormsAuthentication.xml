<Type Name="FormsAuthentication" FullName="System.Web.Security.FormsAuthentication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ee8d57b70fdfdb500cdd702255c25df5e88f97b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39799048" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FormsAuthentication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FormsAuthentication extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.FormsAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FormsAuthentication" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormsAuthentication sealed" />
  <TypeSignature Language="F#" Value="type FormsAuthentication = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zarządza usługami uwierzytelniania formularzy dla aplikacji sieci Web. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uwierzytelnianie formularzy umożliwia użytkownika i sprawdzanie poprawności hasła dla aplikacji sieci Web, które nie wymagają uwierzytelniania Windows. Za pomocą uwierzytelniania formularzy, informacje o użytkowniku są przechowywane w zewnętrznym źródle danych, takich jak <xref:System.Web.Security.Membership> bazy danych lub w pliku konfiguracyjnym aplikacji. Po uwierzytelnieniu użytkownika uwierzytelniania formularzy zachowuje biletu uwierzytelniania w pliku cookie lub adresie URL, tak aby uwierzytelniony użytkownik nie musi wprowadzać poświadczeń przy każdym żądaniu.  
  
 Włączono uwierzytelniania formularzy, ustawiając `mode` atrybutu tego elementu konfiguracji `Forms`. Możesz wymagać, że wszystkie żądania do aplikacji zawierają biletu uwierzytelniania prawidłowego użytkownika przy użyciu elementu konfiguracji odrzucić żądanie wszelkie nieznanego użytkownika, jak pokazano w poniższym przykładzie.  
  
```  
<system.web>  
  <authentication mode="Forms">  
    <forms loginUrl="login.aspx" />  
  </authentication>  
  <authorization>  
    <deny users="?" />  
  </authorization>  
</system.web>  
```  
  
 W poprzednim przykładzie każde żądanie dla strony ASP.NET, która jest częścią aplikacji wymaga prawidłowej nazwy użytkownika dostarczonego przez uwierzytelnianie formularzy. Jeśli nie ma żadnej nazwy użytkownika, a następnie żądanie jest przekierowywane do skonfigurowanej <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 <xref:System.Web.Security.FormsAuthentication> Klasy zapewnia dostęp do metod i właściwości, których można używać w aplikacji, która uwierzytelnia użytkowników. <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Metoda przekierowuje przeglądarkę do skonfigurowanej <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> dla użytkowników zalogować się do aplikacji. <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Metoda przekierowuje uwierzytelnionego użytkownika, powrót do oryginalnego chronionych adresu URL, którego zażądano lub <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. Istnieją również metody, które umożliwiają zarządzanie biletów uwierzytelniania formularzy, jeśli to konieczne.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje pliku Web.config dla aplikacji ASP.NET, która korzysta z dostawcy członkostwa platformy ASP.NET dla uwierzytelniania formularzy i wymaga od wszystkich użytkowników uwierzytelniali się.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 Poniższy przykład kodu pokazuje strony logowania dla aplikacji ASP.NET, która korzysta z uwierzytelniania formularzy i członkostwa ASP.NET.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">Aby użyć <see cref="T:System.Web.Security.FormsAuthentication" /> klasy w środowisku hostowanym. Zapotrzebowanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Wartość uprawnienia: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthentication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormsAuthentication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Security.FormsAuthentication" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor nie jest przeznaczony do użycia w kodzie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static bool Authenticate (string name, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Authenticate(string name, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (name As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Authenticate(System::String ^ name, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * string -&gt; bool" Usage="System.Web.Security.FormsAuthentication.Authenticate (name, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.ValidateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa użytkownika.</param>
        <param name="password">Hasło dla użytkownika.</param>
        <summary>Sprawdza poprawność nazwy użytkownika i hasło dla poświadczeń przechowywanych w pliku konfiguracyjnym aplikacji.</summary>
        <returns>
          <see langword="true" /> Jeśli nazwa użytkownika i hasło są prawidłowe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metodę uwierzytelniania weryfikuje poświadczenia użytkownika, które są przechowywane w sekcji pliku konfiguracji aplikacji. Alternatywnie można użyć członkostwa ASP.NET do przechowywania poświadczeń użytkownika, a następnie wywołać <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> do zweryfikowania poświadczeń. Aby uzyskać więcej informacji, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 Aby zwiększyć bezpieczeństwo, można zaszyfrować haseł zapisanych w pliku konfiguracji dla aplikacji przy użyciu <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje poświadczeń użytkownika przechowywanych w pliku Web.config aplikacji. Wartości haseł zostały skrótu za pomocą <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> metody.  
  
 `<authentication mode="Forms">`  
  
 `<forms loginUrl="login.aspx">`  
  
 `<credentials passwordFormat="SHA1">`  
  
 `<user name="user1"   password="27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C" />`  
  
 `<user name="user2"   password="D108F80936F78DFDD333141EBC985B0233A30C7A" />`  
  
 `<user name="user3" password="7BDB09781A3F23885CD43177C0508B375CB1B7E9"/>`  
  
 `</credentials>`  
  
 `</forms>`  
  
 `</authentication>`  
  
 Poniższy przykład kodu pokazuje strony logowania, która używa <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> metody w celu sprawdzenia poświadczeń użytkownika.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieDomain">
      <MemberSignature Language="C#" Value="public static string CookieDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CookieDomain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieDomain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CookieDomain { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieDomain : string" Usage="System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość domeny pliku cookie uwierzytelniania formularzy.</summary>
        <value>
          <see cref="P:System.Web.HttpCookie.Domain" /> Pliku cookie uwierzytelniania formularzy. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `domain` atrybutu elementu konfiguracji. <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> Określa wartość właściwości <xref:System.Web.HttpCookie.Domain%2A> , plik cookie posłuży do.  
  
   
  
## Examples  
 Poniższy kod ustawia przykład `domain` atrybutu w pliku Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    domain="contoso.com" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy aplikacja jest skonfigurowana na potrzeby uwierzytelniania formularzy cookieless.</summary>
        <value>Jedną z <see cref="T:System.Web.HttpCookieMode" /> wartości, które wskazuje, czy aplikacja jest skonfigurowana na potrzeby uwierzytelniania formularzy cookieless. Wartość domyślna to <see cref="F:System.Web.HttpCookieMode.UseDeviceProfile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> Właściwość odzwierciedla wartość `cookieless` atrybutu elementu konfiguracji. <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> Właściwość określa, czy <xref:System.Web.Security.FormsAuthenticationTicket> wartości będą przechowywane w pliku cookie sesji w przeglądarce lub przechowywane w <xref:System.Web.HttpRequest.QueryString%2A> właściwości.  
  
> [!NOTE]
>  Gdy <xref:System.Web.Security.FormsAuthenticationTicket> wartość jest przechowywana w identyfikatorze URI, długość wygenerowanego identyfikatora URI może być dłuższa niż maksymalna dozwolona długość. Jest to najbardziej prawdopodobne podczas <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> właściwość jest ustawiona na nazwę aplikacji i nazwa aplikacji jest długa 40 lub więcej znaków (), po użytkownik nazwy w aplikacji są długie lub gdy długie <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> ciągów są przechowywane w <xref:System.Web.Security.FormsAuthenticationTicket> wartość. Jeśli wygenerowanego identyfikatora URI jest zbyt długa, serwer sieci Web zwróci `400 - Bad Request` błędu.  
  
   
  
## Examples  
 Poniższy kod ustawia przykład `cookieless` atrybutu `AutoDetect` w pliku Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="AutoDetect" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieSameSite">
      <MemberSignature Language="C#" Value="public static System.Web.SameSiteMode CookieSameSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.SameSiteMode CookieSameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieSameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::SameSiteMode CookieSameSite { System::Web::SameSiteMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieSameSite : System.Web.SameSiteMode" Usage="System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość atrybutu SameSite pliku cookie.</summary>
        <value>Jedna z wartości wyliczenia, które reprezentuje tryb wymuszania pliku cookie. Wartość domyślna to <see cref="F:System.Web.SameSiteMode.Lax" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiesSupported">
      <MemberSignature Language="C#" Value="public static bool CookiesSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CookiesSupported" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookiesSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CookiesSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiesSupported : bool" Usage="System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy aplikacja jest skonfigurowana do obsługi uwierzytelniania formularzy cookieless.</summary>
        <value>
          <see langword="false" /> Jeśli aplikacja jest skonfigurowana do obsługi uwierzytelniania formularzy cookieless; w przeciwnym razie <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Właściwość zwraca wartości na podstawie <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> wartość i możliwości przeglądarki.  
  
-   Jeśli <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> właściwość jest ustawiona na <xref:System.Web.HttpCookieMode.UseCookies>, <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> zwróci właściwość `true`.  
  
-   Jeśli <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> właściwość jest ustawiona na <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> zwróci właściwość `false`.  
  
-   Jeśli <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> właściwość jest ustawiona na <xref:System.Web.HttpCookieMode.AutoDetect>, <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> zwróci właściwość `true` Jeśli przeglądarka obsługuje pliki cookie i pliki cookie są włączone; w przeciwnym razie <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> zwróci właściwość `false`.  
  
-   Jeśli <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> właściwość jest ustawiona na <xref:System.Web.HttpCookieMode.UseDeviceProfile>, <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> zwróci właściwość `true` Jeśli <xref:System.Web.HttpRequest.Browser%2A> dla bieżącego <xref:System.Web.HttpContext.Request%2A> obsługuje pliki cookie i przekierowanie z plików cookie; w przeciwnym razie <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Zwraca właściwość `false`.  
  
   
  
## Examples  
 Poniższy kod ustawia przykład `cookieless` atrybutu <xref:System.Web.HttpCookieMode.UseUri> w pliku Web.config. Ta konfiguracja będzie skutkować <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> właściwość `false`.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket Decrypt(string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Decrypt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decrypt (encryptedTicket As String) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ Decrypt(System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="static member Decrypt : string -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.Decrypt encryptedTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedTicket">Bilet uwierzytelniania szyfrowanego.</param>
        <summary>Tworzy <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> obiektu oparte na biletu uwierzytelniania formularzy zaszyfrowanych przekazywany do metody.</summary>
        <returns>Element <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> obiektu. Jeśli <paramref name="encryptedTicket" /> parametr nie jest prawidłowym biletu <see langword="null" /> jest zwracana.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="encryptedTicket" /> jest <see langword="null" />.  
  
\- lub — 
 <paramref name="encryptedTicket" /> jest pustym ciągiem ("").  
  
\- lub — 
Długość <paramref name="encryptedTicket" /> jest większa niż 4096 znaków.  
  
\- lub — 
 <paramref name="encryptedTicket" /> ma nieprawidłowy format.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultUrl">
      <MemberSignature Language="C#" Value="public static string DefaultUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultUrl : string" Usage="System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres URL <see cref="T:System.Web.Security.FormsAuthentication" /> klasy przekieruje Jeśli przekierowanie nie określono adresu URL.</summary>
        <value>Adres URL, <see cref="T:System.Web.Security.FormsAuthentication" /> klasy przekieruje Jeśli przekierowanie nie określono adresu URL. Wartość domyślna to "default.aspx."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `defaultUrl` atrybutu elementu konfiguracji. <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Właściwość jest używana przez <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metody, jeśli nie zwrotny adres URL jest uwzględniony w żądaniu. Podobnie <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metoda zwróci <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Jeśli nie zwrotny adres URL jest uwzględniony w żądaniu.  
  
   
  
## Examples  
 Poniższy kod ustawia przykład `defaultUrl` atrybutu w pliku Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCrossAppRedirects">
      <MemberSignature Language="C#" Value="public static bool EnableCrossAppRedirects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCrossAppRedirects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnableCrossAppRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCrossAppRedirects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableCrossAppRedirects : bool" Usage="System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy uwierzytelnieni użytkownicy mogą zostać przekierowane do adresów URL w innych aplikacjach sieci Web.</summary>
        <value>
          <see langword="true" /> Jeśli uwierzytelnieni użytkownicy mogą zostać przekierowane do adresów URL w innych aplikacji sieci Web. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Wartość właściwości jest ustawiana za pomocą `enableCrossAppRedirects` atrybutu elementu konfiguracji.  
  
 <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Właściwość jest zaznaczona w ramach <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metodą podczas przekierowania adres URL wskazuje stronę w bieżącej aplikacji. Jeśli <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> jest `true`, przekierowania, który jest wykonywane; Jeśli <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> jest `false`, przeglądarka jest przekierowywana do strony, zdefiniowanych w <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> właściwości.  
  
> [!NOTE]
>  Gdy Strona przekierowania w aplikacjach, upewnij się, zduplikowane atrybuty określone w elemencie konfiguracji aplikacjach uwierzytelniony. Aby uzyskać więcej informacji i obejrzeć przykład, zobacz [uwierzytelniania formularzy w aplikacjach](http://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7).  
  
> [!IMPORTANT]
>  Podczas przekierowania międzyaplikacyjnej są dozwolone, witryny jest narażony na zabezpieczeniach kieruje użytkowników do złośliwych witryn sieci Web, która używa strony logowania do witryny. Zawsze upewnij się, że adres URL przekierowania, który jest zwracany przez <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metody jest adresem URL, których oczekujesz, dzięki czemu można było się, że przekierowuje tylko dla zatwierdzonych witryn sieci Web. Należy także sprawdzić, czy adres URL przekierowania używa odpowiedni protokół (HTTP lub HTTPS). Do wykonania tych weryfikacji, można dodać program obsługi zdarzeń zwrotu do strony logowania, lub można dodać program obsługi <xref:System.Web.UI.WebControls.Login.LoggedIn> zdarzenia <xref:System.Web.UI.WebControls.Login> kontroli.  
  
   
  
## Examples  
 Poniższy kod ustawia przykład `enableCrossAppRedirects` atrybutu `true` w pliku Web.config dla aplikacji ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri"  
    requireSSL="true"   
    enableCrossAppRedirects="true" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFormsAuthentication">
      <MemberSignature Language="C#" Value="public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableFormsAuthentication(class System.Collections.Specialized.NameValueCollection configurationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableFormsAuthentication (configurationData As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableFormsAuthentication(System::Collections::Specialized::NameValueCollection ^ configurationData);" />
      <MemberSignature Language="F#" Value="static member EnableFormsAuthentication : System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="System.Web.Security.FormsAuthentication.EnableFormsAuthentication configurationData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationData" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="configurationData">Kolekcji nazwa wartość, która zawiera wartości "defaultUrl" i/lub "loginUrl". Parametr może być wartość null, jeśli nie znajdują się wartości dla domyślnego adresu URL lub adres URL logowania.</param>
        <summary>Umożliwia uwierzytelnianie formularzy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> właściwość `null`, że właściwość jest ustawiona na wartość domyślną adres URL z `configurationData` parametru. Jeśli <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> właściwość `null`, że właściwość jest ustawiona na wartość adres URL logowania z `configurationData` parametru.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Aplikacja nie jest w fazie uruchamiania wstępnego inicjowania.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encrypt(class System.Web.Security.FormsAuthenticationTicket ticket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encrypt (ticket As FormsAuthenticationTicket) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encrypt(System::Web::Security::FormsAuthenticationTicket ^ ticket);" />
      <MemberSignature Language="F#" Value="static member Encrypt : System.Web.Security.FormsAuthenticationTicket -&gt; string" Usage="System.Web.Security.FormsAuthentication.Encrypt ticket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticket" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="ticket">
          <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> Obiektu, z którym ma zostać utworzony bilet uwierzytelniania formularzy zaszyfrowane.</param>
        <summary>Tworzy ciąg zawierający bilet uwierzytelniania formularzy zaszyfrowanych odpowiedni do użycia w pliku cookie HTTP.</summary>
        <returns>Ciąg zawierający bilet uwierzytelniania formularzy zaszyfrowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu zapisuje wynik <xref:System.Web.Security.FormsAuthentication.Encrypt%2A> metody w pliku cookie przy użyciu <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> właściwości, a następnie przekierowuje użytkownika do adresu URL zwrócone w wyniku <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metody.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ticket" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FormsCookieName">
      <MemberSignature Language="C#" Value="public static string FormsCookieName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookieName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookieName : string" Usage="System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę pliku cookie używanego do przechowywania biletu uwierzytelniania formularzy.</summary>
        <value>Nazwa pliku cookie używany do przechowywania biletu uwierzytelniania formularzy. Wartość domyślna to ". ASPXAUTH".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `name` atrybutu elementu konfiguracji. <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> Służy do odwoływać się do pliku cookie, który przechowuje <xref:System.Web.Security.FormsAuthenticationTicket> informacji.  
  
   
  
## Examples  
 Poniższy kod ustawia przykład <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> wartość właściwości przy użyciu `name` atrybutu w pliku Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    name=".ASPXFORMSAUTH" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormsCookiePath">
      <MemberSignature Language="C#" Value="public static string FormsCookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookiePath : string" Usage="System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę dla pliku cookie uwierzytelniania formularzy.</summary>
        <value>Ścieżka pliku cookie, w którym przechowywane są informacje biletów uwierzytelniania formularzy. Wartość domyślna to "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `path` atrybutu elementu konfiguracji. <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Określa <xref:System.Web.HttpCookie.Path%2A> dla pliku cookie, który przechowuje <xref:System.Web.Security.FormsAuthenticationTicket> informacji.  
  
   
  
## Examples  
 Poniższy kod ustawia przykład <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> wartość właściwości przy użyciu `path` atrybutu w pliku Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy plik cookie uwierzytelniania, nazwę danego użytkownika.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy plik cookie uwierzytelniania, nazwę danego użytkownika. To nie ustawia plik cookie jako część odpowiedzi wychodzącej tak, aby aplikacja może mieć większą kontrolę nad jak wystawiany jest plik cookie.</summary>
        <returns>
          <see cref="T:System.Web.HttpCookie" /> Zawierający informacje o bilecie zaszyfrowanych uwierzytelniania formularzy. Wartością domyślną dla <see cref="P:System.Web.Security.FormsAuthentication.FormsCookiePath" /> właściwość jest używana.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ścieżka pliku cookie jest określana przez <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool * string -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <see langword="false" />.</param>
        <param name="strCookiePath">
          <see cref="P:System.Web.HttpCookie.Path" /> Pliku cookie uwierzytelniania.</param>
        <summary>Tworzy plik cookie uwierzytelniania, nazwę danego użytkownika. To nie ustawia plik cookie jako część odpowiedzi wychodzącej.</summary>
        <returns>
          <see cref="T:System.Web.HttpCookie" /> Zawierający informacje o bilecie zaszyfrowanych uwierzytelniania formularzy.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRedirectUrl">
      <MemberSignature Language="C#" Value="public static string GetRedirectUrl (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRedirectUrl(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRedirectUrl (userName As String, createPersistentCookie As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRedirectUrl(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetRedirectUrl : string * bool -&gt; string" Usage="System.Web.Security.FormsAuthentication.GetRedirectUrl (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie">Ten parametr jest ignorowany.</param>
        <summary>Zwraca adres URL przekierowania oryginalnego żądania, który spowodował przekierowanie do strony logowania.</summary>
        <returns>Ciąg, który zawiera adres URL przekierowania lub wartość null, jeśli <paramref name="userName" /> ma wartość null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć tej metody, gdy chcesz wykonać przekierowania w kodzie aplikacji, zamiast <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metody.  
  
 <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Metoda zwróci wartość adresu URL określonego w ciągu zapytania za pomocą `ReturnURL` nazwę zmiennej. Na przykład w adresie URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metoda zwraca zwrotny adres URL `caller.aspx`. Jeśli `ReturnURL` zmienna nie istnieje, <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metoda zwraca adres URL w <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> właściwości.  
  
 Program ASP.NET automatycznie dodaje zwrotny adres URL, gdy przeglądarka jest przekierowywana do strony logowania.  
  
 Domyślnie `ReturnUrl` zmiennej musi odwoływać się do strony w bieżącej aplikacji. Jeśli `ReturnUrl` odwołuje się do strony w innej aplikacji lub na innym serwerze <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metody zwraca adres URL w <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> właściwości. Jeśli chcesz zezwolić zwrotny adres URL do odwoływania się do strony spoza bieżącej aplikacji, musisz ustawić <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwości `true` przy użyciu `enableCrossAppRedirects` atrybutu elementu konfiguracji.  

Ta metoda nie powoduje utworzenia pliku cookie.
  
> [!IMPORTANT]
>  Ustawienie <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwość `true` umożliwia międzyaplikacyjnej przekierowania jest potencjalnym zagrożeniem dla bezpieczeństwa. Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwości.  
  
   
  
## Examples  
 Poniższy kod przykład przekierowuje uwierzytelnionych użytkowników do adresu URL zwrócone z <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> metody.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashPasswordForStoringInConfigFile">
      <MemberSignature Language="C#" Value="public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HashPasswordForStoringInConfigFile(string password, string passwordFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashPasswordForStoringInConfigFile (password As String, passwordFormat As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HashPasswordForStoringInConfigFile(System::String ^ password, System::String ^ passwordFormat);" />
      <MemberSignature Language="F#" Value="static member HashPasswordForStoringInConfigFile : string * string -&gt; string" Usage="System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (password, passwordFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.CreateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="passwordFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">Hasło służące do wyznaczania wartości skrótu.</param>
        <param name="passwordFormat">Algorytm wyznaczania wartości skrótu do użycia. <c>passwordFormat</c> jest <see langword="String" /> stanowi jeden z <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" /> wartości wyliczenia.</param>
        <summary>Tworzy skrót hasła przechowywać w pliku konfiguracji na podstawie podanego hasła i algorytm wyznaczania wartości skrótu.</summary>
        <returns>Hasło w formie skrótu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> Metoda tworzy wartość skrótem hasła, które mogą być używane podczas uwierzytelniania formularzy przechowywanie poświadczeń w pliku konfiguracyjnym aplikacji.  
  
 Poświadczenia uwierzytelniania przechowywany w pliku konfiguracji aplikacji są używane przez <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> metody do weryfikowania haseł dla użytkowników aplikacji. Alternatywnie można użyć członkostwa ASP.NET do przechowywania poświadczeń użytkownika. Aby uzyskać więcej informacji, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera nazwę użytkownika, hasło i typ wyznaczania wartości skrótu i wyświetla sekcji konfiguracji, który zawiera definicję użytkownika i hasło w formie skrótu.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationHashPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationHashPassword/CS/formsauthenticationhashpasswordcs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationHashPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationHashPassword/VB/formsauthenticationhashpasswordvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="password" /> jest <see langword="null" />  
  
—lub— 
 <paramref name="passwordFormat" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="passwordFormat" /> nie jest prawidłowym <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" /> wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Initialize();" />
      <MemberSignature Language="F#" Value="static member Initialize : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje <see cref="T:System.Web.Security.FormsAuthentication" /> obiektu zgodnie z ustawieniami konfiguracji dla aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.Initialize%2A> Metoda jest wywoływana, gdy <xref:System.Web.Security.FormsAuthenticationModule> tworzy wystąpienie <xref:System.Web.Security.FormsAuthentication> klasy. Ta metoda nie jest przeznaczona do wywoływania z kodu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public static bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jest włączone uwierzytelnianie formularzy.</summary>
        <value>
          <see langword="true" /> Jeśli jest włączone uwierzytelnianie formularzy; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginUrl">
      <MemberSignature Language="C#" Value="public static string LoginUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string LoginUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoginUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LoginUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoginUrl : string" Usage="System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera adres URL dla strony logowania, która <see cref="T:System.Web.Security.FormsAuthentication" /> nastąpi przekierowanie klasy.</summary>
        <value>Adres URL logowania strona kodowa <see cref="T:System.Web.Security.FormsAuthentication" /> nastąpi przekierowanie klasy. Wartość domyślna to "login.aspx."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `loginUrl` atrybutu elementu konfiguracji. <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> Jest używany przez <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metody.  
  
   
  
## Examples  
 Poniższy kod ustawia przykład `loginUrl` atrybutu w pliku Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectFromLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekierowuje uwierzytelnionego użytkownika do pierwotnie żądanego adresu URL lub domyślnego adresu URL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <see langword="false" />.</param>
        <summary>Przekierowuje uwierzytelnionego użytkownika do pierwotnie żądanego adresu URL lub domyślnego adresu URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Metoda wykonuje przekierowanie do adresu URL określonego w ciągu zapytania za pomocą `ReturnURL` nazwę zmiennej. Na przykład w adresie URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metoda przekierowuje do zwrotny adres URL `caller.aspx`. Jeśli `ReturnURL` zmienna nie istnieje, <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metoda przekierowuje pod adres URL w <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> właściwości.  
  
 Program ASP.NET automatycznie dodaje zwrotny adres URL, gdy przeglądarka jest przekierowywana do strony logowania.  
  
 Domyślnie `ReturnUrl` zmiennej musi odwoływać się do strony w bieżącej aplikacji. Jeśli `ReturnUrl` odwołuje się do strony w innej aplikacji lub na innym serwerze <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metody przekierowuje pod adres URL w <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> właściwości. Jeśli chcesz zezwolić przekierowuje do strony spoza bieżącej aplikacji, musisz ustawić <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwości `true` przy użyciu `enableCrossAppRedirects` atrybutu elementu konfiguracji.  
  
> [!IMPORTANT]
>  Ustawienie <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwość `true` umożliwia międzyaplikacyjnej przekierowania jest potencjalnym zagrożeniem dla bezpieczeństwa. Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwości.  
  
 Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> właściwość jest `true`oraz `ReturnUrl` zmiennej znajduje się w bieżącej aplikacji lub <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwość `true`, a następnie <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metoda wystawia bilet uwierzytelnienia i umieszcza je w za pomocą plików cookie domyślne <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metody.  
  
 Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false` i ścieżce przekierowania do adresu URL w bieżącej aplikacji, bilet jest wystawiony jako część adresu URL przekierowania. Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> jest `true`i przekierowywanie adresu URL nie odwołuje się do strony w bieżącej aplikacji <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metoda wystawia bilet uwierzytelnienia i umieszcza je w <xref:System.Web.HttpRequest.QueryString%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu przekierowuje użytkowników zweryfikowanych albo pierwotnie żądanego adresu URL lub <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. Przykład kodu używa członkostwa ASP.NET do weryfikowania użytkowników. Aby uzyskać więcej informacji na temat członkostwa ASP.NET, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
> [!IMPORTANT]
>  Ten przykład zawiera pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Zwrotny adres URL określony w ciąg zapytania zawiera protokołu innego niż HTTP: lub HTTPS:.</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <see langword="false" />.</param>
        <param name="strCookiePath">Ścieżka pliku cookie biletu uwierzytelniania formularzy.</param>
        <summary>Przekierowuje uwierzytelnionego użytkownika do pierwotnie żądanego adresu URL lub domyślnego adresu URL przy użyciu ścieżki pliku cookie w określonym dla pliku cookie uwierzytelniania formularzy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Metoda przekierowuje do zwrotny adres URL określony w ciąg zapytania za pomocą `ReturnURL` nazwę zmiennej. Na przykład w adresie URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metoda przekierowuje do zwrotny adres URL `caller.aspx`. Jeśli `ReturnURL` zmienna nie istnieje, <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metoda przekierowuje pod adres URL w <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> właściwości.  
  
 Program ASP.NET automatycznie dodaje zwrotny adres URL, gdy przeglądarka jest przekierowywana do strony logowania.  
  
 Domyślnie `ReturnUrl` zmiennej musi odwoływać się do strony w bieżącej aplikacji. Jeśli `ReturnUrl` odwołuje się do strony w innej aplikacji lub na innym serwerze <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metoda przekierowuje pod adres URL w <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> właściwości. Jeśli chcesz zezwolić przekierowuje do strony spoza bieżącej aplikacji, musisz ustawić <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwości `true` przy użyciu `enableCrossAppRedirects` atrybutu elementu konfiguracji.  
  
> [!IMPORTANT]
>  Ustawienie <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwość `true` umożliwia międzyaplikacyjnej przekierowania jest potencjalnym zagrożeniem dla bezpieczeństwa. Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwości.  
  
 Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> właściwość jest `true`oraz `ReturnUrl` zmiennej znajduje się w bieżącej aplikacji lub <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> właściwość `true`, a następnie <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metoda wystawia bilet uwierzytelnienia i umieszcza je w określone przez plik cookie `strCookiePath` przy użyciu parametru <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metody.  
  
 Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false` i ścieżce przekierowania do adresu URL w bieżącej aplikacji, bilet jest wystawiony jako część adresu URL przekierowania. Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> jest `true`i przekierowywanie adresu URL nie odwołuje się do strony w bieżącej aplikacji <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metoda wystawia bilet uwierzytelnienia i umieszcza je w <xref:System.Web.HttpRequest.QueryString%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Zwrotny adres URL określony w ciąg zapytania zawiera protokołu innego niż HTTP: lub HTTPS:.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekierowuje przeglądarkę do adresu URL logowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Metoda przekierowuje przeglądarkę, aby <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Metoda usuwaj pliku cookie uwierzytelniania formularzy. Możesz użyć <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metody w połączeniu z <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metoda wylogowanie się jednego użytkownika i zezwolić na innego użytkownika do logowania.  
  
 W odróżnieniu od <xref:System.Web.HttpResponse.Redirect%2A?displayProperty=nameWithType> metody, Metoda ta nie kończy żądanie, wywołując <xref:System.Web.HttpResponse.End%2A?displayProperty=nameWithType>. Oznacza to, że kod, który następuje po <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> uruchomi wywołania metody.  
  
   
  
## Examples  
 Poniższy przykład kodu usuwa przy użyciu pliku cookie uwierzytelniania formularzy <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metody, a następnie przekierowuje użytkownika logowania na stronie przy użyciu <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metody.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage();" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przekierowuje przeglądarkę do adresu URL logowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Metoda przekierowuje przeglądarkę, aby <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Metoda usuwaj pliku cookie uwierzytelniania formularzy. Możesz użyć <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metody w połączeniu z <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metoda wylogowanie się jednego użytkownika i zezwolić na innego użytkownika do logowania.  
  
   
  
## Examples  
 Poniższy przykład kodu usuwa przy użyciu pliku cookie uwierzytelniania formularzy <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metody, a następnie przekierowuje użytkownika logowania na stronie przy użyciu <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metody.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage (string extraQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage(string extraQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage (extraQueryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage(System::String ^ extraQueryString);" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage extraQueryString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extraQueryString">Ciąg zapytania zawierający adres URL przekierowania.</param>
        <summary>Przekierowuje przeglądarkę do adresu URL logowania za pomocą określony ciąg zapytania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Metoda przekierowuje przeglądarkę, aby <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> i zawiera `extraQueryString` wartość jako <xref:System.Management.ManagementQuery.QueryString%2A> dla adresu URL.  
  
 <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> Metoda usuwaj pliku cookie uwierzytelniania formularzy. Możesz użyć <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metody w połączeniu z <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metoda wylogowanie się jednego użytkownika i zezwolić na innego użytkownika do logowania.  
  
   
  
## Examples  
 Poniższy przykład kodu usuwa przy użyciu pliku cookie uwierzytelniania formularzy <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metody, a następnie przekierowuje użytkownika logowania na stronie przy użyciu <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metody.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signout2cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signout2vb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTicketIfOld">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld(class System.Web.Security.FormsAuthenticationTicket tOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RenewTicketIfOld (tOld As FormsAuthenticationTicket) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ RenewTicketIfOld(System::Web::Security::FormsAuthenticationTicket ^ tOld);" />
      <MemberSignature Language="F#" Value="static member RenewTicketIfOld : System.Web.Security.FormsAuthenticationTicket -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.RenewTicketIfOld tOld" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tOld" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="tOld">Bilet uwierzytelniania formularzy, aby zaktualizować.</param>
        <summary>Warunkowo aktualizacji problem daty i godziny i daty wygaśnięcia oraz czas <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</summary>
        <returns>Zaktualizowany interfejs <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.RenewTicketIfOld%2A> Metody aktualizacji, datę i godzinę wygaśnięcia z podanym <xref:System.Web.Security.FormsAuthenticationTicket> Jeśli bieżąca data i godzina minus <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> wartość jest większa niż <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> wartość minus bieżącą datę i godzinę.  
  
 --Ticket będą aktualizowane przy użyciu <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> bieżącą datę i godzinę ustawioną właściwość i <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> właściwość ustawioną na bieżącej daty i godziny powiększoną o oryginalnym <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> wartość minus oryginalny <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> wartość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireSSL">
      <MemberSignature Language="C#" Value="public static bool RequireSSL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequireSSL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequireSSL : bool" Usage="System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy plik cookie uwierzytelniania formularzy wymaga protokołu SSL w celu zwrócenia na serwer.</summary>
        <value>
          <see langword="true" /> Jeśli protokół SSL jest wymagany, aby przywrócić plik cookie uwierzytelniania formularzy z serwerem; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Wartość właściwości jest ustawiana w pliku konfiguracji dla aplikacji ASP.NET przy użyciu `requireSSL` atrybutu elementu konfiguracji. Można określić w pliku Web.config dla aplikacji ASP.NET czy protokół SSL (Secure Sockets Layer) jest wymagane do zwrócenia pliku cookie uwierzytelniania formularzy z serwerem, ustawiając `requireSSL` atrybutu. Aby uzyskać więcej informacji, zobacz <xref:System.Web.HttpCookie.Secure%2A>.  
  
 Zalecane jest, jeśli skonfigurujesz `requireSSL` jako `false`, możesz również skonfigurować `slidingExpiration` jako `false`, aby zmniejszyć ilość czasu, dla którego bilet jest nieprawidłowy.  
  
   
  
## Examples  
 Poniższy kod ustawia przykład `requireSSL` atrybutu w pliku Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    requireSSL="true"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy bilet uwierzytelnienia z podaną nazwą użytkownika i dodaje go do kolekcji plików cookie odpowiedzi lub do adresu URL, jeśli używasz uwierzytelniania cookieless.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Metoda dodaje bilet uwierzytelniania formularzy do zbierania plików cookie lub adresie URL, jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false`. Bilet uwierzytelniania formularzy dostarcza informacje uwierzytelniania formularzy dla następnego żądania wprowadzone przez przeglądarkę. Za pomocą uwierzytelniania formularzy, można użyć <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metody uwierzytelnić użytkownika, ale nadal zachowanie kontroli nad nawigacji za pomocą przekierowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika. Nie ma do mapowania konta Windows.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy bilet uwierzytelnienia z podaną nazwą użytkownika i dodaje go do kolekcji plików cookie odpowiedzi lub do adresu URL, jeśli używasz uwierzytelniania cookieless.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Metoda dodaje bilet uwierzytelniania formularzy do zbierania plików cookie lub do adresu URL Jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false`. Bilet uwierzytelniania formularzy dostarcza informacje uwierzytelniania formularzy dla następnego żądania wprowadzone przez przeglądarkę. Za pomocą uwierzytelniania formularzy, można użyć <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metody uwierzytelnić użytkownika, ale nadal zachowanie kontroli nad nawigacji za pomocą przekierowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> jest <see langword="true" /> i <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> jest <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nazwa uwierzytelnionego użytkownika.</param>
        <param name="createPersistentCookie">
          <see langword="true" /> Aby utworzyć trwały plik cookie (taki, który jest zapisywany w wielu sesjach przeglądarki); w przeciwnym razie <see langword="false" />.</param>
        <param name="strCookiePath">Ścieżka pliku cookie biletu uwierzytelniania formularzy.</param>
        <summary>Tworzy bilet uwierzytelnienia z podaną nazwą użytkownika i dodaje je do kolekcji plików cookie odpowiedzi, korzystając ze ścieżki podanej w pliku cookie lub przy użyciu adresu URL, jeśli używasz uwierzytelniania cookieless.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> Metoda dodaje bilet uwierzytelniania formularzy do zbierania plików cookie lub adresie URL, jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false`. Bilet uwierzytelniania formularzy dostarcza informacje uwierzytelniania formularzy dla następnego żądania wprowadzone przez przeglądarkę. Za pomocą uwierzytelniania formularzy, można użyć <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> metody uwierzytelnić użytkownika, ale nadal zachowanie kontroli nad nawigacji za pomocą przekierowania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> jest <see langword="true" /> i <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> jest <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignOut();" />
      <MemberSignature Language="F#" Value="static member SignOut : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa biletów uwierzytelniania formularzy z przeglądarki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.SignOut%2A> Metoda usuwa dane biletu uwierzytelniania formularzy z pliku cookie lub adresie URL, jeśli <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> jest `false`. Możesz użyć <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metody w połączeniu z <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metoda wylogowanie się jednego użytkownika i zezwolić na innego użytkownika do logowania.  
  
 Jeśli uruchamiasz wyłącznie w trybie cookieless lub jeśli obsługujesz uwierzytelnionego i anonimowych użytkowników, należy jawnie kontrolować przekierowanie do strony logowania, w razie potrzeby logiki biznesowej specjalne można wykonać w wyniku usuwania anonimowy identyfikator.  
  
 Gdy <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metoda jest wywoływana, przekierowanie do strony logowania w aplikacji jest wykonywana przez wywołanie <xref:System.Web.HttpResponse.Redirect%2A> metody z `endResponse` parametr `false`. Przekierowania, nie odbywa się do momentu zakończenia bieżącej strony wykonywania, dzięki czemu można uruchomić dodatkowy kod. Jeśli kod nie zawiera jawne przekierowanie do innej strony, użytkownik jest przekierowany do strony logowania, skonfigurowany w pliku konfiguracji aplikacji.  
  
 Wywoływanie <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metody powoduje usunięcie tylko pliku cookie uwierzytelniania formularzy. Serwer sieci Web nie przechowuje biletów uwierzytelniania prawidłowe i wygasłe do późniejszego porównania. Dzięki temu lokacji narażony na ataki metodą powtórzeń Jeśli złośliwy użytkownik uzyska dostęp do pliku cookie uwierzytelniania formularzy prawidłowe. Zwiększające bezpieczeństwo, korzystając z pliku cookie uwierzytelniania formularzy, należy wykonać następujące czynności:  
  
-   Na użytek bezwzględnych wygaśnięcia plików cookie uwierzytelniania formularzy, ustawiając <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> właściwość `false`. Ogranicza to okno odtworzone przejętego pliku cookie.  
  
-   Tylko wystawiania i akceptowania plików cookie uwierzytelniania za pośrednictwem Secure Sockets Layer (SSL), ustawiając <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> właściwość `true` i uruchamiając całej witryny sieci Web w ramach protokołu SSL. Ustawienie <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> właściwość `true` gwarantuje, że ASP.NET nigdy nie przesyła plik cookie uwierzytelniania w przeglądarce za pośrednictwem połączenia protokołu SSL; jednak klient nie może być przestrzegać bezpieczne ustawienie w pliku cookie. Oznacza to, że klient może wysyłać pliku cookie uwierzytelniania formularzy za pośrednictwem połączenia protokołu SSL, dlatego opuszczania podatne na przejęcie kontroli. Klient może uniemożliwić wysyłania pliku cookie uwierzytelniania formularzy w zabezpieczeniu, uruchamiając całej witryny sieci Web w ramach protokołu SSL.  
  
-   Korzystanie z magazynu trwałego na serwerze do rejestrowania, gdy użytkownik zaloguje się z witryny sieci Web, a następnie użyj zdarzeń aplikacji, takich jak <xref:System.Web.HttpApplication.PostAuthenticateRequest> zdarzenia w celu określenia, czy bieżący użytkownik został uwierzytelniony za pomocą uwierzytelniania formularzy. Jeśli użytkownik został uwierzytelniony za pomocą uwierzytelniania formularzy oraz jeśli wskazuje informacje w trwałym magazynie użytkownik zaloguje natychmiast wyczyść pliku cookie uwierzytelniania i przekierowania przeglądarki, wróć do strony logowania. Po pomyślnym zalogowaniu aktualizacji magazynu, aby odzwierciedlić, że użytkownik jest zalogowany. Ta metoda aplikacji musi śledzić stan zalogowanego użytkownika i należy wymusić bezczynności użytkownikom na logowanie.  
  
   
  
## Examples  
 Poniższy przykład kodu usuwa przy użyciu pliku cookie uwierzytelniania formularzy <xref:System.Web.Security.FormsAuthentication.SignOut%2A> metody, a następnie przekierowuje użytkownika logowania na stronie przy użyciu <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> metody.  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public static bool SlidingExpiration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SlidingExpiration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : bool" Usage="System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy przedłużanie ważności jest włączone.</summary>
        <value>
          <see langword="true" /> Jeśli wygasanie przewijana jest włączone; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> Wartość właściwości jest ustawiana za pomocą `slidingExpiration` atrybutu elementu konfiguracji.  
  
 Przedłużanie ważności resetuje okres ważności prawidłowy plik cookie, jeśli pojawi się żądanie i ponad połowa tego interwału limitu czasu upłynął. Jeśli plik cookie wygasa, użytkownik musi zostać ponownie uwierzytelniony. Ustawienie <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> właściwości `false` może zwiększyć bezpieczeństwo aplikacji poprzez ograniczenie czasu, dla którego plik cookie jest prawidłowy, oparte na ze skonfigurowanym ustawieniem `timeout` wartość.  
  
 Zaleca się w przypadku skonfigurowania `requireSSL` jako `false`, możesz również skonfigurować `slidingExpiration` jako `false`, aby zmniejszyć ilość czasu, dla którego bilet jest nieprawidłowy.  
  
   
  
## Examples  
 Poniższy kod ustawia przykład `slidingExpiration` atrybutu `false` w pliku Web.config dla aplikacji ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    name=".ASPXFORMSAUTH"  
    cookieless="UseCookies"  
    requireSSL="true"   
    slidingExpiration="false" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TicketCompatibilityMode">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TicketCompatibilityMode As TicketCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::TicketCompatibilityMode TicketCompatibilityMode { System::Web::Configuration::TicketCompatibilityMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TicketCompatibilityMode : System.Web.Configuration.TicketCompatibilityMode" Usage="System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TicketCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ma być używany uniwersalny czas koordynowany (UTC) lub czas lokalny dla daty wygaśnięcia biletu.</summary>
        <value>Wartość, która wskazuje, czy ma być używany uniwersalny czas koordynowany (UTC) lub czas lokalny dla daty wygaśnięcia biletu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public static TimeSpan Timeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan Timeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan" Usage="System.Web.Security.FormsAuthentication.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ilość czasu pozostającego do wygaśnięcia biletu uwierzytelniania.</summary>
        <value>Wygasa ilość czasu przed bilet uwierzytelnienia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>