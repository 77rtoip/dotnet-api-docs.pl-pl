<Type Name="Membership" FullName="System.Web.Security.Membership">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="154b580fad2f113d6f9ace11e7f2e904f5c253df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30585901" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Membership" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Membership extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Membership" />
  <TypeSignature Language="VB.NET" Value="Public Class Membership" />
  <TypeSignature Language="C++ CLI" Value="public ref class Membership abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Weryfikuje poświadczenia użytkownika i zarządza ustawieniami użytkownika. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership> Klasa jest używana w aplikacji ASP.NET do zweryfikowania poświadczeń użytkowników i Zarządzaj ustawieniami użytkownika, takie jak hasła i adresów e-mail. <xref:System.Web.Security.Membership> Klasa może być używana samodzielnie lub w połączeniu z <xref:System.Web.Security.FormsAuthentication> do utworzenia całego systemu w celu uwierzytelniania użytkowników witryny lub aplikacji sieci Web. <xref:System.Web.UI.WebControls.Login> Hermetyzuje kontroli <xref:System.Web.Security.Membership> klasy, aby zapewnić wygodny mechanizm Walidacja użytkowników.  
  
> [!NOTE]
>  Jeśli nie masz doświadczenia z funkcjami członkostwa programu ASP.NET, zobacz [wprowadzenie do członkostwa](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980) przed kontynuowaniem. Aby uzyskać listę innych tematów dotyczących członkostwa, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 <xref:System.Web.Security.Membership> Klasa udostępnia urządzenia:  
  
-   Tworzenie nowych użytkowników.  
  
-   Zapisywanie informacji o członkostwie (nazwy użytkowników, hasła, adresy e-mail i obsługi danych) w programie Microsoft SQL Server lub w magazynie danych alternatywnych.  
  
-   Uwierzytelnianie użytkowników, którzy witrynę. Użytkownicy mogą być uwierzytelniani programowo, albo użyć <xref:System.Web.UI.WebControls.Login> formantu można utworzyć systemu pełną uwierzytelniania, która wymaga niewielkiego lub żadnego kodu.  
  
-   Zarządzanie hasłami, która obejmuje tworzenie, zmienianie, pobieranie i resetowania ich i tak dalej. Opcjonalnie można skonfigurować członkostwa ASP.NET wymaga pytanie dotyczące hasła i odpowiedzi do uwierzytelniania żądań resetowania lub pobieranie hasła dla użytkowników, którzy pamiętasz swojego hasła.  
  
 Mimo że członkostwa ASP.NET jest funkcją autonomiczny ASP.NET dla uwierzytelniania, mogą można zintegrować z zarządzania rolami ASP.NET do świadczenia usług autoryzacji dla witryny. Można również zintegrować członkostwa użytkownika ASP.NET <xref:System.Web.Profile> zapewnienie dostosowanie specyficzne dla aplikacji, które można dostosować do poszczególnych użytkowników. Aby uzyskać więcej informacji, zobacz [opis roli zarządzania](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6) i [Przegląd właściwości profilu platformy ASP.NET](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d).  
  
 <xref:System.Web.Security.Membership> Klasy zależy od dostawców członkostwa do komunikowania się ze źródłem danych. Zawiera programu .NET Framework <xref:System.Web.Security.SqlMembershipProvider>, która przechowuje informacje o użytkowniku w bazie danych programu Microsoft SQL Server i <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, co pozwala przechowywać informacje użytkownika na serwerze usługi Active Directory lub tryb aplikacji usługi Active Directory (ADAM). Można też wdrożyć dostawcę członkostwa niestandardowych do komunikowania się ze źródłem danych alternatywnych, które mogą być używane przez <xref:System.Web.Security.Membership> klasy. Dziedzicz dostawców niestandardowych członkostwa <xref:System.Web.Security.MembershipProvider> klasy abstrakcyjnej. Aby uzyskać więcej informacji, zobacz [implementowanie dostawcy członkostwa](http://msdn.microsoft.com/library/d8658b8e-c962-4f64-95e1-4acce35e4582).  
  
 Domyślnie członkostwo ASP.NET jest włączona dla wszystkich aplikacji ASP.NET. Domyślnym dostawcą członkostwa jest <xref:System.Web.Security.SqlMembershipProvider> i jest określony w konfiguracji komputera o nazwie `AspNetSqlProvider`. Domyślne wystąpienie elementu <xref:System.Web.Security.SqlMembershipProvider> jest skonfigurowany do nawiązania połączenia lokalnego wystąpienia programu Microsoft SQL Server.  
  
 Można zmodyfikować ustawienia domyślne, aby określić <xref:System.Web.Security.SqlMembershipProvider> innych niż `AspNetSqlProvider` wystąpienia jako domyślnego dostawcę, lub określ wystąpienie dostawcy niestandardowego jako domyślnego dostawcę dla aplikacji ASP.NET przy użyciu pliku Web.config. Konfiguracja członkostwa programu ASP.NET można określić dla aplikacji sieci Web przy użyciu sekcji konfiguracji w pliku Web.config. Można użyć `providers` podsekcji sekcji, aby określić inną niż dostawcy domyślnego dostawcę członkostwa. Na przykład poniższa sekcja usuwa domyślnych dostawców członkostwa z bieżącej konfiguracji aplikacji i dodaje nowego dostawcę o nazwie `SqlProvider` które nawiązuje połączenie z wystąpieniem programu SQL Server o nazwie `AspSqlServer`.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje stronę logowania dla aplikacji ASP.NET skonfigurowane do używania uwierzytelniania formularzy i członkostwa ASP.NET. Jeśli podane poświadczenia użytkownika są nieprawidłowe, zostanie wyświetlony komunikat z użytkownikiem. W przeciwnym razie użytkownik jest przekierowywany do pierwotnie żądanego adresu URL za pomocą <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metody.  
  
> [!NOTE]
>  Kontrolek logowania programu ASP.NET (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, i <xref:System.Web.UI.WebControls.PasswordRecovery>) Hermetyzowanie niemal wszystkie logiki wymagane do monit o podanie poświadczeń i zweryfikować poświadczeń w systemu członkostwa i może być używane zamiast programowe sprawdzanie <xref:System.Web.Security.Membership> klasy.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aplikacji.</summary>
        <value>Nazwa aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ApplicationName%2A> Służy do identyfikowania użytkowników specyficzne dla aplikacji. Oznacza to, ta sama nazwa użytkownika może istnieć w bazie danych dla wielu aplikacji ASP.NET, które określić inną <xref:System.Web.Security.Membership.ApplicationName%2A>. Dzięki temu wiele aplikacji może używać tej samej bazy danych do przechowywania informacji o użytkowniku bez powodowania konfliktów nazw zduplikowanego użytkownika. Alternatywnie wiele aplikacji programu ASP.NET można użyć tej samej bazy danych użytkownika, określając takie same <xref:System.Web.Security.Membership.ApplicationName%2A>. <xref:System.Web.Security.Membership.ApplicationName%2A> Można ustawić programowo i deklaratywnie w konfiguracji dla aplikacji sieci Web.  
  
> [!CAUTION]
>  Ponieważ domyślnego pojedynczego wystąpienia dostawcy członkostwa jest używana dla wszystkich żądań obsłużonych przez <xref:System.Web.HttpApplication> obiekt może mieć wiele żądań wykonywanych równocześnie i próby ustawienia <xref:System.Web.Security.Membership.ApplicationName%2A> wartości właściwości. <xref:System.Web.Security.Membership.ApplicationName%2A> Właściwość nie jest wątku bezpieczne dla wielu operacji zapisu, a zmiana <xref:System.Web.Security.Membership.ApplicationName%2A> wartość właściwości może spowodować nieoczekiwane zachowanie dla wielu użytkowników aplikacji. Zaleca się unikać pisania kodu, który umożliwia użytkownikom ustawianie <xref:System.Web.Security.Membership.ApplicationName%2A> właściwości, chyba że należy. Przykładem zastosowania w przypadku, gdy ustawienie <xref:System.Web.Security.Membership.ApplicationName%2A> właściwości mogą być wymagane jest administracyjne aplikacji, która zarządza danych o członkostwie dla wielu aplikacji. Takiej aplikacji powinna być aplikacją pojedynczego użytkownika, a nie aplikacji sieci Web.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia element `system.web` sekcji w pliku Web.config dla aplikacji ASP.NET. Określa, że aplikacja korzysta z <xref:System.Web.Security.SqlMembershipProvider> wystąpienie i konfiguruje <xref:System.Web.Security.Membership.ApplicationName%2A> do `MyApplication`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje nowego użytkownika do magazynu danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika dla nowego użytkownika.</param>
        <param name="password">Hasło dla nowego użytkownika.</param>
        <summary>Dodaje nowego użytkownika do magazynu danych.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiektu dla nowo utworzonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser> obiektu dla nowo utworzonego użytkownika. Jeśli tworzenie użytkownika nie powiedzie się, <xref:System.Web.Security.MembershipCreateUserException> jest generowany. Możesz pobrać <xref:System.Web.Security.MembershipCreateStatus> wartość z <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> właściwość <xref:System.Web.Security.MembershipCreateUserException> wskazujące, dlaczego Tworzenie użytkownika nie powiodło się.  
  
 Po utworzeniu użytkownika członkostwa i zawierają odwołanie do <xref:System.Web.Security.MembershipUser> obiekt dla tego użytkownika, można zmodyfikować ustawienia dla tego użytkownika z <xref:System.Web.Security.MembershipUser> metod publicznych, takich jak <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> dla aplikacji, gdzie <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> jest `true`, lub przez ustawienie wartości właściwości <xref:System.Web.Security.MembershipUser> obiekt i przekazywanie ich do <xref:System.Web.Security.Membership.UpdateUser%2A> metody.  
  
 Jeśli użytkownik już istnieje w źródle danych dla aplikacji, możesz uzyskać <xref:System.Web.Security.MembershipUser> obiektu dla istniejącego użytkownika z <xref:System.Web.Security.Membership.GetUser%2A> metody.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Udostępnia opcję, aby wymagać unikatowego adresu e-mail dla każdego użytkownika. Jeśli <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> właściwość jest `true`, należy użyć jednej z <xref:System.Web.Security.Membership.CreateUser%2A> przeciążeń, które można określić adres e-mail użytkownika, są tworzone. W przeciwnym razie <xref:System.Web.Security.MembershipCreateUserException> zostanie wygenerowany.  
  
 Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nowego użytkownika dla aplikacji ASP.NET skonfigurowane do używania uwierzytelniania formularzy i członkostwa ASP.NET. Jeśli użytkownik nie jest pomyślnie utworzony, użytkownikowi zostanie wyświetlony komunikat. W przeciwnym razie użytkownik jest przekierowywany na stronę logowania dla aplikacji.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">Użytkownik nie został utworzony. Sprawdź <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> właściwość <see cref="T:System.Web.Security.MembershipCreateStatus" /> wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika dla nowego użytkownika.</param>
        <param name="password">Hasło dla nowego użytkownika.</param>
        <param name="email">Adres e-mail dla nowego użytkownika.</param>
        <summary>Dodaje nowego użytkownika z określonym adresem e-mail do magazynu danych.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiektu dla nowo utworzonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser> obiektu dla nowo utworzonego użytkownika. Jeśli tworzenie użytkownika nie powiedzie się, <xref:System.Web.Security.MembershipCreateUserException> jest generowany. Możesz pobrać <xref:System.Web.Security.MembershipCreateStatus> wartość z <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> właściwość <xref:System.Web.Security.MembershipCreateUserException> wskazujące, dlaczego Tworzenie użytkownika nie powiodło się.  
  
 Po utworzeniu użytkownika członkostwa i zawierają odwołanie do <xref:System.Web.Security.MembershipUser> obiekt dla tego użytkownika, można zmodyfikować ustawienia dla tego użytkownika z <xref:System.Web.Security.MembershipUser> metod publicznych, takich jak <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> dla aplikacji, gdzie <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> jest `true`, lub przez ustawienie wartości właściwości <xref:System.Web.Security.MembershipUser> obiekt i przekazywanie ich do <xref:System.Web.Security.Membership.UpdateUser%2A> metody.  
  
 Jeśli użytkownik już istnieje w źródle danych dla aplikacji, możesz uzyskać <xref:System.Web.Security.MembershipUser> obiektu dla istniejącego użytkownika z <xref:System.Web.Security.Membership.GetUser%2A> metody.  
  
 Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nowego użytkownika dla aplikacji ASP.NET skonfigurowane do używania uwierzytelniania formularzy i członkostwa ASP.NET. Jeśli użytkownik nie jest pomyślnie utworzony, użytkownikowi zostanie wyświetlony komunikat. W przeciwnym razie użytkownik jest przekierowywany na stronę logowania dla aplikacji.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">Użytkownik nie został utworzony. Sprawdź <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> właściwość <see cref="T:System.Web.Security.MembershipCreateStatus" /> wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika dla nowego użytkownika.</param>
        <param name="password">Hasło dla nowego użytkownika.</param>
        <param name="email">Adres e-mail dla nowego użytkownika.</param>
        <param name="passwordQuestion">Wartość pytanie dotyczące hasła dla użytkownika członkostwa.</param>
        <param name="passwordAnswer">Wartość odpowiedzi do hasła dla użytkownika członkostwa.</param>
        <param name="isApproved">Wartość logiczna wskazująca, czy nowy użytkownik jest zatwierdzony do logowania.</param>
        <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus" /> wskazującą, czy użytkownik został pomyślnie utworzony lub powód tworzenie nie powiodło się.</param>
        <summary>Dodaje nowego użytkownika z określonymi wartościami właściwości do magazynu danych i zwraca parametr stanu wskazujący, że użytkownik został pomyślnie utworzony lub powód utworzenie użytkownika zakończone niepowodzeniem.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiektu dla nowo utworzonego użytkownika. Jeśli nie utworzono użytkownika, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser> obiektu dla nowo utworzonego użytkownika. Tworzenie użytkownika nie powiedzie się, można przywrócić <xref:System.Web.Security.MembershipCreateStatus> wartość z `status` parametr wyjściowy, który wskazuje, dlaczego Tworzenie użytkownika nie powiodło się.  
  
 <xref:System.Web.Security.Membership.CreateUser%2A> Metoda zwróci `null` Jeśli `password` jest ciągiem pustym lub `null`, `username` jest ciągiem pustym lub `null` lub przecinka (,), zawiera `passwordQuestion` nie jest `null` i jest ciągiem pustym lub `passwordAnswer` nie jest `null` i zawiera pusty ciąg.  
  
 Po utworzeniu użytkownika członkostwa i zawierają odwołanie do <xref:System.Web.Security.MembershipUser> obiekt dla tego użytkownika, można zmodyfikować ustawienia dla tego użytkownika z <xref:System.Web.Security.MembershipUser> metody publiczne i przez ustawienie wartości właściwości <xref:System.Web.Security.MembershipUser> obiektu, a następnie przekazywanie <xref:System.Web.Security.MembershipUser> do obiektu <xref:System.Web.Security.Membership.UpdateUser%2A> metody.  
  
 Jeśli użytkownik już istnieje w źródle danych dla aplikacji, możesz uzyskać <xref:System.Web.Security.MembershipUser> obiektu dla istniejącego użytkownika z <xref:System.Web.Security.Membership.GetUser%2A> metody.  
  
 Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru ciągu.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nowego użytkownika dla aplikacji ASP.NET skonfigurowane do używania uwierzytelniania formularzy i członkostwa ASP.NET. Jeśli użytkownik nie jest pomyślnie utworzony, użytkownikowi zostanie wyświetlony komunikat. W przeciwnym razie użytkownik jest przekierowywany na stronę logowania dla aplikacji.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika dla nowego użytkownika.</param>
        <param name="password">Hasło dla nowego użytkownika.</param>
        <param name="email">Adres e-mail dla nowego użytkownika.</param>
        <param name="passwordQuestion">Wartość pytanie dotyczące hasła dla użytkownika członkostwa.</param>
        <param name="passwordAnswer">Wartość odpowiedzi do hasła dla użytkownika członkostwa.</param>
        <param name="isApproved">Wartość logiczna wskazująca, czy nowy użytkownik jest zatwierdzony do logowania.</param>
        <param name="providerUserKey">Identyfikator użytkownika dla użytkownika, które mają być przechowywane w magazynie danych członkostwa.</param>
        <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus" /> wskazujący, że użytkownik został pomyślnie utworzony lub powód niepowodzenia utworzenia.</param>
        <summary>Dodaje nowego użytkownika z określonymi wartościami właściwości i unikatowym identyfikatorem do magazynu danych i zwraca parametr stanu wskazujący, że użytkownik został pomyślnie utworzony lub powód utworzenie użytkownika zakończone niepowodzeniem.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiektu dla nowo utworzonego użytkownika. Jeśli nie utworzono użytkownika, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser> obiektu dla nowo utworzonego użytkownika. Tworzenie użytkownika nie powiedzie się, można przywrócić <xref:System.Web.Security.MembershipCreateStatus> wartość z `status` parametr wyjściowy, który wskazuje, dlaczego Tworzenie użytkownika nie powiodło się. Unikatowy identyfikator dla użytkownika, takie jak wartości klucza podstawowego dla bazy danych, można określić za pomocą `providerUserKey` parametru.  
  
 <xref:System.Web.Security.Membership.CreateUser%2A> Metoda zwróci `null` Jeśli `password` jest ciągiem pustym lub `null`, `username` jest ciągiem pustym lub `null` lub przecinka (,), zawiera `passwordQuestion` nie jest `null` i zawiera pustą ciąg, lub `passwordAnswer` nie jest `null` i zawiera pusty ciąg.  
  
 Po utworzeniu użytkownika członkostwa i zawierają odwołanie do <xref:System.Web.Security.MembershipUser> obiekt dla tego użytkownika, można zmodyfikować ustawienia dla tego użytkownika z <xref:System.Web.Security.MembershipUser> metody publiczne i przez ustawienie wartości właściwości <xref:System.Web.Security.MembershipUser> obiektu, a następnie przekazywanie <xref:System.Web.Security.MembershipUser> do obiektu <xref:System.Web.Security.Membership.UpdateUser%2A> metody.  
  
 Jeśli użytkownik już istnieje w źródle danych dla aplikacji, możesz uzyskać <xref:System.Web.Security.MembershipUser> obiektu dla istniejącego użytkownika z <xref:System.Web.Security.Membership.GetUser%2A> metody.  
  
 Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru ciągu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa użytkownika z bazy danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do usunięcia.</param>
        <summary>Usunięcie użytkownika i wszystkie dane użytkownika powiązanych z bazy danych.</summary>
        <returns>
          <see langword="true" /> Jeśli użytkownik został usunięty; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane użytkownika przechowywane w bazie danych <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, lub <xref:System.Web.UI.WebControls.WebParts.WebPart> personalizacji są także usuwane, gdy używasz <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, i <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> obiekty do przechowywania danych.  
  
   
  
## Examples  
 Poniższy przykład kodu usuwa obecnie zalogowanego użytkownika, i wszystkich powiązanych danych.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> to ciąg pusty lub zawiera przecinka (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> jest <see langword="null." /></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do usunięcia.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> Aby usunąć dane powiązane z użytkownikiem z bazy danych. <see langword="false" /> pozostawienie powiązane z użytkownikiem w bazie danych.</param>
        <summary>Usuwa użytkownika z bazy danych.</summary>
        <returns>
          <see langword="true" /> Jeśli użytkownik został usunięty; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użytkownicy zostali usunięci z bazy danych są usuwane tylko ze skonfigurowanego `applicationName`.  
  
 Jeśli `deleteAllRelatedData` jest `true`, dane użytkownika przechowywane w bazie danych <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, lub <xref:System.Web.UI.WebControls.WebParts.WebPart> personalizacji są także usuwane, gdy używasz <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, i <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> obiektów na Magazyn danych.  
  
   
  
## Examples  
 Poniższy przykład kodu usuwa obecnie zalogowanego użytkownika, i wszystkich powiązanych danych.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> to ciąg pusty lub zawiera przecinka (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordReset { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżącego dostawcy członkostwa jest skonfigurowane i umożliwiają użytkownikom na resetowanie haseł.</summary>
        <value>
          <see langword="true" /> Jeśli dostawca członkostwa obsługuje resetowanie hasła; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hasło jest to możliwość członkostwa ASP.NET zamienić bieżące hasło hasło dla nazwy użytkownika z nowej, losowo wygenerowany, gdy użytkownik zapomniał swoje hasło lub bieżące hasło nie jest już prawidłowy. Jest to szczególnie przydatne, gdy ustawiono format hasła <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, jak użytkownicy, nie można pobrać wartości skrótu hasła.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia element `system.web` sekcji w pliku Web.config dla aplikacji ASP.NET. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider> i włącza Resetowanie hasła.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Poniższy przykładowy kod najpierw sprawdza, czy <xref:System.Web.Security.Membership.EnablePasswordReset%2A> jest `true`, resetuje hasło użytkownika i zwraca nowy, automatycznie wygenerowanego hasła.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżący dostawcy członkostwa jest skonfigurowany do Zezwalaj użytkownikom na odzyskiwanie haseł.</summary>
        <value>
          <see langword="true" /> Jeśli dostawca członkostwa obsługuje odzyskiwanie haseł; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> jest `false`, źródłowy Dostawca członkostwa może zgłaszać <xref:System.Web.HttpException>.  
  
 Dostawców, które są dołączone do programu .NET Framework obsługuje wiele formatów hasło, aby zwiększyć bezpieczeństwo hasła. Jeśli ustawiono format hasła <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, a następnie użytkownicy nie będą mogli pobrać istniejącego hasła z bazy danych. <xref:System.Web.Security.MembershipPasswordFormat.Hashed> Format hasła zapewnia jednokierunkowe kodowanie wartości hasła. Hasła są "mieszany" i porównaniu z wartościami przechowywanymi w bazie danych do uwierzytelniania. Wartości "Skrótem" nie może być zakodowane nie można pobrać oryginalnej wartości hasła. Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.MembershipPasswordFormat>.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia element `system.web` sekcji w pliku Web.config dla aplikacji ASP.NET. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider> i włącza pobieranie hasła.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Poniższy przykładowy kod najpierw sprawdza, czy <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> jest `true`, pobiera hasło dla określonej nazwy użytkownika i wysyła je na adres e-mail dla określonego użytkownika.  
  
> [!IMPORTANT]
>  Zwracanie hasła w postaci zwykłego tekstu przy użyciu poczty e-mail nie jest zalecane dla witryn, które wymagają wysokiego poziomu zabezpieczeń. Dla witryn o wysokim poziomie zabezpieczeń zaleca się, że zwracać haseł przy użyciu szyfrowania, na przykład protokołu SSL.  
>   
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByEmail">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję użytkowników członkostwa, której adres e-mail zawiera określony adres e-mail do dopasowania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Adres e-mail do wyszukania.</param>
        <summary>Pobiera kolekcję użytkowników członkostwa, której adres e-mail zawiera określony adres e-mail do dopasowania.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> zawiera wszystkich użytkowników odpowiadających <paramref name="emailToMatch" /> parametru.  
  
 Spacje początkowe i końcowe są usuwane z <paramref name="emailToMatch" /> wartość parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Zwraca listę użytkowników członkostwa, jeśli adres e-mail odpowiada podane `emailToMatch` dla skonfigurowanego `applicationName`.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Wykonuje wyszukiwanie przy użyciu klauzuli LIKE przed `emailToMatch` parametru. Żadnych symboli wieloznacznych, które są obsługiwane przez program SQL Server w jak klauzule mogą być używane w `emailToMatch` wartość parametru.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Membership.FindUsersByEmail%2A> metodę, aby pobrać informacje o członkostwie użytkownika z bazy danych członkostwa oparte na danych wejściowych użytkownika i wyświetla wyniki w strony danych.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Adres e-mail do wyszukania.</param>
        <param name="pageIndex">Indeks strony wyników do zwrócenia. <c>pageIndex</c> jest liczony od zera.</param>
        <param name="pageSize">Rozmiar strony wyników do zwrócenia.</param>
        <param name="totalRecords">Całkowita liczba zgodnych użytkowników.</param>
        <summary>Pobiera kolekcję użytkowników członkostwa na stronie danych, których adres e-mail zawiera określony adres e-mail do dopasowania.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> zawiera strona <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> obiektów, zaczynając od strony określonej za <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> Zwraca listę użytkowników członkostwa, jeśli adres e-mail odpowiada podane `emailToMatch` dla skonfigurowanego `applicationName`.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Wykonuje wyszukiwanie przy użyciu klauzuli LIKE przed `emailToMatch` parametru. Żadnych symboli wieloznacznych, które są obsługiwane przez program SQL Server w jak klauzule mogą być używane w `emailToMatch` wartość parametru.  
  
 Wyniki zwrócone przez <xref:System.Web.Security.Membership.FindUsersByEmail%2A> są ograniczone przez `pageIndex` i `pageSize` parametrów. `pageSize` Parametr określa maksymalną liczbę <xref:System.Web.Security.MembershipUser> obiektów, aby uzyskać <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Strony wyników do zwrócenia, gdzie 0 identyfikuje pierwszej strony, która identyfikuje parametru. `totalRecords` Parametr jest `out` parametr, który ma wartość całkowitą liczbę użytkowników Członkowskich zgodnych `emailToMatch` wartość. Na przykład odnaleziono 13 użytkowników, gdzie `emailToMatch` dopasowaniu części lub adres e-mail cały i `pageIndex` wartość to 1 z `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> zwrócił zawierałoby od szóstego do dziesiątego użytkowników. `totalRecords` może być ustawiona na 13.  
  
 Spacje początkowe i końcowe są usuwane z `emailToMatch` wartość parametru.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Membership.FindUsersByEmail%2A> metodę, aby pobrać informacje o członkostwie użytkownika z bazy danych członkostwa oparte na danych wejściowych użytkownika i wyświetla wyniki w strony danych.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="pageSize" /> jest mniejsza niż 1.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję użytkowników członkostwa, której nazwa użytkownika zawiera nazwę określonego użytkownika do dopasowania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Nazwa użytkownika do wyszukania.</param>
        <summary>Pobiera kolekcję użytkowników członkostwa, której nazwa użytkownika zawiera nazwę określonego użytkownika do dopasowania.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> zawiera wszystkich użytkowników odpowiadających <paramref name="usernameToMatch" /> parametru.  
  
 Spacje początkowe i końcowe są usuwane z <paramref name="usernameToMatch" /> wartość parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Zwraca listę użytkowników członkostwa, jeśli nazwa użytkownika odpowiada podane `usernameToMatch` dla skonfigurowanego `applicationName`.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Wykonuje wyszukiwanie przy użyciu klauzuli LIKE przed `usernameToMatch` parametru. Żadnych symboli wieloznacznych, które są obsługiwane przez program SQL Server w jak klauzule mogą być używane w `usernameToMatch` wartość parametru.  
  
 Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Membership.FindUsersByName%2A> metodę, aby pobrać informacje o członkostwie użytkownika z bazy danych członkostwa oparte na danych wejściowych użytkownika i wyświetla wyniki w strony danych.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Nazwa użytkownika do wyszukania.</param>
        <param name="pageIndex">Indeks strony wyników do zwrócenia. <c>pageIndex</c> jest liczony od zera.</param>
        <param name="pageSize">Rozmiar strony wyników do zwrócenia.</param>
        <param name="totalRecords">Całkowita liczba zgodnych użytkowników.</param>
        <summary>Pobiera kolekcję użytkowników członkostwa na stronie danych, których nazwa użytkownika zawiera nazwę określonego użytkownika do dopasowania.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> zawiera strona <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> obiektów, zaczynając od strony określonej za <paramref name="pageIndex" />.  
  
 Spacje początkowe i końcowe są usuwane z <paramref name="usernameToMatch" /> wartość parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Zwraca listę użytkowników członkostwa, jeśli nazwa użytkownika odpowiada podane `usernameToMatch` dla skonfigurowanego `applicationName`.  
  
 <xref:System.Web.Security.SqlMembershipProvider> Wykonuje wyszukiwanie przy użyciu klauzuli LIKE przed `usernameToMatch` parametru. Żadnych symboli wieloznacznych, które są obsługiwane przez program SQL Server w jak klauzule mogą być używane w `usernameToMatch` wartość parametru.  
  
 Wyniki zwrócone przez <xref:System.Web.Security.Membership.FindUsersByName%2A> są ograniczone przez `pageIndex` i `pageSize` parametrów. `pageSize` Parametr określa maksymalną liczbę <xref:System.Web.Security.MembershipUser> obiektów, aby uzyskać <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Strony wyników do zwrócenia, gdzie 0 identyfikuje pierwszej strony, która identyfikuje parametru. `totalRecords` Parametr jest `out` parametr, który ma wartość całkowitą liczbę użytkowników Członkowskich zgodnych `usernameToMatch` wartość. Na przykład odnaleziono 13 użytkowników, gdzie `usernameToMatch` dopasowaniu części lub nazwy wszystkich użytkowników i `pageIndex` wartość to 1 z `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> zwrócił zawierałoby od szóstego do dziesiątego użytkowników. `totalRecords` może być ustawiona na 13.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Membership.FindUsersByName%2A> metodę, aby pobrać informacje o członkostwie użytkownika z bazy danych członkostwa oparte na danych wejściowych użytkownika i wyświetla wyniki w strony danych.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> jest pustym ciągiem.  
  
 —lub—  
  
 <paramref name="pageIndex" /> jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="pageSize" /> jest mniejsza niż 1.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratePassword(int32 length, int32 numberOfNonAlphanumericCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratePassword (length As Integer, numberOfNonAlphanumericCharacters As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GeneratePassword(int length, int numberOfNonAlphanumericCharacters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="numberOfNonAlphanumericCharacters" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">Liczba znaków w wygenerowanym haśle. Długość musi należeć do zakresu od 1 do 128 znaków.</param>
        <param name="numberOfNonAlphanumericCharacters">Minimalna liczba znaków niealfanumerycznych (takich jak @, #,!, %, &amp;i tak dalej) w wygenerowanym haśle.</param>
        <summary>Generuje losowe hasło o określonej długości.</summary>
        <returns>Losowe hasło o określonej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GeneratePassword%2A> Metoda służy do generowania losowego hasła i jest najczęściej używana przez <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> Metoda implementowana przez dostawcę członkostwa, aby zresetować hasło dla użytkownika do nowego, tymczasowego hasła.  
  
 Wygenerowane hasło zawiera tylko znaki alfanumeryczne i następujących znaków interpunkcyjnych: `!@#$%^&*()_-+=[{]};:<>|./?`. Żadne znaki niedrukowalne lub ukrytego kontroli zostaną uwzględnione w wygenerowanym haśle.  
  
> [!NOTE]
>  Losowe hasło utworzone przez <xref:System.Web.Security.Membership.GeneratePassword%2A> — metoda nie jest gwarantowana do przekazania wyrażenia regularnego w <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> właściwości. Jednak losowe hasło będzie spełniać kryteria ustanowione przez <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> właściwości i `numberOfNonAlphanumericCharacters` parametru.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nowego użytkownika członkostwa i używa <xref:System.Web.Security.Membership.GeneratePassword%2A> metodę, aby zainicjować hasło dla nowego użytkownika, który losowych wartości, która jest wyświetlana użytkownikowi.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="length" /> jest mniejsza niż 1 lub większą niż 128 - lub -  
  
 <paramref name="numberOfNonAlphanumericCharacters" /> jest mniejsza niż 0 lub większą niż <paramref name="length" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllUsers">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję użytkowników w bazie danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers () As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję wszystkich użytkowników w bazie danych.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> z <see cref="T:System.Web.Security.MembershipUser" /> obiekty reprezentujące wszystkich użytkowników w bazie danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A> Zwraca informacje dla wszystkich użytkowników członkostwa aplikacji jako kolekcja <xref:System.Web.Security.MembershipUser> obiektów. Należy zachować ostrożność przy użyciu <xref:System.Web.Security.Membership.GetAllUsers%2A> metody z bazami danych bardzo dużej liczby użytkowników, jako powstałe w ten sposób <xref:System.Web.Security.MembershipUserCollection> w programu ASP.NET strony może zmniejszyć wydajność aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu zwraca listę użytkowników z liczbą liczbę użytkowników, obecnie w trybie online.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">Indeks strony wyników do zwrócenia. Użyj wartości 0, aby wskazać pierwszej strony.</param>
        <param name="pageSize">Rozmiar strony wyników do zwrócenia. <c>pageIndex</c> jest liczony od zera.</param>
        <param name="totalRecords">Całkowita liczba użytkowników.</param>
        <summary>Pobiera kolekcję wszystkich użytkowników w bazie danych na stronach danych.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> z <see cref="T:System.Web.Security.MembershipUser" /> obiekty reprezentujące wszystkich użytkowników w bazie danych skonfigurowanego <see langword="applicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyniki zwrócone przez <xref:System.Web.Security.Membership.GetAllUsers%2A> są ograniczone przez `pageIndex` i `pageSize` parametrów. `pageSize` Parametr określa maksymalną liczbę <xref:System.Web.Security.MembershipUser> obiektów, aby uzyskać <xref:System.Web.Security.MembershipUserCollection>. `pageIndex` Strony wyników do zwrócenia, gdzie 0 identyfikuje pierwszej strony, która identyfikuje parametru. `totalRecords` Parametr jest `out` parametr, który ma ustawioną wartość całkowita liczba użytkowników członkostwa dla skonfigurowanego `applicationName`. Na przykład, jeśli istnieją 13 użytkowników dla skonfigurowanego `applicationName`i `pageIndex` wartość to 1 z `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection> zwrócił zawierałoby od szóstego do dziesiątego użytkowników. `totalRecords` może być ustawiona na 13.  
  
   
  
## Examples  
 Poniższy przykład kodu zwraca listę użytkowników na stronach danych wraz z liczbą liczbę użytkowników, obecnie w trybie online.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="pageSize" /> jest mniejsza niż 1.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public static int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfUsersOnline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera liczbę użytkownicy mający obecnie dostęp do aplikacji.</summary>
        <returns>Liczba użytkownicy mający obecnie dostęp do aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Zwraca liczbę użytkowników dla bieżącego <xref:System.Web.Security.Membership.ApplicationName%2A> których data ostatniej aktywności jest większa niż bieżący czas mniej <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. Sygnaturę daty i godziny ostatniej aktywności zostało zaktualizowane do bieżącej daty i czasu, po zweryfikowaniu poświadczeń użytkownika poprzez <xref:System.Web.Security.Membership.ValidateUser%2A> lub <xref:System.Web.Security.Membership.UpdateUser%2A> metody lub po wywołaniu <xref:System.Web.Security.Membership.GetUser%2A> przeciążenia, które przyjmuje żadnych parametrów lub korzystającą `userIsOnline`parametr, aby określić, należy zaktualizować sygnaturę daty i godziny.  
  
   
  
## Examples  
 Poniższy przykład kodu zwraca listę użytkowników z liczbą liczbę użytkowników, obecnie w trybie online.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera informacje dla użytkownika członkostwa ze źródła danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser () As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera informacje ze źródła danych i aktualizuje ostatniej aktywności sygnaturę daty i godziny dla bieżącego użytkownika zalogowanego członkostwa.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiekt reprezentujący bieżącego zalogowanego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser> pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser> obiektu wypełniane przy użyciu zwróconych danych. Jeśli używany jest jeden z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie przyjmują `username` parametru <xref:System.Web.Security.Membership.GetUser%2A> zwraca informacje o bieżącym użytkowniku zalogowany członkostwa. Bieżący użytkownik zalogowany członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A> użytkownika w bieżącym <xref:System.Web.HttpContext>.  
  
 Można również określić, czy mają <xref:System.Web.Security.Membership.GetUser%2A> zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika pobierane przy użyciu `userIsOnline` parametru. Z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie przyjmują `userIsOnline` parametru `GetUser()` niejawnie sygnatury czasowej aktualizacji ostatniej aktywności użytkownika. `GetUser(System.String)` i `GetUser(System.Object)` nie.  
  
   
  
## Examples  
 Następujące aktualizacje przykładowy kod ostatniej aktywności daty/godziny sygnaturę czasową bieżącego członkostwa zalogowanego użytkownika i wyświetla nazwę użytkownika na stronie platformy ASP.NET.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Użytkownik nie jest aktualnie zalogowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userIsOnline">Jeśli <see langword="true" />, aktualizacje ostatniej aktywności sygnaturę daty i godziny dla określonego użytkownika.</param>
        <summary>Pobiera informacje ze źródła danych dla bieżącego użytkownika zalogowanego członkostwa. Aktualizacje ostatniej aktywności sygnaturę daty i godziny dla bieżącego użytkownika zalogowanego członkostwa, jeśli określony.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiekt reprezentujący bieżącego zalogowanego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Metoda pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser> obiektu wypełniane przy użyciu zwróconych danych. Jeśli używany jest jeden z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie przyjmują `username` parametru <xref:System.Web.Security.Membership.GetUser%2A> zwraca informacje o bieżącym użytkowniku zalogowany członkostwa. Bieżący użytkownik zalogowany członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A> użytkownika w bieżącym <xref:System.Web.HttpContext>.  
  
 Można również określić, czy mają <xref:System.Web.Security.Membership.GetUser%2A> zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika pobierane przy użyciu `userIsOnline` parametru. Z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie przyjmują `userIsOnline` parametru `GetUser()` niejawnie sygnatury czasowej aktualizacji ostatniej aktywności użytkownika. `GetUser(System.String)` i `GetUser(System.Object)` nie.  
  
   
  
## Examples  
 Następujące Wyświetla przykładowy kod, nazwę użytkownika dla bieżącego użytkownika zalogowanego członkostwa w strony ASP.NET bez aktualizowania ostatniej aktywności daty/godziny sygnatury dla użytkownika.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Użytkownik nie jest aktualnie zalogowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Identyfikator unikatowy użytkownika z źródła danych członkostwa dla użytkownika.</param>
        <summary>Pobiera informacje ze źródła danych skojarzone z określonym Unikatowy identyfikator użytkownika członkostwa.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiekt reprezentujący użytkownika skojarzonego z określonym Unikatowy identyfikator.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Metoda pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser> obiektu wypełniane przy użyciu zwróconych danych. Użytkownik jest identyfikowany przy użyciu Unikatowy identyfikator ze źródła danych, określić przy użyciu `providerUserKey` parametru.  
  
 Można również określić, czy mają <xref:System.Web.Security.Membership.GetUser%2A> zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika pobieranych z `userIsOnline` parametru. Z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie przyjmują `userIsOnline` parametru `GetUser()` niejawnie sygnatury czasowej aktualizacji ostatniej aktywności użytkownika. `GetUser(System.String)` i `GetUser(System.Object)` nie  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do pobrania.</param>
        <summary>Pobiera informacje ze źródła danych dla określonego użytkownika członkostwa.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiekt reprezentujący określonego użytkownika. Jeśli <paramref name="username" /> parametru nie odpowiada istniejącego użytkownika, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Metoda pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser> obiektu wypełniane przy użyciu zwróconych danych. Jeśli używany jest jeden z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie przyjmują `username` parametru <xref:System.Web.Security.Membership.GetUser%2A> zwraca informacje o bieżącym użytkowniku zalogowany członkostwa. Bieżący użytkownik zalogowany członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A> użytkownika w bieżącym <xref:System.Web.HttpContext>.  
  
 Można również określić, czy mają <xref:System.Web.Security.Membership.GetUser%2A> zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika pobieranych z `userIsOnline` parametru. Z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie przyjmują `userIsOnline` parametru <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> niejawnie sygnatury czasowej aktualizacji ostatniej aktywności użytkownika. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> i <xref:System.Web.Security.Membership.GetUser%2A> nie.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Membership.GetUser%2A> metodę, aby zwrócić <xref:System.Web.Security.MembershipUser> obiektu dla bieżącego zalogowanego użytkownika, a aktualizacje adres e-mail użytkownika.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> zawiera przecinka (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Identyfikator unikatowy użytkownika z źródła danych członkostwa dla użytkownika.</param>
        <param name="userIsOnline">Jeśli <see langword="true" />, aktualizacje ostatniej aktywności sygnaturę daty i godziny dla określonego użytkownika.</param>
        <summary>Pobiera informacje ze źródła danych skojarzone z określonym Unikatowy identyfikator użytkownika członkostwa. Sygnatury czasowej aktualizacji ostatniej aktywności użytkownika, jeśli określony.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiekt reprezentujący użytkownika skojarzonego z określonym Unikatowy identyfikator.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Metoda pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser> obiektu wypełniane przy użyciu zwróconych danych. Użytkownik jest identyfikowany o unikatowym identyfikatorze ze źródłem danych określonym w `providerUserKey` parametru.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do pobrania.</param>
        <param name="userIsOnline">Jeśli <see langword="true" />, aktualizacje ostatniej aktywności sygnaturę daty i godziny dla określonego użytkownika.</param>
        <summary>Pobiera informacje ze źródła danych dla określonego użytkownika członkostwa. Sygnatury czasowej aktualizacji ostatniej aktywności użytkownika, jeśli określony.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiekt reprezentujący określonego użytkownika. Jeśli <paramref name="username" /> parametru nie odpowiada istniejącego użytkownika, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Metoda pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser> obiektu wypełniane przy użyciu zwróconych danych.  
  
 Jeśli używany jest jeden z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie przyjmują `username` parametru <xref:System.Web.Security.Membership.GetUser%2A> zwraca informacje o bieżącym użytkowniku zalogowany członkostwa. Bieżący użytkownik zalogowany członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A> użytkownika w bieżącym <xref:System.Web.HttpContext>.  
  
 Można również określić, czy mają <xref:System.Web.Security.Membership.GetUser%2A> zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika pobieranych z `userIsOnline` parametru. Z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie przyjmują `userIsOnline` parametru <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> niejawnie sygnatury czasowej aktualizacji ostatniej aktywności użytkownika. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> i <xref:System.Web.Security.Membership.GetUser%2A> nie.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera hasło dla określonej nazwy użytkownika i wysyła je na adres e-mail dla określonego użytkownika. Wywołanie <xref:System.Web.Security.Membership.GetUser%2A> określa ostatniej aktywności sygnaturę daty i godziny dla użytkownika nie można zaktualizować.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> zawiera przecinka (,).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public static string GetUserNameByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUserNameByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserNameByEmail (emailToMatch As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetUserNameByEmail(System::String ^ emailToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Adres e-mail do wyszukania.</param>
        <summary>Pobiera nazwę użytkownika, której adres e-mail użytkownika jest zgodny z określonym adresem e-mail.</summary>
        <returns>Nazwa użytkownika, której adres e-mail użytkownika jest zgodny z określonym adresem e-mail. Jeśli nie znaleziono, <see langword="null" /> jest zwracany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUserNameByEmail%2A> można pobrać nazwy użytkownika dla członkostwa użytkownika w przypadku, gdy użytkownik nie ma nazwy użytkownika, ale znać adres e-mail użytkownika. Jeśli więcej niż jednego użytkownika w magazynie danych ma tego samego adresu e-mail, zwracana jest pierwsza nazwa użytkownika napotkano.  
  
 Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera nazwę użytkownika na określony adres e-mail.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmType">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.HashAlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HashAlgorithmType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HashAlgorithmType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikator algorytm wyznaczania wartości skrótu hasła.</summary>
        <value>Identyfikator algorytmu wyznaczania wartości skrótu hasła, lub puste, aby używany domyślny algorytm skrótu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Właściwość identyfikuje algorytm skrótu niestandardowy używany przez <xref:System.Web.Security.Membership> klasy. Możesz ustawić <xref:System.Web.Security.Membership.HashAlgorithmType%2A> za pomocą właściwości `hashAlgorithmType` atrybut elementu.  
  
 .NET Framework umożliwia konfigurowanie klasy kryptografii niestandardowych przy użyciu sekcji konfiguracji elementu. <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Musi odpowiadać właściwości `name` atrybut elementu w elemencie. Aby uzyskać więcej informacji, zobacz [mapowanie nazw algorytmów na klasy kryptografii](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md).  
  
 Jeśli <xref:System.Web.Security.Membership.HashAlgorithmType%2A> nie ustawiono właściwości <xref:System.Web.Security.Membership> klasy używa algorytmu wyznaczania wartości skrótu w `validation` atrybut elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public static int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę nieprawidłowego hasła lub odpowiedzi do hasła prób dozwolone przed zablokowaniem użytkownika Członkowskiego.</summary>
        <value>Liczba nieprawidłowego hasła lub odpowiedzi do hasła prób dozwolone przed zablokowaniem użytkownika Członkowskiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Właściwości działa w połączeniu z <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> właściwości chronią przed niechcianym źródła przy użyciu następującej liczby prób do odgadnięcia hasła lub odpowiedzi hasła użytkownika członkostwa.  
  
 Jeśli liczba nieudanych prób podania hasła lub odpowiedzi do hasła dla użytkownika członkostwa jest większa niż lub równa wartości <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> właściwości w ciągu określonej liczby minut określoną przez <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> właściwości, a następnie użytkownik jest zablokowane przez witryny sieci Web ustawienie <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> właściwości `true` dopóki użytkownik jest odblokowany przez wywołanie do <xref:System.Web.Security.MembershipUser.UnlockUser%2A> metody.  
  
 Jeśli prawidłowe hasło lub odpowiedź hasła jest podana przed wartość <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> osiągnięciu właściwości, licznik, który śledzi liczbę nieudanych prób podania jest ustawione na zero.  
  
 Nieprawidłowe hasło i prób podania hasła odpowiedzi osobno. Na przykład jeśli <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> właściwość jest ustawiona na 5, użytkownika do pięciu prób Wprowadź poprawne hasło i maksymalnie pięć próbuje wpisz odpowiedź prawidłowego hasła nie są zablokowane.  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Wartość właściwości jest ustawiana w konfiguracji aplikacji przy użyciu `maxInvalidPasswordAttempts` atrybut elementu konfiguracji.  
  
 Jeśli <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> właściwość jest `false`, próby podania hasła i odpowiedzi nie są śledzone.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia element `system.web` sekcji w pliku Web.config aplikacji. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider> klasy świadczenia usług członkostwa i zestawy `maxInvalidPasswordAttempts` atrybutu pięć nieprawidłowych prób i `passwordAttemptWindow` do 30 minut.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public static int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalną liczbę znaków specjalnych, które muszą być obecne w prawidłowe hasło.</summary>
        <value>Minimalna liczba znaków specjalnych, które muszą być obecne w prawidłowe hasło.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> Właściwość zwraca minimalną liczbę znaków specjalnych, inne niż alfanumeryczne, które należy wprowadzić do utworzenia prawidłowego hasła dla dostawcy członkostwa określonego w <xref:System.Web.Security.Membership.Provider%2A> właściwości.  
  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> Wartość właściwości jest ustawiana w konfiguracji aplikacji przy użyciu `minRequiredNonAlphanumericCharacters` atrybut elementu konfiguracji.  
  
 Znak niealfanumeryczny to taki znak, dla którego <xref:System.Char.IsLetterOrDigit%2A> metoda zwraca `false`.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia element konfiguracji w `system.web` sekcji w pliku Web.config aplikacji. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider> klasy świadczenia usług członkostwa i zestawy `minRequiredNonAlphanumericCharacters` atrybutu 1 znak.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonAlphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public static int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredPasswordLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalną długość wymaganych do uznania hasła.</summary>
        <value>Minimalna długość wymaganych do uznania hasła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Właściwości pobiera minimalną liczbę znaków, które należy wprowadzić do utworzenia prawidłowego hasła dla dostawcy członkostwa określonego w <xref:System.Web.Security.Membership.Provider%2A> właściwości.  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Wartość właściwości jest ustawiana w konfiguracji aplikacji przy użyciu `minRequiredPasswordLength` atrybut elementu konfiguracji.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia element konfiguracji w `system.web` sekcji w pliku Web.config aplikacji. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider> klasy świadczenia usług członkostwa i zestawy `minRequiredPasswordLength` atrybutu 7 znaków.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public static int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int PasswordAttemptWindow { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera przedział czasu, między którymi kolejnych nieudanych prób, aby zapewnić prawidłowe hasło lub odpowiedzi do hasła są śledzone.</summary>
        <value>Przedział czasu w minutach, podczas których kolejnych nie próbuje poda prawidłowego hasła lub odpowiedzi hasła są śledzone. Wartość domyślna to 10 minut. Jeśli jest większy niż interwał między bieżącym nieudanej próby i ostatniej nieudanej próby <see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" /> ustawienie właściwości każdej nieudanej próbie jest traktowana tak, jakby była to pierwsza próba nie powiodło się.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Właściwości działa w połączeniu z <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> właściwości w celu lepszego zabezpieczenia źródle niechciane odgadnięcie hasła lub odpowiedzi hasła członkostwa użytkownika za pomocą następującej liczby prób. Gdy użytkownik próbuje zalogować się przy użyciu, zmienić lub zresetować swoje hasło, tylko określonej liczby kolejnych prób są dozwolone w przedziale czasu. Długość tego przedziału czasu określonego w <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> właściwość, która określa liczbę minut między próbami nieprawidłowy.  
  
 Jeśli liczba kolejnych nieudanych prób, które użytkownik wysyła do resetowania jego lub jego hasło jest równa wartości przechowywanej w <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> właściwości oraz czas, jaki upłynął od ostatniej próby nieprawidłowy jest mniejsza niż określony w minutach <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> właściwości, a następnie użytkownik członkostwa jest zablokowane. Użytkownik jest zablokowany przez ustawienie <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> właściwości `true` dopóki użytkownik jest odblokowany przez wywołanie do <xref:System.Web.Security.MembershipUser.UnlockUser%2A> metody.  
  
 Jeśli jest większy niż interwał między bieżącym nieudanej próby i ostatniej nieudanej próby <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> właściwości ustawienie, bieżące Nieprawidłowa próba będzie traktowany jako pierwszy. Jeśli podano odpowiedzi prawidłowe hasło, zanim zostanie osiągnięta maksymalna liczba dozwolonych nieudanych prób podania, liczba prób podania hasła i odpowiedzi jest równa 0 (zero). Jeśli podano prawidłowe hasło, zanim maksymalna liczba dozwolonych nieprawidłowy osiągnięciu prób, liczba nieudanych próbach wpisania hasła i liczba prób podania hasła i odpowiedzi są ustawione na 0 (zero).  
  
 Nieprawidłowe próby podania hasła i odpowiedzi hasła kumulują się niezależnie od siebie. Na przykład jeśli <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> jest ustawiona na wartość 5 i trzech nieudanych próbach wpisania hasła zostaną wykonane przez dwa prób hasła i odpowiedzi, dwa więcej nieudanych próbach wpisania hasła (lub trzy kolejne próby hasła i odpowiedzi) muszą być wprowadzane w <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> dla użytkownika członkostwa zostaną zablokowane.  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Wartość właściwości jest ustawiana w konfiguracji aplikacji przy użyciu `passwordAttemptWindow` atrybut sekcji element konfiguracji.  
  
 Jeśli <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> właściwość jest ustawiona na `false`, próby podania hasła i odpowiedzi nie są śledzone.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia element `system.web` sekcji w pliku Web.config dla aplikacji ASP.NET. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider> i ustawia `maxInvalidPasswordAttempts` atrybutu pięć nieprawidłowych prób i `passwordAttemptWindow` do 30 minut.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public static string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyrażenie regularne używane do analizowania hasła.</summary>
        <value>Wyrażenie regularne używane do analizowania hasła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Właściwości pobiera wyrażenie regularne służące do oceny złożoności hasła od dostawcy określonego w <xref:System.Web.Security.Membership.Provider%2A> właściwości.  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Właściwość jest ustawiona w konfiguracji aplikacji przy użyciu `passwordStrengthRegularExpression` atrybut elementu konfiguracji.  
  
 Aby uzyskać więcej informacji na temat wyrażeń regularnych, zobacz [wyrażeń regularnych programu .NET Framework](~/docs/standard/base-types/regular-expressions.md).  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia element konfiguracji w `system.web` sekcji w pliku Web.config aplikacji. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider> klasy świadczenia usług członkostwa i zestawy `passwordStrengthRegularExpression` atrybut do wyrażenia regularnego, która weryfikuje hasło spełnia następujące kryteria:  
  
-   Jest większe niż 7 znaków.  
  
-   Zawiera co najmniej jedną cyfrę.  
  
-   Zawiera co najmniej jeden znak (innych niż alfanumeryczne) specjalny.  
  
 Jeśli hasło nie spełnia te kryteria, hasło nie zostanie zaakceptowany przez dostawcę członkostwa.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression=" @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
   </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do domyślnego dostawcę członkostwa aplikacji.</summary>
        <value>Domyślnym dostawcą członkostwa aplikacji ujawnianej za pomocą <see cref="T:System.Web.Security.MembershipProvider" /> abstrakcyjnej klasy podstawowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Provider%2A> Właściwość umożliwia bezpośrednie odwołanie domyślnego dostawcę członkostwa aplikacji. To jest najczęściej używany do dostęp do niestandardowych elementów członkowskich dostawcy członkostwa, które nie są częścią <xref:System.Web.Security.MembershipProvider> abstrakcyjnej klasy podstawowej.  
  
   
  
## Examples  
 Poniższy przykładowy kod uzyskuje dostęp do domyślnego <xref:System.Web.Security.SqlMembershipProvider> włączone dla aplikacji przy użyciu <xref:System.Web.Security.Membership.Provider%2A> właściwości, aby można było określić wartość niestandardowa <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> właściwości.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As MembershipProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProviderCollection ^ Providers { System::Web::Security::MembershipProviderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję dostawców członkostwa dla aplikacji ASP.NET.</summary>
        <value>A <see cref="T:System.Web.Security.MembershipProviderCollection" /> dostawców członkostwa skonfigurowane dla aplikacji ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Providers%2A> Właściwość odwołuje się do wszystkich dostawców członkostwa włączony dla aplikacji, łącznie z dostawców dodane w pliku Web.config aplikacji i pliku Machine.config dla wszystkich aplikacji. Można kontrolować, które członkostwa są dostępni dostawcy dla aplikacji przy użyciu `providers` elementu sekcji w konfiguracji aplikacji. Na przykład poniższy przykład przedstawia sekcji w pliku Web.config dla aplikacji, która usuwa <xref:System.Web.Security.SqlMembershipProvider> wystąpienia (`AspNetSqlProvider`) określona w pliku konfiguracji komputera i dodaje <xref:System.Web.Security.SqlMembershipProvider> wystąpienia o nazwie `SqlProvider` jako Domyślny dostawca członkostwa aplikacji.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
          <add name="SqlProvider"  
            type="System.Web.Security.SqlMembershipProvider"  
            connectionStringName="SqlServices"  
            enablePasswordRetrieval="false"  
            enablePasswordReset="true"  
            requiresQuestionAndAnswer="true"  
            passwordFormat="Hashed"  
            applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 Podczas określania [członkostwa — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) sekcji, musisz określić `defaultProvider` atrybutu. Jeśli nie określisz [członkostwa — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) służą sekcji w pliku Web.config, wartości z konfiguracji maszyny i <xref:System.Web.Security.SqlMembershipProvider> wystąpienia o nazwie `AspNetSqlProvider` zostanie ustanowiony jako `defaultProvider`.  
  
 Możesz uzyskać jednoznacznie odwołanie do dostawcy z <xref:System.Web.Security.Membership.Providers%2A> kolekcji indeksowania według nazwy dostawcy członkostwa i rzutowania go jako żądanego typu.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla listę włączonych dla aplikacji i ich odpowiednich typów dostawców.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public static bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy domyślny dostawca członkostwa wymaga od użytkownika odpowiedzi na pytanie hasła do resetowania hasła i pobierania.</summary>
        <value>
          <see langword="true" /> Jeśli odpowiedź hasła jest wymagane do resetowania hasła i pobierania; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wymaganie pytanie dotyczące hasła i odpowiedzi zapewnia dodatkową warstwę zabezpieczeń podczas pobierania lub resetowania hasła użytkownika. Użytkownicy mogą dostarczać pytanie i odpowiedź po utworzeniu nazwy użytkownika później można użyć do pobierania lub zresetować zapomniane hasło.  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> Jeśli zaznaczono <xref:System.Web.Security.MembershipUser.ResetPassword%2A> lub <xref:System.Web.Security.MembershipUser.GetPassword%2A> jest wywoływana. Zgłasza dostawcy wyposażone w programie .NET Framework <xref:System.NotSupportedException> Jeśli <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> jest `true` i odpowiedzi podane hasło jest `null`.  
  
 Jeśli <xref:System.Web.Security.Membership.EnablePasswordReset%2A> i <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> są `false`, <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> nadal można używać do wymuszania tworzenie pytań i odpowiedzi, podczas tworzenia nowych użytkowników, jednak pytanie i odpowiedź nie użyjemy. Można pobrać pytania za pomocą <xref:System.Web.Security.MembershipUser> klasy.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.MembershipUser.ResetPassword%2A> i <xref:System.Web.Security.MembershipUser.GetPassword%2A>.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia element `system.web` sekcji w pliku Web.config dla aplikacji ASP.NET. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider>, włącza Resetowanie hasła i wymaga odpowiedzi hasła podczas wykonywania resetu.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Poniższy przykład kodu sprawdza wartość <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> i dodaje niezbędnych opcji pytanie dotyczące hasła i odpowiedzi mają być dostarczone podczas tworzenia użytkownika.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> obiekt, który reprezentuje użytkownika do zaktualizowania oraz zaktualizowane informacje dla użytkownika.</param>
        <summary>Aktualizuje bazę danych informacjami dla określonego użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UpdateUser%2A> przyjmuje jako dane wejściowe, <xref:System.Web.Security.MembershipUser> obiektu wypełniane przy użyciu bieżących informacji dotyczących użytkownika członkostwa i aktualizuje źródła danych przy użyciu wartości właściwości <xref:System.Web.Security.MembershipUser> obiektu. Można utworzyć nowy <xref:System.Web.Security.MembershipUser>, lub pobrać <xref:System.Web.Security.MembershipUser> wypełniane przy użyciu bieżących wartości źródła danych za pomocą obiektu <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, lub <xref:System.Web.Security.Membership.FindUsersByEmail%2A> metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod aktualizuje adres e-mail bieżącego zalogowanego użytkownika.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UserIsOnlineTimeWindow">
      <MemberSignature Language="C#" Value="public static int UserIsOnlineTimeWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 UserIsOnlineTimeWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserIsOnlineTimeWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int UserIsOnlineTimeWindow { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa liczbę minut po ostatniej aktywności daty/godziny sygnatury dla użytkownika, w którym użytkownik jest uznawany za online.</summary>
        <value>Liczba minut po ostatniej aktywności daty/godziny sygnatury dla użytkownika, w którym użytkownik jest uznawany za online.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> Wartość właściwości jest sprawdzana podczas wywołania <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>. Jeśli <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> dla użytkownika jest większa niż bieżąca data i godzina minus <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> wartość (w minutach), a następnie użytkownik jest uznawany za online. Można określić, czy użytkownik jest uznawany za online przy użyciu <xref:System.Web.Security.MembershipUser.IsOnline%2A> właściwość <xref:System.Web.Security.MembershipUser> klasy.  
  
 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Dla użytkownika jest aktualizowany, gdy poświadczenia użytkownika zostały pomyślnie sprawdzony przez <xref:System.Web.Security.Membership.ValidateUser%2A> metody. Możesz również zaktualizować <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> dla użytkownika członkostwa, wywołując jedną z <xref:System.Web.Security.Membership.GetUser%2A> przeciążenia. Jeśli wywołujesz <xref:System.Web.Security.Membership.GetUser%2A> przeciążenia, które przyjmuje `userIsOnline` parametru, określ wartość `true` można zaktualizować <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> dla użytkownika.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia element `system.web` sekcji w pliku Web.config dla aplikacji ASP.NET. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider> i ustawia `userIsOnlineTimeWindow` atrybutu do 20 minut.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public static bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika ma zostać zweryfikowana.</param>
        <param name="password">Hasło dla określonego użytkownika.</param>
        <summary>Sprawdza, czy nazwa użytkownika i hasło są prawidłowe.</summary>
        <returns>
          <see langword="true" /> Jeśli nazwa użytkownika i hasło są prawidłowe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ValidateUser%2A> zapewnia prosty sposób można zweryfikować nazwy użytkownika i hasła ze źródła danych. Należy zauważyć, że jeśli `username` parametr jest pusty lub `null`, <xref:System.Web.HttpException> jest generowany.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje stronę logowania dla aplikacji ASP.NET skonfigurowana do używania uwierzytelniania formularzy oraz <xref:System.Web.Security.Membership> klasy. Jeśli podane poświadczenia użytkownika są nieprawidłowe, zostanie wyświetlony komunikat z użytkownikiem. W przeciwnym razie użytkownik zostaje przekierowany do pierwotnie żądanego adresu URL przez <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> metody.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.Membership.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik jest tworzony, zmienić hasło lub resetowania hasła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> Zdarzenie jest zgłaszane, gdy <xref:System.Web.Security.MembershipProvider.CreateUser%2A> metody, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> metody, lub <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> wywoływana jest metoda dostawcy członkostwa.  
  
 Można użyć <xref:System.Web.Security.MembershipProvider.ValidatingPassword> zdarzenia w celu zweryfikowania formatach hasła i wartości dla użytkowników członkostwa.  
  
 Możesz anulować bieżące <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, lub <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> akcji przez ustawienie <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> właściwość podane <xref:System.Web.Security.ValidatePasswordEventArgs> do `true` podczas <xref:System.Web.Security.MembershipProvider.ValidatingPassword> zdarzeń.  
  
 Anulowania bieżącej akcji przez ustawienie <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> właściwości `true`, można ustawić <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> właściwość podane <xref:System.Web.Security.ValidatePasswordEventArgs> wyjątek opisujący przyczynę błędu sprawdzania poprawności hasła. Wywołanie metody spowoduje zgłoszenie wyjątku który <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> ma ustawioną wartość właściwości. Jeśli <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> właściwość jest `null`, wywołujący zgłosi wyjątek ogólny błąd w przypadku weryfikacji hasła.  
  
   
  
## Examples  
 Poniższy kod przedstawia przykład <xref:System.Web.Security.MembershipProvider.ValidatingPassword> zdarzeń weryfikuje format hasła dla użytkownika, który Anuluje akcję, jeśli hasło nie jest zgodny z wymaganym formatem.  
  
 [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]
 [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>