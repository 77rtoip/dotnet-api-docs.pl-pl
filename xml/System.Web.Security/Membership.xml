<Type Name="Membership" FullName="System.Web.Security.Membership">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a358553d1add3b25ff0376022fb81cc24ba1f549" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69050852" /></Metadata><TypeSignature Language="C#" Value="public static class Membership" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Membership extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Membership" />
  <TypeSignature Language="VB.NET" Value="Public Class Membership" />
  <TypeSignature Language="C++ CLI" Value="public ref class Membership abstract sealed" />
  <TypeSignature Language="F#" Value="type Membership = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Sprawdza poprawność poświadczeń użytkownika i zarządza ustawieniami użytkownika. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership> Klasa jest używana w aplikacjach ASP.NET do weryfikowania poświadczeń użytkownika i zarządzania ustawieniami użytkowników, takimi jak hasła i adresy e-mail. Klasa może być używana samodzielnie lub w połączeniu <xref:System.Web.Security.FormsAuthentication> z programem, aby utworzyć kompletny system do uwierzytelniania użytkowników aplikacji lub witryny sieci Web. <xref:System.Web.Security.Membership> Formant hermetyzuje klasę, <xref:System.Web.Security.Membership> aby zapewnić wygodny mechanizm do sprawdzania poprawności użytkowników. <xref:System.Web.UI.WebControls.Login>  
  
> [!NOTE]
>  Jeśli nie znasz funkcji członkostwa w programie ASP.NET, zobacz [wprowadzenie do członkostwa](https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)) przed kontynuowaniem. Aby zapoznać się z listą innych tematów związanych z członkostwem, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 <xref:System.Web.Security.Membership> Klasa oferuje następujące funkcje:  
  
-   Tworzenie nowych użytkowników.  
  
-   Przechowywanie informacji o członkostwie (nazw użytkowników, haseł, adresów e-mail i danych pomocniczych) w Microsoft SQL Server lub w alternatywnym magazynie danych.  
  
-   Uwierzytelnianie użytkowników, którzy odwiedzają Twoją witrynę. Można programowo uwierzytelniać użytkowników lub użyć <xref:System.Web.UI.WebControls.Login> kontrolki do utworzenia kompletnego systemu uwierzytelniania, który wymaga niewielkiego lub żadnego kodu.  
  
-   Zarządzanie hasłami, w tym tworzenie, zmienianie, pobieranie i resetowanie, a tak dalej. Opcjonalnie można skonfigurować członkostwo ASP.NET, aby wymagać pytania i odpowiedzi na hasło w celu uwierzytelnienia żądań resetowania lub pobierania hasła dla użytkowników, którzy zapominali swoje hasła.  
  
 Chociaż członkowstwo ASP.NET to samodzielna funkcja w ASP.NET na potrzeby uwierzytelniania, może być zintegrowana z zarządzaniem rolami ASP.NET w celu zapewnienia usług autoryzacji dla danej lokacji. Członkostwo można także zintegrować z użytkownikiem <xref:System.Web.Profile> ASP.NET, aby zapewnić dostosowanie specyficzne dla aplikacji, które może być dostosowane do poszczególnych użytkowników. Aby uzyskać szczegółowe informacje, zobacz [Omówienie właściwości profilu](https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d) [zarządzania rolami](https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6) i ASP.NET.  
  
 <xref:System.Web.Security.Membership> Klasa opiera się na dostawcach członkostwa, aby komunikować się ze źródłem danych. .NET Framework obejmuje a <xref:System.Web.Security.SqlMembershipProvider>, która przechowuje informacje o użytkowniku w bazie danych Microsoft SQL Server <xref:System.Web.Security.ActiveDirectoryMembershipProvider>i umożliwia przechowywanie informacji o użytkownikach na serwerze Active Directory lub Active Directory aplikacji (ADAM). Możesz również zaimplementować niestandardowego dostawcę członkostwa, aby komunikować się z alternatywnym źródłem danych, które może być używane przez <xref:System.Web.Security.Membership> klasę. Niestandardowi dostawcy członkostwa <xref:System.Web.Security.MembershipProvider> dziedziczą klasę abstrakcyjną. Aby uzyskać więcej informacji, zobacz [implementowanie dostawcy członkostwa](https://msdn.microsoft.com/library/d8658b8e-c962-4f64-95e1-4acce35e4582).  
  
 Domyślnie członkostwo ASP.NET jest włączone dla wszystkich aplikacji ASP.NET. Domyślny dostawca członkostwa jest <xref:System.Web.Security.SqlMembershipProvider> określony w konfiguracji komputera z nazwą. `AspNetSqlProvider` Domyślne wystąpienie <xref:System.Web.Security.SqlMembershipProvider> programu jest skonfigurowane do łączenia się z lokalnym wystąpieniem Microsoft SQL Server.  
  
 Możesz zmodyfikować ustawienia domyślne, aby określić <xref:System.Web.Security.SqlMembershipProvider> inne `AspNetSqlProvider` niż wystąpienie jako domyślny dostawca, lub określić wystąpienie dostawcy niestandardowego jako domyślnego dostawcę aplikacji ASP.NET przy użyciu pliku Web. config. Konfigurację członkostwa ASP.NET dla aplikacji sieci Web można określić przy użyciu sekcji Konfiguracja [członkostwa](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w pliku Web. config. Aby określić dostawcę członkostwa [](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/6d4936ht(v%3dvs.100)) innego niż jeden z domyślnych dostawców, można użyć podsekcji Providers w sekcji [członkostwo](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) . Na przykład następująca sekcja [członkostwa](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) usuwa domyślnych dostawców członkostwa z konfiguracji bieżącej aplikacji i dodaje nowego dostawcę o nazwie `SqlProvider` , która łączy się z wystąpieniem SQL Server o nazwie. `AspSqlServer`  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia stronę logowania dla aplikacji ASP.NET skonfigurowanej do korzystania z uwierzytelniania formularzy i członkostwa w ASP.NET. Jeśli podane poświadczenia użytkownika są nieprawidłowe, zostanie wyświetlony komunikat. W przeciwnym razie użytkownik zostanie przekierowany do pierwotnie żądanego adresu URL <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> przy użyciu metody.  
  
> [!NOTE]
>  Kontrolki logowania ASP.NET (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus> <xref:System.Web.UI.WebControls.LoginName>, i <xref:System.Web.UI.WebControls.PasswordRecovery>) hermetyzują praktycznie całą logikę wymaganą do monitowania użytkowników o poświadczenia oraz weryfikują poświadczenia w systemie członkostwa i mogą być używane zamiast sprawdzania programistycznego za pomocą <xref:System.Web.Security.Membership> klasy.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa</related>
  </Docs>
  <Members>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.Membership.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aplikacji.</summary>
        <value>Nazwa aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ApplicationName%2A> Służy do identyfikowania użytkowników specyficznych dla aplikacji. Oznacza to, że w bazie danych może istnieć taka sama nazwa użytkownika dla wielu aplikacji ASP.NET, które określają <xref:System.Web.Security.Membership.ApplicationName%2A>inną. Dzięki temu wiele aplikacji może korzystać z tej samej bazy danych w celu przechowywania informacji o użytkowniku bez konieczności wykonywania zduplikowanych konfliktów nazw użytkowników. Alternatywnie wiele aplikacji ASP.NET może używać tej samej bazy danych użytkownika przez określenie tego samego <xref:System.Web.Security.Membership.ApplicationName%2A>. <xref:System.Web.Security.Membership.ApplicationName%2A> Można ustawić program programowo lub deklaratywnie w konfiguracji aplikacji sieci Web.  
  
> [!CAUTION]
>  Ponieważ pojedyncze domyślne wystąpienie dostawcy członkostwa jest używane dla wszystkich żądań obsłużonych przez <xref:System.Web.HttpApplication> obiekt, można wykonywać wiele żądań jednocześnie i próbować <xref:System.Web.Security.Membership.ApplicationName%2A> ustawić wartość właściwości. Właściwość nie jest bezpieczna wątkowo dla wielu zapisów, a <xref:System.Web.Security.Membership.ApplicationName%2A> zmiana wartości właściwości może spowodować nieoczekiwane zachowanie dla wielu użytkowników aplikacji. <xref:System.Web.Security.Membership.ApplicationName%2A> Zalecamy uniknięcie pisania kodu, który umożliwia użytkownikom ustawianie <xref:System.Web.Security.Membership.ApplicationName%2A> właściwości, chyba że jest to konieczne. Przykładem aplikacji, w <xref:System.Web.Security.Membership.ApplicationName%2A> której ustawienie właściwości może być wymagane, jest aplikacja administracyjna, która zarządza danymi członkostwa dla wielu aplikacji. Taka aplikacja powinna być aplikacją pojedynczego użytkownika, a nie aplikacją sieci Web.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia element [Membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w `system.web` sekcji pliku Web. config dla aplikacji ASP.NET. Określa, że aplikacja używa <xref:System.Web.Security.SqlMembershipProvider> wystąpienia i <xref:System.Web.Security.Membership.ApplicationName%2A> ustawia do `MyApplication`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje nowego użytkownika do magazynu danych.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika dla nowego użytkownika.</param>
        <param name="password">Hasło nowego użytkownika.</param>
        <summary>Dodaje nowego użytkownika do magazynu danych.</summary>
        <returns><see cref="T:System.Web.Security.MembershipUser" /> Obiekt nowo utworzonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A>Dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser> obiekt dla nowo utworzonego użytkownika. Jeśli Tworzenie użytkownika nie powiedzie się <xref:System.Web.Security.MembershipCreateUserException> , zostanie zgłoszony. Możesz pobrać <xref:System.Web.Security.MembershipCreateStatus> wartość <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> z właściwości <xref:System.Web.Security.MembershipCreateUserException> , która wskazuje dlaczego Tworzenie użytkownika nie powiodło się.  
  
 Po utworzeniu użytkownika członkostwa i <xref:System.Web.Security.MembershipUser> uzyskaniu odwołania do obiektu dla tego użytkownika można zmodyfikować ustawienia tego użytkownika <xref:System.Web.Security.MembershipUser> z metodami publicznymi, takimi jak <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> w przypadku aplikacji, gdzie <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> jest `true`, lub przez ustawienie wartości <xref:System.Web.Security.MembershipUser> właściwości obiektu i przekazanie <xref:System.Web.Security.Membership.UpdateUser%2A> ich do metody.  
  
 Jeśli użytkownik już istnieje w źródle danych dla aplikacji, można uzyskać <xref:System.Web.Security.MembershipUser> obiekt dla istniejącego użytkownika <xref:System.Web.Security.Membership.GetUser%2A> przy użyciu metody.  
  
 Udostępnia <xref:System.Web.Security.SqlMembershipProvider> opcję, aby wymagać unikatowego adresu e-mail dla każdego użytkownika. Jeśli właściwość ma `true`wartość, konieczne będzie użycie jednego z <xref:System.Web.Security.Membership.CreateUser%2A> przeciążeń, które pozwala określić adres e-mail tworzonego użytkownika. <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> W przeciwnym razie zostanie zgłoszony. <xref:System.Web.Security.MembershipCreateUserException>  
  
 Spacje wiodące i końcowe są obcinane ze wszystkich wartości parametrów.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nowego użytkownika dla aplikacji ASP.NET skonfigurowanej do korzystania z uwierzytelniania formularzy i członkostwa w ASP.NET. Jeśli użytkownik nie zostanie utworzony pomyślnie, zostanie wyświetlony komunikat. W przeciwnym razie użytkownik zostanie przekierowany do strony logowania dla aplikacji.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">Użytkownik nie został utworzony. <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> Sprawdź Właściwość<see cref="T:System.Web.Security.MembershipCreateStatus" /> dla wartości.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika dla nowego użytkownika.</param>
        <param name="password">Hasło nowego użytkownika.</param>
        <param name="email">Adres e-mail nowego użytkownika.</param>
        <summary>Dodaje nowego użytkownika o określonym adresie e-mail do magazynu danych.</summary>
        <returns><see cref="T:System.Web.Security.MembershipUser" /> Obiekt nowo utworzonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A>Dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser> obiekt dla nowo utworzonego użytkownika. Jeśli Tworzenie użytkownika nie powiedzie się <xref:System.Web.Security.MembershipCreateUserException> , zostanie zgłoszony. Możesz pobrać <xref:System.Web.Security.MembershipCreateStatus> wartość <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> z właściwości <xref:System.Web.Security.MembershipCreateUserException> , która wskazuje dlaczego Tworzenie użytkownika nie powiodło się.  
  
 Po utworzeniu użytkownika członkostwa i <xref:System.Web.Security.MembershipUser> uzyskaniu odwołania do obiektu dla tego użytkownika można zmodyfikować ustawienia tego użytkownika <xref:System.Web.Security.MembershipUser> z metodami publicznymi, takimi jak <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> w przypadku aplikacji, gdzie <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> jest `true`, lub przez ustawienie wartości <xref:System.Web.Security.MembershipUser> właściwości obiektu i przekazanie <xref:System.Web.Security.Membership.UpdateUser%2A> ich do metody.  
  
 Jeśli użytkownik już istnieje w źródle danych dla aplikacji, można uzyskać <xref:System.Web.Security.MembershipUser> obiekt dla istniejącego użytkownika <xref:System.Web.Security.Membership.GetUser%2A> przy użyciu metody.  
  
 Spacje wiodące i końcowe są obcinane ze wszystkich wartości parametrów.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nowego użytkownika dla aplikacji ASP.NET skonfigurowanej do korzystania z uwierzytelniania formularzy i członkostwa w ASP.NET. Jeśli użytkownik nie zostanie utworzony pomyślnie, zostanie wyświetlony komunikat. W przeciwnym razie użytkownik zostanie przekierowany do strony logowania dla aplikacji.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">Użytkownik nie został utworzony. <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> Sprawdź Właściwość<see cref="T:System.Web.Security.MembershipCreateStatus" /> dla wartości.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika dla nowego użytkownika.</param>
        <param name="password">Hasło nowego użytkownika.</param>
        <param name="email">Adres e-mail nowego użytkownika.</param>
        <param name="passwordQuestion">Wartość pytania hasła dla użytkownika będącego członkiem.</param>
        <param name="passwordAnswer">Wartość hasła dla użytkownika z członkostwem.</param>
        <param name="isApproved">Wartość logiczna wskazująca, czy nowy użytkownik jest zatwierdzony do logowania.</param>
        <param name="status"><see cref="T:System.Web.Security.MembershipCreateStatus" /> Wskazuje, że użytkownik został utworzony pomyślnie, lub powód, dla którego tworzenie nie powiodło się.</param>
        <summary>Dodaje nowego użytkownika o określonych wartościach właściwości do magazynu danych i zwraca parametr stanu informujący o pomyślnym utworzeniu użytkownika lub przyczynę niepowodzenia tworzenia przez użytkownika.</summary>
        <returns><see cref="T:System.Web.Security.MembershipUser" /> Obiekt nowo utworzonego użytkownika. Jeśli żaden użytkownik nie został utworzony, Metoda ta <see langword="null" />zwraca wartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A>Dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser> obiekt dla nowo utworzonego użytkownika. Jeśli utworzenie użytkownika nie powiedzie się, można pobrać <xref:System.Web.Security.MembershipCreateStatus> wartość `status` z parametru Output, który wskazuje, dlaczego Tworzenie użytkownika nie powiodło się.  
  
 `password` `username` `null` `null` `passwordQuestion` Metoda zwróci wartość, `null`Jeślijestpustym ciągiem lub, jest pustym ciągiem lub zawiera przecinek (,), nie jest i jest ciągiem pustym lub `null` <xref:System.Web.Security.Membership.CreateUser%2A> `passwordAnswer` nie`null` jest i zawiera pusty ciąg.  
  
 Po utworzeniu użytkownika członkostwa i uzyskaniu odwołania do <xref:System.Web.Security.MembershipUser> obiektu dla tego użytkownika można zmodyfikować ustawienia tego użytkownika <xref:System.Web.Security.MembershipUser> z metodami publicznymi i przez ustawienie wartości <xref:System.Web.Security.MembershipUser> właściwości obiektu, a następnie przekazanie <xref:System.Web.Security.MembershipUser> obiekt<xref:System.Web.Security.Membership.UpdateUser%2A> do metody.  
  
 Jeśli użytkownik już istnieje w źródle danych dla aplikacji, można uzyskać <xref:System.Web.Security.MembershipUser> obiekt dla istniejącego użytkownika <xref:System.Web.Security.Membership.GetUser%2A> przy użyciu metody.  
  
 Spacje wiodące i końcowe są obcinane ze wszystkich wartości parametrów ciągu.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nowego użytkownika dla aplikacji ASP.NET skonfigurowanej do korzystania z uwierzytelniania formularzy i członkostwa w ASP.NET. Jeśli użytkownik nie zostanie utworzony pomyślnie, zostanie wyświetlony komunikat. W przeciwnym razie użytkownik zostanie przekierowany do strony logowania dla aplikacji.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="static member CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika dla nowego użytkownika.</param>
        <param name="password">Hasło nowego użytkownika.</param>
        <param name="email">Adres e-mail nowego użytkownika.</param>
        <param name="passwordQuestion">Wartość pytania hasła dla użytkownika będącego członkiem.</param>
        <param name="passwordAnswer">Wartość hasła dla użytkownika z członkostwem.</param>
        <param name="isApproved">Wartość logiczna wskazująca, czy nowy użytkownik jest zatwierdzony do logowania.</param>
        <param name="providerUserKey">Identyfikator użytkownika, który ma być przechowywany w magazynie danych członkostwa.</param>
        <param name="status"><see cref="T:System.Web.Security.MembershipCreateStatus" /> Wskazuje, że użytkownik został utworzony pomyślnie, lub nie można utworzyć przyczyny.</param>
        <summary>Dodaje nowego użytkownika z określonymi wartościami właściwości i unikatowym identyfikatorem do magazynu danych i zwraca parametr stanu informujący o pomyślnym utworzeniu użytkownika lub przyczynę niepowodzenia tworzenia przez użytkownika.</summary>
        <returns><see cref="T:System.Web.Security.MembershipUser" /> Obiekt nowo utworzonego użytkownika. Jeśli żaden użytkownik nie został utworzony, Metoda ta <see langword="null" />zwraca wartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A>Dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser> obiekt dla nowo utworzonego użytkownika. Jeśli utworzenie użytkownika nie powiedzie się, można pobrać <xref:System.Web.Security.MembershipCreateStatus> wartość `status` z parametru Output, który wskazuje, dlaczego Tworzenie użytkownika nie powiodło się. Można określić unikatowy identyfikator dla użytkownika, taki jak wartość klucza podstawowego dla bazy danych, przy użyciu `providerUserKey` parametru.  
  
 `password` `null` `username` `passwordQuestion` `null` Metoda zwróci `null` wartość, jeśli jest pustym ciągiem lub, jest pustym ciągiem lub `null` zawiera przecinek (,), nie jest i zawiera puste <xref:System.Web.Security.Membership.CreateUser%2A> ciąg lub `passwordAnswer` nie `null` jest i zawiera pusty ciąg.  
  
 Po utworzeniu użytkownika członkostwa i uzyskaniu odwołania do <xref:System.Web.Security.MembershipUser> obiektu dla tego użytkownika można zmodyfikować ustawienia tego użytkownika <xref:System.Web.Security.MembershipUser> z metodami publicznymi i przez ustawienie wartości <xref:System.Web.Security.MembershipUser> właściwości obiektu, a następnie przekazanie <xref:System.Web.Security.MembershipUser> obiekt<xref:System.Web.Security.Membership.UpdateUser%2A> do metody.  
  
 Jeśli użytkownik już istnieje w źródle danych dla aplikacji, można uzyskać <xref:System.Web.Security.MembershipUser> obiekt dla istniejącego użytkownika <xref:System.Web.Security.Membership.GetUser%2A> przy użyciu metody.  
  
 Spacje wiodące i końcowe są obcinane ze wszystkich wartości parametrów ciągu.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa użytkownika z bazy danych.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do usunięcia.</param>
        <summary>Usuwa użytkownika i wszystkie powiązane z nim dane użytkownika.</summary>
        <returns><see langword="true" />Jeśli użytkownik został usunięty; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane użytkownika przechowywane w bazie danych dla <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>lub <xref:System.Web.UI.WebControls.WebParts.WebPart> personalizacji są również usuwane podczas korzystania z <xref:System.Web.Security.SqlRoleProvider>obiektów, <xref:System.Web.Profile.SqlProfileProvider>i <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> do przechowywania danych.  
  
   
  
## Examples  
 Poniższy przykład kodu usuwa aktualnie zalogowanego użytkownika i wszystkie powiązane dane.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" />jest pustym ciągiem lub zawiera przecinek (,).</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" />była<see langword="null." /></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="static member DeleteUser : string * bool -&gt; bool" Usage="System.Web.Security.Membership.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do usunięcia.</param>
        <param name="deleteAllRelatedData"><see langword="true" />Aby usunąć dane związane z użytkownikiem z bazy danych programu; <see langword="false" /> pozostawienie danych związanych z użytkownikiem w bazie danych.</param>
        <summary>Usuwa użytkownika z bazy danych.</summary>
        <returns><see langword="true" />Jeśli użytkownik został usunięty; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użytkownicy usunięci z bazy danych są usunięci tylko ze skonfigurowanej `applicationName`usługi.  
  
 Jeśli `deleteAllRelatedData` jest <xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.Security.SqlRoleProvider> <xref:System.Web.HttpContext.Profile%2A> <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> <xref:System.Web.Profile.SqlProfileProvider>, dane użytkownika przechowywane <xref:System.Web.Security.Roles>w bazie danych dla,, lub Personalizacja są również usuwane podczas używania obiektów, i dla `true` Magazyn danych.  
  
   
  
## Examples  
 Poniższy przykład kodu usuwa aktualnie zalogowanego użytkownika i wszystkie powiązane dane.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" />jest pustym ciągiem lub zawiera przecinek (,).</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.Membership.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżący dostawca członkostwa jest skonfigurowany tak, aby zezwalać użytkownikom na resetowanie haseł.</summary>
        <value><see langword="true" />Jeśli dostawca członkostwa obsługuje Resetowanie hasła; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Resetowanie hasła umożliwia członkowstwu ASP.NET zastąpienie bieżącego hasła dla nazwy użytkownika nowym, losowo wygenerowanym hasłem, gdy użytkownik zapomniał hasła lub bieżące hasło nie jest już prawidłowe. Jest to szczególnie przydatne, jeśli format hasła jest ustawiony <xref:System.Web.Security.MembershipPasswordFormat.Hashed>na, ponieważ użytkownicy nie mogą pobrać wartości hasła z wartością skrótu.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia element [Membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w `system.web` sekcji pliku Web. config dla aplikacji ASP.NET. Określa, że aplikacja używa wystąpienia <xref:System.Web.Security.SqlMembershipProvider> i włącza resetowanie hasła.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Poniższy przykład kodu najpierw weryfikuje <xref:System.Web.Security.Membership.EnablePasswordReset%2A> `true`to, a następnie resetuje hasło użytkownika i zwraca nowe, automatycznie wygenerowane hasło.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżący dostawca członkostwa jest skonfigurowany tak, aby zezwalać użytkownikom na pobieranie ich haseł.</summary>
        <value><see langword="true" />Jeśli dostawca członkostwa obsługuje pobieranie hasła; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> tak `false`jest, podstawowy dostawca <xref:System.Web.HttpException>członkostwa może zgłosić.  
  
 Dostawcy dołączeni do .NET Framework obsługują wiele formatów haseł w celu zwiększenia bezpieczeństwa haseł. Jeśli format hasła jest ustawiony na <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, użytkownicy nie będą mogli pobrać istniejącego hasła z bazy danych. Format <xref:System.Web.Security.MembershipPasswordFormat.Hashed> hasła zapewnia jednokierunkowe kodowanie wartości haseł. Hasła są "zmieszane" i porównywane z wartościami przechowywanymi w bazie danych na potrzeby uwierzytelniania. Wartości "Hashed" nie mogą być niezaszyfrowane, aby można było pobrać oryginalną wartość hasła. Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.MembershipPasswordFormat>.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia element [Membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w `system.web` sekcji pliku Web. config dla aplikacji ASP.NET. Określa, że aplikacja używa wystąpienia <xref:System.Web.Security.SqlMembershipProvider> i umożliwia pobieranie hasła.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Poniższy przykład kodu najpierw weryfikuje <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> `true`to, a następnie pobiera hasło dla określonej nazwy użytkownika i wysyła je na adres e-mail określonego użytkownika.  
  
> [!IMPORTANT]
>  Zwracanie hasła w postaci zwykłego tekstu przy użyciu poczty e-mail nie jest zalecane w przypadku witryn wymagających wysokiego poziomu zabezpieczeń. W przypadku witryn o wysokim poziomie zabezpieczeń zaleca się zwracanie haseł przy użyciu szyfrowania, na przykład protokołu SSL.  
>   
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByEmail">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję użytkowników członkostwa, w których adres e-mail zawiera określony adres e-mail do dopasowania.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Adres e-mail do wyszukania.</param>
        <summary>Pobiera kolekcję użytkowników członkostwa, w których adres e-mail zawiera określony adres e-mail do dopasowania.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> , który zawiera wszystkich użytkowników zgodnych <paramref name="emailToMatch" /> z parametrem.  
  
Spacje wiodące i końcowe są obcinane <paramref name="emailToMatch" /> z wartości parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A>zwraca listę użytkowników członkostwa, których adres e-mail jest zgodny z podaną `emailToMatch` konfiguracją `applicationName`.  
  
 Wykonuje wyszukiwanie przy użyciu klauzuli LIKE `emailToMatch` względem parametru. <xref:System.Web.Security.SqlMembershipProvider> Wszystkie symbole wieloznaczne, które są obsługiwane przez SQL Server w klauzulach like, mogą `emailToMatch` być używane w wartości parametru.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Web.Security.Membership.FindUsersByEmail%2A> metody do pobierania informacji o użytkowniku członkostwa z bazy danych członkostwa w oparciu o dane wejściowe użytkownika i wyświetla wyniki na stronach danych.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Adres e-mail do wyszukania.</param>
        <param name="pageIndex">Indeks strony wyników do zwrócenia. <paramref name="pageIndex" />jest liczony od zera.</param>
        <param name="pageSize">Rozmiar strony wyników do zwrócenia.</param>
        <param name="totalRecords">Łączna Liczba pasujących użytkowników.</param>
        <summary>Pobiera kolekcję użytkowników członkostwa na stronie danych, gdzie adres e-mail zawiera określony adres e-mail do dopasowania.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> , który zawiera <paramref name="pageSize" /> <see cref="T:System.Web.Security.MembershipUser" /> stronę obiektów rozpoczynającą się na stronie określonej przez <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A>zwraca listę użytkowników członkostwa, których adres e-mail jest zgodny z podaną `emailToMatch` konfiguracją `applicationName`.  
  
 Wykonuje wyszukiwanie przy użyciu klauzuli LIKE `emailToMatch` względem parametru. <xref:System.Web.Security.SqlMembershipProvider> Wszystkie symbole wieloznaczne, które są obsługiwane przez SQL Server w klauzulach like, mogą `emailToMatch` być używane w wartości parametru.  
  
 Wyniki zwrócone przez <xref:System.Web.Security.Membership.FindUsersByEmail%2A> są ograniczone `pageIndex` przez parametry i `pageSize` . Parametr określa maksymalną <xref:System.Web.Security.MembershipUser> liczbę<xref:System.Web.Security.MembershipUserCollection>obiektów do zwrócenia w. `pageSize` `pageIndex` Parametr określa, która strona wyników ma zostać zwrócona, gdzie 0 identyfikuje pierwszą stronę. Parametr jest parametrem, który jest ustawiony na łączną liczbę użytkowników członkostwa pasujących do `emailToMatch` wartości. `out` `totalRecords` Na przykład jeśli znaleziono 13 użytkowników, w których `emailToMatch` znajduje się dopasowany część lub cały adres e-mail, `pageIndex` a `pageSize` wartość wynosząca 1 z 5, <xref:System.Web.Security.MembershipUserCollection> zwracane wartości będą zawierać od szóstego do dziesięciu zwracanych użytkowników. `totalRecords`zostanie ustawiona na 13.  
  
 Spacje wiodące i końcowe są obcinane `emailToMatch` z wartości parametru.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Web.Security.Membership.FindUsersByEmail%2A> metody do pobierania informacji o użytkowniku członkostwa z bazy danych członkostwa w oparciu o dane wejściowe użytkownika i wyświetla wyniki na stronach danych.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" />jest mniejsza od zera.  
  
—lub— 
 <paramref name="pageSize" />jest mniejsza niż 1.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję użytkowników członkostwa, gdzie nazwa użytkownika zawiera określoną nazwę użytkownika do dopasowania.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName usernameToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Nazwa użytkownika do wyszukania.</param>
        <summary>Pobiera kolekcję użytkowników członkostwa, gdzie nazwa użytkownika zawiera określoną nazwę użytkownika do dopasowania.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> , który zawiera wszystkich użytkowników zgodnych <paramref name="usernameToMatch" /> z parametrem.  
  
Spacje wiodące i końcowe są obcinane <paramref name="usernameToMatch" /> z wartości parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>zwraca listę użytkowników członkostwa, których nazwa użytkownika jest zgodna z podaną `usernameToMatch` konfiguracją `applicationName`.  
  
 Wykonuje wyszukiwanie przy użyciu klauzuli LIKE `usernameToMatch` względem parametru. <xref:System.Web.Security.SqlMembershipProvider> Wszystkie symbole wieloznaczne, które są obsługiwane przez SQL Server w klauzulach like, mogą `usernameToMatch` być używane w wartości parametru.  
  
 Spacje wiodące i końcowe są obcinane ze wszystkich wartości parametrów.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Web.Security.Membership.FindUsersByName%2A> metody do pobierania informacji o użytkowniku członkostwa z bazy danych członkostwa w oparciu o dane wejściowe użytkownika i wyświetla wyniki na stronach danych.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" />jest pustym ciągiem.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Nazwa użytkownika do wyszukania.</param>
        <param name="pageIndex">Indeks strony wyników do zwrócenia. <paramref name="pageIndex" />jest liczony od zera.</param>
        <param name="pageSize">Rozmiar strony wyników do zwrócenia.</param>
        <param name="totalRecords">Łączna Liczba pasujących użytkowników.</param>
        <summary>Pobiera kolekcję użytkowników członkostwa na stronie danych, gdzie nazwa użytkownika zawiera określoną nazwę użytkownika do dopasowania.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> , który zawiera <paramref name="pageSize" /> <see cref="T:System.Web.Security.MembershipUser" /> stronę obiektów rozpoczynającą się na stronie określonej przez <paramref name="pageIndex" />.  
  
Spacje wiodące i końcowe są obcinane <paramref name="usernameToMatch" /> z wartości parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>zwraca listę użytkowników członkostwa, których nazwa użytkownika jest zgodna z podaną `usernameToMatch` konfiguracją `applicationName`.  
  
 Wykonuje wyszukiwanie przy użyciu klauzuli LIKE `usernameToMatch` względem parametru. <xref:System.Web.Security.SqlMembershipProvider> Wszystkie symbole wieloznaczne, które są obsługiwane przez SQL Server w klauzulach like, mogą `usernameToMatch` być używane w wartości parametru.  
  
 Wyniki zwrócone przez <xref:System.Web.Security.Membership.FindUsersByName%2A> są ograniczone `pageIndex` przez parametry i `pageSize` . Parametr określa maksymalną <xref:System.Web.Security.MembershipUser> liczbę<xref:System.Web.Security.MembershipUserCollection>obiektów do zwrócenia w. `pageSize` `pageIndex` Parametr określa, która strona wyników ma zostać zwrócona, gdzie 0 identyfikuje pierwszą stronę. Parametr jest parametrem, który jest ustawiony na łączną liczbę użytkowników członkostwa pasujących do `usernameToMatch` wartości. `out` `totalRecords` Na przykład, jeśli znaleziono 13 użytkowników, w `usernameToMatch` których znajduje się dopasowana część lub cała nazwa użytkownika, `pageIndex` a `pageSize` wartość wynosiła 1 z 5, <xref:System.Web.Security.MembershipUserCollection> zwracana z nich będzie zawierać szósty przez dziesiątą liczbę zwracanych użytkowników. `totalRecords`zostanie ustawiona na 13.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Web.Security.Membership.FindUsersByName%2A> metody do pobierania informacji o użytkowniku członkostwa z bazy danych członkostwa w oparciu o dane wejściowe użytkownika i wyświetla wyniki na stronach danych.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" />jest pustym ciągiem.  
  
—lub— 
 <paramref name="pageIndex" />jest mniejsza od zera.  
  
—lub— 
 <paramref name="pageSize" />jest mniejsza niż 1.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratePassword(int32 length, int32 numberOfNonAlphanumericCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratePassword (length As Integer, numberOfNonAlphanumericCharacters As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GeneratePassword(int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="F#" Value="static member GeneratePassword : int * int -&gt; string" Usage="System.Web.Security.Membership.GeneratePassword (length, numberOfNonAlphanumericCharacters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="numberOfNonAlphanumericCharacters" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">Liczba znaków w wygenerowanym haśle. Długość musi należeć do zakresu od 1 do 128 znaków.</param>
        <param name="numberOfNonAlphanumericCharacters">Minimalna liczba znaków innych niż alfanumeryczne (takich jak @, #,!,%, &amp;itd.) w wygenerowanym haśle.</param>
        <summary>Generuje losowe hasło o określonej długości.</summary>
        <returns>Losowe hasło o określonej długości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana do generowania losowego hasła i jest najczęściej używana <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> przez metodę implementowaną przez dostawcę członkostwa w celu zresetowania hasła dla użytkownika do nowego, tymczasowego hasła. <xref:System.Web.Security.Membership.GeneratePassword%2A>  
  
 Wygenerowane hasło zawiera tylko znaki alfanumeryczne i następujące znaki interpunkcyjne: `!@#$%^&*()_-+=[{]};:<>|./?`. W wygenerowanym haśle nie są uwzględniane żadne ukryte ani nie drukowalne znaki kontrolne.  
  
> [!NOTE]
>  Hasło losowe utworzone przez <xref:System.Web.Security.Membership.GeneratePassword%2A> metodę nie gwarantuje przekazania wyrażenia regularnego <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> we właściwości. Jednak hasło losowe będzie spełniać kryteria ustanowione przez <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> Właściwość `numberOfNonAlphanumericCharacters` i parametr.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nowego użytkownika członkostwa i używa <xref:System.Web.Security.Membership.GeneratePassword%2A> metody do zainicjowania hasła dla nowego użytkownika do wartości losowej, która jest wyświetlana użytkownikowi.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="length" />jest mniejsza niż 1 lub większa niż 128-lub- 
 <paramref name="numberOfNonAlphanumericCharacters" />jest mniejsza niż 0 lub większa niż <paramref name="length" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllUsers">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję użytkowników w bazie danych.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers () As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers();" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : unit -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję wszystkich użytkowników w bazie danych.</summary>
        <returns><see cref="T:System.Web.Security.MembershipUserCollection" /> Obiekt reprezentującywszystkichużytkowników<see cref="T:System.Web.Security.MembershipUser" /> w bazie danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A>zwraca informacje dla wszystkich użytkowników członkostwa aplikacji jako kolekcję <xref:System.Web.Security.MembershipUser> obiektów. Należy zachować ostrożność przy <xref:System.Web.Security.Membership.GetAllUsers%2A> korzystaniu z metody z bardzo dużymi bazami danych <xref:System.Web.Security.MembershipUserCollection> użytkownika, ponieważ wynikowa strona ASP.NET może obniżyć wydajność aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu zwraca listę użytkowników, których liczba użytkowników jest obecnie w trybie online.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="System.Web.Security.Membership.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">Indeks strony wyników do zwrócenia. W celu wskazania pierwszej strony należy użyć wartości 0.</param>
        <param name="pageSize">Rozmiar strony wyników do zwrócenia. <paramref name="pageIndex" />jest liczony od zera.</param>
        <param name="totalRecords">Całkowita liczba użytkowników.</param>
        <summary>Pobiera kolekcję wszystkich użytkowników w bazie danych na stronach danych.</summary>
        <returns>Obiektów reprezentujących wszystkich użytkowników w bazie danych dla skonfigurowanych <see cref="T:System.Web.Security.MembershipUser" /> <see langword="applicationName" />elementów. <see cref="T:System.Web.Security.MembershipUserCollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyniki zwrócone przez <xref:System.Web.Security.Membership.GetAllUsers%2A> są ograniczone `pageIndex` przez parametry i `pageSize` . Parametr określa maksymalną <xref:System.Web.Security.MembershipUser> liczbę<xref:System.Web.Security.MembershipUserCollection>obiektów do zwrócenia w. `pageSize` `pageIndex` Parametr określa, która strona wyników ma zostać zwrócona, gdzie 0 identyfikuje pierwszą stronę. Parametr jest parametrem, który jest ustawiony na łączną liczbę użytkowników członkostwa skonfigurowanych `applicationName`. `totalRecords` `out` Na przykład jeśli skonfigurowano `applicationName`13 użytkowników, `pageIndex` a `pageSize` wartość wynosiła 1 z 5, zwracane z <xref:System.Web.Security.MembershipUserCollection> nich będzie zawierać szóstą przez dziesiątą liczbę użytkowników. `totalRecords`zostanie ustawiona na 13.  
  
   
  
## Examples  
 Poniższy przykład kodu zwraca listę użytkowników na stronach danych z liczbą użytkowników w trybie online.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" />jest mniejsza od zera.  
  
—lub— 
 <paramref name="pageSize" />jest mniejsza niż 1.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public static int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="static member GetNumberOfUsersOnline : unit -&gt; int" Usage="System.Web.Security.Membership.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera liczbę użytkowników, którzy aktualnie uzyskują dostęp do aplikacji.</summary>
        <returns>Liczba użytkowników, którzy aktualnie uzyskują dostęp do aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>Zwraca liczbę użytkowników w bieżącym <xref:System.Web.Security.Membership.ApplicationName%2A> miejscu, w którym Data ostatniego działania jest większa niż bieżąca godzina mniejsza od. <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> Sygnatura daty i godziny ostatniego działania jest aktualizowana do aktualnej daty i godziny, gdy poświadczenia użytkownika są sprawdzane za pomocą <xref:System.Web.Security.Membership.ValidateUser%2A> metody <xref:System.Web.Security.Membership.UpdateUser%2A> lub lub w <xref:System.Web.Security.Membership.GetUser%2A> przypadku wywołania przeciążenia, które nie przyjmuje parametrów lub które używa `userIsOnline`parametr określający, że powinna zostać zaktualizowana Sygnatura daty/godziny.  
  
   
  
## Examples  
 Poniższy przykład kodu zwraca listę użytkowników, których liczba użytkowników jest obecnie w trybie online.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera informacje o użytkowniku członkostwa ze źródła danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser () As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser();" />
      <MemberSignature Language="F#" Value="static member GetUser : unit -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera informacje ze źródła danych i aktualizuje sygnaturę Data/godzina ostatniego działania dla bieżącego zalogowanego użytkownika członkostwa.</summary>
        <returns><see cref="T:System.Web.Security.MembershipUser" /> Obiekt reprezentujący bieżącego zalogowanego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser>Pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser> obiekt wypełniony danymi zwracanymi. W przypadku użycia jednego z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie `username` pobiera parametru, <xref:System.Web.Security.Membership.GetUser%2A> program zwraca informacje dotyczące bieżącego zalogowanego użytkownika członkostwa. Bieżący zalogowany użytkownik członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A> użytkownika w bieżącym. <xref:System.Web.HttpContext>  
  
 Możesz również określić, czy chcesz <xref:System.Web.Security.Membership.GetUser%2A> zaktualizować sygnaturę czasową ostatniego działania dla użytkownika pobieranego `userIsOnline` przy użyciu parametru. Przeciążeń, które nie `userIsOnline` przyjmują parametru, `GetUser()` niejawnie aktualizuje sygnaturę daty/godziny ostatniego działania użytkownika. <xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`i `GetUser(System.Object)` nie.  
  
   
  
## Examples  
 Poniższy przykład kodu aktualizuje sygnaturę Data/godzina ostatniego działania dla bieżącego zalogowanego użytkownika członkostwa i wyświetla nazwę użytkownika na stronie ASP.NET.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Żaden użytkownik członkostwa nie jest obecnie zalogowany.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser userIsOnline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userIsOnline">Jeśli <see langword="true" />program aktualizuje sygnaturę czasową ostatniego działania dla określonego użytkownika.</param>
        <summary>Pobiera informacje ze źródła danych dla bieżącego zalogowanego użytkownika członkostwa. Aktualizuje sygnaturę daty i godziny ostatniego działania dla bieżącego zalogowanego użytkownika członkostwa, jeśli jest określony.</summary>
        <returns><see cref="T:System.Web.Security.MembershipUser" /> Obiekt reprezentujący bieżącego zalogowanego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pobiera informacje o użytkowniku ze źródła danych i <xref:System.Web.Security.MembershipUser> tworzy obiekt wypełniony danymi zwracanymi. <xref:System.Web.Security.Membership.GetUser%2A> W przypadku użycia jednego z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie `username` pobiera parametru, <xref:System.Web.Security.Membership.GetUser%2A> program zwraca informacje dotyczące bieżącego zalogowanego użytkownika członkostwa. Bieżący zalogowany użytkownik członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A> użytkownika w bieżącym. <xref:System.Web.HttpContext>  
  
 Możesz również określić, czy chcesz <xref:System.Web.Security.Membership.GetUser%2A> zaktualizować sygnaturę czasową ostatniego działania dla użytkownika pobieranego `userIsOnline` przy użyciu parametru. Przeciążeń, które nie `userIsOnline` przyjmują parametru, `GetUser()` niejawnie aktualizuje sygnaturę daty/godziny ostatniego działania użytkownika. <xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`i `GetUser(System.Object)` nie.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla nazwę użytkownika dla bieżącego zalogowanego użytkownika członkostwa na stronie ASP.NET bez aktualizowania sygnatury daty/godziny ostatniego działania użytkownika.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Żaden użytkownik członkostwa nie jest obecnie zalogowany.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser providerUserKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Unikatowy identyfikator użytkownika ze źródła danych członkostwa dla użytkownika.</param>
        <summary>Pobiera informacje ze źródła danych dla użytkownika członkostwa skojarzonego z określonym unikatowym identyfikatorem.</summary>
        <returns><see cref="T:System.Web.Security.MembershipUser" /> Obiekt reprezentujący użytkownika skojarzony z określonym unikatowym identyfikatorem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pobiera informacje o użytkowniku ze źródła danych i <xref:System.Web.Security.MembershipUser> tworzy obiekt wypełniony danymi zwracanymi. <xref:System.Web.Security.Membership.GetUser%2A> Użytkownik jest identyfikowany przy użyciu unikatowego identyfikatora ze źródła danych określonego za pomocą `providerUserKey` parametru.  
  
 Możesz również określić, czy chcesz <xref:System.Web.Security.Membership.GetUser%2A> zaktualizować sygnaturę czasową ostatniego działania dla użytkownika pobieranego `userIsOnline` z parametrem. Przeciążeń, które nie `userIsOnline` przyjmują parametru, `GetUser()` niejawnie aktualizuje sygnaturę daty/godziny ostatniego działania użytkownika. <xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`i `GetUser(System.Object)` nie  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerUserKey" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member GetUser : string -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do pobrania.</param>
        <summary>Pobiera informacje ze źródła danych dla określonego użytkownika członkostwa.</summary>
        <returns><see cref="T:System.Web.Security.MembershipUser" /> Obiekt reprezentujący określonego użytkownika. Jeśli parametr nie odpowiada istniejącemu użytkownikowi, Metoda ta zwraca wartość <see langword="null" />. <paramref name="username" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pobiera informacje o użytkowniku ze źródła danych i <xref:System.Web.Security.MembershipUser> tworzy obiekt wypełniony danymi zwracanymi. <xref:System.Web.Security.Membership.GetUser%2A> W przypadku użycia jednego z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie `username` pobiera parametru, <xref:System.Web.Security.Membership.GetUser%2A> program zwraca informacje dotyczące bieżącego zalogowanego użytkownika członkostwa. Bieżący zalogowany użytkownik członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A> użytkownika w bieżącym. <xref:System.Web.HttpContext>  
  
 Możesz również określić, czy chcesz <xref:System.Web.Security.Membership.GetUser%2A> zaktualizować sygnaturę czasową ostatniego działania dla użytkownika pobieranego `userIsOnline` z parametrem. Przeciążeń, które nie `userIsOnline` przyjmują parametru, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> niejawnie aktualizuje sygnaturę daty/godziny ostatniego działania użytkownika. <xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType>i <xref:System.Web.Security.Membership.GetUser%2A> nie.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Web.Security.Membership.GetUser%2A> metody do <xref:System.Web.Security.MembershipUser> zwrócenia obiektu dla bieżącego zalogowanego użytkownika i aktualizuje adres e-mail użytkownika.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" />zawiera przecinek (,).</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Unikatowy identyfikator użytkownika ze źródła danych członkostwa dla użytkownika.</param>
        <param name="userIsOnline">Jeśli <see langword="true" />program aktualizuje sygnaturę czasową ostatniego działania dla określonego użytkownika.</param>
        <summary>Pobiera informacje ze źródła danych dla użytkownika członkostwa skojarzonego z określonym unikatowym identyfikatorem. Aktualizuje sygnaturę czasową ostatniego działania użytkownika, jeśli została określona.</summary>
        <returns><see cref="T:System.Web.Security.MembershipUser" /> Obiekt reprezentujący użytkownika skojarzony z określonym unikatowym identyfikatorem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pobiera informacje o użytkowniku ze źródła danych i <xref:System.Web.Security.MembershipUser> tworzy obiekt wypełniony danymi zwracanymi. <xref:System.Web.Security.Membership.GetUser%2A> Użytkownik jest identyfikowany z unikatowym identyfikatorem ze źródła danych określonego w `providerUserKey` parametrze.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerUserKey" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="static member GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="System.Web.Security.Membership.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do pobrania.</param>
        <param name="userIsOnline">Jeśli <see langword="true" />program aktualizuje sygnaturę czasową ostatniego działania dla określonego użytkownika.</param>
        <summary>Pobiera informacje ze źródła danych dla określonego użytkownika członkostwa. Aktualizuje sygnaturę czasową ostatniego działania użytkownika, jeśli została określona.</summary>
        <returns><see cref="T:System.Web.Security.MembershipUser" /> Obiekt reprezentujący określonego użytkownika. Jeśli parametr nie odpowiada istniejącemu użytkownikowi, Metoda ta zwraca wartość <see langword="null" />. <paramref name="username" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pobiera informacje o użytkowniku ze źródła danych i <xref:System.Web.Security.MembershipUser> tworzy obiekt wypełniony danymi zwracanymi. <xref:System.Web.Security.Membership.GetUser%2A>  
  
 W przypadku użycia jednego z <xref:System.Web.Security.Membership.GetUser%2A> przeciążeń, które nie `username` pobiera parametru, <xref:System.Web.Security.Membership.GetUser%2A> program zwraca informacje dotyczące bieżącego zalogowanego użytkownika członkostwa. Bieżący zalogowany użytkownik członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A> użytkownika w bieżącym. <xref:System.Web.HttpContext>  
  
 Możesz również określić, czy chcesz <xref:System.Web.Security.Membership.GetUser%2A> zaktualizować sygnaturę czasową ostatniego działania dla użytkownika pobieranego `userIsOnline` z parametrem. Przeciążeń, które nie `userIsOnline` przyjmują parametru, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> niejawnie aktualizuje sygnaturę daty/godziny ostatniego działania użytkownika. <xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType>i <xref:System.Web.Security.Membership.GetUser%2A> nie.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera hasło dla określonej nazwy użytkownika i wysyła go na adres e-mail określonego użytkownika. Wywołanie <xref:System.Web.Security.Membership.GetUser%2A> określa, że nie można zaktualizować sygnatury daty i godziny ostatniego działania użytkownika.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" />zawiera przecinek (,).</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public static string GetUserNameByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUserNameByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserNameByEmail (emailToMatch As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetUserNameByEmail(System::String ^ emailToMatch);" />
      <MemberSignature Language="F#" Value="static member GetUserNameByEmail : string -&gt; string" Usage="System.Web.Security.Membership.GetUserNameByEmail emailToMatch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Adres e-mail do wyszukania.</param>
        <summary>Pobiera nazwę użytkownika, gdzie adres e-mail użytkownika jest zgodny z określonym adresem e-mail.</summary>
        <returns>Nazwa użytkownika, dla którego adres e-mail użytkownika jest zgodny z określonym adresem e-mail. Jeśli dopasowanie nie zostanie znalezione, <see langword="null" /> jest zwracana.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUserNameByEmail%2A>można go użyć, aby pobrać nazwę użytkownika dla użytkownika z członkostwem w przypadku, gdy użytkownik nie zna jego nazwy użytkownika, ale zna jego adres e-mail. Jeśli więcej niż jeden użytkownik w magazynie danych ma ten sam adres e-mail, zostanie zwrócona Pierwsza nazwa użytkownika.  
  
 Spacje wiodące i końcowe są obcinane ze wszystkich wartości parametrów.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera nazwę użytkownika dla określonego adresu e-mail.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmType">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.HashAlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HashAlgorithmType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HashAlgorithmType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithmType : string" Usage="System.Web.Security.Membership.HashAlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikator algorytmu używany do mieszania haseł.</summary>
        <value>Identyfikator algorytmu używany do mieszania haseł lub pustego, aby użyć domyślnego algorytmu wyznaczania wartości skrótu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość identyfikuje niestandardowy algorytm wyznaczania wartości skrótu używany <xref:System.Web.Security.Membership> przez klasę. <xref:System.Web.Security.Membership.HashAlgorithmType%2A> <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Właściwość należy ustawić `hashAlgorithmType` przy użyciu atrybutu elementu członkowskiego [](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) .  
  
 .NET Framework umożliwia konfigurowanie niestandardowych klas kryptografii przy użyciu [`<cryptographySettings>`](~/docs/framework/configure-apps/file-schema/cryptography/cryptographysettings-element.md) sekcji konfiguracja elementu. Właściwość musi [`<nameEntry>`](~/docs/framework/configure-apps/file-schema/cryptography/nameentry-element.md) [`<cryptoNameMapping>`](~/docs/framework/configure-apps/file-schema/cryptography/cryptonamemapping-element.md) być zgodna z atrybutem elementu w elemencie. `name` <xref:System.Web.Security.Membership.HashAlgorithmType%2A> Aby uzyskać więcej informacji, zobacz [Mapowanie nazw algorytmów na klasy kryptografii](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md).  
  
 Jeśli właściwość nie jest ustawiona <xref:System.Web.Security.Membership> , Klasa używa algorytmu `validation` wyznaczania wartości skrótu ustawionych `<machineKey>` w atrybucie elementu. <xref:System.Web.Security.Membership.HashAlgorithmType%2A>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public static int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę nieprawidłowych haseł lub odpowiedzi na odpowiedź na hasło, zanim użytkownik członkostwa zostanie zablokowany.</summary>
        <value>Liczba nieprawidłowych haseł lub odpowiedzi na odpowiedź na hasło, które są dozwolone przed zablokowaniem użytkownika członkostwa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość działa w połączeniu <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> z właściwością chroniącą przed niechcianym źródłem przy użyciu powtórzonych prób w celu odgadnięcia hasła lub odpowiedzi na hasło użytkownika z członkostwem. <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>  
  
 Jeśli liczba nieprawidłowych haseł lub odpowiedzi na hasła dla użytkownika członkostwa jest większa lub równa wartości <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> właściwości w ciągu kilku minut określonych <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> przez właściwość, użytkownik zostanie zablokowany z witryny sieci Web przez ustawienie właściwości na `true` , dopóki użytkownik nie zostanie odblokowany <xref:System.Web.Security.MembershipUser.UnlockUser%2A> przez wywołanie metody. <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>  
  
 Jeśli podano prawidłowe hasło lub odpowiedź hasła przed osiągnięciem wartości <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> właściwości, licznik, który śledzi liczbę nieprawidłowych prób, jest ustawiony na zero.  
  
 Nieprawidłowe próby odpowiedzi na hasło i hasło są śledzone osobno. Na przykład, jeśli <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> właściwość jest ustawiona na 5, użytkownik może mieć maksymalnie pięć prób wprowadzenia poprawnego hasła i maksymalnie pięć prób wprowadzenia prawidłowej odpowiedzi hasła bez blokowania.  
  
 Wartość właściwości jest ustawiana w konfiguracji aplikacji `maxInvalidPasswordAttempts` przy użyciu atrybutu elementu konfiguracji [członkostwa](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) . <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>  
  
 Jeśli właściwość jest `false`, nieprawidłowe próby odpowiedzi na odpowiedź nie są śledzone. <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia element [Membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w `system.web` sekcji pliku Web. config aplikacji. Określa, że aplikacja używa wystąpienia <xref:System.Web.Security.SqlMembershipProvider> klasy w celu zapewnienia usług członkostwa, i `maxInvalidPasswordAttempts` ustawia atrybut na `passwordAttemptWindow` pięć nieprawidłowych prób i do 30 minut.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public static int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalną liczbę znaków specjalnych, które muszą być obecne w prawidłowym haśle.</summary>
        <value>Minimalna liczba znaków specjalnych, które muszą być obecne w prawidłowym haśle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zwraca minimalną liczbę znaków specjalnych, które nie są alfanumeryczne, które muszą zostać wprowadzone w celu utworzenia prawidłowego hasła dla dostawcy członkostwa określonego <xref:System.Web.Security.Membership.Provider%2A> we właściwości. <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>  
  
 Wartość właściwości jest ustawiana w konfiguracji aplikacji `minRequiredNonAlphanumericCharacters` przy użyciu atrybutu elementu konfiguracji [członkostwa](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) . <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>  
  
 Znak inny niż alfanumeryczny jest znakiem, dla którego <xref:System.Char.IsLetterOrDigit%2A> Metoda zwraca `false`.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia element konfiguracji [członkostwa](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w `system.web` sekcji pliku Web. config aplikacji. Określa, że aplikacja używa wystąpienia <xref:System.Web.Security.SqlMembershipProvider> klasy w celu zapewnienia usług członkostwa i `minRequiredNonAlphanumericCharacters` ustawia atrybut na 1 znak.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonAlphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public static int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalną długość wymaganą dla hasła.</summary>
        <value>Minimalna długość wymagana dla hasła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera minimalną liczbę znaków, które muszą zostać wprowadzone w celu utworzenia prawidłowego hasła dla dostawcy członkostwa określonego <xref:System.Web.Security.Membership.Provider%2A> we właściwości. <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>  
  
 Wartość właściwości jest ustawiana w konfiguracji aplikacji `minRequiredPasswordLength` przy użyciu atrybutu elementu konfiguracji [członkostwa](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) . <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia element konfiguracji [członkostwa](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w `system.web` sekcji pliku Web. config aplikacji. Określa, że aplikacja używa wystąpienia <xref:System.Web.Security.SqlMembershipProvider> klasy w celu zapewnienia usług członkostwa i `minRequiredPasswordLength` ustawia atrybut na siedem znaków.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public static int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera przedział czasu między kolejnymi nieudanymi próbami podania prawidłowego hasła lub odpowiedzi hasła.</summary>
        <value>Przedział czasu (w minutach), w którym kolejne nieudane próby podania prawidłowego hasła lub hasła są śledzone. Wartość domyślna to 10 minut. Jeśli interwał między bieżącą nieudaną próbą a ostatnią nieudaną próbą jest większy niż <see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" /> ustawienie właściwości, każda próba nieudana jest traktowana jak w przypadku pierwszej próby nieudanej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość działa w połączeniu <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> z właściwością, aby pomóc w ochronie przed niechcianym źródłem odgadnięcia hasła lub odpowiedzi na hasło użytkownika z członkostwem za pomocą powtórzonych prób. <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Gdy użytkownik próbuje zalogować się przy użyciu, zmienić lub zresetować swoje hasło, w określonym przedziale czasu są dozwolone tylko niektóre kolejne próby. Długość tego przedziału czasu jest określona we <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> właściwości, która określa liczbę minut, które mogą występować między nieprawidłowymi próbami.  
  
 Jeśli liczba kolejnych nieudanych prób wykonania przez użytkownika resetowania hasła jest równa wartości przechowywanej we <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> właściwości, a czas, który upłynął od momentu ostatniej nieprawidłowej próby, jest mniejsza niż liczba minut określona w <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> , a następnie użytkownik członkostwa jest zablokowany. Użytkownik jest zablokowany przez ustawienie <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> właściwości na `true` , dopóki użytkownik nie zostanie odblokowany <xref:System.Web.Security.MembershipUser.UnlockUser%2A> przez wywołanie metody.  
  
 Jeśli interwał między bieżącą nieudaną próbą a ostatnią nieudaną próbą jest większy niż <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> ustawienie właściwości, bieżąca Nieprawidłowa próba jest traktowana jako pierwsza. Jeśli podano prawidłową odpowiedź hasła przed osiągnięciem maksymalnej dozwolonej liczby nieudanych prób, Liczba nieprawidłowych prób odpowiedzi hasła jest ustawiona na 0 (zero). Jeśli podano prawidłowe hasło przed osiągnięciem maksymalnej dozwolonej liczby nieudanych prób, liczba nieudanych prób wprowadzenia hasła oraz Liczba nieprawidłowych nieudanych prób odpowiedzi jest równa 0 (zero).  
  
 Nieprawidłowe hasło i odpowiedzi na odpowiedź hasła są gromadzone niezależnie od siebie. Na przykład, jeśli <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> jest ustawiona na 5, a po trzech nieudanych próbach hasła następuje dwie nieudane próby odpowiedzenia hasła, dwie dodatkowe nieudane próby wprowadzenia hasła (lub trzy więcej nieprawidłowych prób odpowiedzi hasła) muszą zostać wprowadzone w <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> dla użytkownika członkostwa, który ma być zablokowany.  
  
 Wartość właściwości jest ustawiana w konfiguracji aplikacji przy `passwordAttemptWindow` użyciu atrybutu w sekcji elementu konfiguracji [członkostwa](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) . <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>  
  
 Jeśli właściwość jest ustawiona na `false`, nieprawidłowe próby odpowiedzi hasła nie są śledzone. <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia element [Membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w `system.web` sekcji pliku Web. config dla aplikacji ASP.NET. Określa, że aplikacja używa wystąpienia <xref:System.Web.Security.SqlMembershipProvider> i `maxInvalidPasswordAttempts` ustawia atrybut na `passwordAttemptWindow` pięć nieprawidłowych prób i do 30 minut.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public static string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyrażenie regularne używane do szacowania hasła.</summary>
        <value>Wyrażenie regularne używane do szacowania hasła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość pobiera wyrażenie regularne używane do obliczania złożoności hasła od dostawcy określonego <xref:System.Web.Security.Membership.Provider%2A> we właściwości. <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>  
  
 Właściwość jest ustawiana w konfiguracji aplikacji `passwordStrengthRegularExpression` przy użyciu atrybutu elementu konfiguracji [członkostwa](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) . <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>  
  
 Aby uzyskać więcej informacji na temat wyrażeń regularnych, zobacz [.NET Framework wyrażeń regularnych](~/docs/standard/base-types/regular-expressions.md).  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia element konfiguracji [członkostwa](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w `system.web` sekcji pliku Web. config aplikacji. Określa, że aplikacja używa wystąpienia <xref:System.Web.Security.SqlMembershipProvider> klasy w celu zapewnienia usług członkostwa, i `passwordStrengthRegularExpression` ustawia atrybut na wyrażenie regularne, które sprawdza, czy hasło spełnia następujące kryteria:  
  
-   Jest dłuższa niż siedem znaków.  
  
-   Zawiera co najmniej jedną cyfrę.  
  
-   Zawiera co najmniej jeden znak specjalny (inny niż alfanumeryczny).  
  
 Jeśli hasło nie spełnia tych kryteriów, hasło nie zostanie zaakceptowane przez dostawcę członkostwa.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression=" @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
   </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.Security.Membership.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do domyślnego dostawcy członkostwa dla aplikacji.</summary>
        <value>Domyślny dostawca członkostwa dla aplikacji uwidocznionej przy użyciu <see cref="T:System.Web.Security.MembershipProvider" /> abstrakcyjnej klasy podstawowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Provider%2A> Właściwość umożliwia bezpośrednie odwołanie do domyślnego dostawcy członkostwa dla aplikacji. Jest to często używane do uzyskiwania dostępu do niestandardowych członków dostawcy członkostwa, które nie są częścią <xref:System.Web.Security.MembershipProvider> abstrakcyjnej klasy podstawowej.  
  
   
  
## Examples  
 Poniższy przykład kodu uzyskuje dostęp do domyślnego <xref:System.Web.Security.SqlMembershipProvider> , włączonego dla aplikacji, przy <xref:System.Web.Security.Membership.Provider%2A> użyciu właściwości, aby określić wartość właściwości niestandardowej <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> .  
  
 [!code-aspx-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As MembershipProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProviderCollection ^ Providers { System::Web::Security::MembershipProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Security.MembershipProviderCollection" Usage="System.Web.Security.Membership.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję dostawców członkostwa dla aplikacji ASP.NET.</summary>
        <value>A <see cref="T:System.Web.Security.MembershipProviderCollection" /> od dostawców członkostwa skonfigurowanych dla aplikacji ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Providers%2A> Właściwość odwołuje się do wszystkich dostawców członkostwa włączonych dla aplikacji, w tym dostawców dodanych w pliku Web. config dla aplikacji i pliku Machine. config dla wszystkich aplikacji. Można kontrolować, którzy dostawcy członkostwa są dostępni dla aplikacji, korzystając [](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/6d4936ht(v%3dvs.100)) z elementu Providers sekcji [Membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w konfiguracji aplikacji. Na przykład poniższy przykład pokazuje sekcję członkowstwa [](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w pliku Web. config dla aplikacji, która usuwa <xref:System.Web.Security.SqlMembershipProvider> wystąpienie (`AspNetSqlProvider`) określone w pliku konfiguracji komputera i dodaje <xref:System.Web.Security.SqlMembershipProvider> wystąpienie o nazwie `SqlProvider` jako domyślny dostawca członkostwa dla aplikacji.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
          <add name="SqlProvider"  
            type="System.Web.Security.SqlMembershipProvider"  
            connectionStringName="SqlServices"  
            enablePasswordRetrieval="false"  
            enablePasswordReset="true"  
            requiresQuestionAndAnswer="true"  
            passwordFormat="Hashed"  
            applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 Podczas określania [elementu membership (Schemat ustawień ASP.NET)](https://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) należy określić `defaultProvider` atrybut. Jeśli w pliku Web. config nie zostanie określony [element membership (Schemat ustawień ASP.NET)](https://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) , zostaną użyte wartości z konfiguracji komputera, a <xref:System.Web.Security.SqlMembershipProvider> wystąpienie o nazwie `AspNetSqlProvider` zostanie ustanowione jako `defaultProvider`.  
  
 Można uzyskać jednoznacznie określone odwołanie do dostawcy z <xref:System.Web.Security.Membership.Providers%2A> kolekcji przez indeksowanie dostawcy członkostwa według nazwy i rzutowanie go jako żądany typ.  
  
   
  
## Examples  
 Poniższy przykład kodu zawiera listę dostawców włączonych dla aplikacji i ich odpowiednich typów.  
  
 [!code-aspx-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public static bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy domyślny dostawca członkostwa wymaga, aby użytkownik odpowiedział na pytanie hasła na potrzeby resetowania i pobierania hasła.</summary>
        <value><see langword="true" />Jeśli odpowiedź na hasło jest wymagana do resetowania i pobierania hasła; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Żądanie pytania i odpowiedzi z hasłem zapewnia dodatkową warstwę zabezpieczeń podczas pobierania lub resetowania hasła użytkownika. Użytkownicy mogą podawać pytania i odpowiedzi, gdy nazwa użytkownika zostanie utworzona, aby można było później pobrać lub zresetować zapomniane hasło.  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>jest sprawdzana <xref:System.Web.Security.MembershipUser.ResetPassword%2A> , <xref:System.Web.Security.MembershipUser.GetPassword%2A> gdy lub jest wywoływana. Dostawca dostarczony wraz <xref:System.NotSupportedException> z .NET Framework zgłasza odpowiedź w przypadku, gdy <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> jest `true` i dostarczoną odpowiedzią `null`hasła.  
  
 Jeśli <xref:System.Web.Security.Membership.EnablePasswordReset%2A> te <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> i są `false`zarówno ,<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> można nadal używać do wymuszania tworzenia pytań i odpowiedzi podczas tworzenia nowych użytkowników, jednak pytania i odpowiedzi nie będą używane. Uzyskasz możliwość pobrania pytania przy użyciu <xref:System.Web.Security.MembershipUser> klasy.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.MembershipUser.ResetPassword%2A> i <xref:System.Web.Security.MembershipUser.GetPassword%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia element [Membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w `system.web` sekcji pliku Web. config dla aplikacji ASP.NET. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider>, włącza resetowanie hasła i wymaga odpowiedzi hasła podczas resetowania.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 Poniższy przykład kodu sprawdza wartość <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> i dodaje niezbędne kontrolki dla pytania i odpowiedzi, które mają być dostarczone podczas tworzenia użytkownika.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="static member UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="System.Web.Security.Membership.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user"><see cref="T:System.Web.Security.MembershipUser" /> Obiekt, który reprezentuje użytkownika, który ma zostać zaktualizowany, oraz zaktualizowane informacje dla użytkownika.</param>
        <summary>Aktualizuje bazę danych o informacje dla określonego użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UpdateUser%2A>przyjmuje jako dane wejściowe <xref:System.Web.Security.MembershipUser> obiekt wypełniony bieżącymi informacjami dla użytkownika członkostwa i aktualizuje źródło danych za pomocą wartości <xref:System.Web.Security.MembershipUser> właściwości obiektu. <xref:System.Web.Security.MembershipUser>Można utworzyć nowy lub <xref:System.Web.Security.MembershipUser> pobrać obiekt wypełniony bieżącymi wartościami ze źródła danych przy użyciu <xref:System.Web.Security.Membership.GetUser%2A>metod, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>lub <xref:System.Web.Security.Membership.FindUsersByEmail%2A> .  
  
   
  
## Examples  
 Poniższy przykład kodu aktualizuje adres e-mail bieżącego zalogowanego użytkownika.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="user" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UserIsOnlineTimeWindow">
      <MemberSignature Language="C#" Value="public static int UserIsOnlineTimeWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 UserIsOnlineTimeWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserIsOnlineTimeWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int UserIsOnlineTimeWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.UserIsOnlineTimeWindow : int" Usage="System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa liczbę minut od sygnatury czasowej ostatniego działania użytkownika, przez który użytkownik jest uznawany za w trybie online.</summary>
        <value>Liczba minut od sygnatury czasowej ostatniego działania dla użytkownika, w którym użytkownik jest traktowany jako w trybie online.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość właściwości jest sprawdzana podczas wywołania do <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>. <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> Jeśli dla użytkownika jest późniejsza niż bieżąca data i godzina <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> pomniejszona o wartość w minutach, użytkownik jest traktowany jako w trybie online. <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Można określić, czy użytkownik członkostwa jest uznawany za online z <xref:System.Web.Security.MembershipUser.IsOnline%2A> właściwością <xref:System.Web.Security.MembershipUser> klasy.  
  
 Dla użytkownika zostanie zaktualizowany w przypadku pomyślnego zweryfikowania poświadczeń użytkownika <xref:System.Web.Security.Membership.ValidateUser%2A> przez metodę. <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Po wywołaniu jednego <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> <xref:System.Web.Security.Membership.GetUser%2A> z przeciążeń można także zaktualizować użytkownika dla członkostwa. Jeśli wywołasz <xref:System.Web.Security.Membership.GetUser%2A> Przeciążenie, które `userIsOnline` przyjmuje parametr `true` , określ <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> wartość, aby zaktualizować dla użytkownika.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia element [Membership](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) w `system.web` sekcji pliku Web. config dla aplikacji ASP.NET. Określa, że aplikacja używa wystąpienia <xref:System.Web.Security.SqlMembershipProvider> i `userIsOnlineTimeWindow` ustawia atrybut na 20 minut.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public static bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member ValidateUser : string * string -&gt; bool" Usage="System.Web.Security.Membership.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika, który ma zostać sprawdzony.</param>
        <param name="password">Hasło dla określonego użytkownika.</param>
        <summary>Sprawdza, czy podana nazwa użytkownika i hasło są prawidłowe.</summary>
        <returns><see langword="true" />Jeśli podana nazwa użytkownika i hasło są prawidłowe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ValidateUser%2A>zapewnia łatwy sposób weryfikacji nazwy użytkownika i hasła ze źródła danych. Należy pamiętać, że jeśli `username` parametr jest pusty lub `null` <xref:System.Web.HttpException> zostanie zgłoszony.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia stronę logowania dla aplikacji ASP.NET skonfigurowanej do korzystania z uwierzytelniania formularzy i <xref:System.Web.Security.Membership> klasy. Jeśli podane poświadczenia użytkownika są nieprawidłowe, zostanie wyświetlony komunikat. W przeciwnym razie użytkownik zostanie przekierowany do pierwotnie żądanego adresu URL <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> przez metodę.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.Membership.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberSignature Language="F#" Value="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " Usage="member this.ValidatingPassword : System.Web.Security.MembershipValidatePasswordEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po utworzeniu użytkownika, zmianie hasła lub zresetowaniu hasła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane, <xref:System.Web.Security.MembershipProvider.CreateUser%2A> gdy wywoływana jest metoda, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> Metoda lub <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> Metoda dostawcy członkostwa. <xref:System.Web.Security.MembershipProvider.ValidatingPassword>  
  
 Możesz użyć <xref:System.Web.Security.MembershipProvider.ValidatingPassword> zdarzenia do walidacji formatów i wartości haseł dla użytkowników członkostwa.  
  
 <xref:System.Web.Security.MembershipProvider.CreateUser%2A>Możesz anulować bieżące, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> <xref:System.Web.Security.MembershipProvider.ValidatingPassword> lub <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>akcję , ustawiając <xref:System.Web.Security.ValidatePasswordEventArgs> `true` Właściwość podanego elementu do podczas zdarzenia. <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>  
  
 <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> Jeśli anulujesz bieżącą akcję przez ustawienie właściwości na `true` <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> , można ustawić właściwość dostarczone <xref:System.Web.Security.ValidatePasswordEventArgs> do wyjątku opisującego przyczynę niepowodzenia weryfikacji hasła. Metoda wywołująca zgłosi wyjątek, że <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> właściwość jest ustawiona na. Jeśli właściwość ma `null`wartość, obiekt wywołujący zgłosi ogólny wyjątek dotyczący niepowodzenia weryfikacji hasła. <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.Web.Security.MembershipProvider.ValidatingPassword> zdarzenie, które sprawdza poprawność formatu hasła użytkownika i anuluje akcję, jeśli hasło jest niezgodne z wymaganym formatem.  
  
 [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]
 [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980(v=vs.100)">Wprowadzenie do członkostwa ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
