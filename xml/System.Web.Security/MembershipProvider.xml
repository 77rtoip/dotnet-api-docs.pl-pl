<Type Name="MembershipProvider" FullName="System.Web.Security.MembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dc61c65192694aff119cd9cda8e426aed49917b1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30585772" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MembershipProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MembershipProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.MembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MembershipProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MembershipProvider abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje kontrakt implementujący do świadczenia usług członkostwa przy użyciu dostawców niestandardowych członkostwa programu ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaprojektowana członkostwa ASP.NET w celu umożliwienia można łatwo korzystać wielu dostawców członkostwa różnych dla aplikacji ASP.NET. Można użyć dostawców członkostwa dostarczony, które są dołączone do programu .NET Framework, lub można zaimplementować własnego dostawcę.  
  
> [!NOTE]
>  Jeśli nie masz doświadczenia z funkcjami członkostwa programu ASP.NET, zobacz [wprowadzenie do członkostwa](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980) przed kontynuowaniem. Aby uzyskać listę innych tematów dotyczących członkostwa, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 Podczas implementowania dostawcy członkostwa niestandardowych, są wymagane do dziedziczą <xref:System.Web.Security.MembershipProvider> klasy abstrakcyjnej.  
  
 Istnieją dwa głównych powodów przemawiających za tworzenie dostawcy niestandardowego członkostwa.  
  
-   Wystarczy przechowywać informacje o członkostwie w źródle danych, która nie jest obsługiwana przez dostawców członkostwa dołączone do programu .NET Framework, takich jak FoxPro bazy danych, baza danych Oracle lub innego źródła danych.  
  
-   Należy zarządzać za pomocą schematu bazy danych, która różni się od schematu bazy danych używane przez dostawców, które są dostarczane z programu .NET Framework informacje o członkostwie. Typowym przykładem to będzie członkostwie, która już istnieje w bazie danych programu SQL Server dla firmy lub witryny sieci Web.  
  
 <xref:System.Web.Security.MembershipProvider> Dziedziczy po klasie abstrakcyjnej <xref:System.Configuration.Provider.ProviderBase> klasy abstrakcyjnej. <xref:System.Web.Security.MembershipProvider> implementacje musi implementować też wymaganych elementów członkowskich <xref:System.Configuration.Provider.ProviderBase>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Security.MembershipProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie należy do implementacji konstruktora dla klasy, która dziedziczy <xref:System.Web.Security.MembershipProvider> klasy abstrakcyjnej. Inicjowanie wartości <xref:System.Web.Security.MembershipProvider> wdrożenia są przekazywane do <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> implementacji metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nazwa aplikacji przy użyciu dostawcy członkostwa niestandardowych.</summary>
        <value>Nazwa aplikacji przy użyciu dostawcy członkostwa niestandardowych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> Wartość właściwości jest przechowywana w źródle danych z powiązanymi informacjami o użytkowniku do skojarzenia użytkownika z określoną aplikacją. Ta właściwość jest odczytu/zapisu i domyślnie ustawiany na <xref:System.Web.HttpRequest.ApplicationPath%2A> wartości właściwości, jeśli nie jest jawnie określony.  
  
 Ponieważ dostawców członkostwa przechowywać informacje o użytkowniku osobno dla każdej aplikacji, wiele aplikacji programu ASP.NET można użyć tego samego źródła danych bez powodowania konfliktu, jeśli są tworzone zduplikowanych nazw użytkownika. Alternatywnie wiele aplikacji programu ASP.NET można użyć tego samego źródła danych użytkownika, określając takie same <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.  
  
 W implementacji dostawcy członkostwa, należy upewnić się, że schemat danych zawiera <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> i źródła danych zapytania i aktualizacje również obejmować <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public abstract bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Użytkownik do aktualizacji hasła.</param>
        <param name="oldPassword">Bieżące hasło dla określonego użytkownika.</param>
        <param name="newPassword">Nowe hasło dla określonego użytkownika.</param>
        <summary>Przetwarza żądanie, aby zaktualizować hasło dla użytkownika członkostwa.</summary>
        <returns>
          <see langword="true" /> Jeśli hasło zostało zaktualizowane pomyślnie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, nazwę użytkownika, bieżące hasło i nowe hasło i aktualizuje hasło w źródle danych, jeśli nazwa użytkownika i bieżącego hasła są prawidłowe.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public abstract bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Użytkownika można zmienić pytanie dotyczące hasła i odpowiedzi.</param>
        <param name="password">Hasło dla określonego użytkownika.</param>
        <param name="newPasswordQuestion">Nowe pytanie dotyczące hasła dla określonego użytkownika.</param>
        <param name="newPasswordAnswer">Nową odpowiedź hasła dla określonego użytkownika.</param>
        <summary>Przetwarza żądanie, aby zaktualizować pytanie dotyczące hasła i odpowiedzi dla użytkownika członkostwa.</summary>
        <returns>
          <see langword="true" /> Jeśli pytanie dotyczące hasła i odpowiedzi zostały zaktualizowane pomyślnie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, nazwę użytkownika, hasło, pytania hasła i odpowiedzi hasła i aktualizuje pytanie dotyczące hasła i odpowiedzi w źródle danych, jeśli nazwa użytkownika i hasło są prawidłowe.  
  
 Jeśli nazwa użytkownika i hasło są nieprawidłowe, `false` jest zwracany.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika dla nowego użytkownika.</param>
        <param name="password">Hasło dla nowego użytkownika.</param>
        <param name="email">Adres e-mail dla nowego użytkownika.</param>
        <param name="passwordQuestion">Pytanie dotyczące hasła dla nowego użytkownika.</param>
        <param name="passwordAnswer">Odpowiedź dotycząca hasła dla nowego użytkownika</param>
        <param name="isApproved">Określa, czy nowy użytkownik jest zatwierdzony do sprawdzenia poprawności.</param>
        <param name="providerUserKey">Unikatowy identyfikator ze źródła danych członkostwa dla użytkownika.</param>
        <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus" /> wartość wyliczenia wskazująca, czy użytkownik został pomyślnie utworzony.</param>
        <summary>Dodaje nowego użytkownika członkostwa w źródle danych.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiektu wypełnione informacjami dla nowo utworzonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, nazwę nowego użytkownika, hasło i adres e-mail i wstawia nowego użytkownika dla aplikacji w źródle danych. <xref:System.Web.Security.MembershipProvider.CreateUser%2A> Metoda zwraca <xref:System.Web.Security.MembershipUser> obiektu wypełnione informacjami dla nowo utworzonego użytkownika. <xref:System.Web.Security.MembershipProvider.CreateUser%2A> Definiuje również metody `out` parametru (w języku Visual Basic można użyć `ByRef`) zwracającą <xref:System.Web.Security.MembershipCreateStatus> wartość wskazującą, czy użytkownik został pomyślnie utworzony lub powód tego Tworzenie użytkownika nie powiodło się.  
  
 <xref:System.Web.Security.MembershipProvider.CreateUser%2A> Metoda zgłasza <xref:System.Web.Security.MembershipProvider.ValidatingPassword> zdarzeń, jeśli <xref:System.Web.Security.MembershipValidatePasswordEventHandler> program obsługi zdarzeń został określony i kontynuuje lub anuluje akcję tworzenia użytkownika na podstawie wyników zdarzenia. Można użyć <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> metody wirtualnej można wykonać określonego <xref:System.Web.Security.MembershipValidatePasswordEventHandler> obsługi zdarzeń.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] DecryptPassword (byte[] encodedPassword);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] DecryptPassword(unsigned int8[] encodedPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DecryptPassword (encodedPassword As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ DecryptPassword(cli::array &lt;System::Byte&gt; ^ encodedPassword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedPassword" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encodedPassword">Tablica bajtów, który zawiera zaszyfrowane hasło do odszyfrowania.</param>
        <summary>Odszyfrowuje zaszyfrowane hasło.</summary>
        <returns>Tablica bajtów, który zawiera odszyfrowanym hasłem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> — Metoda jest metodą wirtualną dostępnym dla członkostwa implementacji dostawcy do użycia podczas obsługi szyfrowane formatach hasła.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> Właściwości lub <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> właściwość jest ustawiona na <see langword="AutoGenerate" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Ta metoda nie jest dostępna. Taka sytuacja może wystąpić, jeśli obiekty docelowe aplikacji [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. Aby uniknąć tego wyjątku, Zastąp metodę lub zmień aplikacji pod kątem pełną wersję programu .NET Framework.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public abstract bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do usunięcia.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> Aby usunąć dane powiązane z użytkownikiem z bazy danych. <see langword="false" /> pozostawienie powiązane z użytkownikiem w bazie danych.</param>
        <summary>Usuwa użytkownika z źródła danych członkostwa.</summary>
        <returns>
          <see langword="true" /> Jeśli użytkownik został pomyślnie usunięty; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, nazwę użytkownika i usuwa informacje o użytkowniku ze źródła danych. Jeśli `deleteAllRelatedData` jest `true`, następnie wszystkie dane użytkownika przechowywane w bazie danych <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, i <xref:System.Web.UI.WebControls.WebParts.WebPart> personalizacji są także usuwane.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public abstract bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool EnablePasswordReset { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy dostawcy członkostwa jest skonfigurowane tak, aby umożliwić użytkownikom resetowanie haseł.</summary>
        <value>
          <see langword="true" /> Jeśli dostawca członkostwa obsługuje resetowanie hasła; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> zawiera wartość logiczną określone w pliku konfiguracji (Web.config) przy użyciu `enablePasswordReset` atrybutu. Wartość wskazuje, czy użytkownicy mogą używać <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> metody w celu zastąpienia ich bieżące hasło nowy, losowo wygenerowane hasło. Ta właściwość jest tylko do odczytu.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public abstract bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy dostawca członkostwa jest skonfigurowany do Zezwalaj użytkownikom na odzyskiwanie haseł.</summary>
        <value>
          <see langword="true" /> Jeśli dostawca członkostwa jest skonfigurowany do obsługi odzyskiwania haseł; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> Właściwość zawiera wartość logiczną określone w pliku konfiguracji (Web.config) przy użyciu `enablePasswordRetrieval` atrybutu. Wartość wskazuje, czy użytkownicy mogą używać <xref:System.Web.Security.MembershipProvider.GetPassword%2A> metoda pobierania ich bieżące hasło ze źródła danych. Ta właściwość jest tylko do odczytu.  
  
 Jeśli dostawca członkostwa niestandardowych obsługuje haseł mieszanych Twojej <xref:System.Web.Security.MembershipProvider.GetPassword%2A> implementacji metody powinien zgłosić wyjątek, jeśli <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> ustawiono `true` a format hasła jest ustawiona na `Hashed`. Nie można pobrać haseł mieszanych.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptPassword">
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Szyfruje hasła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca tablicę bajtów, który zawiera zaszyfrowane hasło.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] EncryptPassword (byte[] password);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EncryptPassword(unsigned int8[] password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncryptPassword (password As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ EncryptPassword(cli::array &lt;System::Byte&gt; ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password">Tablica bajtów, który zawiera hasło do szyfrowania.</param>
        <summary>Szyfruje hasła.</summary>
        <returns>Tablica bajtów, który zawiera zaszyfrowane hasło.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> — Metoda jest metodą wirtualną dostępnym dla członkostwa implementacji dostawcy do użycia podczas obsługi szyfrowane formatach hasła.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> Właściwości lub <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> właściwość jest ustawiona na <see langword="AutoGenerate" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Ta metoda nie jest dostępna. Taka sytuacja może wystąpić, jeśli obiekty docelowe aplikacji [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. Aby uniknąć tego wyjątku, Zastąp metodę lub zmień aplikacji pod kątem pełną wersję programu .NET Framework.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptPassword">
      <MemberSignature Language="C#" Value="protected virtual byte[] EncryptPassword (byte[] password, System.Web.Configuration.MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EncryptPassword(unsigned int8[] password, valuetype System.Web.Configuration.MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncryptPassword (password As Byte(), legacyPasswordCompatibilityMode As MembershipPasswordCompatibilityMode) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ EncryptPassword(cli::array &lt;System::Byte&gt; ^ password, System::Web::Configuration::MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="legacyPasswordCompatibilityMode" Type="System.Web.Configuration.MembershipPasswordCompatibilityMode" />
      </Parameters>
      <Docs>
        <param name="password">Tablica bajtów, który zawiera hasło do szyfrowania.</param>
        <param name="legacyPasswordCompatibilityMode">Tryb zgodności hasła członkostwa.</param>
        <summary>Szyfruje określone hasło przy użyciu trybu zgodności określonego hasła.</summary>
        <returns>Tablica bajtów, który zawiera zaszyfrowane hasło.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> Właściwości lub <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> właściwość jest ustawiona na <see langword="AutoGenerate" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Ta metoda nie jest dostępna. Taka sytuacja może wystąpić, jeśli obiekty docelowe aplikacji [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. Aby uniknąć tego wyjątku, Zastąp metodę lub zmień aplikacji pod kątem pełną wersję programu .NET Framework.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Adres e-mail do wyszukania.</param>
        <param name="pageIndex">Indeks strony wyników do zwrócenia. <c>pageIndex</c> jest liczony od zera.</param>
        <param name="pageSize">Rozmiar strony wyników do zwrócenia.</param>
        <param name="totalRecords">Całkowita liczba zgodnych użytkowników.</param>
        <summary>Pobiera kolekcję użytkowników członkostwa, której adres e-mail zawiera określony adres e-mail do dopasowania.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> kolekcji, która zawiera stronę <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> obiektów, zaczynając od strony określonej za <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> Zwraca listę użytkowników członkostwa, jeśli adres e-mail użytkownika odpowiada podane `emailToMatch` dla skonfigurowanego <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> właściwości. Jeśli źródło danych obsługuje możliwości wyszukiwania dodatkowe, takie jak symbole wieloznaczne, zapewniają bardziej rozbudowane funkcje wyszukiwania adresów e-mail.  
  
 Wyniki zwrócone przez <xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> są ograniczone przez `pageIndex` i `pageSize` parametrów. `pageSize` Parametr określa liczbę <xref:System.Web.Security.MembershipUser> obiektów, aby uzyskać <xref:System.Web.Security.MembershipUserCollection> kolekcji. `pageIndex` Strony wyników do zwrócenia, gdzie 0 identyfikuje pierwszej strony, która identyfikuje parametru. `totalRecords` Parametr jest `out` parametr, który ma wartość całkowitą liczbę użytkowników Członkowskich zgodnych `emailToMatch` wartość. Na przykład odnaleziono 13 użytkowników, gdzie `emailToMatch` dopasowaniu części lub adres e-mail cały i `pageIndex` wartość to 1 z `pageSize` 5, a następnie <xref:System.Web.Security.MembershipUserCollection> zawierałoby od szóstego do dziesiątego użytkowników zwrócił. `totalRecords` może być ustawiona na 13.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">Nazwa użytkownika do wyszukania.</param>
        <param name="pageIndex">Indeks strony wyników do zwrócenia. <c>pageIndex</c> jest liczony od zera.</param>
        <param name="pageSize">Rozmiar strony wyników do zwrócenia.</param>
        <param name="totalRecords">Całkowita liczba zgodnych użytkowników.</param>
        <summary>Pobiera kolekcję użytkowników członkostwa, której nazwa użytkownika zawiera nazwę określonego użytkownika do dopasowania.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> kolekcji, która zawiera stronę <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> obiektów, zaczynając od strony określonej za <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> Zwraca listę użytkowników członkostwa, jeśli nazwa użytkownika odpowiada podane `usernameToMatch` dla skonfigurowanego <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> właściwości. Jeśli źródło danych obsługuje możliwości wyszukiwania dodatkowe, takie jak symbole wieloznaczne, zapewniają bardziej rozbudowane funkcje wyszukiwania dla nazwy użytkownika.  
  
 Wyniki zwrócone przez <xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> są ograniczone przez `pageIndex` i `pageSize` parametrów. `pageSize` Parametr określa liczbę <xref:System.Web.Security.MembershipUser> obiektów, aby uzyskać <xref:System.Web.Security.MembershipUserCollection> kolekcji. `pageIndex` Strony wyników do zwrócenia, gdzie 0 identyfikuje pierwszej strony, która identyfikuje parametru. `totalRecords` Parametr jest `out` parametr, który ma wartość całkowitą liczbę użytkowników Członkowskich zgodnych `usernameToMatch` wartość. Na przykład odnaleziono 13 użytkowników, gdzie `usernameToMatch` dopasowaniu części lub nazwę użytkownika w całej i `pageIndex` wartość to 1 z `pageSize` 5, a następnie <xref:System.Web.Security.MembershipUserCollection> zawierałoby od szóstego do dziesiątego użytkowników zwrócony. `totalRecords` może być ustawiona na 13.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">Indeks strony wyników do zwrócenia. <c>pageIndex</c> jest liczony od zera.</param>
        <param name="pageSize">Rozmiar strony wyników do zwrócenia.</param>
        <param name="totalRecords">Całkowita liczba zgodnych użytkowników.</param>
        <summary>Pobiera kolekcję wszystkich użytkowników w źródle danych w strony danych.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> kolekcji, która zawiera stronę <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> obiektów, zaczynając od strony określonej za <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> Zwraca listę wszystkich użytkowników z źródła danych skonfigurowanego <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> właściwości. Użytkownicy są zwracane w porządku alfabetycznym według nazwy użytkownika.  
  
 Wyniki zwrócone przez <xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> są ograniczone przez `pageIndex` i `pageSize` parametrów. `pageSize` Parametr określa liczbę <xref:System.Web.Security.MembershipUser> obiektów, aby uzyskać <xref:System.Web.Security.MembershipUserCollection> kolekcji. `pageIndex` Strony wyników do zwrócenia, gdzie 0 identyfikuje pierwszej strony, która identyfikuje parametru. `totalRecords` Parametr jest `out` parametr, który ma ustawioną wartość całkowita liczba użytkowników członkostwa w bazie danych. Na przykład, jeśli w bazie danych istnieją 13 użytkowników i `pageIndex` wartość to 1 z `pageSize` 5, a następnie <xref:System.Web.Security.MembershipUserCollection> zawierałoby od szóstego do dziesiątego użytkowników zwrócony. `totalRecords` może być ustawiona na 13.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public abstract int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetNumberOfUsersOnline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera liczbę użytkownicy mający obecnie dostęp do aplikacji.</summary>
        <returns>Liczba użytkownicy mający obecnie dostęp do aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca wartość całkowitą, która to liczba wszystkich użytkowników w źródle danych, gdzie <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> jest większa niż bieżąca data i godzina minus <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> Jest wartość dodatnia liczba całkowita określająca liczbę minut do użycia podczas określania, czy użytkownik jest w trybie online.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public abstract string GetPassword (string username, string answer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPassword(string username, string answer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPassword (username As String, answer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetPassword(System::String ^ username, System::String ^ answer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="answer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Użytkownik, który można pobrać hasło.</param>
        <param name="answer">Odpowiedź dotycząca hasła dla użytkownika.</param>
        <summary>Pobiera hasło dla określonej nazwy użytkownika z źródła danych.</summary>
        <returns>Hasło dla określonej nazwy użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, nazwę użytkownika i odpowiedzi hasła i pobiera hasło dla tego użytkownika z źródła danych i zwraca hasło jako ciąg.  
  
 <xref:System.Web.Security.MembershipProvider.GetPassword%2A> Metoda gwarantuje, że <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> flaga jest ustawiona na `true` przed wykonaniem żadnych akcji. Jeśli <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> jest `false`, <xref:System.NotSupportedException> wyjątku.  
  
 <xref:System.Web.Security.MembershipProvider.GetPassword%2A> sprawdza również wartość <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> właściwości. Jeśli <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> jest `true`, <xref:System.Web.Security.MembershipProvider.GetPassword%2A> sprawdza wartość parametru podana odpowiedzi przed odpowiedzi hasła przechowywane w źródle danych. Jeśli nie są zgodne, <xref:System.Web.Security.MembershipPasswordException> wyjątku.  
  
 Jeśli dostawca członkostwa niestandardowych obsługuje haseł mieszanych <xref:System.Web.Security.MembershipProvider.GetPassword%2A> metody powinien zgłosić wyjątek, jeśli <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> właściwość jest ustawiona na `true` a format hasła jest ustawiona na `Hashed`. Nie można pobrać haseł mieszanych.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera informacje ze źródła danych dla użytkownika członkostwa.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">Unikatowy identyfikator dla użytkownika członkostwa uzyskać informacje dotyczące.</param>
        <param name="userIsOnline">
          <see langword="true" /> Aby zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika; <see langword="false" /> do zwrócenia użytkownika informacje bez aktualizowania ostatniej aktywności daty/godziny sygnatury dla użytkownika.</param>
        <summary>Pobiera informacje o użytkowniku ze źródła danych oparte na unikatowy identyfikator dla użytkownika członkostwa. Udostępnia opcję, aby zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiektu wypełnione informacjami określonego użytkownika z źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, unikatowy identyfikator rekordu użytkownika i wartość logiczną wskazującą, czy zaktualizować <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> wartość dla użytkownika pokazać, że użytkownik jest obecnie w trybie online. <xref:System.Web.Security.MembershipProvider.GetUser%2A> Metoda zwraca <xref:System.Web.Security.MembershipUser> obiektu wypełniane przy użyciu bieżących wartości ze źródła danych dla określonego użytkownika. Jeśli nazwa użytkownika nie zostanie znaleziony w źródle danych <xref:System.Web.Security.MembershipProvider.GetUser%2A> zwraca `null`.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika, aby uzyskać informacje dotyczące.</param>
        <param name="userIsOnline">
          <see langword="true" /> Aby zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika; <see langword="false" /> do zwrócenia użytkownika informacje bez aktualizowania ostatniej aktywności daty/godziny sygnatury dla użytkownika.</param>
        <summary>Pobiera informacje ze źródła danych dla użytkownika. Udostępnia opcję, aby zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> obiektu wypełnione informacjami określonego użytkownika z źródła danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, nazwę użytkownika i wartość logiczną wskazującą, czy zaktualizować <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> wartości właściwości dla użytkownika pokazać, że użytkownik jest obecnie w trybie online. <xref:System.Web.Security.MembershipProvider.GetUser%2A> Zwraca <xref:System.Web.Security.MembershipUser> obiektu wypełniane przy użyciu bieżących wartości ze źródła danych dla określonego użytkownika. Jeśli nazwa użytkownika nie zostanie znaleziony w źródle danych <xref:System.Web.Security.MembershipProvider.GetUser%2A> zwraca `null`.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public abstract string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">Adres e-mail do wyszukania.</param>
        <summary>Pobiera nazwę użytkownika skojarzoną z określonym adresem e-mail.</summary>
        <returns>Nazwa użytkownika skojarzona z określonym adresem e-mail. Jeśli nie znaleziono, zwróć <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, adres e-mail i zwraca imię użytkownika z źródła danych, jeśli adres e-mail odpowiada podane `email` wartość parametru.  
  
 Jeśli nazwa użytkownika jest znaleziono dopasowanego adresu e-mail, `null` jest zwracany.  
  
 W przypadku odnalezienia wielu nazw użytkownika zgodnego z adresu e-mail określonego tylko pierwsza nazwa użytkownika znaleziono ma zostać zwrócony. Można zaimplementować niestandardowego mechanizmu zapewniających unikatowy adres e-mail dla każdej nazwy użytkownika, takich jak <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> właściwość <xref:System.Web.Security.SqlMembershipProvider> dostawcy.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public abstract int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę nieprawidłowego hasła lub odpowiedzi do hasła prób dozwolone przed zablokowaniem użytkownika Członkowskiego.</summary>
        <value>Liczba nieprawidłowego hasła lub odpowiedzi do hasła prób dozwolone przed zablokowaniem użytkownika Członkowskiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Właściwości działa w połączeniu z <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> właściwości chronią przed źródła niechciane odgadnięcie hasła lub odpowiedzi hasła członkostwa użytkownika za pomocą następującej liczby prób. Jeśli liczba nieudanych prób podania hasła lub pytania hasła dla użytkownika członkostwa jest większa niż lub równa <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> wartości właściwości w ciągu określonej liczby minut identyfikowane przez <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, a następnie użytkownik członkostwa jest zablokowany przez ustawienie <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> właściwości `true` dopóki użytkownik jest odblokowany przez wywołanie do <xref:System.Web.Security.MembershipUser.UnlockUser%2A> metody. Jeśli prawidłowe hasło lub odpowiedź hasła jest podana przed <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> osiągnięciem wartości, licznik, który śledzi liczbę nieudanych prób podania jest resetowany do zera.  
  
 Nieprawidłowe próby podania hasła i odpowiedzi hasła kumulują się niezależnie od siebie. Na przykład jeśli <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> właściwość jest ustawiona na wartość 5 i trzech nieudanych próbach wpisania hasła zostaną wykonane przez dwa prób hasła i odpowiedzi, dwa więcej nieudanych próbach wpisania hasła (lub trzy kolejne próby hasła i odpowiedzi) muszą być wprowadzane w <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> dla użytkownika członkostwa zostaną zablokowane.  
  
 Jeśli <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> właściwość jest ustawiona na `false`, próby podania hasła i odpowiedzi nie są śledzone.  
  
 Nieprawidłowe próby podania hasła i odpowiedzi hasła są śledzone w <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, i <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> metody.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public abstract int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalną liczbę znaków specjalnych, które muszą być obecne w prawidłowe hasło.</summary>
        <value>Minimalna liczba znaków specjalnych, które muszą być obecne w prawidłowe hasło.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> Właściwość zwraca minimalną liczbę znaków specjalnych, inne niż alfanumeryczne, które należy wprowadzić do utworzenia prawidłowego hasła dla <xref:System.Web.Security.MembershipProvider> obiektu.  
  
 <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> Wartość właściwości jest ustawiana w konfiguracji aplikacji przy użyciu `minRequiredNonalphanumericCharacters` atrybutu [członkostwa — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) element konfiguracji.  
  
 Znak niealfanumeryczny to taki znak, dla którego <xref:System.Char.IsLetterOrDigit%2A> metoda zwraca `false`.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono [członkostwa — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) element konfiguracji w `system.web` sekcji w pliku Web.config aplikacji. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider> klasy świadczenia usług członkostwa i zestawy `minRequiredNonalphanumericCharacters` atrybutu 1 znak.  
  
```  
<membership>  
  <providers>  
    <clear/>  
    <add name="AspNetSqlMembershipProvider"   
      type="System.Web.Security.SqlMembershipProvider"   
      connectionStringName="ApplicationServices"   
      enablePasswordRetrieval="false"   
      enablePasswordReset="true"   
      requiresQuestionAndAnswer="false"   
      requiresUniqueEmail="false"   
      maxInvalidPasswordAttempts="5"   
      minRequiredPasswordLength="6"   
      minRequiredNonalphanumericCharacters="1"   
      passwordAttemptWindow="10"   
      applicationName="/"/>  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public abstract int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MinRequiredPasswordLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera minimalną długość wymaganych do uznania hasła.</summary>
        <value>Minimalna długość wymaganych do uznania hasła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> Właściwości pobiera minimalną liczbę znaków, które należy wprowadzić do utworzenia prawidłowego hasła dla <xref:System.Web.Security.MembershipProvider> obiektu.  
  
 <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> Wartość właściwości jest ustawiana w konfiguracji aplikacji przy użyciu `minRequiredPasswordLength` atrybutu [członkostwa — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) element konfiguracji.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono [członkostwa — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) element konfiguracji w `system.web` sekcji w pliku Web.config aplikacji. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider> klasy świadczenia usług członkostwa i zestawy `minRequiredPasswordLength` atrybutu 7 znaków.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidatingPassword">
      <MemberSignature Language="C#" Value="protected virtual void OnValidatingPassword (System.Web.Security.ValidatePasswordEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidatingPassword(class System.Web.Security.ValidatePasswordEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidatingPassword (e As ValidatePasswordEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidatingPassword(System::Web::Security::ValidatePasswordEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.Security.ValidatePasswordEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.Security.ValidatePasswordEventArgs" /> Do przekazania do <see cref="E:System.Web.Security.MembershipProvider.ValidatingPassword" /> obsługi zdarzeń.</param>
        <summary>Zgłasza <see cref="E:System.Web.Security.MembershipProvider.ValidatingPassword" /> zdarzeń, jeśli program obsługi zdarzeń został zdefiniowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> Metody wirtualnej jest używany podczas <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, i <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> metod, aby podnieść <xref:System.Web.Security.MembershipProvider.ValidatingPassword> zdarzeń Jeśli <xref:System.Web.Security.MembershipValidatePasswordEventHandler> został określony. `e` Parametr jest używany do przekazania <xref:System.Web.Security.ValidatePasswordEventArgs> do obiektu <xref:System.Web.Security.MembershipValidatePasswordEventHandler> obsługi zdarzeń. Gdy <xref:System.Web.Security.MembershipProvider.ValidatingPassword> zdarzenie zostało zakończone, właściwości <xref:System.Web.Security.ValidatePasswordEventArgs> obiektu podana jako `e` parametru można zbadać, aby ustalić, czy powinno być anulowane bieżącej akcji oraz określonego <xref:System.Exception>, przechowywanych w <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> właściwości, powinien zostać zgłoszony.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public abstract int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int PasswordAttemptWindow { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę minut, w których maksymalną liczbę nieudanych prób podania hasła lub odpowiedzi do hasła są dozwolone przed zablokowaniem użytkownika Członkowskiego.</summary>
        <value>Liczba minut, w których maksymalną liczbę nieudanych prób podania hasła lub odpowiedzi do hasła są dozwolone przed zablokowaniem użytkownika Członkowskiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> Właściwości działa w połączeniu z <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> właściwości chronią przed źródła niechciane odgadnięcie hasła lub odpowiedzi hasła członkostwa użytkownika za pomocą następującej liczby prób. Jeśli przekracza liczbę nieudanych prób podania hasła lub pytania hasła dla użytkownika członkostwa <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> w ciągu określonej liczby minut identyfikowane przez <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, a następnie użytkownik członkostwa jest zablokowany przez ustawienie <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> właściwości `true` dopóki użytkownik jest odblokowany przez wywołanie do <xref:System.Web.Security.MembershipUser.UnlockUser%2A> metody. Jeśli podano prawidłowego hasła lub odpowiedzi hasła przed <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> jest osiągnięty, licznik, który śledzi liczbę nieudanych prób podania jest resetowany do zera.  
  
 Nieprawidłowe próby podania hasła i odpowiedzi hasła kumulują się niezależnie od siebie. Na przykład jeśli <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> właściwość jest ustawiona na wartość 5 i trzech nieudanych próbach wpisania hasła zostaną wykonane przez dwa prób hasła i odpowiedzi, dwa więcej nieudanych próbach wpisania hasła (lub trzy kolejne próby hasła i odpowiedzi) muszą być wprowadzane w <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> wartość dla użytkownika członkostwa zostaną zablokowane.  
  
 Jeśli <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> właściwość jest ustawiona na `false`, próby podania hasła i odpowiedzi nie są śledzone.  
  
 Nieprawidłowe próby podania hasła i odpowiedzi hasła są śledzone w <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, i <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> metody.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public abstract System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą format przechowywania haseł w magazynie danych członkostwa.</summary>
        <value>Jeden z <see cref="T:System.Web.Security.MembershipPasswordFormat" /> wartość wskazującą format przechowywania haseł w magazynie danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.PasswordFormat%2A> Właściwość wskazuje hasła są przechowywane w formacie. Użyj `Hashed` , `Clear` i `Encrypted` nie są bezpieczne. `Hashed` hasła mają formę skrótu przy użyciu jednokierunkowego algorytmu skrótu i generowanej losowo wartości zaburzającej, gdy w bazie danych. Gdy hasło jest weryfikowane, jego skrót jest tworzony przy użyciu wartości zaburzającej w bazie danych na potrzeby weryfikacji. Nie można pobrać haseł mieszanych. `Encrypted` hasła nie są uznawane za bezpieczne, ponieważ naruszenia, która ujawnia zawartość z bazy danych może również spowodować narażenie klucza szyfrowania. Oznacza to, zaszyfrowanych haseł można odszyfrować i widoczne.  
  
 Można użyć <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> i <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> metod wirtualnych <xref:System.Web.Security.MembershipProvider> klasy do szyfrowania i odszyfrowywania wartości haseł, lub można podać kod szyfrowania. Jeśli używasz <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> i <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> metod wirtualnych <xref:System.Web.Security.MembershipProvider> klasy `Encrypted` haseł są szyfrowane za pomocą klucza informacji podanych w [machineKey Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) element w konfiguracji.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public abstract string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wyrażenie regularne używane do analizowania hasła.</summary>
        <value>Wyrażenie regularne używane do analizowania hasła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> Właściwości pobiera wyrażenie regularne służące do oceny złożoności hasła dla <xref:System.Web.Security.MembershipProvider> obiektu.  
  
 <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> Właściwość jest ustawiona w konfiguracji aplikacji przy użyciu `passwordStrengthRegularExpression` atrybutu [członkostwa — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) element konfiguracji.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono [członkostwa — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) element konfiguracji w `system.web` sekcji w pliku Web.config aplikacji. Określa, że aplikacja korzysta z wystąpienia <xref:System.Web.Security.SqlMembershipProvider> klasy świadczenia usług członkostwa i zestawy `passwordStrengthRegularExpression` atrybutu do wyrażenia regularnego sprawdzania, czy hasło spełnia następujące kryteria:  
  
-   Jest większe niż 7 znaków.  
  
-   Zawiera co najmniej jedną cyfrę.  
  
-   Zawiera co najmniej jeden znak (innych niż alfanumeryczne) specjalny.  
  
 Jeśli hasło nie spełnia te kryteria, hasło nie zostanie zaakceptowany przez dostawcę członkostwa.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public abstract bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dostawca członkostwa jest skonfigurowany do żądania użytkownika w odpowiedzi na pytanie hasła do resetowania hasła i pobierania.</summary>
        <value>
          <see langword="true" /> Jeśli odpowiedź hasła jest wymagane do resetowania hasła i pobierania; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość logiczna określony w pliku konfiguracji (Web.config). <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> Właściwość wskazuje, czy użytkownicy należy podać odpowiedź hasła w celu pobrania hasła za pomocą <xref:System.Web.Security.MembershipProvider.GetPassword%2A> metody, lub zresetować hasła za pomocą <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> metody.  
  
 Ta właściwość jest tylko do odczytu.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public abstract bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.MembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool RequiresUniqueEmail { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy skonfigurowano Dostawca członkostwa wymaga unikatowego adresu e-mail dla każdej nazwy użytkownika.</summary>
        <value>
          <see langword="true" /> Jeśli dostawca członkostwa wymaga unikatowego adresu e-mail; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.RequiresUniqueEmail%2A> Właściwość wskazuje, czy użytkownicy należy podać wartość adresu unikatowego adresu e-mail, podczas tworzenia użytkownika. Jeśli użytkownik już istnieje w źródle danych dla bieżącej <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>, a następnie <xref:System.Web.Security.MembershipProvider.CreateUser%2A> metoda zwraca `null` i wartością stanu <xref:System.Web.Security.MembershipCreateStatus.DuplicateEmail>.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public abstract string ResetPassword (string username, string answer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResetPassword(string username, string answer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResetPassword (username As String, answer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResetPassword(System::String ^ username, System::String ^ answer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="answer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Użytkownik, który można zresetować hasła.</param>
        <param name="answer">Odpowiedź dotycząca hasła dla określonego użytkownika.</param>
        <summary>Resetuje hasło użytkownika do nowego, automatycznie wygenerowanego hasła.</summary>
        <returns>Nowe hasło dla określonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, nazwę użytkownika i odpowiedzi hasła oraz generuje nowy, losowy hasło dla określonego użytkownika.  
  
> [!NOTE]
>  Losowe hasło utworzone przez <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> — metoda nie jest gwarantowana do przekazania wyrażenia regularnego w <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> właściwości. Jednak losowe hasło będzie spełniać kryteria ustanowione przez <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> i <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> właściwości  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> Metody aktualizuje informacje o użytkowniku w źródle danych przy użyciu nowej wartości hasła i zwraca nowe hasło jako ciąg. Jest wygodną mechanizm generuje losowe hasło <xref:System.Web.Security.Membership.GeneratePassword%2A> metody.  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> zapewnia, że <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> flaga jest ustawiona na `true` przed wykonaniem żadnych akcji. Jeśli <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> jest `false`, <xref:System.NotSupportedException> wyjątku.  
  
 <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> sprawdza również wartość <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> właściwości. Jeśli <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> jest `true`, <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> sprawdza wartość parametru podana odpowiedzi przed odpowiedzi hasła przechowywane w źródle danych. Jeśli nie są zgodne, <xref:System.Web.Security.MembershipPasswordException> wyjątku.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public abstract bool UnlockUser (string userName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UnlockUser(string userName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function UnlockUser (userName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool UnlockUser(System::String ^ userName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Użytkownik członkostwa stan blokady, którego chcesz wyczyścić.</param>
        <summary>Usuwa blokady, dzięki czemu można zweryfikować użytkownika członkostwa.</summary>
        <returns>
          <see langword="true" /> Jeśli użytkownik członkostwa został pomyślnie odblokowane; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, nazwę użytkownika i aktualizuje pole w źródle danych, która przechowuje <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> właściwości `false`. <xref:System.Web.Security.MembershipProvider.UnlockUser%2A> Metoda zwraca `true` rekordu dla użytkownika członkostwa zaktualizowaniu pomyślnie; w przeciwnym razie `false`.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public abstract void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> obiekt, który reprezentuje użytkownika do zaktualizowania oraz zaktualizowane informacje dla użytkownika.</param>
        <summary>Aktualizuje informacje o użytkowniku w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, <xref:System.Web.Security.MembershipUser> obiektu wypełniane przy użyciu informacji o użytkowniku i aktualizuje źródła danych przy użyciu podanych wartości.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public abstract bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do zweryfikowania.</param>
        <param name="password">Hasło dla określonego użytkownika.</param>
        <summary>Sprawdza, czy określona nazwa użytkownika i hasło istnieją w źródle danych.</summary>
        <returns>
          <see langword="true" /> Jeśli określona nazwa użytkownika i hasło są prawidłowe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje jako dane wejściowe, nazwę użytkownika i hasła i sprawdza, czy wartości pasują do źródła danych. <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Zwraca `true` dopasowanie nazwy i hasła użytkownika pomyślnie; w przeciwnym razie `false`.  
  
 Pomyślnie sprawdzań poprawności <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> aktualizacje <xref:System.Web.Security.MembershipUser.LastLoginDate%2A> dla określonego użytkownika.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.MembershipProvider.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik jest tworzony, zmienić hasło lub resetowania hasła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> Zdarzenie jest wywoływane podczas <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, i <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> metody.  
  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> Zdarzeń występuje przed żądanej akcji i umożliwia użytkownikowi kontynuować, lub Anuluj żądanej akcji. Jeśli akcja została anulowana, użytkownik może określić wyjątków.  
  
 Użytkownicy korzystają <xref:System.Web.Security.MembershipValidatePasswordEventHandler> obsługi zdarzeń, aby określić funkcję obsługi <xref:System.Web.Security.MembershipProvider.ValidatingPassword> zdarzeń. Można użyć implementacji dostawcy <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> metody wirtualnej podnieść <xref:System.Web.Security.MembershipProvider.ValidatingPassword> zdarzeń.  
  
   
  
## Examples  
 Przykład <xref:System.Web.Security.MembershipProvider> implementację, zobacz [implementowanie dostawcy profilu](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>