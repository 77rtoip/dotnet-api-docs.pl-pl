<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c7ee9c4ba0529d2408ff01f1055e0535e1ad4cd4" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52236195" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type RoleProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje kontraktu, który implementuje platformy ASP.NET w celu świadczenia usług zarządzania rolami za pomocą ról niestandardowych dostawców.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zarządzanie rolami ASP.NET jest przeznaczona do umożliwiają łatwe wykorzystywanie wielu dostawców ról dla aplikacji ASP.NET. Można użyć dostawcy podana rola, które są dołączone do programu .NET Framework, lub możesz zaimplementować własnego dostawcę.  
  
 Podczas implementowania dostawcy rolę niestandardową, są wymagane w celu odziedziczenia <xref:System.Web.Security.RoleProvider> klasy abstrakcyjnej.  
  
 Istnieją dwie główne przyczyny tworzenia dostawcy usługi roli niestandardowej.  
  
-   Należy przechowywać informacje o rolach w źródle danych, która nie jest obsługiwana przez dostawców roli dołączonej do programu .NET Framework, takich jak baza danych FoxPro, baza danych Oracle lub innych źródeł danych.  
  
-   Konieczne jest zarządzanie informacji o roli przy użyciu schematu bazy danych, która różni się od schematu bazy danych używane przez dostawców, które są dostarczane za pomocą programu .NET Framework. Typowym przykładem to będzie danych roli, która już istnieje w bazie danych programu SQL Server dla firmy lub witryny sieci Web.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Security.RoleProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie należy zaimplementować konstruktora dla klasy, która dziedziczy <xref:System.Web.Security.RoleProvider> klasy abstrakcyjnej. Inicjowanie wartości <xref:System.Web.Security.RoleProvider> wdrożenia są przekazywane do <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> implementacji metody.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="roleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tablica ciągu, nazw użytkowników, które mają zostać dodane do określonych ról.</param>
        <param name="roleNames">Tablica ciągu, nazw ról, które można dodać nazwy określonego użytkownika.</param>
        <summary>Dodaje określone nazwy użytkownika do określonych ról dla skonfigurowanych <see langword="applicationName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> jest wywoływana przez <xref:System.Web.Security.Roles> klasy, aby skojarzyć określonych użytkowników z określonych ról w źródle danych. Role są dodawane do skonfigurowanej <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Jeśli którekolwiek z nazwy określonej roli są nie znaleziono skonfigurowanego `applicationName`, zaleca się, że Twój dostawca zgłasza <xref:System.Configuration.Provider.ProviderException>.  
  
 Czy dowolna z określone nazwy użytkownika nie jest skojarzona z żadną nazwy określonej roli dla skonfigurowanych `applicationName`, zaleca się, że Twój dostawca zgłasza <xref:System.Configuration.Provider.ProviderException>.  
  
 Jeśli są określone nazwy użytkownika `null` lub jest pustym ciągiem, zaleca się, że Twój dostawca zgłasza wyjątek.  
  
 W przypadku spełnienia któregoś z nazwy określonej roli `null` lub jest pustym ciągiem, zaleca się, że Twój dostawca zgłasza wyjątek.  
  
 Jeśli źródło danych obsługuje transakcje, zaleca się zawierały każda operacja dodania w transakcji i Wycofaj tę transakcję i zgłosić wyjątek, jeśli dowolnych Dodaj operacja kończy się niepowodzeniem.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przykład implementacji <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.RoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aplikacji do przechowywania i pobierane informacje.</summary>
        <value>Nazwa aplikacji do przechowywania i pobierane informacje.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> Jest używany przez <xref:System.Web.Security.Roles> klasy do skojarzenia z użytkownikami i rolami z różnych aplikacji. Dzięki temu wiele aplikacji używać tej samej bazy danych do przechowywania użytkowników i informacji o roli bez powodowania konfliktów między zduplikowanych nazw użytkownika lub nazwy ról. Wiele aplikacji programu ASP.NET można użyć tej samej bazy danych, określając tę samą wartość w <xref:System.Web.Security.Roles.ApplicationName%2A> właściwości. <xref:System.Web.Security.Roles.ApplicationName%2A> Właściwość można ustawić programowo, albo mogą być ustawione w sposób deklaratywny w pliku konfiguracji dla aplikacji sieci Web przy użyciu `applicationName` atrybutu.  
  
 Jeśli nie <xref:System.Web.Security.RoleProvider.ApplicationName%2A> właściwość zostanie określona, zaleca się <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> można użyć wartości właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przykład implementacji <xref:System.Web.Security.RoleProvider.ApplicationName%2A> właściwości.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member CreateRole : string -&gt; unit" Usage="roleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do utworzenia.</param>
        <summary>Dodaje nową rolę do źródła danych skonfigurowanego <see langword="applicationName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.CreateRole%2A> jest wywoływana przez <xref:System.Web.Security.Roles.CreateRole%2A> metody <xref:System.Web.Security.Roles> klasy, aby dodać określoną rolę do źródła danych skonfigurowanego <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Jeśli nazwa określona rola już istnieje dla skonfigurowanych `applicationName`, jest `null`, lub jest pustym ciągiem, zaleca się, że Twój dostawca zgłasza wyjątek.  
  
 Jeśli nazwa określona rola zawiera przecinek, zalecamy Twojego dostawcy throw wyjątku.  
  
 Jeśli źródło danych ogranicza długość nazwy roli, na przykład za pomocą kolumn o stałej długości w tabeli w bazie danych, zaleca się zgłosić wyjątek, jeśli nazwa roli przekracza maksymalną długość określoną przez źródło danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przykład implementacji <xref:System.Web.Security.RoleProvider.CreateRole%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRole : string * bool -&gt; bool" Usage="roleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do usunięcia.</param>
        <param name="throwOnPopulatedRole">Jeśli <see langword="true" />, zgłosić wyjątek, jeśli <paramref name="roleName" /> ma co najmniej jednego członka i nie usuwaj <paramref name="roleName" />.</param>
        <summary>Usuwa rolę ze źródła danych dla skonfigurowanych <see langword="applicationName" />.</summary>
        <returns>
          <see langword="true" /> Jeśli rola została pomyślnie usunięta; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.DeleteRole%2A> jest wywoływana przez <xref:System.Web.Security.Roles.DeleteRole%2A> i <xref:System.Web.Security.Roles.DeleteRole%2A> metody <xref:System.Web.Security.Roles> klasy, aby usunąć określoną rolę ze źródła danych dla skonfigurowanych <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Po usunięciu roli ze źródła danych, upewnij się, zostaną również usunięte wszystkie skojarzenia między nazwę użytkownika i usunięta rola dla skonfigurowanych `applicationName`.  
  
 Jeśli `throwOnPopulatedRole` jest `true`oraz rolę identyfikowane przez `roleName` parametr ma co najmniej jednego członka, throw <xref:System.Configuration.Provider.ProviderException> i nie usuwaj roli. Jeśli `throwOnPopulatedRole` jest `false`, następnie usuń rolę, czy jest pusta lub nie.  
  
 Nazwa określona rola nie istnieje, czy `null`, lub jest pustym ciągiem, zaleca się, że Twój dostawca zgłasza wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przykład implementacji <xref:System.Web.Security.RoleProvider.DeleteRole%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersInRole : string * string -&gt; string[]" Usage="roleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Rola do przeszukania.</param>
        <param name="usernameToMatch">Nazwa użytkownika do wyszukania.</param>
        <summary>Pobiera tablicę nazw użytkowników w roli, gdy nazwa użytkownika zawiera określonej nazwy użytkownika do dopasowania.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich użytkowników, których nazwa użytkownika odpowiada parametrowi <paramref name="usernameToMatch" /> i użytkownik jest członkiem określonej roli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy i zwraca listę użytkowników w roli, w których nazwa użytkownika zawiera dopasowanie podane `usernameToMatch` dla skonfigurowanych `applicationName`. Obsługa symboli wieloznacznych jest na podstawie źródła danych. Użytkownicy są zwracane w porządku alfabetycznym według nazwy użytkownika.  
  
 Firma Microsoft zaleca generowanie <xref:System.Configuration.Provider.ProviderException> Jeśli `roleName` nie istnieje w źródle danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przykład <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> implementacji.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="abstract member GetAllRoles : unit -&gt; string[]" Usage="roleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę wszystkich ról dla skonfigurowanych <see langword="applicationName" />.</summary>
        <returns>Tablica ciągów zawierającą nazwy wszystkich ról, które są przechowywane w źródle danych dla skonfigurowanych <see langword="applicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> jest wywoływana przez <xref:System.Web.Security.Roles.GetAllRoles%2A> metody <xref:System.Web.Security.Roles> klasy, aby pobrać listę nazw ról ze źródła danych. Tylko role dla określonego <xref:System.Web.Security.RoleProvider.ApplicationName%2A> są pobierane.  
  
 Jeśli role nie istnieje dla skonfigurowanych `applicationName`, zaleca się, że Twój dostawca zwraca tablicę ciągów, bez elementów.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przykład implementacji <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="abstract member GetRolesForUser : string -&gt; string[]" Usage="roleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Użytkownik, aby powrócić do listy ról.</param>
        <summary>Pobiera listę ról określonego użytkownika dla skonfigurowanych <see langword="applicationName" />.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich ról określonego użytkownika dla skonfigurowanych <see langword="applicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> jest wywoływana przez <xref:System.Web.Security.Roles.GetRolesForUser%2A> metody <xref:System.Web.Security.Roles> klasy do pobrania nazwy ról, do których określony użytkownik jest skojarzony ze źródła danych. Tylko role dla skonfigurowanych <xref:System.Web.Security.RoleProvider.ApplicationName%2A> są pobierane.  
  
 Jeśli role nie istnieje dla określonego użytkownika skonfigurowanego `applicationName`, zaleca się, że Twój dostawca zwraca tablicę ciągów, bez elementów.  
  
 Jeśli określona nazwa użytkownika jest `null` lub jest pustym ciągiem, zaleca się, że Twój dostawca zgłasza wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przykład implementacji <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRole : string -&gt; string[]" Usage="roleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli, które można pobrać listy użytkowników.</param>
        <summary>Pobiera listę użytkowników w określonej roli dla skonfigurowanych <see langword="applicationName" />.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich użytkowników, którzy są członkami określonej roli dla skonfigurowanych <see langword="applicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> jest wywoływana przez <xref:System.Web.Security.Roles.GetUsersInRole%2A> metody <xref:System.Web.Security.Roles> klasy do pobrania nazwy użytkownika, skojarzone z rolami ze źródła danych. Tylko role dla skonfigurowanych <xref:System.Web.Security.RoleProvider.ApplicationName%2A> są pobierane.  
  
 Jeśli nazwa określona rola nie istnieje dla skonfigurowanych `applicationName` lub jeśli jest ono `null` lub pustym ciągiem, firma Microsoft zaleca, że Twój dostawca zgłasza wyjątek.  
  
 Jeśli żaden użytkownik nie są skojarzone z określoną rolą dla skonfigurowanych `applicationName`, zaleca się, że Twój dostawca zwraca tablicę ciągów, bez elementów.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przykład implementacji <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member IsUserInRole : string * string -&gt; bool" Usage="roleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do wyszukania.</param>
        <param name="roleName">Rola do przeszukania.</param>
        <summary>Pobiera wartość wskazującą, czy określony użytkownik ma określoną rolę dla skonfigurowanych <see langword="applicationName" />.</summary>
        <returns>
          <see langword="true" /> czy określony użytkownik ma określoną rolę dla skonfigurowanych <see langword="applicationName" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles.IsUserInRole%2A> metody <xref:System.Web.Security.Roles> klasę, aby określić, czy bieżący użytkownik zalogowany jest skojarzony z rolą ze źródła danych dla skonfigurowanych <xref:System.Web.Security.Roles.ApplicationName%2A>.  
  
 Jeśli określona nazwa użytkownika jest `null` lub jest pustym ciągiem, zaleca się, że Twój dostawca zgłasza wyjątek.  
  
 Jeśli nazwa określona rola `null` lub jest pustym ciągiem, zaleca się, że Twój dostawca zgłasza wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przykład implementacji <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="roleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tablica ciągu nazwy użytkownika do usunięcia z określonych ról.</param>
        <param name="roleNames">Tablica ciągu, nazw ról, aby usunąć określone nazwy użytkownika.</param>
        <summary>Usuwa określone nazwy użytkownika z określonych ról dla skonfigurowanych <see langword="applicationName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> jest wywoływana przez <xref:System.Web.Security.Roles.RemoveUserFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> , i <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> metody <xref:System.Web.Security.Roles> klasy usunięci określeni użytkownicy z określonych ról w źródle danych. Tylko role dla skonfigurowanych <xref:System.Web.Security.RoleProvider.ApplicationName%2A> są modyfikowane.  
  
 Jeśli którekolwiek z nazwy określonej roli są nie znaleziono skonfigurowanego `applicationName`, zaleca się, że Twój dostawca zgłasza <xref:System.Configuration.Provider.ProviderException>.  
  
 Czy dowolna z określone nazwy użytkownika nie jest skojarzona z żadną nazwy określonej roli dla skonfigurowanych `applicationName`, zaleca się, że Twój dostawca zgłasza <xref:System.Configuration.Provider.ProviderException>.  
  
 Jeśli są określone nazwy użytkownika `null` lub jest pustym ciągiem, zaleca się, że Twój dostawca zgłasza wyjątek.  
  
 W przypadku spełnienia któregoś z nazwy określonej roli `null` lub jest pustym ciągiem, zaleca się, że Twój dostawca zgłasza wyjątek.  
  
 Jeśli źródło danych obsługuje transakcje, firma Microsoft zaleca obejmują każdej operacji usuwania w transakcji i Wycofaj tę transakcję i zgłosić wyjątek, jeśli wszystkie operacji usuwania nie powiedzie się.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przykład implementacji <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member RoleExists : string -&gt; bool" Usage="roleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do wyszukania w źródle danych.</param>
        <summary>Pobiera wartość wskazującą, czy nazwa określona rola już istnieje w roli źródła danych skonfigurowanego <see langword="applicationName" />.</summary>
        <returns>
          <see langword="true" /> Jeśli nazwa roli już istnieje w źródle danych dla skonfigurowanych <see langword="applicationName" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RoleExists%2A> jest wywoływana przez <xref:System.Web.Security.Roles.RoleExists%2A> metody <xref:System.Web.Security.Roles> klasę, aby określić, czy nazwa roli istnieje w źródle danych dla skonfigurowanych <xref:System.Web.Security.Roles.ApplicationName%2A>.  
  
 Jeśli nazwa określona rola `null` lub jest pustym ciągiem, zaleca się, że Twój dostawca zgłasza wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przykład implementacji <xref:System.Web.Security.RoleProvider.RoleExists%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
  </Members>
</Type>