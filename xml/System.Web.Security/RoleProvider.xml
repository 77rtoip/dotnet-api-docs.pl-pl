<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd95e97a5387fbdae81b34c61b0740a65b82dd3c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69051665" /></Metadata><TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type RoleProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje kontrakt, który ASP.NET implementuje w celu zapewnienia usług zarządzania rolami przy użyciu niestandardowych dostawców ról.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zarządzanie rolami ASP.NET zaprojektowano tak, aby umożliwić łatwe korzystanie z wielu różnych dostawców ról dla aplikacji ASP.NET. Możesz użyć dostarczonych dostawców ról, które są dołączone do .NET Framework, lub można zaimplementować własnego dostawcę.  
  
 Podczas implementowania niestandardowego dostawcy roli wymagane jest dziedziczenie <xref:System.Web.Security.RoleProvider> klasy abstrakcyjnej.  
  
 Istnieją dwa podstawowe przyczyny tworzenia niestandardowego dostawcy roli.  
  
-   Informacje o rolach muszą być przechowywane w źródle danych, które nie jest obsługiwane przez dostawców ról uwzględnionych w .NET Framework, takich jak baza danych programu FoxPro, baza danych programu Oracle lub inne źródła danych.  
  
-   Należy zarządzać informacjami o rolach przy użyciu schematu bazy danych, który jest inny niż schemat bazy danych używany przez dostawców dostarczanych z .NET Framework. Typowym przykładem takiego działania byłyby dane roli, które już istnieją w bazie danych SQL Server dla firmy lub witryny sieci Web.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Security.RoleProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie trzeba implementować konstruktora dla klasy, która dziedziczy <xref:System.Web.Security.RoleProvider> klasę abstrakcyjną. Wartości inicjujące dla <xref:System.Web.Security.RoleProvider> implementacji są przesyłane <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> do implementacji metody.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="roleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleNames" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="usernames">Tablica ciągów nazw użytkowników, które mają zostać dodane do określonych ról.</param>
        <param name="roleNames">Tablica ciągów nazw ról, do której mają zostać dodane określone nazwy użytkowników.</param>
        <summary>Dodaje określone nazwy użytkowników do określonych ról skonfigurowanych <see langword="applicationName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A>jest wywoływany przez <xref:System.Web.Security.Roles> klasę, aby skojarzyć określonych użytkowników z określonymi rolami w źródle danych. Role są dodawane do skonfigurowanego <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Jeśli nie znaleziono żadnej z określonych nazw ról dla skonfigurowanych `applicationName`usług, zalecamy <xref:System.Configuration.Provider.ProviderException>zgłoszenie.  
  
 Jeśli dowolna z określonych nazw użytkowników nie jest skojarzona z żadną z określonych nazw ról dla skonfigurowanych `applicationName`usług, zalecamy <xref:System.Configuration.Provider.ProviderException>zgłoszenie.  
  
 Jeśli którekolwiek z określonych nazw użytkowników jest `null` lub jest pustym ciągiem, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
 Jeśli dowolna z określonych nazw ról jest `null` lub jest pustym ciągiem, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
 Jeśli źródło danych obsługuje transakcje, Zalecamy dołączenie każdej operacji dodawania do transakcji i wycofanie transakcji i zgłoszenie wyjątku w przypadku niepowodzenia dowolnych operacji dodawania.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia przykładową implementację <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.RoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aplikacji do przechowywania i pobierania informacji o roli dla programu.</summary>
        <value>Nazwa aplikacji do przechowywania i pobierania informacji o roli dla programu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> Jest używana<xref:System.Web.Security.Roles> przez klasę do kojarzenia użytkowników i ról z różnymi aplikacjami. Dzięki temu wiele aplikacji może korzystać z tej samej bazy danych do przechowywania informacji o użytkownikach i rolach bez rozwiązywania konfliktów między zduplikowanymi nazwami użytkowników lub nazwami ról. Wiele aplikacji ASP.NET może używać tej samej bazy danych, określając tę samą wartość we <xref:System.Web.Security.Roles.ApplicationName%2A> właściwości. Właściwość można ustawić programowo lub można ją ustawić deklaratywnie w pliku konfiguracji aplikacji sieci Web `applicationName` przy użyciu atrybutu. <xref:System.Web.Security.Roles.ApplicationName%2A>  
  
 Jeśli nie <xref:System.Web.Security.RoleProvider.ApplicationName%2A> określono żadnej właściwości, zalecamy <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> użycie wartości właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia przykładową implementację <xref:System.Web.Security.RoleProvider.ApplicationName%2A> właściwości.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member CreateRole : string -&gt; unit" Usage="roleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do utworzenia.</param>
        <summary>Dodaje nową rolę do źródła danych skonfigurowanego <see langword="applicationName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.CreateRole%2A>jest wywoływana przez <xref:System.Web.Security.Roles.CreateRole%2A> metodę <xref:System.Web.Security.Roles> klasy w celu dodania określonej roli do źródła danych skonfigurowanego <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Jeśli określona nazwa roli już istnieje dla skonfigurowanej `applicationName`, is `null`lub jest pustym ciągiem, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
 Jeśli określona nazwa roli zawiera przecinek, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
 Jeśli źródło danych ogranicza długość nazwy roli, na przykład za pomocą kolumny o stałej długości tabeli w bazie danych, zaleca się zgłosić wyjątek, jeśli długość nazwy roli przekracza maksymalną dozwoloną wartość w źródle danych.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia przykładową implementację <xref:System.Web.Security.RoleProvider.CreateRole%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRole : string * bool -&gt; bool" Usage="roleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do usunięcia.</param>
        <param name="throwOnPopulatedRole">Jeśli <see langword="true" />, Zgłoś wyjątek, jeśli <paramref name="roleName" /> ma co najmniej jednego członka i nie usuwaj <paramref name="roleName" />.</param>
        <summary>Usuwa rolę ze źródła danych dla skonfigurowanej <see langword="applicationName" />usługi.</summary>
        <returns><see langword="true" />Jeśli rola została pomyślnie usunięta; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.DeleteRole%2A>jest wywoływany przez <xref:System.Web.Security.Roles.DeleteRole%2A> <xref:System.Web.Security.Roles.DeleteRole%2A> i metody <xref:System.Web.Security.Roles> klasy, aby usunąć określoną rolę ze źródła danych dla skonfigurowanych <xref:System.Web.Security.RoleProvider.ApplicationName%2A>elementów.  
  
 Po usunięciu roli ze źródła danych upewnij się, że wszystkie skojarzenia między nazwą użytkownika i usuniętą rolą `applicationName`zostały usunięte.  
  
 Jeśli `throwOnPopulatedRole` ma `true`wartość, a rola identyfikowana przez `roleName` parametr <xref:System.Configuration.Provider.ProviderException> ma jednego lub więcej członków, zgłoś i nie usuwaj roli. Jeśli `throwOnPopulatedRole` jest`false`, Usuń rolę, niezależnie od tego, czy jest ona pusta, czy nie.  
  
 Jeśli określona nazwa roli nie istnieje, jest `null`lub jest pustym ciągiem, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia przykładową implementację <xref:System.Web.Security.RoleProvider.DeleteRole%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersInRole : string * string -&gt; string[]" Usage="roleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="usernameToMatch" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Rola do przeszukania.</param>
        <param name="usernameToMatch">Nazwa użytkownika do wyszukania.</param>
        <summary>Pobiera tablicę nazw użytkowników w roli, w której nazwa użytkownika zawiera określoną nazwę użytkownika do dopasowania.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich użytkowników, których nazwa użytkownika jest zgodna <paramref name="usernameToMatch" /> , a użytkownik jest członkiem określonej roli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez klasę i zwraca listę użytkowników w roli, gdzie nazwa użytkownika zawiera dopasowanie do wartości dostarczonej `usernameToMatch` dla skonfigurowanego `applicationName`. <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> Obsługa symboli wieloznacznych jest uwzględniana na podstawie źródła danych. Użytkownicy są przywracani w kolejności alfabetycznej według nazwy użytkownika.  
  
 Zalecamy zgłoszenie <xref:System.Configuration.Provider.ProviderException> , jeśli `roleName` nie istnieje w źródle danych.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia przykładową <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> implementację.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="abstract member GetAllRoles : unit -&gt; string[]" Usage="roleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę wszystkich ról skonfigurowanych <see langword="applicationName" />.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich ról przechowywanych w źródle danych dla skonfigurowanych <see langword="applicationName" />elementów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A>jest wywoływany przez <xref:System.Web.Security.Roles.GetAllRoles%2A> metodę <xref:System.Web.Security.Roles> klasy w celu pobrania listy nazw ról ze źródła danych. Pobierane są tylko role dla określonych <xref:System.Web.Security.RoleProvider.ApplicationName%2A> .  
  
 Jeśli dla skonfigurowanych `applicationName`ról nie istnieją żadne role, zalecamy, aby dostawca zwracał tablicę ciągów bez elementów.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia przykładową implementację <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="abstract member GetRolesForUser : string -&gt; string[]" Usage="roleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="username">Użytkownik, który ma zwrócić listę ról dla.</param>
        <summary>Pobiera listę ról, do których określony użytkownik jest skonfigurowany do skonfigurowania <see langword="applicationName" />.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich ról, do których należy określony użytkownik <see langword="applicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>jest wywoływany przez <xref:System.Web.Security.Roles.GetRolesForUser%2A> metodę <xref:System.Web.Security.Roles> klasy w celu pobrania nazw ról, do których określony użytkownik jest skojarzony ze źródła danych. Pobierane są tylko role skonfigurowane <xref:System.Web.Security.RoleProvider.ApplicationName%2A> .  
  
 Jeśli dla określonego użytkownika nie istnieją żadne role dla skonfigurowanej `applicationName`usługi, zalecamy, aby dostawca zwracał tablicę ciągów bez elementów.  
  
 Jeśli określona nazwa użytkownika jest `null` lub jest pustym ciągiem, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia przykładową implementację <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRole : string -&gt; string[]" Usage="roleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli, dla której ma zostać pobrana lista użytkowników.</param>
        <summary>Pobiera listę użytkowników w określonej roli dla skonfigurowanej <see langword="applicationName" />usługi.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich użytkowników, którzy są członkami określonej roli dla skonfigurowanej <see langword="applicationName" />usługi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A>jest wywoływany przez <xref:System.Web.Security.Roles.GetUsersInRole%2A> metodę <xref:System.Web.Security.Roles> klasy w celu pobrania nazw użytkowników skojarzonych z rolą ze źródła danych. Pobierane są tylko role skonfigurowane <xref:System.Web.Security.RoleProvider.ApplicationName%2A> .  
  
 Jeśli określona nazwa roli nie istnieje dla skonfigurowanej `applicationName` lub jeśli jest lub jest `null` pustym ciągiem, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
 Jeśli żaden użytkownik nie jest powiązany z określoną rolą dla skonfigurowanej `applicationName`usługi, zalecamy, aby dostawca zwracał tablicę ciągów bez elementów.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia przykładową implementację <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member IsUserInRole : string * string -&gt; bool" Usage="roleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do wyszukania.</param>
        <param name="roleName">Rola do przeszukania.</param>
        <summary>Pobiera wartość wskazującą, czy określony użytkownik znajduje się w określonej roli dla skonfigurowanej <see langword="applicationName" />.</summary>
        <returns><see langword="true" />Jeśli określony użytkownik znajduje się w określonej roli dla skonfigurowanej <see langword="applicationName" />; w przeciwnym razie,. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles.IsUserInRole%2A> przez metodę <xref:System.Web.Security.Roles> klasy w celu ustalenia, czy bieżący zalogowany użytkownik jest skojarzony z rolą ze źródła danych dla skonfigurowanych <xref:System.Web.Security.Roles.ApplicationName%2A>elementów. <xref:System.Web.Security.RoleProvider.IsUserInRole%2A>  
  
 Jeśli określona nazwa użytkownika jest `null` lub jest pustym ciągiem, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
 Jeśli określona nazwa roli ma wartość `null` lub jest pustym ciągiem, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia przykładową implementację <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="roleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleNames" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="usernames">Tablica ciągów nazw użytkowników, które mają zostać usunięte z określonych ról.</param>
        <param name="roleNames">Tablica ciągów nazw ról służących do usuwania określonych nazw użytkowników z programu.</param>
        <summary>Usuwa określone nazwy użytkowników z określonych ról skonfigurowanych <see langword="applicationName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A>jest wywoływana przez <xref:System.Web.Security.Roles.RemoveUserFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> , i <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> metody <xref:System.Web.Security.Roles> klasy w celu usunięcia określonych użytkowników z określonych ról w źródle danych. Modyfikowane są tylko role <xref:System.Web.Security.RoleProvider.ApplicationName%2A> skonfigurowane.  
  
 Jeśli nie znaleziono żadnej z określonych nazw ról dla skonfigurowanych `applicationName`usług, zalecamy <xref:System.Configuration.Provider.ProviderException>zgłoszenie.  
  
 Jeśli dowolna z określonych nazw użytkowników nie jest skojarzona z żadną z określonych nazw ról dla skonfigurowanych `applicationName`usług, zalecamy <xref:System.Configuration.Provider.ProviderException>zgłoszenie.  
  
 Jeśli którekolwiek z określonych nazw użytkowników jest `null` lub jest pustym ciągiem, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
 Jeśli dowolna z określonych nazw ról jest `null` lub jest pustym ciągiem, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
 Jeśli źródło danych obsługuje transakcje, Zalecamy dołączenie każdej operacji usuwania w transakcji i wycofanie transakcji i zgłoszenie wyjątku w przypadku niepowodzenia operacji usuwania.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia przykładową implementację <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member RoleExists : string -&gt; bool" Usage="roleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do wyszukania w źródle danych.</param>
        <summary>Pobiera wartość wskazującą, czy określona nazwa roli już istnieje w źródle danych roli dla skonfigurowanego <see langword="applicationName" />elementu.</summary>
        <returns><see langword="true" />Jeśli nazwa roli już istnieje w źródle danych skonfigurowanym <see langword="applicationName" />; w przeciwnym razie,. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RoleExists%2A>jest wywoływany przez <xref:System.Web.Security.Roles.RoleExists%2A> metodę <xref:System.Web.Security.Roles> klasy w celu ustalenia, czy nazwa roli istnieje w źródle danych dla skonfigurowanych <xref:System.Web.Security.Roles.ApplicationName%2A>elementów.  
  
 Jeśli określona nazwa roli ma wartość `null` lub jest pustym ciągiem, zalecamy zgłoszenie wyjątku przez dostawcę.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia przykładową implementację <xref:System.Web.Security.RoleProvider.RoleExists%2A> metody.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implementowanie dostawcy roli</related>
      </Docs>
    </Member>
  </Members>
</Type>
