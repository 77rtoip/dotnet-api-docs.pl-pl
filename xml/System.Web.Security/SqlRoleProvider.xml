<Type Name="SqlRoleProvider" FullName="System.Web.Security.SqlRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d555023d319f49211f2a3b1a31cace7cb962d5c6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36596646" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type SqlRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zarządza przechowywanie informacji członkostwo roli dla aplikacji ASP.NET w bazie danych programu SQL Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest używana przez <xref:System.Web.Security.Roles> i <xref:System.Web.Security.RolePrincipal> klasy do świadczenia usług zarządzania rolami dla aplikacji ASP.NET przy użyciu bazy danych programu SQL Server. Aby określić różne poziomy autoryzacji dla aplikacji, można użyć zarządzania rolami.  
  
 Aby użyć <xref:System.Web.Security.SqlRoleProvider> klasy, należy najpierw utworzyć bazy danych programu SQL Server używanej przez <xref:System.Web.Security.SqlRoleProvider>. Można utworzyć bazy danych używanej przez <xref:System.Web.Security.SqlRoleProvider> uruchomienia klasy `aspnet_regsql.exe` odnaleźć pliku wykonywalnego w C:\WINDOWS\Microsoft.NET\Framework\ `versionNumber` folderu i określ `-Ar` opcji (na przykład `aspnet_regsql.exe -Ar`). Baza danych utworzona, jest nazywany Aspnetdb. Można również uruchomić aspnet_regsql.exe obudowach konfiguracji graficznego i wybierz polecenie do konfigurowania wszystkich funkcji programu ASP.NET.  
  
 Jeśli dostawcy roli jest skonfigurowany z użyciem parametrów połączenia, który korzysta ze zintegrowanych zabezpieczeń, konto procesu aplikacji ASP.NET musi mieć uprawnienia do połączenia z bazą danych serwera SQL.  
  
 W pliku Machine.config jest skonfigurowane <xref:System.Web.Security.SqlRoleProvider> wystąpienia o nazwie AspNetSqlProvider, która łączy się z serwerem SQL na komputerze lokalnym. Możesz użyć tego wystąpienia dostawcy lub określić własne w pliku Web.config dla aplikacji ASP.NET. Aby użyć wystąpienia AspNetSqlProvider, podaj AspNetSqlProvider jako `defaultProvider` w konfiguracji.  
  
 Można skonfigurować <xref:System.Web.Security.SqlRoleProvider> używać tych samych informacji bazy danych i użytkowników jako <xref:System.Web.Security.SqlMembershipProvider> aby można było używać pojedynczej bazy danych informacji uwierzytelniania i autoryzacji. Aby użyć tej samej bazy danych członkostwa oraz informacje o rolach, uruchom wykonywalny aspnet_regsql.exe i zainstalować funkcję członkostwa. Następnie należy określić te same parametry połączenia w konfiguracji zarówno sieci <xref:System.Web.Security.SqlRoleProvider> i <xref:System.Web.Security.SqlMembershipProvider> wystąpień. Upewnij się również, że oba wystąpienia dostawcy są skonfigurowane z takimi samymi <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono plik Web.config dla aplikacji ASP.NET skonfigurowane do używania <xref:System.Web.Security.SqlRoleProvider> obiektu i <xref:System.Web.Security.SqlMembershipProvider>. Element jest skonfigurowane i umożliwiają tylko dostęp do uwierzytelnionych użytkowników w roli administratora.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="logincs.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
         <allow roles="Administrators" />  
         <deny users="*" />  
    </authorization>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="false"  
          requiresQuestionAndAnswer="false"   
          passwordFormat="Hashed"   
          applicationName="SampleApplication" />  
      </providers>  
    </membership>  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="true"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"   
          applicationName="SampleApplication" />  
      </providers>  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie <see cref="T:System.Web.Security.SqlRoleProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.%23ctor%2A> Konstruktor jest wywoływana przez platformę ASP.NET w celu utworzenia wystąpienia <xref:System.Web.Security.SqlRoleProvider> klasy określony w konfiguracji aplikacji. Ten konstruktor nie jest przeznaczony do użycia w kodzie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tablica ciągów nazw użytkowników, które mają zostać dodane do określonych ról.</param>
        <param name="roleNames">Tablica ciągów nazw ról do określone nazwy użytkownika do dodania.</param>
        <summary>Dodaje określone nazwy użytkownika do każdej z określonych ról.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasę, aby skojarzyć użytkowników z jednego lub więcej z co najmniej jedną rolę w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config). Ta metoda jest wywoływana przez <xref:System.Web.Security.Roles.AddUserToRole%2A>, <xref:System.Web.Security.Roles.AddUserToRoles%2A>, <xref:System.Web.Security.Roles.AddUsersToRole%2A>, i <xref:System.Web.Security.Roles.AddUsersToRoles%2A> metody <xref:System.Web.Security.Roles> klasy.  
  
 Aktualizacje bazy danych, które są wykonywane podczas wywołania <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> metody zostały wprowadzone w obrębie transakcji. Jeśli wystąpi błąd, takie jak nazwa użytkownika, który jest już w określonej roli, transakcja zostanie wycofana i są wykonywane żadne aktualizacje.  
  
 Jeśli <xref:System.Web.Security.SqlRoleProvider> jest używany z <xref:System.Web.Security.SqlMembershipProvider>i jedną określone nazwy użytkownika nie istnieje w bazie danych, nazwą użytkownika zostaną automatycznie dodane do bazy danych.  
  
 Nazwy użytkowników i nazwy roli nie może zawierać przecinków.  
  
   
  
## Examples  
 Poniższy przykładowy kod dodaje co najmniej jednego użytkownika do roli lub usuwa użytkownika z roli. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jedną z ról w <paramref name="roleNames" /> jest <see langword="null" />.  - lub - jeden z użytkowników w <paramref name="usernames" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Jedną z ról w <paramref name="roleNames" /> to ciąg pusty lub zawiera przecinek.  - lub - jeden z użytkowników w <paramref name="usernames" /> to ciąg pusty lub zawiera przecinek.  - lub - jedną z ról w <paramref name="roleNames" /> jest dłuższa niż 256 znaków.  - lub - jeden z użytkowników w <paramref name="usernames" /> jest dłuższa niż 256 znaków.  - lub - <paramref name="roleNames" /> zawiera zduplikowany element.  - lub - <paramref name="usernames" /> zawiera zduplikowany element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono co najmniej jeden z nazwy określonej roli.  - lub - nie znaleziono co najmniej jeden określone nazwy użytkownika.  - lub - co najmniej jeden określone nazwy użytkownika jest już skojarzony z jedną lub więcej nazw określoną rolę.  - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aplikacji, dla którego mają być przechowywane i pobierane informacje.</summary>
        <value>Nazwa aplikacji, dla którego mają być przechowywane i pobierane informacje. Wartość domyślna to <see cref="P:System.Web.HttpRequest.ApplicationPath" /> wartości właściwości dla bieżącej <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> Jest używany przez <xref:System.Web.Security.SqlRoleProvider> powiązania użytkowników i ról z różnych aplikacji. Dzięki temu wiele aplikacji może używać tej samej bazy danych do przechowywania informacji dotyczących ról użytkowników i bez powodowania konfliktów między zduplikowanych nazw użytkownika lub nazwy roli. Wiele aplikacji programu ASP.NET można użyć tej samej bazy danych, podając tę samą wartość w <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> właściwości. <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> Właściwości można ustawić programowo, lub można ją ustawić deklaratywnie w pliku konfiguracji dla aplikacji sieci Web przy użyciu `applicationName` atrybutu.  
  
 Jeśli nie określono wartości dla `applicationName` atrybutu w pliku konfiguracji dla aplikacji sieci Web, a następnie <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> wartości właściwości dla bieżącej <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> obiekt jest używany.  
  
> [!CAUTION]
>  Ponieważ domyślnego pojedynczego wystąpienia dostawcy roli jest używana dla wszystkich żądań obsłużonych przez <xref:System.Web.HttpApplication> obiekt może mieć wiele żądań wykonywanych równocześnie i próby ustawienia <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> wartości właściwości. <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> Właściwość nie jest wątku bezpieczne dla wielu operacji zapisu, a zmiana <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> wartość właściwości może spowodować nieoczekiwane zachowanie dla wielu użytkowników aplikacji. Zaleca się unikać pisania kodu, który umożliwia użytkownikom ustawianie <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> właściwości chyba, że należy. Przykładem aplikacji w przypadku, gdy ustawienie <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> właściwości mogą być wymagane jest administracyjne aplikacji, która zarządza danymi roli dla wielu zastosowań. Takiej aplikacji powinna być aplikacją pojedynczego użytkownika, a nie aplikacji sieci Web.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano element `system.web` sekcji w pliku Web.config dla aplikacji ASP.NET. Określa aplikacji <xref:System.Web.Security.SqlRoleProvider> wystąpienie i konfiguruje <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> właściwości `MyApplication`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Próbowano ustawić <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> właściwości przez obiekt wywołujący, który nie ma <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> ASP.NET hosting uprawnień.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Próbowano ustawić <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> na ciąg, który jest dłuższa niż 256 znaków.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="sqlRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do utworzenia.</param>
        <summary>Dodaje nową rolę do roli bazy danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.CreateRole%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasę, aby utworzyć rolę w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).  
  
 Maksymalna długość nazwy roli to 256 znaków. Nazwy roli nie jest rozróżniana. Przecinkami nie są dozwolone w nazwach ról.  
  
   
  
## Examples  
 Poniższy przykładowy kod tworzy nową rolę w bazie danych. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> to ciąg pusty lub zawiera przecinek.  - lub - <paramref name="roleName" /> jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> już istnieje w bazie danych.  - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="sqlRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do usunięcia.</param>
        <param name="throwOnPopulatedRole">Jeśli <see langword="true" />, zgłasza wyjątek, jeśli <c>roleName</c> ma co najmniej jednego członka.</param>
        <summary>Usuwa rolę z roli bazy danych.</summary>
        <returns>
          <see langword="true" /> Jeśli rola została pomyślnie usunięta; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.DeleteRole%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasę, aby usunąć rolę z bazy danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config). Po usunięciu roli listę użytkowników skojarzonych z tej roli są także usuwane z bazy danych. Nie wpływa na informacje o użytkowniku w bazie danych.  
  
 Jeśli `throwOnPopulatedRole` jest `true`, następnie zostanie wygenerowany wyjątek i roli nie zostaną usunięte, jeśli rola zidentyfikowana na podstawie `roleName` parametr ma co najmniej jednego członka. Jeśli `throwOnPopulatedRole` jest `false`, roli zostanie usunięty, czy nie jest on pusty.  
  
   
  
## Examples  
 Poniższy przykład powoduje usunięcie roli z bazy danych. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> jest <see langword="null" /> (<see langword="Nothing" /> w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> to ciąg pusty lub zawiera przecinek.  - lub - <paramref name="roleName" /> jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> zawiera co najmniej jednego członka i <paramref name="throwOnPopulatedRole" /> jest <see langword="true" />.  - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="sqlRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Rola do przeszukania.</param>
        <param name="usernameToMatch">Nazwa użytkownika do wyszukania.</param>
        <summary>Pobiera tablicę nazw użytkowników w roli, której nazwa użytkownika zawiera nazwę określonego użytkownika do dopasowania.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich użytkowników, jeśli nazwa użytkownika odpowiada <paramref name="usernameToMatch" /> i użytkownik jest członkiem określonej roli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.FindUsersInRole%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy i zwraca listę użytkowników w roli, których nazwa użytkownika zawiera dopasowanie podane `usernameToMatch` dla skonfigurowanego `applicationName`. <xref:System.Web.Security.SqlRoleProvider> Wyszukiwania dla nazwy użytkownika, który odpowiada `usernameToMatch` za pomocą PODOBNEGO — słowo kluczowe i obsługuje program SQL Server wieloznaczne wartości parametru. Na przykład jeśli `usernameToMatch` parametr ma wartość "uzytkownik1", a następnie informacje o członkostwie dla użytkownika o nazwie "uzytkownik1" jest zwracany, jeśli istnieje. Jeśli `usernameToMatch` parametr ma wartość "uzytkownik %", a następnie zwracane są informacje dotyczące członkostwa użytkowników przy użyciu nazwy użytkownika "uzytkownik1", "uzytkownik2", "uzytkownik_administrator" itd.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Roles.FindUsersInRole%2A> metodę w celu wyświetlenia członkostwo roli oparte na danych wejściowych użytkownika. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Roles#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/FindUsersInRolecs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.Roles#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/FindUsersInRolevb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> jest <see langword="null" /> (<see langword="Nothing" /> w języku Visual Basic).  - lub - <paramref name="usernameToMatch" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> to ciąg pusty lub zawiera przecinek.  - lub - <paramref name="usernameToMatch" /> jest pustym ciągiem.  - lub - <paramref name="roleName" /> jest dłuższa niż 256 znaków.  - lub - <paramref name="usernameToMatch" /> jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> Nie znaleziono w bazie danych.  - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="sqlRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę wszystkich ról dla aplikacji.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich ról, które są przechowywane w bazie danych dla wybranej aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.GetAllRoles%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy można pobrać listy wszystkich ról w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Roles.GetAllRoles%2A> metodę, aby uzyskać listę ról dla aplikacji i ich powiązania wyniki w <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> formantu. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Wystąpił nieznany błąd podczas komunikowania się z bazą danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="sqlRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Użytkownik, aby powrócić do listy ról.</param>
        <summary>Pobiera listę ról, które użytkownik.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich ról określonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.GetRolesForUser%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasę, aby pobrać listę ról określonego użytkownika z bazy danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Roles.GetRolesForUser%2A> metodę, aby pobrać listę ról określonego użytkownika i ich wiąże <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> formantu. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> zawiera przecinek.  - lub - <paramref name="username" /> jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Wystąpił nieznany błąd podczas komunikowania się z bazą danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="sqlRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli, aby uzyskać listę użytkowników.</param>
        <summary>Pobiera listę użytkowników w określonej roli.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich użytkowników, którzy są członkami określonej roli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.GetUsersInRole%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy można pobrać listy użytkowników skojarzonych z określoną rolę w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Roles.GetUsersInRole%2A> metody w celu uzyskania listy użytkowników w określonej roli i powiązać wyniki w <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> formantu. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> to ciąg pusty lub zawiera przecinek.  - lub - <paramref name="roleName" /> jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="rolename" /> Nie znaleziono w bazie danych.  - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa <see cref="T:System.Web.Security.SqlRoleProvider" /> wystąpienie do zainicjowania.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> zawiera nazwy i wartości opcji konfiguracji dla dostawcy ról.</param>
        <summary>Inicjuje dostawcę roli programu SQL Server z wartościami właściwości określony w pliku konfiguracji aplikacji ASP.NET. Ta metoda nie jest przeznaczona do użycia bezpośrednio w kodzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda inicjuje <xref:System.Web.Security.SqlRoleProvider> z właściwością wartości określone w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config), a nie jest przeznaczona do użycia bezpośrednio w kodzie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Aplikacja ASP.NET nie jest uruchomiona na <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> zaufania lub nowszej.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see langword="connectionStringName" /> Atrybut jest pusty lub nie istnieje w pliku konfiguracyjnym aplikacji dla tego <see cref="T:System.Web.Security.SqlRoleProvider" /> wystąpienia.  - lub - <see langword="applicationName" /> atrybutu przekracza 256 znaków.  - lub - pliku konfiguracji aplikacji dla tego <see cref="T:System.Web.Security.SqlRoleProvider" /> wystąpienie zawiera nierozpoznany atrybut.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="sqlRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do wyszukania.</param>
        <param name="roleName">Rola do przeszukania.</param>
        <summary>Pobiera wartość wskazującą, czy określony użytkownik ma określoną rolę.</summary>
        <returns>
          <see langword="true" /> Jeśli określona nazwa użytkownika znajduje się w określonej roli; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.IsUserInRole%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy i <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metody <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> właściwości w celu określenia, czy użytkownik jest skojarzony z rolą w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).  
  
   
  
## Examples  
 Poniższy przykład kodu programowo sprawdza, czy zalogowany użytkownik jest w roli administratora przed zezwoleniem na użytkownika wyświetlić ról użytkownika. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> jest <see langword="null" />.  - lub - <paramref name="username" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> to ciąg pusty lub zawiera przecinek.  - lub - <paramref name="username" /> jest zawiera przecinek.  - lub - <paramref name="roleName" /> jest dłuższa niż 256 znaków.  - lub - <paramref name="username" /> jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Wystąpił nieznany błąd podczas komunikowania się z bazą danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tablica ciągów nazw użytkowników do usunięcia z określonych ról.</param>
        <param name="roleNames">Tablica ciągów nazw ról, aby usunąć określone nazwy użytkownika.</param>
        <summary>Usuwa określone nazwy użytkownika z określonych ról.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasę, aby usunąć jednego lub więcej użytkowników z jednego lub większej liczby ról w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config). Ta metoda jest wywoływana przez <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, i <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> metody <xref:System.Web.Security.Roles> klasy.  
  
 Aktualizacje bazy danych, które są wykonywane podczas wywołania <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> w obrębie transakcji. Jeśli wystąpi błąd, takie jak nazwa użytkownika, który nie istnieje lub nazwa użytkownika, który jest już w określonej roli, transakcja zostanie wycofana i są wykonywane żadne aktualizacje.  
  
 Nazwy użytkowników i nazwy roli nie może zawierać przecinków.  
  
   
  
## Examples  
 Poniższy przykładowy kod dodaje co najmniej jednego użytkownika do roli lub usuwa użytkownika z roli. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jedną z ról w <paramref name="roleNames" /> jest <see langword="null" />.  - lub - jeden z użytkowników w <paramref name="usernames" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Jedną z ról w <paramref name="roleNames" /> to ciąg pusty lub zawiera przecinek.  - lub - jeden z użytkowników w <paramref name="usernames" /> to ciąg pusty lub zawiera przecinek.  - lub - jedną z ról w <paramref name="roleNames" /> jest dłuższa niż 256 znaków.  - lub - jeden z użytkowników w <paramref name="usernames" /> jest dłuższa niż 256 znaków.  - lub - <paramref name="roleNames" /> zawiera zduplikowany element.  - lub - <paramref name="usernames" /> zawiera zduplikowany element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono co najmniej jeden określone nazwy użytkownika.  - lub - nie znaleziono co najmniej jeden z nazwy określonej roli.  - lub - co najmniej jeden określone nazwy użytkownika nie jest skojarzony z jedną lub więcej nazw określoną rolę.  - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="sqlRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do wyszukiwania w bazie danych.</param>
        <summary>Pobiera wartość wskazującą, czy nazwa określona rola już istnieje w bazie danych roli.</summary>
        <returns>
          <see langword="true" /> Jeśli nazwa roli już istnieje w bazie danych. w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.RoleExists%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasę, aby określić, czy nazwa roli istnieje w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Roles.RoleExists%2A> metodę, aby określić, czy nazwa roli już istnieje, przed utworzeniem roli. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> to ciąg pusty lub zawiera przecinek.  - lub - <paramref name="roleName" /> jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Wystąpił nieznany błąd podczas komunikowania się z bazą danych.</exception>
      </Docs>
    </Member>
  </Members>
</Type>