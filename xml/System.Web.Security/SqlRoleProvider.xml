<Type Name="SqlRoleProvider" FullName="System.Web.Security.SqlRoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01155afd8b53cc60cf3f17b4614589033e99d081" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69050762" /></Metadata><TypeSignature Language="C#" Value="public class SqlRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type SqlRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zarządza przechowywaniem informacji o członkostwie ról dla aplikacji ASP.NET w bazie danych SQL Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest używana przez <xref:System.Web.Security.Roles> klasy i <xref:System.Web.Security.RolePrincipal> w celu zapewnienia usług zarządzania rolami dla aplikacji ASP.NET przy użyciu bazy danych SQL Server. Zarządzanie rolami służy do określania różnych poziomów autoryzacji dla aplikacji.  
  
 Aby użyć <xref:System.Web.Security.SqlRoleProvider> klasy, należy najpierw utworzyć bazę danych SQL Server używana <xref:System.Web.Security.SqlRoleProvider>przez. Aby utworzyć bazę danych używaną przez <xref:System.Web.Security.SqlRoleProvider> klasę, `aspnet_regsql.exe` Uruchom plik wykonywalny znajdujący się `versionNumber` w folderze `-Ar` C:\Windows\Microsoft.NET\Framework\ `aspnet_regsql.exe -Ar`i określ opcję (na przykład). Utworzona baza danych ma nazwę aspnetdb. Alternatywnie można uruchomić polecenie aspnet_regsql. exe, aby pobrać tryb konfiguracji graficznego interfejsu użytkownika i skonfigurować wszystkie funkcje ASP.NET.  
  
 Jeśli dostawca roli jest skonfigurowany przy użyciu parametrów połączenia, które korzystają ze zintegrowanych zabezpieczeń, konto procesu aplikacji ASP.NET musi mieć prawa do łączenia się z bazą danych SQL Server.  
  
 Plik Machine. config jest skonfigurowany przy użyciu <xref:System.Web.Security.SqlRoleProvider> wystąpienia o nazwie AspNetSqlProvider, który łączy się z SQL Server na komputerze lokalnym. Możesz użyć tego wystąpienia dostawcy lub określić swój własny w pliku Web. config dla aplikacji ASP.NET. Aby użyć wystąpienia AspNetSqlProvider, należy określić AspNetSqlProvider jako `defaultProvider` konfigurację.  
  
 Można skonfigurować <xref:System.Web.Security.SqlRoleProvider> , aby używać tej samej bazy danych i informacji o użytkowniku <xref:System.Web.Security.SqlMembershipProvider> jak w celu użycia pojedynczej bazy danych do uwierzytelniania i autoryzacji. Aby użyć tej samej bazy danych w celu uzyskania informacji o członkostwie i rolach, uruchom plik wykonywalny aspnet_regsql. exe i zainstaluj funkcję członkostwa. Następnie określ te same parametry połączenia w konfiguracji dla <xref:System.Web.Security.SqlRoleProvider> wystąpień i. <xref:System.Web.Security.SqlMembershipProvider> Należy również upewnić się, że oba wystąpienia dostawcy są <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>skonfigurowane tak samo.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono plik Web. config dla aplikacji ASP.NET skonfigurowanej do używania <xref:System.Web.Security.SqlRoleProvider> obiektu <xref:System.Web.Security.SqlMembershipProvider>i. Element jest skonfigurowany tak, aby zezwalać na dostęp tylko uwierzytelnionym użytkownikom w roli Administratorzy.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="logincs.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
         <allow roles="Administrators" />  
         <deny users="*" />  
    </authorization>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="false"  
          requiresQuestionAndAnswer="false"   
          passwordFormat="Hashed"   
          applicationName="SampleApplication" />  
      </providers>  
    </membership>  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="true"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"   
          applicationName="SampleApplication" />  
      </providers>  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie <see cref="T:System.Web.Security.SqlRoleProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor jest wywoływany przez ASP.NET, aby utworzyć wystąpienie <xref:System.Web.Security.SqlRoleProvider> klasy, jak określono w konfiguracji aplikacji. <xref:System.Web.Security.SqlRoleProvider.%23ctor%2A> Ten konstruktor nie jest przeznaczony do użycia z Twojego kodu.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tablica ciągów nazw użytkowników, które mają zostać dodane do określonych ról.</param>
        <param name="roleNames">Tablica ciągów nazw ról, do której mają zostać dodane określone nazwy użytkowników.</param>
        <summary>Dodaje określone nazwy użytkowników do każdej z określonych ról.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez klasę w celu skojarzenia jednego lub większej liczby użytkowników z co najmniej jedną rolą w bazie danych SQL Server określonej w pliku konfiguracji aplikacji ASP.NET (Web. config). <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> Ta <xref:System.Web.Security.Roles.AddUserToRole%2A>Metoda jest wywoływana przez metody <xref:System.Web.Security.Roles.AddUsersToRole%2A> <xref:System.Web.Security.Roles.AddUserToRoles%2A> ,,<xref:System.Web.Security.Roles.AddUsersToRoles%2A> , i klasy.<xref:System.Web.Security.Roles>  
  
 Aktualizacje bazy danych wykonywane podczas wywołania <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> metody są wykonywane w ramach transakcji. Jeśli wystąpi błąd, taki jak nazwa użytkownika, który znajduje się już w określonej roli, transakcja zostanie wycofana i nie są wykonywane żadne aktualizacje.  
  
 Jeśli jest używany <xref:System.Web.Security.SqlMembershipProvider>z, a jedna z określonych nazw użytkowników nie istnieje w bazie danych, nazwa użytkownika zostanie automatycznie dodana do bazy danych. <xref:System.Web.Security.SqlRoleProvider>  
  
 Nazwy użytkowników i ról nie mogą zawierać przecinków.  
  
   
  
## Examples  
 Poniższy przykład kodu dodaje jednego lub kilku użytkowników do roli lub usuwa użytkownika z roli. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jedna z ról w programie <paramref name="roleNames" /> ma <see langword="null" />wartość.  
  
—lub— 
Jeden z użytkowników w <paramref name="usernames" /> usłudze ma. <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Jedna z ról w <paramref name="roleNames" /> jest ciągiem pustym lub zawiera przecinek.  
  
—lub— 
Jeden z użytkowników w programie <paramref name="usernames" /> jest pustym ciągiem lub zawiera przecinek.  
  
—lub— 
Jedna z ról w <paramref name="roleNames" /> jest dłuższa niż 256 znaków.  
  
—lub— 
Jeden z użytkowników w programie <paramref name="usernames" /> ma więcej niż 256 znaków.  
  
—lub— 
 <paramref name="roleNames" />zawiera zduplikowany element.  
  
—lub— 
 <paramref name="usernames" />zawiera zduplikowany element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono co najmniej jednej z określonych nazw ról.  
  
 —lub—  
  
 Nie znaleziono co najmniej jednej z określonych nazw użytkowników.  
  
 —lub—  
  
 Co najmniej jedna z określonych nazw użytkowników jest już skojarzona z co najmniej jedną określoną nazwą roli.  
  
 —lub—  
  
 Wystąpił nieznany błąd podczas komunikacji z bazą danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aplikacji, dla której mają być przechowywane i pobierane informacje o rolach.</summary>
        <value>Nazwa aplikacji, dla której mają być przechowywane i pobierane informacje o rolach. Wartością domyślną jest <see cref="P:System.Web.HttpRequest.ApplicationPath" /> wartość właściwości Current <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> Służydokojarzeniaużytkownikówi<xref:System.Web.Security.SqlRoleProvider> ról z różnymi aplikacjami. Dzięki temu wiele aplikacji może korzystać z tej samej bazy danych do przechowywania informacji o użytkownikach i rolach bez rozwiązywania konfliktów między zduplikowanymi nazwami użytkowników lub nazwami ról. Wiele aplikacji ASP.NET może używać tej samej bazy danych, określając tę samą wartość we <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> właściwości. Właściwość można ustawić programowo lub można ją ustawić deklaratywnie w pliku konfiguracji aplikacji sieci Web `applicationName` przy użyciu atrybutu. <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>  
  
 Jeśli wartość nie zostanie określona dla `applicationName` atrybutu w pliku konfiguracji aplikacji sieci Web, <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> zostanie użyta wartość właściwości dla bieżącego <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> obiektu.  
  
> [!CAUTION]
>  Ponieważ pojedyncze domyślne wystąpienie dostawcy roli jest używane dla wszystkich żądań obsłużonych przez <xref:System.Web.HttpApplication> obiekt, można wykonywać wiele żądań jednocześnie i próbować <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> ustawić wartość właściwości. Właściwość nie jest bezpieczna wątkowo dla wielu zapisów, a <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> zmiana wartości właściwości może spowodować nieoczekiwane zachowanie dla wielu użytkowników aplikacji. <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> Zaleca się uniknięcie pisania kodu, który umożliwia użytkownikom ustawianie <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> właściwości, chyba że jest to konieczne. Przykładem aplikacji, w <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> której ustawienie właściwości może być wymagane, jest aplikacja administracyjna, która zarządza danymi roli dla wielu aplikacji. Taka aplikacja powinna być aplikacją pojedynczego użytkownika, a nie aplikacją sieci Web.  
  
   
  
## Examples  
 Poniższy przykład pokazuje element w `system.web` sekcji pliku Web. config dla aplikacji ASP.NET. Określa <xref:System.Web.Security.SqlRoleProvider> wystąpienie aplikacji i <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> ustawia właściwość na `MyApplication`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Podjęto próbę ustawienia <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> właściwości przez obiekt wywołujący, który nie ma <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> uprawnienia hostingu ASP.NET.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Podjęto próbę ustawienia <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> ciągu o długości przekraczającej 256 znaków.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="sqlRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do utworzenia.</param>
        <summary>Dodaje nową rolę do bazy danych ról.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana przez klasę, <xref:System.Web.Security.Roles> aby utworzyć rolę w bazie danych SQL Server określonej w pliku konfiguracji aplikacji ASP.NET (Web. config). <xref:System.Web.Security.SqlRoleProvider.CreateRole%2A>  
  
 Maksymalna długość nazwy roli to 256 znaków. Nazwy ról nie są rozróżniane wielkości liter. Nazwy ról nie mogą przecinkiem.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nową rolę w bazie danych. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />jest pustym ciągiem lub zawiera przecinek.  
  
—lub— 
 <paramref name="roleName" />jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" />istnieje już w bazie danych.  
  
—lub— 
Wystąpił nieznany błąd podczas komunikacji z bazą danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="sqlRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do usunięcia.</param>
        <param name="throwOnPopulatedRole">Jeśli <see langword="true" />, zgłasza wyjątek, jeśli <paramref name="roleName" /> ma co najmniej jednego członka.</param>
        <summary>Usuwa rolę z bazy danych ról.</summary>
        <returns><see langword="true" />Jeśli rola została pomyślnie usunięta; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana przez klasę, <xref:System.Web.Security.Roles> aby usunąć rolę z bazy danych SQL Server określonej w pliku konfiguracji aplikacji ASP.NET (Web. config). <xref:System.Web.Security.SqlRoleProvider.DeleteRole%2A> Po usunięciu roli lista użytkowników skojarzonych z tą rolą zostanie również usunięta z bazy danych programu. Nie ma to żadnego oddziaływania na informacje o użytkowniku w bazie danych.  
  
 Jeśli `throwOnPopulatedRole` ma `true`wartość, zostanie zgłoszony wyjątek, a rola nie zostanie usunięta, Jeśli rola identyfikowana przez `roleName` parametr ma co najmniej jednego członka. Jeśli `throwOnPopulatedRole` jest`false`, rola zostanie usunięta, niezależnie od tego, czy jest pusta.  
  
   
  
## Examples  
 Poniższy przykład usuwa rolę z bazy danych. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />jest <see langword="null" /> (<see langword="Nothing" /> w Visual Basic).</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />jest pustym ciągiem lub zawiera przecinek.  
  
—lub— 
 <paramref name="roleName" />jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" />ma co najmniej jednego członka i <paramref name="throwOnPopulatedRole" /> jest <see langword="true" />.  
  
—lub— 
Wystąpił nieznany błąd podczas komunikacji z bazą danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="sqlRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Rola do przeszukania.</param>
        <param name="usernameToMatch">Nazwa użytkownika do wyszukania.</param>
        <summary>Pobiera tablicę nazw użytkowników w roli, w której nazwa użytkownika zawiera określoną nazwę użytkownika do dopasowania.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich użytkowników, których nazwa użytkownika jest zgodna <paramref name="usernameToMatch" /> , a użytkownik jest członkiem określonej roli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez klasę i zwraca listę użytkowników w roli, gdzie nazwa użytkownika zawiera dopasowanie do wartości dostarczonej `usernameToMatch` dla skonfigurowanego `applicationName`. <xref:System.Web.Security.SqlRoleProvider.FindUsersInRole%2A> Wyszukuje nazwę użytkownika, która pasuje do `usernameToMatch` wartości parametru za pomocą słowa kluczowego like i obsługuje SQL Server symboli wieloznacznych. <xref:System.Web.Security.SqlRoleProvider> Na przykład jeśli `usernameToMatch` parametr ma wartość "Użytkownik1", wówczas informacje o członkostwie dla użytkownika o nazwie użytkownika "Użytkownik1" są zwracane, jeśli istnieje. `usernameToMatch` Jeśli parametr ma wartość "User%", wówczas są zwracane informacje o członkostwie dla użytkowników o nazwie "Użytkownik1", "user_admin" i tak dalej.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Web.Security.Roles.FindUsersInRole%2A> metody do wyświetlania przynależności do ról na podstawie danych wejściowych użytkownika. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.Roles#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/FindUsersInRolecs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.Roles#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/FindUsersInRolevb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />jest <see langword="null" /> (<see langword="Nothing" /> w Visual Basic).  
  
—lub— 
 <paramref name="usernameToMatch" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />jest pustym ciągiem lub zawiera przecinek.  
  
—lub— 
 <paramref name="usernameToMatch" />jest pustym ciągiem.  
  
—lub— 
 <paramref name="roleName" />jest dłuższa niż 256 znaków.  
  
—lub— 
 <paramref name="usernameToMatch" />jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" />nie została znaleziona w bazie danych.  
  
—lub— 
Wystąpił nieznany błąd podczas komunikacji z bazą danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="sqlRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę wszystkich ról aplikacji.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich ról przechowywanych w bazie danych dla określonej aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez klasę w celu pobrania listy wszystkich ról w SQL Server bazie danych określonych w pliku konfiguracyjnym aplikacji ASP.NET (Web. config). <xref:System.Web.Security.SqlRoleProvider.GetAllRoles%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody, <xref:System.Web.Security.Roles.GetAllRoles%2A> Aby uzyskać listę ról dla aplikacji i powiązać wyniki <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> z kontrolką. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Wystąpił nieznany błąd podczas komunikacji z bazą danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="sqlRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Użytkownik, który ma zwrócić listę ról dla.</param>
        <summary>Pobiera listę ról, do których należy użytkownik.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich ról, w których znajduje się określony użytkownik.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana przez klasę, <xref:System.Web.Security.Roles> aby pobrać listę ról określonego użytkownika z bazy danych SQL Server określonej w pliku konfiguracji aplikacji ASP.NET (Web. config). <xref:System.Web.Security.SqlRoleProvider.GetRolesForUser%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody, <xref:System.Web.Security.Roles.GetRolesForUser%2A> aby pobrać listę ról dla określonego użytkownika i powiązać je <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> z kontrolką. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" />zawiera przecinek.  
  
—lub— 
 <paramref name="username" />jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Wystąpił nieznany błąd podczas komunikacji z bazą danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="sqlRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli, dla której ma zostać pobrana lista użytkowników.</param>
        <summary>Pobiera listę użytkowników w określonej roli.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich użytkowników, którzy są członkami określonej roli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez klasę w celu pobrania listy użytkowników skojarzonych z określoną rolą w bazie danych SQL Server określonej w pliku konfiguracji aplikacji ASP.NET (Web. config). <xref:System.Web.Security.SqlRoleProvider.GetUsersInRole%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody, <xref:System.Web.Security.Roles.GetUsersInRole%2A> Aby uzyskać listę użytkowników w określonej roli i powiązać wyniki <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> z kontrolką. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />jest pustym ciągiem lub zawiera przecinek.  
  
—lub— 
 <paramref name="roleName" />jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="rolename" />nie została znaleziona w bazie danych.  
  
—lub— 
Wystąpił nieznany błąd podczas komunikacji z bazą danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa <see cref="T:System.Web.Security.SqlRoleProvider" /> wystąpienia do zainicjowania.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> , który zawiera nazwy i wartości opcji konfiguracji dla dostawcy roli.</param>
        <summary>Inicjuje SQL Server dostawcę roli z wartościami właściwości określonymi w pliku konfiguracyjnym aplikacji ASP.NET. Ta metoda nie jest przeznaczona do użycia bezpośrednio w kodzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda inicjuje <xref:System.Web.Security.SqlRoleProvider> z wartościami właściwości określonymi w pliku konfiguracji aplikacji ASP.NET (Web. config) i nie jest przeznaczone do użycia bezpośrednio w kodzie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Aplikacja ASP.NET nie jest uruchomiona na poziomie <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> zaufania lub wyższym.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Ten atrybut jest pusty lub nie istnieje w pliku konfiguracyjnym aplikacji dla tego <see cref="T:System.Web.Security.SqlRoleProvider" /> wystąpienia. <see langword="connectionStringName" />  
  
—lub— 
Ten <see langword="applicationName" /> atrybut przekracza 256 znaków.  
  
—lub— 
Plik konfiguracji aplikacji dla tego <see cref="T:System.Web.Security.SqlRoleProvider" /> wystąpienia zawiera Nierozpoznany atrybut.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="sqlRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do wyszukania.</param>
        <param name="roleName">Rola do przeszukania.</param>
        <summary>Pobiera wartość wskazującą, czy określony użytkownik znajduje się w określonej roli.</summary>
        <returns><see langword="true" />Jeśli określona nazwa użytkownika znajduje się w określonej roli; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez <xref:System.Security.Principal.IPrincipal.IsInRole%2A> klasę<xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> i metodę właściwości, aby określić, czy użytkownik jest skojarzony z rolą w SQL Server bazie danych określonym w pliku konfiguracyjnym aplikacji ASP.NET <xref:System.Web.Security.SqlRoleProvider.IsUserInRole%2A> (Web. config).  
  
   
  
## Examples  
 Poniższy przykład kodu programowo sprawdza, czy zalogowany użytkownik należy do roli Administratorzy przed zezwoleniem użytkownikom na wyświetlanie ról użytkownika. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="username" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />jest pustym ciągiem lub zawiera przecinek.  
  
—lub— 
 <paramref name="username" />zawiera przecinek.  
  
—lub— 
 <paramref name="roleName" />jest dłuższa niż 256 znaków.  
  
—lub— 
 <paramref name="username" />jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Wystąpił nieznany błąd podczas komunikacji z bazą danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tablica ciągów nazw użytkowników, które mają zostać usunięte z określonych ról.</param>
        <param name="roleNames">Tablica ciągów nazw ról służących do usuwania określonych nazw użytkowników z programu.</param>
        <summary>Usuwa określone nazwy użytkowników z określonych ról.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez klasę w celu usunięcia co najmniej jednego użytkownika z co najmniej jednej roli w SQL Serverej bazie danych określonej w pliku konfiguracji aplikacji ASP.NET (Web. config). <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> Ta <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>Metoda jest wywoływana przez metody <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> ,,<xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> , i klasy.<xref:System.Web.Security.Roles>  
  
 Aktualizacje bazy danych wykonywane podczas wywołania <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> w ramach transakcji. Jeśli wystąpi błąd, na przykład nieistniejący nazwa użytkownika lub nazwa użytkownika, która znajduje się już w określonej roli, transakcja jest wycofywana i nie są wykonywane żadne aktualizacje.  
  
 Nazwy użytkowników i ról nie mogą zawierać przecinków.  
  
   
  
## Examples  
 Poniższy przykład kodu dodaje jednego lub kilku użytkowników do roli lub usuwa użytkownika z roli. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jedna z ról w programie <paramref name="roleNames" /> ma <see langword="null" />wartość.  
  
—lub— 
Jeden z użytkowników w <paramref name="usernames" /> usłudze ma. <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Jedna z ról w <paramref name="roleNames" /> jest ciągiem pustym lub zawiera przecinek.  
  
—lub— 
Jeden z użytkowników w programie <paramref name="usernames" /> jest pustym ciągiem lub zawiera przecinek.  
  
—lub— 
Jedna z ról w <paramref name="roleNames" /> jest dłuższa niż 256 znaków.  
  
—lub— 
Jeden z użytkowników w programie <paramref name="usernames" /> ma więcej niż 256 znaków.  
  
—lub— 
 <paramref name="roleNames" />zawiera zduplikowany element.  
  
—lub— 
 <paramref name="usernames" />zawiera zduplikowany element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono co najmniej jednej z określonych nazw użytkowników.  
  
 —lub—  
  
 Nie znaleziono co najmniej jednej z określonych nazw ról.  
  
 —lub—  
  
 Co najmniej jedna z określonych nazw użytkowników nie jest skojarzona z co najmniej jedną z określonych nazw ról.  
  
 —lub—  
  
 Wystąpił nieznany błąd podczas komunikacji z bazą danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="sqlRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do wyszukania w bazie danych.</param>
        <summary>Pobiera wartość wskazującą, czy określona nazwa roli już istnieje w bazie danych roli.</summary>
        <returns><see langword="true" />Jeśli nazwa roli już istnieje w bazie danych programu; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana przez klasę, <xref:System.Web.Security.Roles> aby określić, czy nazwa roli istnieje w bazie danych SQL Server określonej w pliku konfiguracji aplikacji ASP.NET (Web. config). <xref:System.Web.Security.SqlRoleProvider.RoleExists%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody, <xref:System.Web.Security.Roles.RoleExists%2A> aby określić, czy nazwa roli już istnieje przed utworzeniem roli. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, czyli potencjalne zagrożenie bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />jest pustym ciągiem lub zawiera przecinek.  
  
—lub— 
 <paramref name="roleName" />jest dłuższa niż 256 znaków.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Wystąpił nieznany błąd podczas komunikacji z bazą danych.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
