<Type Name="RolePrincipal" FullName="System.Web.Security.RolePrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67099bacb2588ff0b121301612754030c77f8f83" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30585595" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RolePrincipal extends System.Security.Claims.ClaimsPrincipal implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RolePrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class RolePrincipal&#xA;Inherits ClaimsPrincipal&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RolePrincipal : System::Security::Claims::ClaimsPrincipal, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje informacje dotyczące bieżącego żądania HTTP, w tym członkostwo roli zabezpieczeń. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal> Obiekt implementuje <xref:System.Security.Principal.IPrincipal> interfejsu i reprezentuje bieżący kontekst zabezpieczeń dla żądania HTTP.  
  
 Po włączeniu zarządzania rolami (zobacz <xref:System.Web.Security.Roles>), <xref:System.Web.Security.RoleManagerModule> przypisuje <xref:System.Web.Security.RolePrincipal> do obiektu <xref:System.Web.HttpContext.User%2A> właściwość <xref:System.Web.HttpContext.Current%2A> <xref:System.Web.HttpContext>.  
  
 <xref:System.Web.Security.RolePrincipal> Klasa przedstawia tożsamości zabezpieczeń dla bieżącego żądania HTTP i dodatkowo przeprowadza kontrole członkostwo roli. Jeśli <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> jest `true`, a następnie <xref:System.Web.Security.RolePrincipal> obiektu zarządza buforowaną listę ról i wyszukuje członkostwo roli dla bieżącego użytkownika w pamięci podręcznej pierwsza, lista następnie roli <xref:System.Web.Security.Roles.Provider%2A>. Jeśli <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> jest `false`, <xref:System.Web.Security.RolePrincipal> obiektu zawsze wyszukuje członkostwo roli przy użyciu dostawcy ról.  
  
 <xref:System.Web.Security.RolePrincipal> Obiektu szyfruje i odszyfrowuje informacje o rolach są przechowywane w pliku cookie identyfikowane przez <xref:System.Web.Security.Roles.CookieName%2A> na podstawie <xref:System.Web.Security.Roles.CookieProtectionValue%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Web.Security.RolePrincipal" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Tożsamość użytkownika, aby utworzyć <see cref="T:System.Web.Security.RolePrincipal" /> dla.</param>
        <summary>Tworzy wystąpienie <see cref="T:System.Web.Security.RolePrincipal" /> obiektu dla określonego <paramref name="identity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie metody <xref:System.Web.Security.RolePrincipal.%23ctor%2A> konstruktora tworzy nową <xref:System.Web.Security.RolePrincipal> obiektu i inicjuje jej wartości właściwości. Informacje o rolach pamięci podręcznej nie jest do odczytu z pliku cookie identyfikowane przez <xref:System.Web.Security.Roles.CookieName%2A> właściwości. <xref:System.Web.Security.RolePrincipal.ProviderName%2A> Właściwość jest ustawiona na <xref:System.Configuration.Provider.ProviderBase.Name%2A> domyślnego dostawcy roli.  
  
 Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
   
  
## Examples  
 Poniższy przykładowy kod tworzy nową <xref:System.Web.Security.RolePrincipal> obiektu. Jeśli <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> jest `true`, w przykładzie jest tworzony <xref:System.Web.Security.RolePrincipal> z pliku cookie informacji z pliku cookie identyfikowane przez <xref:System.Web.Security.Roles.CookieName%2A> właściwości.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RolePrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Obiektu, aby wypełnić z danymi.</param>
        <param name="context">Miejsce docelowe dla serializacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Security.RolePrincipal" /> przy użyciu informacji zawartych w określonym <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiekt i przy użyciu określonego kontekstu przesyłania strumieniowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">Tożsamość użytkownika, aby utworzyć <see cref="T:System.Web.Security.RolePrincipal" /> dla.</param>
        <param name="encryptedTicket">Ciąg, który zawiera informacje o rolach zaszyfrowane.</param>
        <summary>Tworzy wystąpienie <see cref="T:System.Web.Security.RolePrincipal" /> obiektu dla określonego <paramref name="identity" /> z informacjami o roli z określonego <paramref name="encryptedTicket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie metody <xref:System.Web.Security.RolePrincipal.%23ctor%2A> konstruktora tworzy nową <xref:System.Web.Security.RolePrincipal> obiektu i inicjuje jej wartości właściwości. Informacje o rolach dla bieżącego użytkownika jest do odczytu z podane `encryptedTicket` i pamięci podręcznej z <xref:System.Web.Security.RolePrincipal> obiektu. <xref:System.Web.Security.RolePrincipal.ProviderName%2A> Właściwość jest ustawiona na <xref:System.Configuration.Provider.ProviderBase.Name%2A> domyślnego dostawcy roli.  
  
 Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
   
  
## Examples  
 Poniższy przykładowy kod tworzy nową <xref:System.Web.Security.RolePrincipal> obiektu. Jeśli <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> jest `true`, w przykładzie jest tworzony <xref:System.Web.Security.RolePrincipal> z pliku cookie informacji z pliku cookie identyfikowane przez <xref:System.Web.Security.Roles.CookieName%2A> właściwości.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="encryptedTicket" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="providerName">Nazwa dostawcy roli użytkownika.</param>
        <param name="identity">Tożsamość użytkownika, aby utworzyć <see cref="T:System.Web.Security.RolePrincipal" /> dla.</param>
        <summary>Tworzy wystąpienie <see cref="T:System.Web.Security.RolePrincipal" /> obiektu dla określonego <paramref name="identity" /> przy użyciu określonego <paramref name="providerName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie metody <xref:System.Web.Security.RolePrincipal.%23ctor%2A> konstruktora tworzy nową <xref:System.Web.Security.RolePrincipal> obiektu i inicjuje jej wartości właściwości. <xref:System.Web.Security.RolePrincipal.ProviderName%2A> Właściwość jest ustawiona na wartość określoną w `providerName` parametru.  
  
 Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="providerName" /> odwołuje się do dostawcy ról, który nie istnieje w konfiguracji aplikacji.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">Nazwa dostawcy roli użytkownika.</param>
        <param name="identity">Tożsamość użytkownika, aby utworzyć <see cref="T:System.Web.Security.RolePrincipal" /> dla.</param>
        <param name="encryptedTicket">Ciąg, który zawiera informacje o rolach zaszyfrowane.</param>
        <summary>Tworzy wystąpienie <see cref="T:System.Web.Security.RolePrincipal" /> obiektu dla określonego <paramref name="identity" /> przy użyciu określonego <paramref name="providerName" /> i informacje o rolach z określonego <paramref name="encryptedTicket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie metody <xref:System.Web.Security.RolePrincipal.%23ctor%2A> konstruktora tworzy nową <xref:System.Web.Security.RolePrincipal> obiektu i inicjuje jej wartości właściwości. Informacje o rolach dla bieżącego użytkownika jest do odczytu z podane `encryptedTicket` i pamięci podręcznej z <xref:System.Web.Security.RolePrincipal> obiektu. <xref:System.Web.Security.RolePrincipal.ProviderName%2A> Właściwość jest ustawiona na wartość określoną w `providerName` parametru.  
  
 Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="encryptedTicket" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerName" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="providerName" /> odwołuje się do dostawcy ról, który nie istnieje w konfiguracji aplikacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachedListChanged">
      <MemberSignature Language="C#" Value="public bool CachedListChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CachedListChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedListChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CachedListChanged { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy lista nazw ról w pamięci podręcznej z <see cref="T:System.Web.Security.RolePrincipal" /> obiekt został zmodyfikowany.</summary>
        <value>
          <see langword="true" /> Jeśli lista nazw ról w pamięci podręcznej z <see cref="T:System.Web.Security.RolePrincipal" /> obiekt został zmodyfikowany, a w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> Właściwość, którą będzie zwracać `true` po pobraniu nazw ról z domyślnej roli <xref:System.Web.Security.Roles.Provider%2A> i dodanych do pamięci podręcznej przez <xref:System.Web.Security.RolePrincipal.GetRoles%2A> metody, lub gdy <xref:System.Web.Security.RolePrincipal.IsInRole%2A> wywołania metody <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> metody Domyślny dostawca ról, a następnie odbiera odpowiedź `true`, co w nazwie roli przekazany do <xref:System.Web.Security.RolePrincipal.IsInRole%2A> metody dodawana do pamięci podręcznej.  
  
 <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> Właściwość zostanie także zwraca wartość PRAWDA, jeśli <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> ustawiono `true` i <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> minęła, co w nowym <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> ustawiany.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono informacje buforowanie roli dla bieżącego użytkownika, jeśli włączono zarządzania rolami. Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę pliku cookie z nazwy roli pamięci podręcznej.</summary>
        <value>Ścieżka pliku cookie, których nazwy elementu role są buforowane. Wartość domyślna to /.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.CookiePath%2A> Właściwość zwraca wartość `cookiePath` atrybutu z pliku Web.config dla aplikacji ASP.NET. Aby uzyskać więcej informacji na temat ścieżek plików cookie, zobacz <xref:System.Web.HttpCookie.Path%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono informacje buforowanie roli dla bieżącego użytkownika, jeśli włączono zarządzania rolami. Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expired">
      <MemberSignature Language="C#" Value="public bool Expired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expired" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Expired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expired { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy plik cookie ról utracił ważność.</summary>
        <value>
          <see langword="true" /> Jeśli plik cookie ról wygasł; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.Expired%2A> Zwraca `Boolean` na podstawie wartość wskazującą, czy plik cookie ról wygasł <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> bieżąca data i godzina.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono informacje buforowanie roli dla bieżącego użytkownika, jeśli włączono zarządzania rolami. Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpireDate">
      <MemberSignature Language="C#" Value="public DateTime ExpireDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpireDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpireDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpireDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera datę i godzinę wygaśnięcia pliku cookie ról.</summary>
        <value>
          <see cref="T:System.DateTime" /> Wartość, gdy wygaśnie plik cookie ról.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono informacje buforowanie roli dla bieżącego użytkownika, jeśli włączono zarządzania rolami. Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Obiektu, aby wypełnić z danymi.</param>
        <param name="context">Miejsce docelowe dla serializacji.</param>
        <summary>Wypełnia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiektu z danymi, które jest wymagane do zserializowania obiektu docelowego przy użyciu określonego kontekstu przesyłania strumieniowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoles">
      <MemberSignature Language="C#" Value="public string[] GetRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetRoles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetRoles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę ról, które <see cref="T:System.Web.Security.RolePrincipal" /> jest elementem członkowskim.</summary>
        <returns>Lista ról który <see cref="T:System.Web.Security.RolePrincipal" /> jest elementem członkowskim.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> jest `true` i być buforowane nazw ról dla użytkownika reprezentowanego przez <xref:System.Web.Security.RolePrincipal>, a następnie <xref:System.Web.Security.RolePrincipal.GetRoles%2A> metoda zwróci listę nazw ról w pamięci podręcznej, które użytkownik jest członkiem. Jeśli nazwy roli nie być buforowane, a następnie <xref:System.Web.Security.RolePrincipal.GetRoles%2A> — metoda zwraca listę nazw ról, czy użytkownik jest członkiem roli domyślne <xref:System.Web.Security.Roles.Provider%2A>. Tylko nazwy roli dla bieżącego <xref:System.Web.Security.Roles.ApplicationName%2A> są zwracane. Aby określić, czy buforowane nazwy elementu role w <xref:System.Web.Security.RolePrincipal> obiekt wyboru <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia role, które zalogowany użytkownik jest członkiem.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/GetRolescs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/GetRolesvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Security.RolePrincipal.Identity" /> Jest właściwość <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tożsamość zabezpieczeń dla bieżącego żądania HTTP.</summary>
        <value>Tożsamość zabezpieczeń dla bieżącego żądania HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.Identity%2A> z <xref:System.Web.Security.RolePrincipal> obiektu jest włączone, gdy <xref:System.Web.Security.RolePrincipal> Konstruktor jest wywoływany.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono informacje buforowanie roli dla bieżącego użytkownika, jeśli włączono zarządzania rolami. Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Rola do wyszukania.</param>
        <summary>Pobiera wartość wskazującą, czy użytkownik jest reprezentowany przez <see cref="T:System.Web.Security.RolePrincipal" /> znajduje się w określonej roli.</summary>
        <returns>
          <see langword="true" /> Jeśli użytkownik reprezentowany przez <see cref="T:System.Web.Security.RolePrincipal" /> znajduje się w określonej roli; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.IsInRole%2A> najpierw sprawdza <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> właściwości w celu określenia, czy buforowanego lista nazw ról dla bieżącego użytkownika są dostępne. Jeśli <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> właściwość jest `true`, pamięci podręcznej listy jest sprawdzany pod kątem określonej roli. Jeśli <xref:System.Web.Security.RolePrincipal.IsInRole%2A> metoda znajdzie określoną rolę w pamięci podręcznej listy, zwraca `true`.  
  
 Jeśli <xref:System.Web.Security.RolePrincipal.IsInRole%2A> nie znalazł określonej roli, wywołuje <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> metody domyślnej <xref:System.Web.Security.Roles.Provider%2A> wystąpienie do ustalenia, czy nazwa użytkownika jest skojarzony z rolą ze źródła danych dla skonfigurowanego <xref:System.Web.Security.Roles.ApplicationName%2A> wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu sprawdza, czy zalogowany użytkownik jest w roli administratora przed zezwoleniem na użytkownika wyświetlić ról użytkownika.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/ViewRolescs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/ViewRolesvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see cref="P:System.Web.Security.RolePrincipal.Identity" /> Jest właściwość <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsRoleListCached">
      <MemberSignature Language="C#" Value="public bool IsRoleListCached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRoleListCached" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRoleListCached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRoleListCached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy lista ról użytkownika została buforowane w pliku cookie.</summary>
        <value>
          <see langword="true" /> Jeśli nazwy elementu role są buforowane w pliku cookie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `cacheRolesInCookie` atrybutu w pliku Web.config dla aplikacji jest ustawiony na `true`, a następnie listę nazw ról dla bieżącego użytkownika są zapisywane w pliku cookie po zaznaczeniu tej opcji członkostwa użytkownika w określonej roli. <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> Właściwość wskazuje, czy nazwy ról, zostały zapisane w pliku cookie. Należy zauważyć, że nawet jeśli `cacheRolesInCookie` Konfiguracja atrybutu może być `true`, <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> właściwości nie zwraca `true` aż po informacje o rolach został zapisany do pliku cookie. Jeśli sprawdza role są wykonywane dla użytkownika, <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> zwróci `false`.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono informacje buforowanie roli dla bieżącego użytkownika, jeśli włączono zarządzania rolami. Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssueDate">
      <MemberSignature Language="C#" Value="public DateTime IssueDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IssueDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IssueDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssueDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IssueDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera datę i godzinę ról plik cookie został wystawiony.</summary>
        <value>
          <see cref="T:System.DateTime" /> Wydanego przez plik cookie ról.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono informacje buforowanie roli dla bieżącego użytkownika, jeśli włączono zarządzania rolami. Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę dostawcy ról, która przechowuje i pobiera informacje o rolach użytkownika.</summary>
        <value>Nazwa dostawcy roli, który przechowuje oraz pobiera informacje o rolach użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.ProviderName%2A> Właściwość udostępnia Nazwa dostawcy roli, który zarządza informacjami rolę dla użytkownika reprezentowanego przez <xref:System.Web.Security.RolePrincipal> obiektu. Dzięki temu można uzyskać dostępu do wystąpienia określonego dostawcy ról dla użytkownika za pomocą <xref:System.Web.Security.Roles.Providers%2A> właściwość <xref:System.Web.Security.Roles> klasy niezależnie od tego, czy dostawca jest dostawcą domyślnym dla aplikacji. Na przykład może utworzyć metody pobierającej <xref:System.Web.Security.RolePrincipal> jako argument wejściowy i zwraca listę ról użytkownika reprezentowanego. Można upewnij się, że dostawca odpowiednią rolę służy do zwracania lista ról <xref:System.Web.Security.RolePrincipal> przez wywołanie metody <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> metody dostawcy roli z <xref:System.Web.Security.Roles.Providers%2A> kolekcji, która jest indeksowany przez <xref:System.Web.Security.RolePrincipal.ProviderName%2A> wartości właściwości.  
  
 Aby wypełnić <xref:System.Web.Security.RolePrincipal> obiekt dla każdego żądania, należy użyć <xref:System.Web.Security.RoleManagerModule.GetRoles> obsługi zdarzeń zdefiniowanych w pliku Global.asax aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oznacza listy buforowane roli jako posiadające został zmieniony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.SetDirty%2A> Metoda oznacza listy buforowane roli jako posiadające został zmieniony przez ustawienie <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> do `true` i <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> do `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Do wypełniania danych.</param>
        <param name="context">Miejsce docelowe dla serializacji.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest implementacja interfejsu jawnego członka. Można go używać tylko wtedy, gdy <xref:System.Web.Security.RolePrincipal> wystąpienia jest rzutowane na <xref:System.Runtime.Serialization.ISerializable> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToEncryptedTicket">
      <MemberSignature Language="C#" Value="public string ToEncryptedTicket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToEncryptedTicket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.ToEncryptedTicket" />
      <MemberSignature Language="VB.NET" Value="Public Function ToEncryptedTicket () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToEncryptedTicket();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca informacje o rolach w pamięci podręcznej z <see cref="T:System.Web.Security.RolePrincipal" /> obiekt szyfrowane na podstawie <see cref="P:System.Web.Security.Roles.CookieProtectionValue" />.</summary>
        <returns>Informacje o rolach w pamięci podręcznej z <see cref="T:System.Web.Security.RolePrincipal" /> obiekt szyfrowane na podstawie <see cref="P:System.Web.Security.Roles.CookieProtectionValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwrócona przez <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> — metoda przechowywanego w pliku cookie ról podczas <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> jest `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu zapisuje wyniki <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> metody ról w pliku cookie.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#6)]
 [!code-vb[System.Web.Security.RolePrincipal#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera numer wersji pliku cookie ról.</summary>
        <value>Numer wersji pliku cookie ról.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dołączając numeru wersji w pliku cookie ról, przyszłych wersjach programu ASP.NET można zmodyfikować format pliku cookie ról i używać <xref:System.Web.Security.RolePrincipal.Version%2A> właściwości, aby odróżnić różne formaty.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono informacje buforowanie roli dla bieżącego użytkownika, jeśli włączono zarządzania rolami. Aby uzyskać informacje na temat włączania zarządzania rolami, zobacz <xref:System.Web.Security.Roles> klasy.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>