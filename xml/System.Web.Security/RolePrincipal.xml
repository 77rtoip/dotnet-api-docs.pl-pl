<Type Name="RolePrincipal" FullName="System.Web.Security.RolePrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ef9ab8a0eb23a14a0adbb9ab3a573f624e6be6d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69135118" /></Metadata><TypeSignature Language="C#" Value="public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RolePrincipal extends System.Security.Claims.ClaimsPrincipal implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RolePrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class RolePrincipal&#xA;Inherits ClaimsPrincipal&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RolePrincipal : System::Security::Claims::ClaimsPrincipal, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type RolePrincipal = class&#xA;    inherit ClaimsPrincipal&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-2.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje informacje o zabezpieczeniach bieżącego żądania HTTP, w tym członkostwo w roli. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal> Obiekt<xref:System.Security.Principal.IPrincipal> implementuje interfejs i reprezentuje bieżący kontekst zabezpieczeń dla żądania HTTP.  
  
 Gdy zarządzanie rolami jest włączone (zobacz <xref:System.Web.Security.Roles>) <xref:System.Web.Security.RoleManagerModule> , <xref:System.Web.HttpContext.User%2A> przypisuje <xref:System.Web.Security.RolePrincipal> obiekt do właściwości <xref:System.Web.HttpContext.Current%2A> <xref:System.Web.HttpContext>.  
  
 <xref:System.Web.Security.RolePrincipal> Klasa uwidacznia tożsamość zabezpieczeń dla bieżącego żądania HTTP, a ponadto sprawdza członkostwo w roli. Jeśli <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> ma `true`wartość <xref:System.Web.Security.Roles.Provider%2A>, <xref:System.Web.Security.RolePrincipal> obiekt zarządza buforowaną listą ról i sprawdza członkostwo w rolach dla bieżącego użytkownika na liście w pamięci podręcznej, a następnie rolę. Jeśli <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> jest `false` ,<xref:System.Web.Security.RolePrincipal> obiekt zawsze wyszukuje członkostwo ról przy użyciu dostawcy roli.  
  
 Obiekt szyfruje i odszyfrowuje informacje o roli buforowane w pliku cookie identyfikowanym <xref:System.Web.Security.Roles.CookieName%2A> przez program na podstawie <xref:System.Web.Security.Roles.CookieProtectionValue%2A>. <xref:System.Web.Security.RolePrincipal>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Web.Security.RolePrincipal" /> klasy.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Tożsamość użytkownika, dla którego <see cref="T:System.Web.Security.RolePrincipal" /> ma zostać utworzona.</param>
        <summary>Tworzy wystąpienie obiektu <see cref="T:System.Web.Security.RolePrincipal" /> dla określonego <paramref name="identity" />elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To Przeciążenie <xref:System.Web.Security.RolePrincipal.%23ctor%2A> konstruktora tworzy nowy <xref:System.Web.Security.RolePrincipal> obiekt i inicjuje jego wartości właściwości. Buforowane informacje o roli nie są odczytywane z pliku cookie identyfikowanego przez <xref:System.Web.Security.Roles.CookieName%2A> właściwość. Właściwość jest ustawiona <xref:System.Configuration.Provider.ProviderBase.Name%2A> na wartość domyślnego dostawcy roli. <xref:System.Web.Security.RolePrincipal.ProviderName%2A>  
  
 Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nowy <xref:System.Web.Security.RolePrincipal> obiekt. Jeśli <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> <xref:System.Web.Security.RolePrincipal> <xref:System.Web.Security.Roles.CookieName%2A> jest `true`, w przykładzie tworzone są informacje o pliku cookie z pliku cookie identyfikowanego przez właściwość.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RolePrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Obiekt do wypełnienia danymi.</param>
        <param name="context">Miejsce docelowe dla serializacji.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.Security.RolePrincipal" /> klasy przy użyciu informacji zawartych w określonym <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiekcie i przy użyciu określonego kontekstu przesyłania strumieniowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">Tożsamość użytkownika, dla którego <see cref="T:System.Web.Security.RolePrincipal" /> ma zostać utworzona.</param>
        <param name="encryptedTicket">Ciąg zawierający informacje o zaszyfrowanych rolach.</param>
        <summary>Tworzy wystąpienie <paramref name="identity" /> obiektu dla określonego z informacjami o roli z określonego <paramref name="encryptedTicket" />. <see cref="T:System.Web.Security.RolePrincipal" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 To Przeciążenie <xref:System.Web.Security.RolePrincipal.%23ctor%2A> konstruktora tworzy nowy <xref:System.Web.Security.RolePrincipal> obiekt i inicjuje jego wartości właściwości. Informacje o roli bieżącego użytkownika są odczytywane z podanego `encryptedTicket` i buforowanego <xref:System.Web.Security.RolePrincipal> przy użyciu obiektu. Właściwość jest ustawiona <xref:System.Configuration.Provider.ProviderBase.Name%2A> na wartość domyślnego dostawcy roli. <xref:System.Web.Security.RolePrincipal.ProviderName%2A>  
  
 Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nowy <xref:System.Web.Security.RolePrincipal> obiekt. Jeśli <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> <xref:System.Web.Security.RolePrincipal> <xref:System.Web.Security.Roles.CookieName%2A> jest `true`, w przykładzie tworzone są informacje o pliku cookie z pliku cookie identyfikowanego przez właściwość.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="encryptedTicket" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="providerName">Nazwa dostawcy roli dla użytkownika.</param>
        <param name="identity">Tożsamość użytkownika, dla którego <see cref="T:System.Web.Security.RolePrincipal" /> ma zostać utworzona.</param>
        <summary>Tworzy wystąpienie <paramref name="identity" /> obiektu dla określonego przy użyciu określonego <paramref name="providerName" />. <see cref="T:System.Web.Security.RolePrincipal" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To Przeciążenie <xref:System.Web.Security.RolePrincipal.%23ctor%2A> konstruktora tworzy nowy <xref:System.Web.Security.RolePrincipal> obiekt i inicjuje jego wartości właściwości. Właściwość jest ustawiona na wartość określoną `providerName` w parametrze. <xref:System.Web.Security.RolePrincipal.ProviderName%2A>  
  
 Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="providerName" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="providerName" />odwołuje się do dostawcy roli, który nie istnieje w konfiguracji aplikacji.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">Nazwa dostawcy roli dla użytkownika.</param>
        <param name="identity">Tożsamość użytkownika, dla którego <see cref="T:System.Web.Security.RolePrincipal" /> ma zostać utworzona.</param>
        <param name="encryptedTicket">Ciąg zawierający informacje o zaszyfrowanych rolach.</param>
        <summary>Tworzy wystąpienie <paramref name="identity" /> <paramref name="providerName" /> obiektu dla określonego użycia określonego i informacji o roli z określonego <paramref name="encryptedTicket" />. <see cref="T:System.Web.Security.RolePrincipal" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 To Przeciążenie <xref:System.Web.Security.RolePrincipal.%23ctor%2A> konstruktora tworzy nowy <xref:System.Web.Security.RolePrincipal> obiekt i inicjuje jego wartości właściwości. Informacje o roli bieżącego użytkownika są odczytywane z podanego `encryptedTicket` i buforowanego <xref:System.Web.Security.RolePrincipal> przy użyciu obiektu. Właściwość jest ustawiona na wartość określoną `providerName` w parametrze. <xref:System.Web.Security.RolePrincipal.ProviderName%2A>  
  
 Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="encryptedTicket" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="providerName" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="providerName" />odwołuje się do dostawcy roli, który nie istnieje w konfiguracji aplikacji.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CachedListChanged">
      <MemberSignature Language="C#" Value="public bool CachedListChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CachedListChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedListChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CachedListChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedListChanged : bool" Usage="System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy lista nazw ról buforowana z <see cref="T:System.Web.Security.RolePrincipal" /> obiektem została zmodyfikowana.</summary>
        <value><see langword="true" />Jeśli lista nazw ról buforowana z <see cref="T:System.Web.Security.RolePrincipal" /> obiektem została zmodyfikowana; w przeciwnym razie,. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.GetRoles%2A> <xref:System.Web.Security.Roles.Provider%2A> <xref:System.Web.Security.RolePrincipal.IsInRole%2A> <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> Właściwość zostanie zwrócona `true` po pobraniu nazw ról z roli domyślnej i dodaniu ich do pamięci podręcznej przez metodę lub gdy metoda wywołuje metodę <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> domyślny dostawca roli `true`, a następnie otrzymuje odpowiedź, co spowoduje, że nazwa roli została przeniesiona <xref:System.Web.Security.RolePrincipal.IsInRole%2A> do metody dodawanej do pamięci podręcznej.  
  
 `true` <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> Właściwość zwróci również wartość true, jeśli jest ustawiona na, a została przeniesiona, co spowodowało powstanie nowego zestawu. <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>  
  
   
  
## Examples  
 Poniższy przykład wyświetla informacje o buforowaniu roli dla bieżącego użytkownika, jeśli Zarządzanie rolami jest włączone. Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string" Usage="System.Web.Security.RolePrincipal.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę do pliku cookie nazw ról w pamięci podręcznej.</summary>
        <value>Ścieżka pliku cookie, w którym są buforowane nazwy ról. Wartość domyślna to/.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zwraca wartość `cookiePath` atrybutu z pliku Web. config dla aplikacji ASP.NET. <xref:System.Web.Security.RolePrincipal.CookiePath%2A> Aby uzyskać więcej informacji na temat ścieżek plików <xref:System.Web.HttpCookie.Path%2A>cookie, zobacz.  
  
   
  
## Examples  
 Poniższy przykład wyświetla informacje o buforowaniu roli dla bieżącego użytkownika, jeśli Zarządzanie rolami jest włączone. Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Expired">
      <MemberSignature Language="C#" Value="public bool Expired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expired" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Expired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Expired : bool" Usage="System.Web.Security.RolePrincipal.Expired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy plik cookie ról wygasł.</summary>
        <value><see langword="true" />Jeśli plik cookie ról wygasł; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zwraca wartość wskazującą, czy plik cookie ról wygasł na podstawie <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> bieżącej daty i godziny. `Boolean` <xref:System.Web.Security.RolePrincipal.Expired%2A>  
  
   
  
## Examples  
 Poniższy przykład wyświetla informacje o buforowaniu roli dla bieżącego użytkownika, jeśli Zarządzanie rolami jest włączone. Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExpireDate">
      <MemberSignature Language="C#" Value="public DateTime ExpireDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpireDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpireDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpireDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpireDate : DateTime" Usage="System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera datę i godzinę wygaśnięcia pliku cookie z rolami.</summary>
        <value>Wartość <see cref="T:System.DateTime" /> , gdy plik cookie ról wygaśnie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład wyświetla informacje o buforowaniu roli dla bieżącego użytkownika, jeśli Zarządzanie rolami jest włączone. Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="rolePrincipal.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Obiekt do wypełnienia danymi.</param>
        <param name="context">Miejsce docelowe dla serializacji.</param>
        <summary><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Wypełnia obiekt danymi, które są wymagane w celu serializacji obiektu docelowego przy użyciu określonego kontekstu przesyłania strumieniowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoles">
      <MemberSignature Language="C#" Value="public string[] GetRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetRoles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetRoles();" />
      <MemberSignature Language="F#" Value="member this.GetRoles : unit -&gt; string[]" Usage="rolePrincipal.GetRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę ról, których <see cref="T:System.Web.Security.RolePrincipal" /> członkiem jest element.</summary>
        <returns>Lista ról, których <see cref="T:System.Web.Security.RolePrincipal" /> członkiem jest element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> <xref:System.Web.Security.RolePrincipal> <xref:System.Web.Security.RolePrincipal.GetRoles%2A> jest `true` i nazwy ról zostały zbuforowane dla użytkownika reprezentowanego przez, metoda zwróci listę nazw ról w pamięci podręcznej, do której należy użytkownik. Jeśli nazwy ról nie zostały zapisane w pamięci podręcznej, <xref:System.Web.Security.RolePrincipal.GetRoles%2A> Metoda zwraca listę nazw ról, których użytkownik jest członkiem z roli <xref:System.Web.Security.Roles.Provider%2A>domyślnej. Zwracane są tylko nazwy ról dla <xref:System.Web.Security.Roles.ApplicationName%2A> bieżącego. Aby określić, czy nazwy ról zostały zapisane w pamięci <xref:System.Web.Security.RolePrincipal> podręcznej w <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> obiekcie, należy sprawdzić właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla role, których członkiem jest zalogowany użytkownik.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/GetRolescs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/GetRolesvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see cref="P:System.Web.Security.RolePrincipal.Identity" /> Właściwość jest<see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Web.Security.RolePrincipal.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tożsamość zabezpieczeń dla bieżącego żądania HTTP.</summary>
        <value>Tożsamość zabezpieczeń dla bieżącego żądania HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt jest ustawiany, <xref:System.Web.Security.RolePrincipal.Identity%2A> gdy Konstruktorjestwywoływany.<xref:System.Web.Security.RolePrincipal> <xref:System.Web.Security.RolePrincipal>  
  
   
  
## Examples  
 Poniższy przykład wyświetla informacje o buforowaniu roli dla bieżącego użytkownika, jeśli Zarządzanie rolami jest włączone. Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : string -&gt; bool" Usage="rolePrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Rola do wyszukania.</param>
        <summary>Pobiera wartość wskazującą, czy użytkownik reprezentowany przez <see cref="T:System.Web.Security.RolePrincipal" /> program znajduje się w określonej roli.</summary>
        <returns><see langword="true" />Jeśli użytkownik reprezentowany przez <see cref="T:System.Web.Security.RolePrincipal" /> program <see langword="false" />znajduje się w określonej roli; w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.IsInRole%2A>najpierw sprawdza Właściwość <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> , aby określić, czy jest dostępna buforowana lista nazw ról dla bieżącego użytkownika. Jeśli właściwość ma `true`wartość, jest sprawdzana Lista pamięci podręcznej dla określonej roli. <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> Jeśli metoda odnajdzie określoną rolę na liście pamięci podręcznej, zwraca wartość `true`. <xref:System.Web.Security.RolePrincipal.IsInRole%2A>  
  
 Jeśli <xref:System.Web.Security.RolePrincipal.IsInRole%2A> program nie znajdzie określonej roli, <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> wywołuje metodę wystąpienia domyślnego <xref:System.Web.Security.Roles.Provider%2A> , aby określić, czy nazwa użytkownika jest skojarzona z rolą ze źródła danych dla skonfigurowanej <xref:System.Web.Security.Roles.ApplicationName%2A> wartości.  
  
   
  
## Examples  
 Poniższy przykład kodu sprawdza, czy zalogowany użytkownik należy do roli Administratorzy przed zezwoleniem użytkownikom na wyświetlanie ról użytkownika.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/ViewRolescs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/ViewRolesvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see cref="P:System.Web.Security.RolePrincipal.Identity" /> Właściwość jest<see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsRoleListCached">
      <MemberSignature Language="C#" Value="public bool IsRoleListCached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRoleListCached" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRoleListCached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRoleListCached { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRoleListCached : bool" Usage="System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy lista ról użytkownika została zbuforowana w pliku cookie.</summary>
        <value><see langword="true" />Jeśli nazwy ról są buforowane w pliku cookie; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli atrybut w pliku Web. config dla aplikacji jest ustawiony na `true`, wówczas lista nazw ról bieżącego użytkownika jest zapisywana w pliku cookie, gdy zostanie sprawdzona członkostwo użytkownika w określonej roli. `cacheRolesInCookie` Właściwość <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> wskazuje, czy nazwy ról zostały zapisaną w pliku cookie. Należy pamiętać, że mimo że `cacheRolesInCookie` atrybut konfiguracji może mieć `true`wartość, <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> właściwość nie zwraca `true` do momentu zapisania informacji o roli w pliku cookie. Jeśli nie są wykonywane żadne operacje sprawdzania roli użytkownika, <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> program zwróci `false`wartość.  
  
   
  
## Examples  
 Poniższy przykład wyświetla informacje o buforowaniu roli dla bieżącego użytkownika, jeśli Zarządzanie rolami jest włączone. Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IssueDate">
      <MemberSignature Language="C#" Value="public DateTime IssueDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IssueDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IssueDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssueDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IssueDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.IssueDate : DateTime" Usage="System.Web.Security.RolePrincipal.IssueDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera datę i godzinę wystawienia pliku cookie dla ról.</summary>
        <value><see cref="T:System.DateTime" /> Plik cookie dotyczący ról został wystawiony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład wyświetla informacje o buforowaniu roli dla bieżącego użytkownika, jeśli Zarządzanie rolami jest włączone. Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string" Usage="System.Web.Security.RolePrincipal.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę dostawcy ról, który przechowuje i pobiera informacje o roli dla użytkownika.</summary>
        <value>Nazwa dostawcy roli, który przechowuje i pobiera informacje o roli dla użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość uwidacznia nazwę dostawcy ról, który zarządza informacjami o roli dla użytkownika reprezentowanego <xref:System.Web.Security.RolePrincipal> przez obiekt. <xref:System.Web.Security.RolePrincipal.ProviderName%2A> Dzięki temu można uzyskać dostęp do konkretnego wystąpienia dostawcy ról dla użytkownika przy użyciu <xref:System.Web.Security.Roles.Providers%2A> właściwości <xref:System.Web.Security.Roles> klasy niezależnie od tego, czy dostawca jest dostawcą domyślnym aplikacji. Na przykład możesz utworzyć metodę, która przyjmuje <xref:System.Web.Security.RolePrincipal> jako dane wejściowe i zwraca listę ról dla reprezentowanego użytkownika. Można upewnić się, że odpowiedni Dostawca roli jest <xref:System.Web.Security.RolePrincipal> używany do zwracania listy ról dla obiektu przez <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> wywołanie metody dostawcy roli z <xref:System.Web.Security.Roles.Providers%2A> kolekcji, która jest indeksowana przez <xref:System.Web.Security.RolePrincipal.ProviderName%2A> wartość właściwości.  
  
 Aby wypełnić <xref:System.Web.Security.RolePrincipal> obiekt dla każdego żądania, należy <xref:System.Web.Security.RoleManagerModule.GetRoles> użyć obsługi zdarzeń zdefiniowanej w pliku Global. asax dla aplikacji.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberSignature Language="F#" Value="member this.SetDirty : unit -&gt; unit" Usage="rolePrincipal.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oznacza buforowaną listę ról, która została zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `true` <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> `false` <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> Metoda oznacza listę roli pamięci podręcznej, która została zmieniona przez ustawienie na i. <xref:System.Web.Security.RolePrincipal.SetDirty%2A>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Do wypełnienia danymi.</param>
        <param name="context">Miejsce docelowe dla serializacji.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest jawną implementacją składowej interfejsu. Może być używana tylko wtedy, <xref:System.Web.Security.RolePrincipal> gdy wystąpienie jest rzutowane <xref:System.Runtime.Serialization.ISerializable> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToEncryptedTicket">
      <MemberSignature Language="C#" Value="public string ToEncryptedTicket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToEncryptedTicket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.ToEncryptedTicket" />
      <MemberSignature Language="VB.NET" Value="Public Function ToEncryptedTicket () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToEncryptedTicket();" />
      <MemberSignature Language="F#" Value="member this.ToEncryptedTicket : unit -&gt; string" Usage="rolePrincipal.ToEncryptedTicket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca informacje o roli buforowane z <see cref="T:System.Web.Security.RolePrincipal" /> obiektem zaszyfrowanym na podstawie. <see cref="P:System.Web.Security.Roles.CookieProtectionValue" /></summary>
        <returns>Informacje o roli buforowane z <see cref="T:System.Web.Security.RolePrincipal" /> obiektem zaszyfrowanym na podstawie. <see cref="P:System.Web.Security.Roles.CookieProtectionValue" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana przez <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> metodę jest przechowywana w pliku cookie role, gdy <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> jest `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu zapisuje wyniki <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> metody do pliku cookie Roles.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#6)]
 [!code-vb[System.Web.Security.RolePrincipal#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Web.Security.RolePrincipal.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera numer wersji pliku cookie ról.</summary>
        <value>Numer wersji pliku cookie ról.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W celu uwzględnienia numeru wersji w pliku cookie w przyszłych wersjach ASP.NET można zmodyfikować format pliku cookie ról i użyć <xref:System.Web.Security.RolePrincipal.Version%2A> właściwości w celu rozróżnienia między różnymi formatami.  
  
   
  
## Examples  
 Poniższy przykład wyświetla informacje o buforowaniu roli dla bieżącego użytkownika, jeśli Zarządzanie rolami jest włączone. Aby uzyskać informacje na temat włączania zarządzania rolami <xref:System.Web.Security.Roles> , zobacz Klasa.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Zarządzanie autoryzacją przy użyciu ról ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
