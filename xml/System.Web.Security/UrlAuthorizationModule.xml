<Type Name="UrlAuthorizationModule" FullName="System.Web.Security.UrlAuthorizationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="be5d071b917e424696668088467a08d983ec9ba0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30584194" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UrlAuthorizationModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UrlAuthorizationModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.UrlAuthorizationModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UrlAuthorizationModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlAuthorizationModule sealed : System::Web::IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Sprawdza, czy użytkownik ma uprawnienia dostępu do żądanego adresu URL. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.UrlAuthorizationModule> Określa, czy bieżący użytkownik jest zezwala na uzyskanie dostępu do żądanego adresu URL, w oparciu o użytkownika <xref:System.Security.Principal.IIdentity.Name%2A> lub listę ról, których użytkownik jest członkiem. Informacje, jak nazwa użytkownika jest określana, zobacz [Uwierzytelnianie ASP.NET](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1). Informacje o sposobie zarządzania ról użytkowników, zobacz [Zarządzanie rolami autoryzacji przy użyciu](http://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195).  
  
 Autoryzacja użytkownika lub roli odbywa się za pomocą elementu konfiguracji. Można zezwolić lub odmówić użytkownika lub roli przy użyciu `allow` lub `deny` podelementów, odpowiednio. `allow` i `deny` podelementy interpretowania w kolejności ich występowania w konfiguracji. Gdy element określa, czy dostęp jest dozwolony lub odrzucany, <xref:System.Web.Security.UrlAuthorizationModule> zakończeniu wyboru autoryzacji. Na przykład poniższa sekcja z pliku Web.config wymaga od użytkowników zalogowania się (za odmawianie użytkowników anonimowych), a następnie umożliwia tylko użytkownicy w roli administratorów dostępu. Użytkownicy nie znajduje się w roli administratora nie są dozwolone.  
  
```  
<authorization>  
  <deny users="?" />  
  <allow roles="Administrators" />  
  <deny users="*" />  
</authorization>  
```  
  
 Użytkownik lub rola musi w szczególności odmowa odmowy użytkownika lub uprawnienia roli do adresu URL. Oznacza to jeśli nie podał poprzedni przykład `<deny users="*" />` elementu, a następnie wszystkich uwierzytelnionych użytkowników będzie mieć zostały zezwolenie na dostęp do żądanego adresu URL, niezależnie od tego, jaką rolę były członkami.  
  
   
  
## Examples  
 Poniższy przykład kodu udziela dostępu Kim i członkowie roli Administratorzy odrzuca go Jan i wszyscy użytkownicy anonimowi.  
  
```  
<authorization>  
  <allow users="Kim"/>  
  <allow roles="Admins"/>  
  <deny users="John"/>  
  <deny users="?"/>  
</authorization>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlAuthorizationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlAuthorizationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie <see cref="T:System.Web.Security.UrlAuthorizationModule" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor nie jest przeznaczony do wywoływania z kodu aplikacji.  
  
 ASP.NET wywołuje ten konstruktor do tworzenia wystąpienia <xref:System.Web.Security.UrlAuthorizationModule> klasy. Po wywołaniu metody konstruktora, wywołuje <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> metodę, aby zainicjować nowe <xref:System.Web.Security.UrlAuthorizationModule> obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUrlAccessForPrincipal">
      <MemberSignature Language="C#" Value="public static bool CheckUrlAccessForPrincipal (string virtualPath, System.Security.Principal.IPrincipal user, string verb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CheckUrlAccessForPrincipal(string virtualPath, class System.Security.Principal.IPrincipal user, string verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(System.String,System.Security.Principal.IPrincipal,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CheckUrlAccessForPrincipal (virtualPath As String, user As IPrincipal, verb As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CheckUrlAccessForPrincipal(System::String ^ virtualPath, System::Security::Principal::IPrincipal ^ user, System::String ^ verb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="user" Type="System.Security.Principal.IPrincipal" />
        <Parameter Name="verb" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka wirtualna do pliku.</param>
        <param name="user">
          <see cref="T:System.Security.Principal.IPrincipal" /> Obiekt reprezentujący bieżącego użytkownika.</param>
        <param name="verb">Zlecenie HTTP użyte do wysłania żądania.</param>
        <summary>Określa, czy użytkownik ma dostęp do żądanego pliku.</summary>
        <returns>
          <see langword="true" /> Jeśli bieżący użytkownik może uzyskać dostępu do pliku; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> Metoda sprawdza, czy bieżący użytkownik ma dostęp do żądanego pliku w pliku Web.config aplikacji.  
  
 Jeśli zlecenie HTTP użyte do wysłania żądania jest `GET`, `POST`, lub `HEAD`, <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> metoda sprawdza, czy dostęp do odczytu do pliku. Użycie innych zlecenie <xref:System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal%2A> sprawdza, czy dostęp do odczytu i zapisu do pliku.  
  
 Aby uzyskać więcej informacji oraz przykładowy plik Web.config, zobacz <xref:System.Web.Security.UrlAuthorizationModule> dokumentacji klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> jest <see langword="null" />.  
  
 \- lub -  
  
 <paramref name="user" /> jest <see langword="null" />.  
  
 \- lub -  
  
 <paramref name="verb" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> znajduje się poza ścieżki katalogu głównego aplikacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby, innego niż pamięci używanej przez <see cref="T:System.Web.Security.UrlAuthorizationModule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest przeznaczona do wywoływania z kodu aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.UrlAuthorizationModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">Bieżący <see cref="T:System.Web.HttpApplication" /> wystąpienia.</param>
        <summary>Inicjuje <see cref="T:System.Web.Security.UrlAuthorizationModule" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest przeznaczona do wywoływania z kodu aplikacji.  
  
 <xref:System.Web.Security.UrlAuthorizationModule.Init%2A> Metoda gwarantuje, że <xref:System.Web.Security.UrlAuthorizationModule> znajduje się w przetwarzania <xref:System.Web.HttpApplication.AuthorizeRequest> zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>