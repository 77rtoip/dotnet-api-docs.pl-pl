<Type Name="AuthorizationStoreRoleProvider" FullName="System.Web.Security.AuthorizationStoreRoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7664a660b7c321799e51d290e875ffa92f1d34c7" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52244879" /></Metadata><TypeSignature Language="C#" Value="public class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationStoreRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AuthorizationStoreRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationStoreRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationStoreRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type AuthorizationStoreRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zarządza magazynem danych członkostwa roli dla aplikacji ASP.NET w magazynie zasad Menedżera autoryzacji, albo w pliku XML, w usłudze Active Directory lub na serwerze tryb aplikacji w usłudze Active Directory.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest używana przez <xref:System.Web.Security.Roles> i <xref:System.Web.Security.RolePrincipal> klasy zapewniające usługi Zarządzanie rolami dla aplikacji ASP.NET z zastosowaniem magazyn Menedżera autoryzacji. Zarządzanie rolami można użyć, aby określić różne poziomy autoryzacji dla aplikacji. Menedżer autoryzacji jest możliwy za pomocą programu Microsoft Management Console.  
  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider> Obiekt współpracuje z uwierzytelniania Windows i tryby uwierzytelniania formularzy.  
  
 Można skonfigurować <xref:System.Web.Security.AuthorizationStoreRoleProvider> obiekt ma być używany z lokalnego pliku XML lub serwera usługi Active Directory lub trybu aplikacji usługi Active Directory (ADAM). Korzystając z pliku lokalnego, ciąg połączenia powinien wyglądać podobnie jak w poniższym przykładzie.  
  
```  
msxml://<path to xml file>  
```  
  
 Jeśli pliku lokalnego jest przechowywany w drzewie katalogów aplikacji sieci Web platformy ASP.NET, możesz użyć tyldy ("~") znaków w celu wskazania katalogu głównego. Na przykład aby wskazać, że plik lokalny jest przechowywany w katalogu danych aplikacji sieci Web, możesz użyć parametry połączenia podobne do poniższego przykładu.  
  
 `msxml://~\App_Data\datafilename.xml`  
  
> [!IMPORTANT]
>  Zapisywanie pliku danych XML w sieci Web katalogu aplikacji jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie usługi IIS będzie służyć plików danych XML w sieci Web. Aby poprawić bezpieczeństwo, korzystając z lokalnego pliku danych w aplikacji ASP.NET, należy przechowywać w pliku danych w `App_Data` katalogu. Pliki przechowywane w `App_Data` katalogu nie będzie udostępniania w sieci Web.  
  
 Korzystania z serwera usługi Active Directory lub ADAM magazynu zasad parametry połączenia powinny być podobne do poniższego przykładu.  
  
 `msldap://myserver/CN=MyAzManStore,OU=MyOU,DC=MyDomain,DC=MyDC,DC=Com`  
  
 Wyjątki są wymienione w dokumentacji dotyczącej <xref:System.Web.Security.AuthorizationStoreRoleProvider> metod obiektu są wyjątki, które są wywoływane przez <xref:System.Web.Security.AuthorizationStoreRoleProvider> obiektu. Ponieważ dostawca zależy od podstawowego środowiska uruchomieniowego Menedżera uwierzytelniania <xref:System.Runtime.InteropServices.COMException> wyjątków może być zgłaszany w każdym przypadku, gdy <xref:System.Web.Security.AuthorizationStoreRoleProvider> obiektu przekazuje wywołanie metody do środowiska uruchomieniowego Menedżera uwierzytelniania.  
  
> [!IMPORTANT]
>  <xref:System.Web.Security.AuthorizationStoreRoleProvider> Obiekt ma następujące wymagania dotyczące uruchamiania w środowisku częściowego zaufania:  
>   
>  Podczas używania magazynu zasad opartych na plikach, w aplikacji ASP.NET uprawnienia we/wy pliku dostarczane przez bieżącego poziomu zaufania określić czy odczytać i akcjami zapisu są dozwolone przez dostawcę. Aplikacja ASP.NET musi mieć uprawnienia odczytu do pliku można odczytać danych z magazynu zasad, a musi mieć uprawnienia zapisu, aby zapisać nowe informacje lub zaktualizowanie istniejących informacji w magazynie zasad. Domyślny plik zasad zaufania średni daje aplikacji ASP.NET uprawnienia odczytu/zapisu w katalogu aplikacji. Domyślny plik zasad zaufania niska uzyskuje tylko aplikacji ASP.NET uprawnienia do odczytu w jego katalogu aplikacji. Ponadto tożsamość procesu, w ramach której działa aplikacja ASP.NET musi mieć uprawnienia systemu plików do odczytu i/lub zapisać plik zasad.  
>   
>  Podczas korzystania z serwera usługi Active Directory lub ADAM, aplikacja ASP.NET wymaga uprawnień kodu niezarządzanego, ponieważ wewnętrzny <xref:System.Web.Security.AuthorizationStoreRoleProvider> kod obiektowy korzysta z modelu COM.  
>   
>  Korzystając z <xref:System.Web.Security.AuthorizationStoreRoleProvider> obiektów poza ASP.NET, kod wywołujący potrzebuje uprawnień kodu niezarządzanego.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje skonfigurowany do używania pliku Web.config <xref:System.Web.Security.AuthorizationStoreRoleProvider> do zarządzania rolami.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="AuthorizationServices" connectionString="msxml://~\App_Data\SampleStore.xml" />  
  </connectionStrings>  
  
  <system.web>  
  
    <authentication mode="Windows" />  
    <identity impersonate="true" />  
  
    <roleManager defaultProvider="AuthorizationStoreRoleProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="false"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <clear />  
          <add  
            name="AuthorizationStoreRoleProvider"  
            type="System.Web.Security.AuthorizationStoreRoleProvider"  
            connectionStringName="AuthorizationServices"  
            applicationName="SampleApplication"   
            cacheRefreshInterval="60"  
            scopeName="" />  
      </providers>  
    </roleManager>  
  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationStoreRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationStoreRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.%23ctor%2A> Konstruktor jest wywoływany przez platformę ASP.NET w celu utworzenia wystąpienia <xref:System.Web.Security.AuthorizationStoreRoleProvider> klasy określonych w konfiguracji dla aplikacji. Ten konstruktor nie jest przeznaczony do użycia w kodzie.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tablica ciągu, nazw użytkowników, które mają zostać dodane do określonych ról.</param>
        <param name="roleNames">Tablica ciągu, nazw ról, które można dodać nazwy określonego użytkownika.</param>
        <summary>Dodaje określone nazwy użytkownika do każdej z określonych ról.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy, aby skojarzyć co najmniej jednego użytkownika z co najmniej jedną rolę w magazynie danych Menedżera autoryzacji, które są określone w pliku konfiguracji aplikacji ASP.NET (Web.config). Ta metoda jest wywoływana <xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=nameWithType>, <xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=nameWithType>, <xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=nameWithType>, i <xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=nameWithType> metody <xref:System.Web.Security.Roles> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu dodaje co najmniej jednego użytkownika do roli lub usuwa użytkownika z roli. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jednym z określone nazwy użytkownika jest <see langword="null" />.  
  
—lub— 
Jedną z nazw określonej roli jest <see langword="null" />.  
  
—lub— 
 <paramref name="usernames" /> jest <see langword="null" />.  
  
—lub— 
 <paramref name="roleNames" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Jedną z nazw określony użytkownik jest ciągiem pustym lub zawiera przecinek (,).  
  
—lub— 
Jedną z nazw określonej roli jest ciągiem pustym lub zawiera przecinek (,).  
  
—lub— 
 <paramref name="usernames" /> zawiera zduplikowany element.  
  
—lub— 
 <paramref name="roleNames" /> zawiera zduplikowany element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Skonfigurowanych <see langword="applicationName" /> nie został znaleziony.  
  
—lub— 
Skonfigurowanych <see langword="scopeName" /> nie został znaleziony.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowany na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> Atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aplikacji magazynu autoryzacji, dla których mają być przechowywane i pobierane informacje.</summary>
        <value>Nazwa autoryzacji przechowywania aplikacji, dla których mają być przechowywane i pobierane informacje. Wartość domyślna to <see cref="P:System.Web.HttpRequest.ApplicationPath" /> wartości właściwości dla bieżącego <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> Jest używany przez <xref:System.Web.Security.AuthorizationStoreRoleProvider> do skojarzenia z użytkownikami i rolami za pomocą różnych Menedżera autoryzacji aplikacji, dzięki czemu wiele ASP.NET aplikacji przy użyciu tych samych zasad Menedżera autoryzacji magazynu do przechowywania informacji o roli bez przekroczone konfliktów między nazwami zduplikowane roli. Alternatywnie wiele aplikacji programu ASP.NET można użyć tego samego magazynu zasad, określając tę samą wartość w <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> właściwości. <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> Właściwość można ustawić programowo lub ją można ustawić deklaratywnie w pliku Web.config aplikacji przy użyciu `applicationName` atrybutu.  
  
 Jeśli nie określono wartości dla `applicationName` atrybutu w pliku Web.config, a następnie <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> wartości właściwości dla bieżącego <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> obiekt jest używany.  
  
> [!NOTE]
>  Nazwy aplikacji Menedżer autoryzacji nie może zawierać znaku "/", który znajduje się w <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> właściwości. W rezultacie, wartość domyślna <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> właściwości nie można użyć jako nazwa aplikacji Menedżera autoryzacji, a w pliku Web.config aplikacji, należy zawsze określić `applicationName` atrybutu w `provider` element, aby skonfigurować Twoje <xref:System.Web.Security.AuthorizationStoreRoleProvider> wystąpienia.  
  
> [!CAUTION]
>  Ponieważ wystąpienia dostawcy roli jednej domyślnej jest używana dla wszystkich żądań obsługiwanych przez <xref:System.Web.HttpApplication> obiektu, może mieć wiele żądań wykonywane jednocześnie, a próba skonfigurowania <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> wartości właściwości. <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> Właściwość nie jest bezpieczne dla wielu zapisów i zmiany dla wątków <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> wartość właściwości może spowodować nieoczekiwane zachowanie, gdy wielu użytkowników aplikacji. Zaleca się unikać pisania kodu, który umożliwia użytkownikom ustawienie <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> właściwość chyba, że należy. Przykład aplikacji w przypadku, gdy ustawienie <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> właściwości mogą być wymagane jest administracyjne aplikacji, która zarządza danymi roli dla wielu aplikacji. Taką aplikację powinna być aplikacją pojedynczego użytkownika i nie jest aplikacją sieci Web.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano element `system.web` sekcja pliku Web.config dla aplikacji ASP.NET. Określa aplikacji <xref:System.Web.Security.AuthorizationStoreRoleProvider> wystąpienie i konfiguruje <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> właściwość `MyApplication`.  
  
```  
<roleManager defaultProvider="AuthorizationStoreProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.AuthorizationStoreRoleProvider"  
      connectionStringName="AuthorizationStoreServices"   
      scopeName="MyScope"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Próbowano ustawić <see cref="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" /> na ciąg, który jest dłuższa niż 256 znaków.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CacheRefreshInterval">
      <MemberSignature Language="C#" Value="public int CacheRefreshInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheRefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheRefreshInterval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheRefreshInterval { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheRefreshInterval : int" Usage="System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę minut między operacjami odświeżania pamięci podręcznej danych magazynu zasad.</summary>
        <value>Liczba minut między operacjami odświeżania danych w pamięci podręcznej magazynu zasad. Wartość domyślna to 60.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="authorizationStoreRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do utworzenia.</param>
        <summary>Dodaje nową rolę do magazynu zasad roli Menedżera autoryzacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy, aby utworzyć rolę w magazynie danych Menedżera autoryzacji, które są określone w pliku konfiguracji aplikacji ASP.NET (Web.config).  
  
 Nazwy roli nie są z uwzględnieniem wielkości liter.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nową rolę w magazynie zasad Menedżera autoryzacji. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> jest ciągiem pustym.  
  
—lub— 
 <paramref name="roleName" /> zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Skonfigurowanych <see langword="applicationName" /> nie został znaleziony.  
  
—lub— 
Skonfigurowanych <see langword="scopeName" /> nie został znaleziony.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowany na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> Atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="authorizationStoreRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do usunięcia.</param>
        <param name="throwOnPopulatedRole">Jeśli <see langword="true" />, zgłasza wyjątek, jeśli <paramref name="roleName" /> ma co najmniej jednego członka.</param>
        <summary>Usuwa rolę z magazynu zasad Menedżera autoryzacji.</summary>
        <returns><see langword="true" /> Jeśli rola została usunięta; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy, aby usunąć rolę z magazynu zasad Menedżera autoryzacji, które są określone w pliku konfiguracji aplikacji ASP.NET (Web.config). Po usunięciu roli listy użytkowników skojarzonych z tą rolą jest również usunięte z magazynu zasad. Informacje o użytkowniku w bazie danych nie ma wpływu.  
  
 Jeśli `throwOnPopulatedRole` jest `true`, następnie zostanie zgłoszony wyjątek i roli nie zostaną usunięte, jeśli rola identyfikowane przez `roleName` parametr ma co najmniej jednego członka. Jeśli `throwOnPopulatedRole` jest `false`, a następnie roli zostaną usunięte, czy jest pusta lub nie.  
  
   
  
## Examples  
 Poniższy przykład usuwa rolę z magazynu zasad Menedżera autoryzacji. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> jest ciągiem pustym.  
  
—lub— 
 <paramref name="roleName" /> zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" /> ma co najmniej jednego członka i <paramref name="throwOnPopulatedRole" /> jest <see langword="true" />.  
  
—lub— 
Skonfigurowanych <see langword="applicationName" /> nie został znaleziony.  
  
—lub— 
Skonfigurowanych <see langword="scopeName" /> nie został znaleziony.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowany na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> Atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="authorizationStoreRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Rola do przeszukania.</param>
        <param name="usernameToMatch">Nazwa użytkownika do wyszukania.</param>
        <summary>Ta metoda nie jest obsługiwana przez dostawcę roli magazynu autoryzacji.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich użytkowników, których nazwa użytkownika odpowiada parametrowi <paramref name="usernameToMatch" /> i którzy są członkami określonej roli.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Nieobsługiwana metoda została wywołana.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="authorizationStoreRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę wszystkich ról dla aplikacji.</summary>
        <returns>Tablica ciągu, zawierającą nazwy wszystkich ról, które są przechowywane w magazynie zasad Menedżera autoryzacji dla określonej aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy, aby pobrać listę wszystkich ról w magazynie zasad Menedżera autoryzacji, które są określone w pliku konfiguracji aplikacji ASP.NET (Web.config).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Roles.GetAllRoles%2A> metody, aby uzyskać listę ról aplikacji i wyniki, aby powiązać <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> kontroli. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Skonfigurowanych <see langword="applicationName" /> nie został znaleziony.  
  
—lub— 
Skonfigurowanych <see langword="scopeName" /> nie został znaleziony.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowany na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> Atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Użytkownik, aby powrócić do listy ról.</param>
        <summary>Pobiera listę ról, które użytkownik.</summary>
        <returns>Tablica ciągu, zawierającą nazwy wszystkich ról określonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy, aby pobrać listę ról określonego użytkownika z magazynu zasad Menedżera autoryzacji, które są określone w pliku konfiguracji aplikacji ASP.NET (Web.config).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Roles.GetRolesForUser%2A> metodę, która pobierze listę ról określonego użytkownika i powiązanie ich <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> kontroli. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Skonfigurowanych <see langword="applicationName" /> nie został znaleziony.  
  
—lub— 
Skonfigurowanych <see langword="scopeName" /> nie został znaleziony.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowany na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> Atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli, które można pobrać listy użytkowników.</param>
        <summary>Pobiera listę użytkowników w określonej roli.</summary>
        <returns>Tablica ciągu, zawierającą nazwy wszystkich użytkowników, którzy są członkami określonej roli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy do pobrania listy użytkowników skojarzonych z określoną rolą w magazynie zasad Menedżera autoryzacji, które są określone w pliku konfiguracji aplikacji ASP.NET (Web.config).  
  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> Metoda zwraca tylko nazwy użytkownika, które znajdują się bezpośrednio w roli Menedżera autoryzacji, określony przez `roleName` parametru. Podstawowym — Menedżer autoryzacji wywoływane przez interfejs API <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> metoda nie obsługuje wystąpił błąd rozszerzania grupy, dzięki czemu użytkownicy, zawarte w zagnieżdżonych grup NT, grup zagnieżdżonych Menedżera autoryzacji i grup zapytań LDAP nie zostaną zwrócone.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Roles.GetUsersInRole%2A> metodę, aby uzyskać listę użytkowników z określoną rolą i powiąż wyniki do <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> kontroli. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> jest ciągiem pustym.  
  
—lub— 
 <paramref name="roleName" /> zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Skonfigurowanych <see langword="applicationName" /> nie został znaleziony.  
  
—lub— 
Skonfigurowanych <see langword="scopeName" /> nie został znaleziony.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowany na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> Atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="authorizationStoreRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> wystąpienie do inicjowania.</param>
        <param name="config">Element <see cref="T:System.Collections.Specialized.NameValueCollection" /> zawiera nazwy i wartości opcji konfiguracji dla dostawcy ról.</param>
        <summary>Inicjuje dostawcy roli Menedżera autoryzacji z wartościami właściwości określone w pliku konfiguracji aplikacji ASP.NET. Ta metoda nie jest przeznaczona do użycia bezpośrednio w kodzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.Initialize%2A> Inicjuje metodę <xref:System.Web.Security.AuthorizationStoreRoleProvider> z właściwością wartości określone w pliku konfiguracji aplikacji programu ASP.NET (Web.config) i nie jest przeznaczona do użycia bezpośrednio w kodzie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see langword="connectionStringName" /> Atrybut jest pusty lub nie istnieje w [connectionStrings — Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de) sekcji konfiguracji.  
  
—lub— 
Skonfigurowanych <see langword="applicationName" /> jest dłuższa niż 256 znaków.  
  
—lub— 
Konfiguracja tego <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> wystąpienie zawiera nierozpoznany atrybut.</exception>
        <exception cref="T:System.Web.HttpException">Aplikacja ASP.NET nie jest uruchomiona na <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> zaufania lub nowszej.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="authorizationStoreRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do wyszukania.</param>
        <param name="roleName">Rola do przeszukania.</param>
        <summary>Pobiera wartość wskazującą, czy określony użytkownik ma określoną rolę.</summary>
        <returns><see langword="true" /> Jeśli określona nazwa użytkownika znajduje się w określonej roli; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy i <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metody <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> właściwości w celu określenia, czy użytkownik jest skojarzony z rolą w magazynie danych Menedżera autoryzacji, które są określone w aplikacji ASP.NET plik konfiguracji (Web.config).  
  
   
  
## Examples  
 Poniższy przykład kodu programowo sprawdza, czy zalogowany użytkownik jest w roli administratora przed umożliwieniem użytkownikom na wyświetlanie ról użytkownika. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> jest <see langword="null" />.  
  
— lub 
 <paramref name="roleName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> jest ciągiem pustym.  
  
—lub— 
 <paramref name="roleName" /> zawiera przecinek.  
  
—lub— 
 <paramref name="username" /> zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Skonfigurowanych <see langword="applicationName" /> nie został znaleziony.  
  
—lub— 
Skonfigurowanych <see langword="scopeName" /> nie został znaleziony.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowany na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> Atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] userNames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] userNames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (userNames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ userNames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.RemoveUsersFromRoles (userNames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userNames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="userNames">Tablica ciągu nazwy użytkownika do usunięcia z określonych ról.</param>
        <param name="roleNames">Tablica ciągu, nazw ról, aby usunąć określone nazwy użytkownika.</param>
        <summary>Usuwa określone nazwy użytkownika z określonych ról.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasy, aby usunąć jeden lub więcej użytkowników z co najmniej jedną rolę w magazynie zasad Menedżera autoryzacji, które są określone w pliku konfiguracji aplikacji ASP.NET (Web.config). Ta metoda jest wywoływana <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, i <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> metody <xref:System.Web.Security.Roles> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu dodaje co najmniej jednego użytkownika do roli lub usuwa użytkownika z roli. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jednym z określone nazwy użytkownika jest <see langword="null" />.  
  
—lub— 
Jedną z nazw określonej roli jest <see langword="null" />.  
  
—lub— 
 <paramref name="userNames" /> jest <see langword="null" />.  
  
—lub— 
 <paramref name="roleNames" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Jedną z nazw określony użytkownik jest ciągiem pustym lub zawiera przecinek.  
  
—lub— 
Jedną z nazw określonej roli jest ciągiem pustym lub zawiera przecinek.  
  
—lub— 
 <paramref name="userNames" /> zawiera zduplikowany element.  
  
—lub— 
 <paramref name="roleNames" /> zawiera zduplikowany element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Skonfigurowanych <see langword="applicationName" /> nie został znaleziony.  
  
—lub— 
Skonfigurowanych <see langword="scopeName" /> nie został znaleziony.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowany na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> Atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="authorizationStoreRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do wyszukania w magazynie zasad Menedżera autoryzacji.</param>
        <summary>Pobiera wartość wskazującą, czy nazwa określona rola istnieje już w magazynie zasad Menedżera autoryzacji.</summary>
        <returns><see langword="true" /> Jeśli nazwa roli już istnieje w magazynie zasad Menedżera autoryzacji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists%2A> Metoda jest wywoływana przez <xref:System.Web.Security.Roles> klasę, aby określić, czy nazwa roli istnieje w magazynie danych Menedżera autoryzacji, które są określone w pliku konfiguracji aplikacji ASP.NET (Web.config).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.Security.Roles.RoleExists%2A> metodę, aby określić, czy nazwa roli już istnieje, przed utworzeniem roli. Na przykład plik Web.config, który umożliwia zarządzanie rolami zobacz <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> jest ciągiem pustym.  
  
—lub— 
 <paramref name="roleName" /> zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Skonfigurowanych <see langword="applicationName" /> nie został znaleziony.  
  
—lub— 
Skonfigurowanych <see langword="scopeName" /> nie został znaleziony.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowany na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><see langword="connectionStringName" /> Atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public string ScopeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScopeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScopeName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę zakresu dla magazynu autoryzacji.</summary>
        <value>Nazwa zakresu dla magazynu autoryzacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> Właściwość można ustawić za pomocą `scopeName` atrybutu konfiguracji dla tego wystąpienia dostawcy w `providers` części sekcji konfiguracji.  
  
> [!CAUTION]
>  Ponieważ wystąpienia dostawcy roli jednej domyślnej jest używana dla wszystkich żądań obsługiwanych przez <xref:System.Web.HttpApplication> obiektu, może mieć wiele żądań wykonywane jednocześnie, a próba skonfigurowania <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> wartości właściwości. <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> Właściwość nie jest bezpieczne dla wielu zapisów i zmiany dla wątków <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> wartość właściwości może spowodować nieoczekiwane zachowanie, gdy wielu użytkowników aplikacji. Zaleca się unikać pisania kodu, który umożliwia użytkownikom ustawienie <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> właściwość chyba, że należy. Przykład aplikacji w przypadku, gdy ustawienie <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> właściwości mogą być wymagane jest administracyjne aplikacji, która zarządza danymi roli dla wielu aplikacji. Taką aplikację powinna być aplikacją pojedynczego użytkownika i nie jest aplikacją sieci Web.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu ról ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>