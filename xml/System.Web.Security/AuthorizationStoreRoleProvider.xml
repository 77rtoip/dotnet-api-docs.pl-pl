<Type Name="AuthorizationStoreRoleProvider" FullName="System.Web.Security.AuthorizationStoreRoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33fb2c46646de9581bd2d2bb7b2eaf36694a5f03" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69135611" /></Metadata><TypeSignature Language="C#" Value="public class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationStoreRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AuthorizationStoreRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationStoreRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationStoreRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type AuthorizationStoreRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zarządza przechowywaniem informacji o członkostwie ról dla aplikacji ASP.NET w magazynie zasad autoryzacji Menedżera, w pliku XML, w Active Directory lub na serwerze trybu aplikacji Active Directory.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest używana przez <xref:System.Web.Security.Roles> klasy i <xref:System.Web.Security.RolePrincipal> w celu zapewnienia usług zarządzania rolami dla aplikacji ASP.NET przy użyciu magazynu Menedżera autoryzacji. Zarządzanie rolami służy do określania różnych poziomów autoryzacji dla aplikacji. Dostęp do Menedżera autoryzacji można uzyskać za pomocą programu Microsoft Management Console.  
  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider> Obiekt działa z trybem uwierzytelniania systemu Windows i uwierzytelnianiem formularzy.  
  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider> Obiekt można skonfigurować tak, aby korzystał z lokalnego pliku XML lub serwera Active Directory lub Active Directory Application Mode (ADAM). W przypadku korzystania z pliku lokalnego parametry połączenia powinny wyglądać podobnie jak w poniższym przykładzie.  
  
```  
msxml://<path to xml file>  
```  
  
 Jeśli plik lokalny jest przechowywany w drzewie katalogów aplikacji sieci Web ASP.NET, można użyć znaku tyldy ("~"), aby wskazać katalog główny. Na przykład, aby wskazać, że plik lokalny jest przechowywany w katalogu danych aplikacji sieci Web, należy użyć parametrów połączenia podobnego do poniższego przykładu.  
  
 `msxml://~\App_Data\datafilename.xml`  
  
> [!IMPORTANT]
>  Przechowywanie pliku danych XML w katalogu aplikacji sieci Web jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie usługi IIS będą obsługiwały pliki danych XML w sieci Web. Aby zwiększyć bezpieczeństwo podczas korzystania z lokalnego pliku danych w aplikacji ASP.NET, należy zapisać plik danych w `App_Data` katalogu. Pliki przechowywane w `App_Data` katalogu nie będą obsługiwane w sieci Web.  
  
 W przypadku korzystania z serwera Active Directory lub ADAM dla magazynu zasad parametry połączenia powinny być podobne do poniższego przykładu.  
  
 `msldap://myserver/CN=MyAzManStore,OU=MyOU,DC=MyDomain,DC=MyDC,DC=Com`  
  
 Wyjątkami wymienionymi w dokumentacji <xref:System.Web.Security.AuthorizationStoreRoleProvider> metod obiektu są wyjątki, które są wywoływane <xref:System.Web.Security.AuthorizationStoreRoleProvider> przez obiekt. Ponieważ dostawca korzysta z bazowego środowiska uruchomieniowego Menedżera uwierzytelniania, <xref:System.Runtime.InteropServices.COMException> wyjątek może być zgłaszany <xref:System.Web.Security.AuthorizationStoreRoleProvider> za każdym razem, gdy obiekt przekazuje wywołanie metody do środowiska uruchomieniowego Menedżera uwierzytelniania.  
  
> [!IMPORTANT]
>  <xref:System.Web.Security.AuthorizationStoreRoleProvider> Obiekt ma następujące wymagania dotyczące uruchamiania w środowiskach częściowego zaufania:  
>   
>  W przypadku korzystania z magazynu zasad opartych na plikach w aplikacji ASP.NET, uprawnienia we/wy pliku przyznane na podstawie bieżącego poziomu zaufania określają, czy jest dozwolone wykonanie akcji odczytu i zapisu przez dostawcę. Aplikacja ASP.NET musi mieć uprawnienia do odczytu w pliku, aby można było odczytywać dane z magazynu zasad, i musi mieć uprawnienia do zapisu w celu zapisania nowych informacji lub zaktualizowania istniejących informacji w magazynie zasad. Domyślny plik zasad średniego zaufania zapewnia uprawnienia do odczytu/zapisu aplikacji ASP.NET w katalogu aplikacji. Domyślny plik zasad o niskim poziomie zaufania daje tylko uprawnienie do odczytu aplikacji ASP.NET w katalogu aplikacji. Ponadto tożsamość procesu, w ramach której działa aplikacja ASP.NET musi mieć uprawnienia systemu plików, aby odczytywać i/lub zapisywać plik zasad.  
>   
>  W przypadku korzystania z serwera Active Directory lub Adam, aplikacja ASP.NET wymaga uprawnień niezarządzanego kodu, ponieważ <xref:System.Web.Security.AuthorizationStoreRoleProvider> kod obiektu wewnętrznego używa międzyoperacyjności modelu com.  
>   
>  Gdy obiekt jest <xref:System.Web.Security.AuthorizationStoreRoleProvider> używany poza ASP.NET, kod wywołujący wymaga uprawnień niezarządzanego kodu.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia plik Web. config, <xref:System.Web.Security.AuthorizationStoreRoleProvider> który służy do zarządzania rolami.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="AuthorizationServices" connectionString="msxml://~\App_Data\SampleStore.xml" />  
  </connectionStrings>  
  
  <system.web>  
  
    <authentication mode="Windows" />  
    <identity impersonate="true" />  
  
    <roleManager defaultProvider="AuthorizationStoreRoleProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="false"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <clear />  
          <add  
            name="AuthorizationStoreRoleProvider"  
            type="System.Web.Security.AuthorizationStoreRoleProvider"  
            connectionStringName="AuthorizationServices"  
            applicationName="SampleApplication"   
            cacheRefreshInterval="60"  
            scopeName="" />  
      </providers>  
    </roleManager>  
  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationStoreRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationStoreRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor jest wywoływany przez ASP.NET, aby utworzyć wystąpienie <xref:System.Web.Security.AuthorizationStoreRoleProvider> klasy, jak określono w konfiguracji aplikacji. <xref:System.Web.Security.AuthorizationStoreRoleProvider.%23ctor%2A> Ten konstruktor nie jest przeznaczony do użycia z Twojego kodu.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tablica ciągów nazw użytkowników, które mają zostać dodane do określonych ról.</param>
        <param name="roleNames">Tablica ciągów nazw ról, do której mają zostać dodane określone nazwy użytkowników.</param>
        <summary>Dodaje określone nazwy użytkowników do każdej z określonych ról.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez klasę w celu skojarzenia jednego lub większej liczby użytkowników z co najmniej jedną rolą w magazynie danych w Menedżerze autoryzacji określonym w pliku konfiguracyjnym aplikacji ASP.NET (Web. config). <xref:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles%2A> Ta <xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=nameWithType>Metoda jest wywoływana przez metody <xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=nameWithType> <xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=nameWithType> ,,<xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=nameWithType> , i klasy.<xref:System.Web.Security.Roles>  
  
   
  
## Examples  
 Poniższy przykład kodu dodaje jednego lub kilku użytkowników do roli lub usuwa użytkownika z roli. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jedną z określonych nazw użytkowników jest <see langword="null" />.  
  
—lub— 
Jedną z określonych nazw roli jest <see langword="null" />.  
  
—lub— 
 <paramref name="usernames" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="roleNames" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Jedna z określonych nazw użytkowników jest ciągiem pustym lub zawiera przecinek (,).  
  
—lub— 
Jedna z określonych nazw ról jest ciągiem pustym lub zawiera przecinek (,).  
  
—lub— 
 <paramref name="usernames" />zawiera zduplikowany element.  
  
—lub— 
 <paramref name="roleNames" />zawiera zduplikowany element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono <see langword="applicationName" /> skonfigurowanego.  
  
—lub— 
Nie znaleziono <see langword="scopeName" /> skonfigurowanego.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowane na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Ten <see langword="connectionStringName" /> atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach, a dostęp do odczytu do pliku nie jest dozwolony na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę aplikacji magazynu autoryzacji, dla której mają być przechowywane i pobierane informacje o rolach.</summary>
        <value>Nazwa aplikacji magazynu autoryzacji, dla której mają być przechowywane i pobierane informacje o rolach. Wartością domyślną jest <see cref="P:System.Web.HttpRequest.ApplicationPath" /> wartość właściwości Current <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> Jest używany <xref:System.Web.Security.AuthorizationStoreRoleProvider> przez program do kojarzenia użytkowników i ról z różnymi aplikacjami Menedżera autoryzacji, co umożliwia wielu aplikacjom ASP.net używanie tego samego magazynu zasad autoryzacji — w celu przechowywania informacji o rolach bez Uruchamianie w konflikcie między zduplikowanymi nazwami ról. Alternatywnie wiele aplikacji ASP.NET może używać tego samego magazynu zasad, określając tę samą wartość we <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> właściwości. Właściwość można ustawić programowo lub można ją ustawić deklaratywnie w pliku Web. config aplikacji `applicationName` przy użyciu atrybutu. <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A>  
  
 Jeśli wartość nie zostanie określona dla `applicationName` atrybutu w pliku Web. config, <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> zostanie użyta wartość właściwości dla bieżącego <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> obiektu.  
  
> [!NOTE]
>  Nazwy aplikacji Menedżera autoryzacji nie mogą zawierać znaku "/", który jest zawarty we <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> właściwości. W związku z tym wartość <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> domyślna właściwości nie może być używana jako nazwa aplikacji Menedżera autoryzacji, a w pliku Web. config aplikacji należy zawsze `applicationName` określić atrybut w `provider` elemencie do skonfigurowania Twoje <xref:System.Web.Security.AuthorizationStoreRoleProvider> wystąpienie.  
  
> [!CAUTION]
>  Ponieważ pojedyncze domyślne wystąpienie dostawcy roli jest używane dla wszystkich żądań obsłużonych przez <xref:System.Web.HttpApplication> obiekt, można wykonywać wiele żądań jednocześnie i próbować <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> ustawić wartość właściwości. Właściwość nie jest bezpieczna wątkowo dla wielu zapisów, a <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> zmiana wartości właściwości może spowodować nieoczekiwane zachowanie, gdy istnieje wielu użytkowników aplikacji. <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> Zalecamy uniknięcie pisania kodu, który umożliwia użytkownikom ustawianie <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> właściwości, chyba że jest to konieczne. Przykładem aplikacji, w <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> której ustawienie właściwości może być wymagane, jest aplikacja administracyjna, która zarządza danymi roli dla wielu aplikacji. Taka aplikacja powinna być aplikacją pojedynczego użytkownika, a nie aplikacją sieci Web.  
  
   
  
## Examples  
 Poniższy przykład pokazuje element w `system.web` sekcji pliku Web. config dla aplikacji ASP.NET. Określa <xref:System.Web.Security.AuthorizationStoreRoleProvider> wystąpienie aplikacji i <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> ustawia właściwość na `MyApplication`.  
  
```  
<roleManager defaultProvider="AuthorizationStoreProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.AuthorizationStoreRoleProvider"  
      connectionStringName="AuthorizationStoreServices"   
      scopeName="MyScope"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Podjęto próbę ustawienia <see cref="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" /> ciągu o długości przekraczającej 256 znaków.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CacheRefreshInterval">
      <MemberSignature Language="C#" Value="public int CacheRefreshInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheRefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheRefreshInterval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheRefreshInterval { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheRefreshInterval : int" Usage="System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę minut między odświeżeniami pamięci podręcznej danych magazynu zasad.</summary>
        <value>Liczba minut między odświeżeniami danych magazynu zasad przechowywanych w pamięci podręcznej. Wartość domyślna to 60.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="authorizationStoreRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do utworzenia.</param>
        <summary>Dodaje nową rolę do magazynu zasad autoryzacji roli — Menedżer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana przez klasę, <xref:System.Web.Security.Roles> aby utworzyć rolę w magazynie danych w Menedżerze autoryzacji określonym w pliku konfiguracji aplikacji ASP.NET (Web. config). <xref:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole%2A>  
  
 W nazwach ról nie jest rozróżniana wielkość liter.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nową rolę w magazynie zasad autoryzacji Menedżera. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />jest pustym ciągiem.  
  
—lub— 
 <paramref name="roleName" />zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono <see langword="applicationName" /> skonfigurowanego.  
  
—lub— 
Nie znaleziono <see langword="scopeName" /> skonfigurowanego.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowane na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Ten <see langword="connectionStringName" /> atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach, a dostęp do odczytu do pliku nie jest dozwolony na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="authorizationStoreRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do usunięcia.</param>
        <param name="throwOnPopulatedRole">Jeśli <see langword="true" />, zgłasza wyjątek, jeśli <paramref name="roleName" /> ma co najmniej jednego członka.</param>
        <summary>Usuwa rolę z magazynu zasad autoryzacji-Menedżera.</summary>
        <returns><see langword="true" />Jeśli rola została usunięta; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez klasę w celu usunięcia roli z magazynu zasad autoryzacji Menedżera określonych w pliku konfiguracyjnym aplikacji ASP.NET (Web. config). <xref:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole%2A> Po usunięciu roli lista użytkowników skojarzonych z tą rolą zostanie również usunięta z magazynu zasad. Nie ma to żadnego oddziaływania na informacje o użytkowniku w bazie danych.  
  
 Jeśli `throwOnPopulatedRole` ma `true`wartość, zostanie zgłoszony wyjątek, a rola nie zostanie usunięta, Jeśli rola identyfikowana przez `roleName` parametr ma co najmniej jednego członka. Jeśli `throwOnPopulatedRole` jest`false`, rola zostanie usunięta, niezależnie od tego, czy jest pusta.  
  
   
  
## Examples  
 Poniższy przykład usuwa rolę z magazynu zasad autoryzacji Menedżera. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />jest pustym ciągiem.  
  
—lub— 
 <paramref name="roleName" />zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" />ma co najmniej jednego członka i <paramref name="throwOnPopulatedRole" /> jest <see langword="true" />.  
  
—lub— 
Nie znaleziono <see langword="applicationName" /> skonfigurowanego.  
  
—lub— 
Nie znaleziono <see langword="scopeName" /> skonfigurowanego.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowane na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Ten <see langword="connectionStringName" /> atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach, a dostęp do odczytu do pliku nie jest dozwolony na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="authorizationStoreRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Rola do przeszukania.</param>
        <param name="usernameToMatch">Nazwa użytkownika do wyszukania.</param>
        <summary>Ta metoda nie jest obsługiwana przez dostawcę roli magazynu autoryzacji.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich użytkowników, których nazwa użytkownika jest zgodna <paramref name="usernameToMatch" /> i które są członkami określonej roli.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Wywołano nieobsługiwaną metodę.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="authorizationStoreRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę wszystkich ról aplikacji.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich ról przechowywanych w magazynie zasad autoryzacji Menedżera dla określonej aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez klasę w celu pobrania listy wszystkich ról w magazynie zasad autoryzacji Menedżera określonych w pliku konfiguracji aplikacji ASP.NET (Web. config). <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody, <xref:System.Web.Security.Roles.GetAllRoles%2A> Aby uzyskać listę ról dla aplikacji i powiązać wyniki <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> z kontrolką. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono <see langword="applicationName" /> skonfigurowanego.  
  
—lub— 
Nie znaleziono <see langword="scopeName" /> skonfigurowanego.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowane na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Ten <see langword="connectionStringName" /> atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach, a dostęp do odczytu do pliku nie jest dozwolony na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Użytkownik, który ma zwrócić listę ról dla.</param>
        <summary>Pobiera listę ról, do których należy użytkownik.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich ról, w których znajduje się określony użytkownik.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana przez klasę, <xref:System.Web.Security.Roles> aby pobrać listę ról określonego użytkownika z magazynu zasad autoryzacji Menedżera określonych w pliku konfiguracyjnym aplikacji ASP.NET (Web. config). <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody, <xref:System.Web.Security.Roles.GetRolesForUser%2A> aby pobrać listę ról dla określonego użytkownika i powiązać je <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> z kontrolką. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" />zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono <see langword="applicationName" /> skonfigurowanego.  
  
—lub— 
Nie znaleziono <see langword="scopeName" /> skonfigurowanego.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowane na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Ten <see langword="connectionStringName" /> atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach, a dostęp do odczytu do pliku nie jest dozwolony na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli, dla której ma zostać pobrana lista użytkowników.</param>
        <summary>Pobiera listę użytkowników w określonej roli.</summary>
        <returns>Tablica ciągów zawierająca nazwy wszystkich użytkowników, którzy są członkami określonej roli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez klasę w celu pobrania listy użytkowników skojarzonych z określoną rolą w magazynie zasad autoryzacji Menedżera określonych w pliku konfiguracyjnym aplikacji ASP.NET (Web. config). <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A>  
  
 Metoda zwraca tylko nazwy użytkowników, które są bezpośrednio zawarte w roli Menedżera autoryzacji określonej `roleName` przez parametr. <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> Źródłowy interfejs API Menedżera autoryzacji wywoływany przez <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> metodę nie obsługuje rozszerzania grupy, dlatego użytkownicy znajdujący się w zagnieżdżonych grupach systemu NT, zagnieżdżonych grupach Menedżera autoryzacji i grupach zapytań LDAP nie zostaną zwrócone.  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody, <xref:System.Web.Security.Roles.GetUsersInRole%2A> Aby uzyskać listę użytkowników w określonej roli i powiązać wyniki <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> z kontrolką. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />jest pustym ciągiem.  
  
—lub— 
 <paramref name="roleName" />zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono <see langword="applicationName" /> skonfigurowanego.  
  
—lub— 
Nie znaleziono <see langword="scopeName" /> skonfigurowanego.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowane na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Ten <see langword="connectionStringName" /> atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach, a dostęp do odczytu do pliku nie jest dozwolony na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="authorizationStoreRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> wystąpienia do zainicjowania.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> , który zawiera nazwy i wartości opcji konfiguracji dla dostawcy roli.</param>
        <summary>Inicjuje dostawcę roli Menedżer autoryzacji z wartościami właściwości określonymi w pliku konfiguracji aplikacji ASP.NET. Ta metoda nie jest przeznaczona do użycia bezpośrednio w kodzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.AuthorizationStoreRoleProvider.Initialize%2A> Metoda<xref:System.Web.Security.AuthorizationStoreRoleProvider> inicjuje z wartościami właściwości określonymi w pliku konfiguracji aplikacji ASP.NET (Web. config) i nie jest przeznaczone do użycia bezpośrednio w kodzie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Atrybut jest pusty lub nie istnieje w sekcji konfiguracji [elementu connectionStrings (Schemat ustawień ASP.NET).](https://msdn.microsoft.com/library/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de) <see langword="connectionStringName" />  
  
—lub— 
Wartość skonfigurowana <see langword="applicationName" /> jest dłuższa niż 256 znaków.  
  
—lub— 
Konfiguracja dla tego <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> wystąpienia zawiera Nierozpoznany atrybut.</exception>
        <exception cref="T:System.Web.HttpException">Aplikacja ASP.NET nie jest uruchomiona na poziomie <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> zaufania lub wyższym.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="authorizationStoreRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do wyszukania.</param>
        <param name="roleName">Rola do przeszukania.</param>
        <summary>Pobiera wartość wskazującą, czy określony użytkownik znajduje się w określonej roli.</summary>
        <returns><see langword="true" />Jeśli określona nazwa użytkownika znajduje się w określonej roli; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez <xref:System.Security.Principal.IPrincipal.IsInRole%2A> klasę<xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> i metodę właściwości, aby określić, czy użytkownik jest skojarzony z rolą w magazynie danych Menedżera autoryzacji określonym w aplikacji ASP.NET <xref:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole%2A> plik konfiguracji (Web. config).  
  
   
  
## Examples  
 Poniższy przykład kodu programowo sprawdza, czy zalogowany użytkownik należy do roli Administratorzy przed zezwoleniem użytkownikom na wyświetlanie ról użytkownika. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" />jest <see langword="null" />.  
  
-lub 
 <paramref name="roleName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />jest pustym ciągiem.  
  
—lub— 
 <paramref name="roleName" />zawiera przecinek.  
  
—lub— 
 <paramref name="username" />zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono <see langword="applicationName" /> skonfigurowanego.  
  
—lub— 
Nie znaleziono <see langword="scopeName" /> skonfigurowanego.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowane na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Ten <see langword="connectionStringName" /> atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach, a dostęp do odczytu do pliku nie jest dozwolony na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] userNames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] userNames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (userNames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ userNames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.RemoveUsersFromRoles (userNames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userNames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="userNames">Tablica ciągów nazw użytkowników, które mają zostać usunięte z określonych ról.</param>
        <param name="roleNames">Tablica ciągów nazw ról służących do usuwania określonych nazw użytkowników z programu.</param>
        <summary>Usuwa określone nazwy użytkowników z określonych ról.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana <xref:System.Web.Security.Roles> przez klasę w celu usunięcia co najmniej jednego użytkownika z co najmniej jednej roli w magazynie zasad autoryzacji Menedżera określonych w pliku konfiguracyjnym aplikacji ASP.NET (Web. config). <xref:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles%2A> Ta <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>Metoda jest wywoływana przez metody <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> ,,<xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> , i klasy.<xref:System.Web.Security.Roles>  
  
   
  
## Examples  
 Poniższy przykład kodu dodaje jednego lub kilku użytkowników do roli lub usuwa użytkownika z roli. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jedną z określonych nazw użytkowników jest <see langword="null" />.  
  
—lub— 
Jedną z określonych nazw roli jest <see langword="null" />.  
  
—lub— 
 <paramref name="userNames" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="roleNames" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Jedna z określonych nazw użytkowników jest ciągiem pustym lub zawiera przecinek.  
  
—lub— 
Jedna z określonych nazw ról jest ciągiem pustym lub zawiera przecinek.  
  
—lub— 
 <paramref name="userNames" />zawiera zduplikowany element.  
  
—lub— 
 <paramref name="roleNames" />zawiera zduplikowany element.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono <see langword="applicationName" /> skonfigurowanego.  
  
—lub— 
Nie znaleziono <see langword="scopeName" /> skonfigurowanego.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowane na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Ten <see langword="connectionStringName" /> atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach, a dostęp do odczytu do pliku nie jest dozwolony na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="authorizationStoreRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nazwa roli do wyszukania w magazynie zasad autoryzacji-Menedżera.</param>
        <summary>Pobiera wartość wskazującą, czy określona nazwa roli już istnieje w magazynie zasad autoryzacji Menedżera.</summary>
        <returns><see langword="true" />Jeśli nazwa roli już istnieje w magazynie zasad autoryzacji Menedżera. w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana przez klasę, <xref:System.Web.Security.Roles> aby określić, czy nazwa roli istnieje w magazynie danych w Menedżerze autoryzacji określonym w pliku konfiguracji aplikacji ASP.NET (Web. config). <xref:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu używa metody, <xref:System.Web.Security.Roles.RoleExists%2A> aby określić, czy nazwa roli już istnieje przed utworzeniem roli. Przykład pliku Web. config, który umożliwia zarządzanie rolami, znajduje się w temacie <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />jest pustym ciągiem.  
  
—lub— 
 <paramref name="roleName" />zawiera przecinek.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono <see langword="applicationName" /> skonfigurowanego.  
  
—lub— 
Nie znaleziono <see langword="scopeName" /> skonfigurowanego.  
  
—lub— 
Środowisko uruchomieniowe Menedżera autoryzacji nie jest zainstalowane na serwerze.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Ten <see langword="connectionStringName" /> atrybut odwołuje się do parametrów połączenia do pliku, który nie istnieje.</exception>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach, a dostęp do odczytu do pliku nie jest dozwolony na bieżącym poziomie zaufania.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public string ScopeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScopeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScopeName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę zakresu dla magazynu autoryzacji.</summary>
        <value>Nazwa zakresu dla magazynu autoryzacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość można ustawić `scopeName` przy użyciu atrybutu Configuration dla wystąpienia dostawcy w `providers` sekcji konfiguracji. <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A>  
  
> [!CAUTION]
>  Ponieważ pojedyncze domyślne wystąpienie dostawcy roli jest używane dla wszystkich żądań obsłużonych przez <xref:System.Web.HttpApplication> obiekt, można wykonywać wiele żądań jednocześnie i próbować <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> ustawić wartość właściwości. Właściwość nie jest bezpieczna wątkowo dla wielu zapisów, a <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> zmiana wartości właściwości może spowodować nieoczekiwane zachowanie, gdy istnieje wielu użytkowników aplikacji. <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> Zalecamy uniknięcie pisania kodu, który umożliwia użytkownikom ustawianie <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> właściwości, chyba że jest to konieczne. Przykładem aplikacji, w <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> której ustawienie właściwości może być wymagane, jest aplikacja administracyjna, która zarządza danymi roli dla wielu aplikacji. Taka aplikacja powinna być aplikacją pojedynczego użytkownika, a nie aplikacją sieci Web.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Informacje o zarządzaniu rolami ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
