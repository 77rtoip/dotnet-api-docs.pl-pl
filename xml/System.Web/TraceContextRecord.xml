<Type Name="TraceContextRecord" FullName="System.Web.TraceContextRecord">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe544be2279fa289b6685d54b1d4d99179df41ff" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37528323" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TraceContextRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContextRecord extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContextRecord" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContextRecord" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContextRecord sealed" />
  <TypeSignature Language="F#" Value="type TraceContextRecord = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje komunikat śledzenia ASP.NET i wszelkie powiązane dane.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.TraceContextRecord> Hermetyzuje komunikat śledzenia, kategorii i wszystkie skojarzone <xref:System.Exception>, oraz tego, czy rekord śledzenia został napisany przez <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> metody.  
  
 Każde wywołanie <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> i <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> generuje metody <xref:System.Web.TraceContextRecord> obiektu, który jest dodawany do <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> komunikaty kolekcji. Dostęp do kolekcji rekordów obsługi <xref:System.Web.TraceContext.TraceFinished> zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak można zarejestrować <xref:System.Web.TraceContextEventHandler> delegata do obsługi <xref:System.Web.TraceContext.TraceFinished> zdarzeń. W tym przykładzie `OnTraceFinished` metoda uzyskuje dostęp do kolekcji <xref:System.Web.TraceContextRecord> obiektów za pomocą <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> właściwość, wykonuje iterację przez nich i zapisuje je w strumieniu odpowiedzi.  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventArgs" />
    <altmember cref="T:System.Web.TraceContextEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContextRecord (string category, string msg, bool isWarning, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string category, string msg, bool isWarning, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (category As String, msg As String, isWarning As Boolean, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContextRecord(System::String ^ category, System::String ^ msg, bool isWarning, Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="new System.Web.TraceContextRecord : string * string * bool * Exception -&gt; System.Web.TraceContextRecord" Usage="new System.Web.TraceContextRecord (category, msg, isWarning, errorInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="isWarning" Type="System.Boolean" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">Kategoria śledzenia, który odbiera wiadomości.</param>
        <param name="msg">Komunikat śledzenia.</param>
        <param name="isWarning">
          <see langword="true" /> Jeśli skojarzona metoda <see cref="T:System.Web.TraceContextRecord" /> jest <see cref="Overload:System.Web.TraceContext.Warn" /> metody. <see langword="false" /> Jeśli metoda śledzenia jest <see cref="Overload:System.Web.TraceContext.Write" /> metody.</param>
        <param name="errorInfo">A <see cref="T:System.Exception" /> obiekt, który zawiera dodatkowe informacje o błędzie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.TraceContextRecord" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każde wywołanie <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> i <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> generuje metody <xref:System.Web.TraceContextRecord> obiektu, który jest dodawany do <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> komunikaty kolekcji. <xref:System.Web.TraceContext.Warn%2A> Zestawy wywołanie metody <xref:System.Web.TraceContextRecord.IsWarning%2A> właściwości `true`, gdy <xref:System.Web.TraceContext.Write%2A> wywołania metody ustaw ją na `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.Web.TraceContextRecord.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kategorii zdefiniowanych przez użytkownika dla rekordów śledzenia.</summary>
        <value>Ciąg, który reprezentuje kategorię rekord śledzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kategoria jest używana w celu lepszej komunikaty śledzenia w rozpoznawanym grupy, ale może być dowolnym ciągiem. <xref:System.Web.TraceContext> Klasy używa <xref:System.String.Empty?displayProperty=nameWithType> jako jego kategoria domyślna dla metod, które przyjmują tylko `message` parametru. Kategoria domyślna programu ASP.NET, która zapisuje kilka rekordów śledzenia, gdy śledzenie jest włączone, to "aspx.page".  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób uzyskiwania dostępu do <xref:System.Web.TraceContextRecord.Category%2A> właściwość <xref:System.Web.TraceContextRecord>i wydrukuj go i komunikat skojarzony ślad do `Response` strumienia.  
  
 [!code-aspx-csharp[System.Web.Trace_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_5/CS/form5cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_5/VB/form5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorInfo">
      <MemberSignature Language="C#" Value="public Exception ErrorInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ErrorInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.ErrorInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorInfo As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ErrorInfo { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorInfo : Exception" Usage="System.Web.TraceContextRecord.ErrorInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Exception" /> skojarzony z rekordem śledzenia, jeśli jest dostępny.</summary>
        <value>A <see cref="T:System.Exception" /> skojarzony z rekordem śledzenia, jeśli istnieje, lub <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli używasz śledzenia do debugowania aplikacji i rozwiązywanie problemów z obsługi błędów i wyjątków, można uwzględnić wyjątek w rekord śledzenia. <xref:System.Web.TraceContextRecord.ErrorInfo%2A> Właściwość `null` podczas rekordem śledzenia jest skojarzony z jednym z <xref:System.Web.TraceContext> metody, które nie mają jawnie `errorInfo` podano parametr lub żaden wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWarning">
      <MemberSignature Language="C#" Value="public bool IsWarning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.IsWarning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWarning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWarning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWarning : bool" Usage="System.Web.TraceContextRecord.IsWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy jest skojarzony z rekordem śledzenia <see cref="Overload:System.Web.TraceContext.Warn" /> wywołania metody.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.TraceContextRecord" /> jest skojarzony z <see cref="Overload:System.Web.TraceContext.Warn" /> wywołania metody; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, jak sprawdzić <xref:System.Web.TraceContextRecord.IsWarning%2A> właściwość <xref:System.Web.TraceContextRecord> do określenia, czy wiadomość, która zawiera rekord został napisany przez <xref:System.Web.TraceContext.Warn%2A> lub <xref:System.Web.TraceContext.Write%2A> wywołania metody. Jeśli rekord śledzenia jest komunikat ostrzegawczy z informacją, różne akcje są wykonywane niż czy jest komunikat o błędzie.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Web.TraceContextRecord.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera komunikat śledzenia zdefiniowanych przez użytkownika.</summary>
        <value>Ciąg, który reprezentuje komunikat rekord śledzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Komunikat może być dowolnym ciągiem i używany do zapisywania informacji śledzenia szczegółowe. Odnosi się do parametru komunikat, który jest przekazywany do <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> i <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> metody. Informacje mogą być wartości czasu wykonywania, wiadomości do poznaniu i poprowadzi Cię przez wykonanie programu lub inne dane diagnostyczne.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób uzyskiwania dostępu do <xref:System.Web.TraceContextRecord.Message%2A> właściwość <xref:System.Web.TraceContextRecord>i wydrukuj go do `Response` strumienia.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>