<Type Name="TraceContextRecord" FullName="System.Web.TraceContextRecord">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0671371785f496064227c4d947cbbe6a976ac13" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69385162" /></Metadata><TypeSignature Language="C#" Value="public sealed class TraceContextRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContextRecord extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContextRecord" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContextRecord" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContextRecord sealed" />
  <TypeSignature Language="F#" Value="type TraceContextRecord = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje komunikat śledzenia ASP.NET i wszystkie powiązane dane.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt hermetyzuje komunikat śledzenia, kategorię, wszystkie powiązane <xref:System.Exception>i czy <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> rekord śledzenia został zapisany przez metodę. <xref:System.Web.TraceContextRecord>  
  
 Każde wywołanie <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> metody i <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> generuje <xref:System.Web.TraceContextRecord> obiekt, który jest dodawany do <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> kolekcji messages. Możesz uzyskać dostęp do kolekcji rekordów przez obsługę <xref:System.Web.TraceContext.TraceFinished> zdarzenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak można zarejestrować <xref:System.Web.TraceContextEventHandler> delegata, aby <xref:System.Web.TraceContext.TraceFinished> obsłużyć zdarzenie. W tym przykładzie `OnTraceFinished` metoda uzyskuje dostęp do <xref:System.Web.TraceContextRecord> kolekcji obiektów przez <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> właściwość, iteruje je i zapisuje w strumieniu odpowiedzi.  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventArgs" />
    <altmember cref="T:System.Web.TraceContextEventHandler" />
    <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
    <related type="Article" href="https://msdn.microsoft.com/library/74e3b3f7-7fc2-4e38-ac55-2b9c2e832a3c">Instrukcje: Włącz śledzenie dla strony ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContextRecord (string category, string msg, bool isWarning, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string category, string msg, bool isWarning, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (category As String, msg As String, isWarning As Boolean, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContextRecord(System::String ^ category, System::String ^ msg, bool isWarning, Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="new System.Web.TraceContextRecord : string * string * bool * Exception -&gt; System.Web.TraceContextRecord" Usage="new System.Web.TraceContextRecord (category, msg, isWarning, errorInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="isWarning" Type="System.Boolean" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">Kategoria śledzenia, która odbiera komunikat.</param>
        <param name="msg">Komunikat śledzenia.</param>
        <param name="isWarning"><see langword="true" />Jeśli metoda skojarzona z elementem <see cref="T:System.Web.TraceContextRecord" /> <see cref="Overload:System.Web.TraceContext.Warn" /> to metoda; Jeśli metoda śledzenia <see cref="Overload:System.Web.TraceContext.Write" /> jest metodą. <see langword="false" /></param>
        <param name="errorInfo"><see cref="T:System.Exception" /> Obiekt, który zawiera dodatkowe informacje o błędzie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.TraceContextRecord" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każde wywołanie <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> metody i <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> generuje <xref:System.Web.TraceContextRecord> obiekt, który jest dodawany do <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> kolekcji messages. `true` `false`Wywołanie metody ustawia <xref:System.Web.TraceContextRecord.IsWarning%2A> właściwość na, podczas gdy wywołanie metodyustawiajena.<xref:System.Web.TraceContext.Write%2A> <xref:System.Web.TraceContext.Warn%2A>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.Web.TraceContextRecord.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kategorię zdefiniowaną przez użytkownika dla rekordu śledzenia.</summary>
        <value>Ciąg, który reprezentuje kategorię dla rekordu śledzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kategoria służy do lepszego organizowania komunikatów śledzenia w rozpoznawanych grupach, ale może być dowolnym ciągiem. Klasa używa <xref:System.String.Empty?displayProperty=nameWithType> jako domyślnej kategorii dla `message` metod, które pobierają tylko parametr. <xref:System.Web.TraceContext> Kategoria domyślna dla ASP.NET, która zapisuje kilka rekordów śledzenia po włączeniu śledzenia, ma wartość "aspx. Page".  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Web.TraceContextRecord.Category%2A> <xref:System.Web.TraceContextRecord>, jak uzyskać dostęp do właściwości obiektu i wydrukować go wraz ze `Response` skojarzonym z nim komunikatem śledzenia do strumienia.  
  
 [!code-aspx-csharp[System.Web.Trace_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_5/CS/form5cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_5/VB/form5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="ErrorInfo">
      <MemberSignature Language="C#" Value="public Exception ErrorInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ErrorInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.ErrorInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorInfo As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ErrorInfo { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorInfo : Exception" Usage="System.Web.TraceContextRecord.ErrorInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Exception" /> Pobiera skojarzoną z rekordem śledzenia, jeśli jest dostępny.</summary>
        <value>Skojarzony z rekordem śledzenia, jeśli taki istnieje, lub <see langword="null" />. <see cref="T:System.Exception" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz uwzględnić wyjątek w rekordzie śledzenia, jeśli używasz śledzenia do debugowania aplikacji lub rozwiązywania problemów z obsługą wyjątków. Właściwość jest `null` , gdy rekord śledzenia jest <xref:System.Web.TraceContext> skojarzony z jedną z metod, które nie mają jawnego `errorInfo` parametru lub nie został podany żaden wyjątek. <xref:System.Web.TraceContextRecord.ErrorInfo%2A>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="IsWarning">
      <MemberSignature Language="C#" Value="public bool IsWarning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.IsWarning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWarning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWarning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWarning : bool" Usage="System.Web.TraceContextRecord.IsWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy rekord śledzenia jest skojarzony z <see cref="Overload:System.Web.TraceContext.Warn" /> wywołaniem metody.</summary>
        <value><see langword="true" />Jeśli jest skojarzona <see cref="Overload:System.Web.TraceContext.Warn" /> z wywołaniem metody; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Web.TraceContextRecord" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Web.TraceContextRecord.IsWarning%2A> , jak sprawdzić Właściwość a <xref:System.Web.TraceContextRecord> , aby określić, czy komunikat, który <xref:System.Web.TraceContext.Warn%2A> zawiera rekord, został zapisany przy użyciu lub <xref:System.Web.TraceContext.Write%2A> wywołania metody. Jeśli rekord śledzenia jest komunikatem ostrzegawczym, zostanie podjęta inna akcja, która jest komunikatem o błędzie.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Web.TraceContextRecord.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zdefiniowany przez użytkownika komunikat śledzenia.</summary>
        <value>Ciąg, który reprezentuje komunikat dla rekordu śledzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Komunikat może być dowolnym ciągiem i służy do zapisywania szczegółowych informacji śledzenia. Odpowiada parametrowi komunikatu, który jest przesyłany do <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> metod i. <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> Informacje te mogą być wartościami czasu wykonywania, wiadomościami w celu określenia użytkownika i przeprowadzenia przez niego wykonywania lub innych danych diagnostycznych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje <xref:System.Web.TraceContextRecord.Message%2A> <xref:System.Web.TraceContextRecord>, jak uzyskać dostęp do właściwości `Response` i wydrukować ją do strumienia.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
  </Members>
</Type>
