<Type Name="TraceContext" FullName="System.Web.TraceContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0960497e60bd2579ed331a929d6b7e5443b64464" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69409785" /></Metadata><TypeSignature Language="C#" Value="public sealed class TraceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContext sealed" />
  <TypeSignature Language="F#" Value="type TraceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Przechwytuje i prezentuje szczegółowe informacje o wykonywaniu żądania sieci Web. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej klasy można użyć do dołączania komunikatów do określonych kategorii śledzenia. Na przykład jeśli tworzysz wystąpienie <xref:System.Web.UI.WebControls.Calendar> klasy dla aplikacji, możesz dołączyć komunikat śledzenia "rozpoczęcie do renderowania" w procedurze renderowania i "podnoszenie zdarzenia przydziałania" w procedurze obsługi zdarzeń.  
  
 Można również użyć klasy, <xref:System.Web.TraceContext> Aby uzyskać zestaw rekordów śledzenia po zakończeniu wykonywania żądania dla przetwarzania niestandardowego. Aby uzyskać więcej informacji, zobacz [śledzenie ASP.NET — Omówienie](https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).  
  
 Aby włączyć śledzenie, należy ustawić `Trace` atrybut dyrektywy [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) lub <xref:System.Web.TraceContext.IsEnabled%2A> właściwości na `true`. Gdy śledzenie jest włączone, oprócz pokazywania zawartości śledzenia dostarczonej przez użytkownika, <xref:System.Web.UI.Page> Klasa automatycznie zawiera dane dotyczące wydajności, informacje o strukturze drzewa kontroli i zawartość zarządzania stanem dla każdego żądania.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventArgs" />
    <altmember cref="T:System.Web.TraceContextEventHandler" />
    <altmember cref="T:System.Web.TraceContextRecord" />
    <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContext (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.#ctor(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContext(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.TraceContext : System.Web.HttpContext -&gt; System.Web.TraceContext" Usage="new System.Web.TraceContext context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Web.HttpContext" /> Zawiera informacje o bieżącym żądaniu sieci Web.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.TraceContext" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContext.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Web.TraceContext.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy włączone jest śledzenie dla bieżącego żądania sieci Web.</summary>
        <value><see langword="true" />Jeśli śledzenie jest włączone; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej flagi, aby sprawdzić, czy strona lub aplikacja powinna uzyskać informacje o śledzeniu, zanim zapisze wszystkie dane w dzienniku śledzenia.  
  
 Wartość <xref:System.Web.TraceContext.IsEnabled%2A> właściwości zależy od ustawień znajdujących się w podsekcji `system.web` konfiguracji `trace` i wartości atrybutu dyrektywy. Opcja śledzenia ustawiona w dyrektywie page ma pierwszeństwo przed opcją ustawioną w pliku konfiguracji. <xref:System.Web.TraceContext.IsEnabled%2A> Ustawienie wartości programowo ma pierwszeństwo przed atrybutem dyrektywy Page i ustawieniem konfiguracji.  
  
> [!NOTE]
>  Jeśli ustawisz <xref:System.Web.TraceContext.IsEnabled%2A> właściwość na `true` dla całej aplikacji, musisz `false` jawnie ustawić tę właściwość na dla każdej strony w aplikacji, dla której nie mają być wyświetlane informacje o śledzeniu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak można określić, czy śledzenie jest włączone dla strony. Kod wykonuje iterację wierszy w zestawie danych, pisząc instrukcje śledzenia dla każdego wiersza w tym zestawie danych.  
  
 [!code-csharp[Classic TraceContext.IsEnabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TraceContext.IsEnabled Example/CS/source.cs#1)]
 [!code-vb[Classic TraceContext.IsEnabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TraceContext.IsEnabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7931c942-63c1-47c3-a045-9d9de3cacdbf">&lt;Element&gt; Trace</related>
      </Docs>
    </Member>
    <Member MemberName="TraceFinished">
      <MemberSignature Language="C#" Value="public event System.Web.TraceContextEventHandler TraceFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.TraceContextEventHandler TraceFinished" />
      <MemberSignature Language="DocId" Value="E:System.Web.TraceContext.TraceFinished" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TraceFinished As TraceContextEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::TraceContextEventHandler ^ TraceFinished;" />
      <MemberSignature Language="F#" Value="member this.TraceFinished : System.Web.TraceContextEventHandler " Usage="member this.TraceFinished : System.Web.TraceContextEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContextEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wywoływane przez <see cref="T:System.Web.TraceContext" /> obiekt, aby uwidocznić komunikaty śledzenia po zebraniu wszystkich informacji o żądaniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest zgłaszane na `EndRequest` etapie przetwarzania żądania HTTP. <xref:System.Web.TraceContext.TraceFinished> Jest on wywoływany przez <xref:System.Web.TraceContext> obiekt po zebraniu wszystkich informacji o żądaniu, aby uwidocznić <xref:System.Web.TraceContextRecord> kolekcję komunikatów do zarejestrowanych <xref:System.Web.TraceContextEventHandler> delegatów.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak można zarejestrować, <xref:System.Web.TraceContextEventHandler> aby <xref:System.Web.TraceContext.TraceFinished> obsłużyć zdarzenie. W tym przykładzie delegat wykonuje iterację komunikatów śledzenia i zapisuje je w strumieniu odpowiedzi. można jednak napisać te same informacje do bazy danych lub do użytkownika narzędzia profilowania.  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.TraceContextEventHandler" />
        <altmember cref="T:System.Web.TraceContextEventArgs" />
        <altmember cref="T:System.Web.TraceContextRecord" />
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="TraceMode">
      <MemberSignature Language="C#" Value="public System.Web.TraceMode TraceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.TraceMode TraceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContext.TraceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceMode As TraceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceMode TraceMode { System::Web::TraceMode get(); void set(System::Web::TraceMode value); };" />
      <MemberSignature Language="F#" Value="member this.TraceMode : System.Web.TraceMode with get, set" Usage="System.Web.TraceContext.TraceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolejność sortowania komunikatów śledzenia, które powinny być wyprowadzane do przeglądarki żądającej.</summary>
        <value>Jedna z <see cref="T:System.Web.TraceMode" /> wartości wyliczenia. Wartość domyślna to ustawienie określone przez <see langword="traceMode" /> atrybut <see langword="trace" /> w sekcji pliku konfiguracji, którego wartość domyślna to <see langword="SortByTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Komunikaty śledzenia można sortować w kolejności przetwarzania lub alfabetycznie według kategorii zdefiniowanej przez użytkownika.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak można sortować instrukcje śledzenia strony alfabetycznie według kategorii, które zostały przypisane do instrukcji.  
  
 [!code-aspx-csharp[Classic TraceContext.TraceMode Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TraceContext.TraceMode Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TraceContext.TraceMode Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TraceContext.TraceMode Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wybrana wartość nie jest jedną z <see cref="T:System.Web.TraceMode" /> wartości wyliczenia.</exception>
        <altmember cref="T:System.Web.UI.Page" />
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warn">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje informacje o śledzeniu do dziennika śledzenia. W przeciwieństwie <see cref="M:System.Web.TraceContext.Write(System.String)" />do, wszystkie ostrzeżenia są wyświetlane w dzienniku jako czerwony tekst.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Warn : string -&gt; unit" Usage="traceContext.Warn message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat śledzenia do zapisu w dzienniku.</param>
        <summary>Zapisuje komunikat śledzenia do dziennika śledzenia. Wszystkie ostrzeżenia są wyświetlane w dzienniku jako czerwony tekst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za <xref:System.Web.TraceContext.Warn%2A> <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> <xref:System.Web.TraceContext.TraceFinished> każdym razem, gdy wywoływana jest metoda, komunikat śledzenia jest dodawany do kolekcji messages, która jest dostępna podczas obsługi zdarzenia. <xref:System.Web.TraceContext> Wiadomość jest dodawana z <xref:System.Web.TraceContextRecord.IsWarning%2A> właściwością ustawioną na `true` , <xref:System.Web.TraceContextRecord.ErrorInfo%2A> a jej właściwość `null`jest ustawiona na.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ category, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Warn : string * string -&gt; unit" Usage="traceContext.Warn (category, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">Kategoria śledzenia, która odbiera komunikat.</param>
        <param name="message">Komunikat śledzenia do zapisu w dzienniku.</param>
        <summary>Zapisuje informacje o śledzeniu do dziennika śledzenia, w tym wszystkie kategorie zdefiniowane przez użytkownika i komunikaty śledzenia. Wszystkie ostrzeżenia są wyświetlane w dzienniku jako czerwony tekst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za <xref:System.Web.TraceContext.Warn%2A> <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> <xref:System.Web.TraceContext.TraceFinished> każdym razem, gdy wywoływana jest metoda, komunikat śledzenia jest dodawany do kolekcji messages, która jest dostępna podczas obsługi zdarzenia. <xref:System.Web.TraceContext> Wiadomość jest dodawana z <xref:System.Web.TraceContextRecord.IsWarning%2A> właściwością ustawioną na `true` , <xref:System.Web.TraceContextRecord.ErrorInfo%2A> a jej właściwość `null`jest ustawiona na.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string category, string message, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string category, string message, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (category As String, message As String, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ category, System::String ^ message, Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="member this.Warn : string * string * Exception -&gt; unit" Usage="traceContext.Warn (category, message, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">Kategoria śledzenia, która odbiera komunikat.</param>
        <param name="message">Komunikat śledzenia do zapisu w dzienniku.</param>
        <param name="errorInfo"><see cref="T:System.Exception" /> Zawierający informacje o błędzie.</param>
        <summary>Zapisuje informacje o śledzeniu do dziennika śledzenia, w tym wszystkie kategorie zdefiniowane przez użytkownika, komunikaty śledzenia i informacje o błędzie. Wszystkie ostrzeżenia są wyświetlane w dzienniku jako czerwony tekst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za <xref:System.Web.TraceContext.Warn%2A> <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> <xref:System.Web.TraceContext.TraceFinished> każdym razem, gdy wywoływana jest metoda, komunikat śledzenia jest dodawany do kolekcji messages, która jest dostępna podczas obsługi zdarzenia. <xref:System.Web.TraceContext> Wiadomość jest dodawana z <xref:System.Web.TraceContextRecord.IsWarning%2A> właściwością ustawioną na `true`, a <xref:System.Web.TraceContextRecord.ErrorInfo%2A> Właściwość `errorInfo` jest ustawiana na obiekt przekazaną przez parametr.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak wywołać metodę, <xref:System.Web.TraceContext.Write%2A> aby napisać komunikat śledzenia błędu do dziennika śledzenia. W tym przykładzie różne wyjątki są śledzone jako błędy i ostrzeżenia. Gdy strona zgłosi <xref:System.ArgumentException>, zapisuje komunikat ostrzegawczy <xref:System.Web.TraceContext.Warn%2A> przy użyciu metody. Gdy strona zgłosi <xref:System.InvalidOperationException>, zapisuje komunikat o błędzie <xref:System.Web.TraceContext.Write%2A> przy użyciu metody.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje informacje o śledzeniu do dziennika śledzenia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="traceContext.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat śledzenia do zapisu w dzienniku.</param>
        <summary>Zapisuje komunikat śledzenia do dziennika śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za <xref:System.Web.TraceContext.Write%2A> <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> <xref:System.Web.TraceContext.TraceFinished> każdym razem, gdy wywoływana jest metoda, komunikat śledzenia jest dodawany do kolekcji messages, która jest dostępna podczas obsługi zdarzenia. <xref:System.Web.TraceContext> Wiadomość jest dodawana z <xref:System.Web.TraceContextRecord.IsWarning%2A> właściwością ustawioną na `false` , <xref:System.Web.TraceContextRecord.ErrorInfo%2A> a jej właściwość `null`jest ustawiona na.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ category, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Write : string * string -&gt; unit" Usage="traceContext.Write (category, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">Kategoria śledzenia, która odbiera komunikat.</param>
        <param name="message">Komunikat śledzenia do zapisu w dzienniku.</param>
        <summary>Zapisuje informacje o śledzeniu do dziennika śledzenia, w tym komunikat i wszystkie kategorie zdefiniowane przez użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za <xref:System.Web.TraceContext.Write%2A> <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> <xref:System.Web.TraceContext.TraceFinished> każdym razem, gdy wywoływana jest metoda, komunikat śledzenia jest dodawany do kolekcji messages, która jest dostępna podczas obsługi zdarzenia. <xref:System.Web.TraceContext> Wiadomość jest dodawana z <xref:System.Web.TraceContextRecord.IsWarning%2A> właściwością ustawioną na `false` , <xref:System.Web.TraceContextRecord.ErrorInfo%2A> a jej właściwość `null`jest ustawiona na.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak wywołać metodę, <xref:System.Web.TraceContext.Write%2A> aby napisać komunikat śledzenia błędu do dziennika śledzenia. W tym przykładzie delegat wykonuje iterację komunikatów śledzenia i zapisuje je w postaci tabeli HTML. można jednak napisać te same informacje do bazy danych lub do użytkownika narzędzia profilowania.  
  
 [!code-aspx-csharp[System.Web.Trace_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_5/CS/form5cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_5/VB/form5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string category, string message, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string category, string message, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (category As String, message As String, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ category, System::String ^ message, Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="member this.Write : string * string * Exception -&gt; unit" Usage="traceContext.Write (category, message, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">Kategoria śledzenia, która odbiera komunikat.</param>
        <param name="message">Komunikat śledzenia do zapisu w dzienniku.</param>
        <param name="errorInfo"><see cref="T:System.Exception" /> Zawierający informacje o błędzie.</param>
        <summary>Zapisuje informacje o śledzeniu do dziennika śledzenia, w tym wszystkie kategorie zdefiniowane przez użytkownika, komunikaty śledzenia i informacje o błędzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za <xref:System.Web.TraceContext.Write%2A> <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> <xref:System.Web.TraceContext.TraceFinished> każdym razem, gdy wywoływana jest metoda, komunikat śledzenia jest dodawany do kolekcji messages, która jest dostępna podczas obsługi zdarzenia. <xref:System.Web.TraceContext> Wiadomość jest dodawana z <xref:System.Web.TraceContextRecord.IsWarning%2A> właściwością ustawioną na `false`, a <xref:System.Web.TraceContextRecord.ErrorInfo%2A> Właściwość `errorInfo` jest ustawiana na obiekt przekazaną przez parametr.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak wywołać metodę, <xref:System.Web.TraceContext.Write%2A> aby napisać komunikat śledzenia błędu do dziennika śledzenia. W tym przykładzie różne wyjątki są śledzone jako błędy i ostrzeżenia. Gdy strona zgłosi <xref:System.ArgumentException>, zapisuje komunikat ostrzegawczy <xref:System.Web.TraceContext.Warn%2A> przy użyciu metody. Gdy strona zgłosi <xref:System.InvalidOperationException>, zapisuje komunikat o błędzie <xref:System.Web.TraceContext.Write%2A> przy użyciu metody.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416">Śledzenie ASP.NET — Omówienie</related>
      </Docs>
    </Member>
  </Members>
</Type>
