<Type Name="HttpCookieCollection" FullName="System.Web.HttpCookieCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="231aa94a2a3e49be9468746c1d713a0fdc8e63bf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36574374" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpCookieCollection : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookieCollection extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookieCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookieCollection&#xA;Inherits NameObjectCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookieCollection sealed : System::Collections::Specialized::NameObjectCollectionBase" />
  <TypeSignature Language="F#" Value="type HttpCookieCollection = class&#xA;    inherit NameObjectCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia bezpieczny sposób modyfikowania plików cookie protokołu HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób odczytywania plikami cookie przy użyciu <xref:System.Web.HttpRequest.Cookies%2A> właściwość <xref:System.Web.HttpRequest> obiektu i zapisać plikami cookie przy użyciu <xref:System.Web.HttpResponse.Cookies%2A> właściwość <xref:System.Web.HttpResponse> obiektu. Obie właściwości zwracają <xref:System.Web.HttpCookieCollection> obiektów. Jeśli jeden z dwóch plików cookie o nazwie `userName` i `lastVisit` nie są w żądaniu HTTP, a następnie są one tworzone w odpowiedzi HTTP. Jeśli istnieją dwa pliki cookie, są wyświetlane właściwości plików cookie.  
  
 [!code-aspx-csharp[System.Web.HttpCookieCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookieCollection/cs/HttpCookieCollection.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookieCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookieCollection/vb/HttpCookieCollection.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpCookie" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookieCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookieCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.HttpCookieCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program ASP.NET zawiera dwie kolekcje wewnętrzne pliku cookie. Kolekcja dostępny za pośrednictwem <xref:System.Web.HttpRequest.Cookies%2A> zawiera pliki cookie wysłanych przez klienta do serwera w `Cookie` nagłówka. Kolekcja dostępny za pośrednictwem <xref:System.Web.HttpResponse.Cookies%2A> zawiera pliki cookie generowany na serwerze i przesyłane do klienta w `Set-Cookie` nagłówka.  
  
   
  
## Examples  
 Poniższy przykład tworzy nowy obiekt kolekcji plików cookie i wypełnia je plików cookie odebranych z klienta.  
  
 [!code-csharp[Classic HttpCookieCollection.HttpCookieCollection Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.HttpCookieCollection Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.HttpCookieCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.HttpCookieCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
        <altmember cref="T:System.Web.HttpCookie" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.HttpCookie -&gt; unit" Usage="httpCookieCollection.Add cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <see cref="T:System.Web.HttpCookie" /> Do dodania do kolekcji.</param>
        <summary>Dodaje określony plik cookie do kolekcji plików cookie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dowolną liczbę kolekcji plików cookie może istnieć w aplikacji, ale tylko kolekcja odwołuje się wewnętrzne <xref:System.Web.HttpResponse.Cookies%2A> obiektu są wysyłane do klienta.  
  
 <xref:System.Web.HttpCookieCollection.Add%2A> Metoda pozwala zduplikowane pliki cookie w kolekcji cookie. Użyj <xref:System.Web.HttpCookieCollection.Set%2A> metody dla zapewnienia unikatowości plików cookie w kolekcji plików cookie.  
  
   
  
## Examples  
 Poniższy przykład tworzy nową kolekcję plików cookie i nowy plik cookie o nazwie "LastVisit" Ustawia wartość pliku cookie do bieżącej daty i godziny i dodaje plik cookie do nowej kolekcji.  
  
 [!code-csharp[Classic HttpCookieCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Clear" />
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllKeys : string[]" Usage="System.Web.HttpCookieCollection.AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tablica ciągów zawierająca wszystkie klucze (nazwy pliku cookie) w kolekcji plików cookie.</summary>
        <value>Tablica nazw plików cookie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy tablicę ciągów, zawierający nazwy plików cookie w kolekcji cookie klienta.  
  
 [!code-csharp[Classic HttpCookieCollection.AllKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.AllKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.AllKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.AllKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Item" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpCookieCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści wszystkie pliki cookie z kolekcji plików cookie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład powoduje usunięcie wszystkich plików cookie z kolekcji plików cookie.  
  
 [!code-csharp[Classic HttpCookieCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int -&gt; unit" Usage="httpCookieCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Miejsce docelowe <see cref="T:System.Array" />.</param>
        <param name="index">Indeks tablicy docelowej, w którym rozpoczyna się kopiowanie.</param>
        <summary>Kopiuje elementy członkowskie kolekcji plików cookie do <see cref="T:System.Array" /> zaczynając od określonego indeksu tablicy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod kopiuje całą kolekcję cookie do nowego obiektu tablicy.  
  
 [!code-csharp[Classic HttpCookieCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Clear" />
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca osoby <see cref="T:System.Web.HttpCookie" /> obiekt z kolekcji plików cookie. Ta właściwość jest przeciążony umożliwia pobieranie plików cookie według nazwy lub indeksu liczbowego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.HttpCookie Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCookie ^ Get(int index);" />
      <MemberSignature Language="F#" Value="member this.Get : int -&gt; System.Web.HttpCookie" Usage="httpCookieCollection.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks pliku cookie do zwrócenia z kolekcji.</param>
        <summary>Zwraca <see cref="T:System.Web.HttpCookie" /> element o określonym indeksie z kolekcji plików cookie.</summary>
        <returns>
          <see cref="T:System.Web.HttpCookie" /> Określonego przez <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zwraca każdy plik cookie z kolekcji plików cookie, sprawdza, czy ma nazwę "LastVisit" i "LastVisit" zostanie znaleziony, aktualizuje jego wartość do bieżącej daty i godziny.  
  
 [!code-csharp[Classic HttpCookieCollection.Get1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Get1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Get1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Get1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.HttpCookie Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (name As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCookie ^ Get(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; System.Web.HttpCookie" Usage="httpCookieCollection.Get name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie do pobrania z kolekcji.</param>
        <summary>Zwraca plik cookie o określonej nazwie z kolekcji plików cookie.</summary>
        <returns>
          <see cref="T:System.Web.HttpCookie" /> Określonego przez <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli plik cookie o nazwie nie istnieje, ta metoda tworzy nowy plik cookie o tej nazwie.  
  
   
  
## Examples  
 Poniższy przykład powoduje przechwycenie kolekcji cookie wysłane przez klienta do nowej kolekcji plików cookie, pobiera plik cookie z nową kolekcję o nazwie "LastVisit" i aktualizuje wartość pliku cookie do bieżącej daty i godziny.  
  
 [!code-csharp[Classic HttpCookieCollection.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Get Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.GetKey : int -&gt; string" Usage="httpCookieCollection.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks klucza można pobrać z kolekcji.</param>
        <summary>Zwraca klucz (nazwa) pliku cookie dla podanego indeksu liczbowego.</summary>
        <returns>Nazwa określona przez plik cookie <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zwraca każdy plik cookie z kolekcji plików cookie, sprawdza, czy ma nazwę "LastVisit" i "LastVisit" zostanie znaleziony, aktualizuje jego wartość do bieżącej daty i godziny.  
  
 [!code-csharp[Classic HttpCookieCollection.GetKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.GetKey Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.GetKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.GetKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera plik cookie o określonej nazwie z kolekcji plików cookie. Ta właściwość jest przeciążony umożliwia pobieranie plików cookie według nazwy lub indeksu liczbowego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookie Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookie ^ default[int] { System::Web::HttpCookie ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.HttpCookie" Usage="System.Web.HttpCookieCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks pliku cookie do pobrania z kolekcji.</param>
        <summary>Pobiera plik cookie z określonym indeksem numerycznym z kolekcji plików cookie.</summary>
        <value>
          <see cref="T:System.Web.HttpCookie" /> Określonego przez <paramref name="index" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przechowuje Nazwa pierwszego pliku cookie jako zmienna typu ciąg (indeks = 0) w kolekcji plików cookie.  
  
 [!code-csharp[Classic HttpCookieCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookie this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookie Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookieCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookie ^ default[System::String ^] { System::Web::HttpCookie ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.HttpCookie" Usage="System.Web.HttpCookieCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie do pobrania.</param>
        <summary>Pobiera plik cookie o określonej nazwie z kolekcji plików cookie.</summary>
        <value>
          <see cref="T:System.Web.HttpCookie" /> Określony przez <paramref name="name." /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pobiera plik cookie o nazwie "LastVisit" i wyodrębnianie jej wartości.  
  
 [!code-csharp[Classic HttpCookieCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="httpCookieCollection.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku cookie do usunięcia z kolekcji.</param>
        <summary>Usuwa plik cookie o określonej nazwie z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli plik cookie z określoną `name` nie istnieje w kolekcji nie wyjątku.  
  
   
  
## Examples  
 Poniższy przykład umożliwia usunięcie pliku cookie z kolekcji.  
  
 [!code-csharp[Classic HttpCookieCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
        <altmember cref="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(System::Web::HttpCookie ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.Set : System.Web.HttpCookie -&gt; unit" Usage="httpCookieCollection.Set cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <see cref="T:System.Web.HttpCookie" /> Aktualizację obiektu.</param>
        <summary>Aktualizuje wartość istniejący plik cookie w kolekcji plików cookie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCookieCollection.Set%2A> Metody najpierw sprawdza, czy plik cookie już istnieje w kolekcji i jeśli tak aktualizacji. <xref:System.Web.HttpCookieCollection.Set%2A> — Metoda nie zezwala na zduplikowane pliki cookie w kolekcji plików cookie. Aby dodać zduplikowane pliki cookie w kolekcji plików cookie, użyj <xref:System.Web.HttpCookieCollection.Add%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład aktualizuje wartość istniejący plik cookie.  
  
 [!code-csharp[Classic HttpCookieCollection.Set Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookieCollection.Set Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookieCollection.Set Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookieCollection.Set Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpCookieCollection.Get" />
        <altmember cref="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)" />
      </Docs>
    </Member>
  </Members>
</Type>