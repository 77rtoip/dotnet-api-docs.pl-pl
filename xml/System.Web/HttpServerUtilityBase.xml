<Type Name="HttpServerUtilityBase" FullName="System.Web.HttpServerUtilityBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2f8f01af0de5989211911334d88bff74d1bce6a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30694685" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpServerUtilityBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpServerUtilityBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpServerUtilityBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpServerUtilityBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpServerUtilityBase abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Pełni rolę klasy podstawowej dla klas, które zapewniają metody pomocnicze do przetwarzania żądań sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpServerUtilityBase> Klasa jest klasą abstrakcyjną, która zawiera tych samych elementów członkowskich jako <xref:System.Web.HttpServerUtility> klasy. <xref:System.Web.HttpServerUtilityBase> Klasa umożliwia tworzenie klasy pochodne, które są podobne do <xref:System.Web.HttpServerUtility> klasy, ale można dostosować i które pracują poza potoku ASP.NET. Podczas wykonywania testów jednostkowych zwykle przy użyciu klasy pochodnej członków z dostosowanego zachowania spełniającego testowanego scenariusza.  
  
 <xref:System.Web.HttpServerUtilityWrapper> Pochodną klasy <xref:System.Web.HttpServerUtilityBase> klasy. <xref:System.Web.HttpServerUtilityWrapper> Klasy służy jako otoka dla <xref:System.Web.HttpServerUtility> klasy. W czasie wykonywania, używane zwykle wystąpienia <xref:System.Web.HttpServerUtilityWrapper> klasy do wywołania członkami <xref:System.Web.HttpServerUtility> obiektu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpServerUtilityBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpServerUtilityBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje klasę do użycia przez odziedziczone wystąpienie klasy. Ten konstruktor można wywołać tylko przez odziedziczoną klasę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public virtual void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej usuwa najnowszych wyjątku.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej tworzy wystąpienie serwera obiektu COM.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public virtual object CreateObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.CreateObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateObject(System::String ^ progID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID">Klasa lub typ obiektu do utworzenia wystąpienia.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej tworzy wystąpienie serwera obiektu modelu COM, który jest identyfikowany przez identyfikator programowy obiektu (ProgID).</summary>
        <returns>Nowy obiekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public virtual object CreateObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.CreateObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateObject(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Typ reprezentujący obiekt do utworzenia.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej tworzy wystąpienie serwera obiektu modelu COM, który jest identyfikowany przez typ obiektu.</summary>
        <returns>Nowy obiekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectFromClsid">
      <MemberSignature Language="C#" Value="public virtual object CreateObjectFromClsid (string clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateObjectFromClsid(string clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.CreateObjectFromClsid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObjectFromClsid (clsid As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateObjectFromClsid(System::String ^ clsid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clsid">Identyfikator klasy obiektu do utworzenia wystąpienia.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej tworzy wystąpienie serwera obiektu modelu COM, który jest identyfikowany przez identyfikator klasy obiektu (CLSID).</summary>
        <returns>Nowy obiekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wykonuje program obsługi dla określonego zasobu w kontekście bieżącego żądania i zwraca wykonanie do procesu, który wywołał go.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Adres URL obsługi do wykonania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wykonuje program obsługi dla określonej ścieżki wirtualnej w ramach bieżącego procesu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">Adres URL obsługi do wykonania.</param>
        <param name="preserveForm">
          <see langword="true" /> Aby zachować <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji; <see langword="false" /> wyczyść <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, jest wykonywany w kontekście bieżącego procesu obsługi dla określonej ścieżki wirtualnej i określa, czy wyczyścić <see cref="P:System.Web.HttpRequestBase.QueryString" /> i <see cref="P:System.Web.HttpRequestBase.Form" /> kolekcji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path, System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path, class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String, writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path, System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="path">Adres URL obsługi do wykonania.</param>
        <param name="writer">Obiekt do przechwytywania danych wyjściowych.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wykonuje program obsługi dla określonej ścieżki wirtualnej w ramach bieżącego procesu przy użyciu <see cref="T:System.IO.TextWriter" /> wystąpienie do przechwytywania danych wyjściowych z wykonanie procedury obsługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `writer` Parametr jest przekazywany przez odwołanie do <xref:System.Web.HttpServerUtilityBase.Execute%2A> metody. Aby pobrać dane wyjściowe z programu obsługi, po zakończeniu metody, należy użyć właściwości i metod `writer` obiektu. Na przykład zobacz <xref:System.Web.HttpServerUtility.Execute%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">Adres URL obsługi do wykonania.</param>
        <param name="writer">Obiekt do przechwytywania danych wyjściowych.</param>
        <param name="preserveForm">
          <see langword="true" /> Aby zachować <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji; <see langword="false" /> wyczyść <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wykonuje program obsługi dla określonej ścieżki wirtualnej w kontekście bieżącego żądania przy użyciu <see cref="T:System.IO.TextWriter" /> wystąpienie do przechwytywania danych wyjściowych strony i wartości, która wskazuje, czy można wyczyścić <see cref="P:System.Web.HttpRequestBase.QueryString" /> i <see cref="P:System.Web.HttpRequestBase.Form" />kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `writer` Parametr jest przekazywany przez odwołanie do <xref:System.Web.HttpServerUtilityBase.Execute%2A> metody. Aby pobrać dane wyjściowe z programu obsługi, po zakończeniu metody, należy użyć właściwości i metod `writer` obiektu. Na przykład zobacz <xref:System.Web.HttpServerUtility.Execute%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(class System.Web.IHttpHandler handler, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (handler As IHttpHandler, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::Web::IHttpHandler ^ handler, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">Program obsługi HTTP, który implementuje interfejs do transferu bieżącego żądania.</param>
        <param name="writer">Obiekt do przechwytywania danych wyjściowych.</param>
        <param name="preserveForm">
          <see langword="true" /> Aby zachować <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji; <see langword="false" /> wyczyść <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wykonuje określonego programu obsługi w kontekście bieżącego przetworzyć przy użyciu <see cref="T:System.IO.TextWriter" /> wystąpienie do przechwytywania danych wyjściowych z obsługi wykonane i wartość, która określa, czy należy wyczyścić <see cref="P:System.Web.HttpRequestBase.QueryString" /> i <see cref="P:System.Web.HttpRequestBase.Form" /> Kolekcje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `writer` Parametr jest przekazywany przez odwołanie do <xref:System.Web.HttpServerUtilityBase.Execute%2A> metody. Aby pobrać dane wyjściowe z programu obsługi, po zakończeniu metody, należy użyć właściwości i metod `writer` obiektu. Na przykład zobacz <xref:System.Web.HttpServerUtility.Execute%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLastError">
      <MemberSignature Language="C#" Value="public virtual Exception GetLastError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetLastError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.GetLastError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLastError () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetLastError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca najnowsze wyjątku.</summary>
        <returns>Najnowsze wyjątek został zgłoszony.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, Dekoduje ciąg kodowany w formacie HTML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public virtual string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Ciąg HTML do zdekodowania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, Dekoduje ciąg kodowany w formacie HTML i zwraca Dekodowany ciąg.</summary>
        <returns>Tekst zdekodowana.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public virtual void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">Ciąg HTML do zdekodowania.</param>
        <param name="output">Strumień, który zawiera Dekodowany ciąg.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, Dekoduje ciąg kodowany w formacie HTML i zwraca wyniki w strumieniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `output` Parametr jest przekazywany przez odwołanie do <xref:System.Web.HttpServerUtilityBase.HtmlDecode%2A> metody. Aby pobrać dane wyjściowe z programu obsługi, po zakończeniu metody, należy użyć właściwości i metod `output` obiektu. Na przykład zobacz <xref:System.Web.HttpServerUtility.HtmlDecode%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej koduje HTML ciąg.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Ciąg do kodowania.</param>
        <summary>W przypadku przesłonięcia w pochodnej klasie ciąg koduje HTML i zwraca ciąg kodowany jako.</summary>
        <returns>Tekst kodowany w formacie HTML.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">Ciąg do kodowania.</param>
        <param name="output">Strumień, który zawiera ciąg zakodowany.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, ciąg koduje HTML i wysyła wynikowe dane wyjściowe do strumienia wyjściowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `output` Parametr jest przekazywany przez odwołanie do <xref:System.Web.HttpServerUtilityBase.HtmlEncode%2A> metody. Aby pobrać dane wyjściowe z programu obsługi, po zakończeniu metody, należy użyć właściwości i metod `output` obiektu. Na przykład zobacz <xref:System.Web.HttpServerUtility.HtmlEncode%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public virtual string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtilityBase.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera nazwę komputera serwera.</summary>
        <value>Nazwa komputera serwera.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public virtual string MapPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MapPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MapPath(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Ścieżka wirtualna można pobrać ścieżki fizycznej.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca ścieżka fizyczna do pliku, który odpowiada do określonej ścieżki wirtualnej na serwerze sieci Web.</summary>
        <returns>Ścieżka fizyczna do pliku, który odpowiada <paramref name="path" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTimeout">
      <MemberSignature Language="C#" Value="public virtual int ScriptTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScriptTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtilityBase.ScriptTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScriptTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScriptTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera lub ustawia wartość limitu czasu żądania w sekundach.</summary>
        <value>Wartość limitu czasu dla żądania.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transfer">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, kończy wykonywanie bieżącego procesu i rozpoczyna się wykonanie innego procesu dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public virtual void Transfer (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transfer(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Transfer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Transfer (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Transfer(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Adres URL strony lub program obsługi do wykonania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, kończy wykonywanie bieżącego procesu i rozpoczyna wykonywanie strony lub program obsługi, który jest określany za pomocą adresu URL.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public virtual void Transfer (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transfer(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Transfer(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Transfer (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Transfer(System::String ^ path, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">Adres URL strony lub program obsługi do wykonania.</param>
        <param name="preserveForm">
          <see langword="true" /> Aby zachować <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji; <see langword="false" /> wyczyść <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, kończy wykonywanie bieżącej strony i rozpoczyna wykonywanie programu obsługi lub innej strony przy użyciu określonego adresu URL i wartość, która określa, czy wyczyścić <see cref="P:System.Web.HttpRequestBase.QueryString" /> i <see cref="P:System.Web.HttpRequestBase.Form" /> kolekcji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public virtual void Transfer (System.Web.IHttpHandler handler, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transfer(class System.Web.IHttpHandler handler, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Transfer(System.Web.IHttpHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Transfer (handler As IHttpHandler, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Transfer(System::Web::IHttpHandler ^ handler, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">Program obsługi HTTP do transferu bieżącego żądania.</param>
        <param name="preserveForm">
          <see langword="true" /> Aby zachować <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji; <see langword="false" /> wyczyść <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, kończy wykonywanie bieżącego procesu i rozpoczyna się wykonanie nowe żądanie, przy użyciu niestandardowy program obsługi HTTP i wartość, która określa, czy wyczyścić <see cref="P:System.Web.HttpRequestBase.QueryString" /> i <see cref="P:System.Web.HttpRequestBase.Form" /> kolekcji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransferRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wykonuje asynchronicznie punkt końcowy z określonym adresem URL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Adres URL strony lub program obsługi do wykonania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wykonuje asynchronicznie punkt końcowy z określonym adresem URL.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">Adres URL strony lub program obsługi do wykonania.</param>
        <param name="preserveForm">
          <see langword="true" /> Aby zachować <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji; <see langword="false" /> wyczyść <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, asynchronicznie wykonuje punkt końcowy z określonym adresem URL i określa, czy wyczyścić <see cref="P:System.Web.HttpRequestBase.QueryString" /> i <see cref="P:System.Web.HttpRequestBase.Form" /> kolekcji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="path">Adres URL strony lub program obsługi do wykonania.</param>
        <param name="preserveForm">
          <see langword="true" /> Aby zachować <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji; <see langword="false" /> wyczyść <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji.</param>
        <param name="method">Metoda HTTP (<see langword="GET" />, <see langword="POST" />i tak dalej) do użycia dla nowego żądania. Jeśli <see langword="null" />, jest używana metoda oryginalnego żądania HTTP.</param>
        <param name="headers">Kolekcja nagłówków żądania dla nowego żądania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wykonuje asynchronicznie punkt końcowy z określonym adresem URL za pomocą określonej metody HTTP i nagłówków.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers, bool preserveUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection, preserveUser As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers, bool preserveUser);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="preserveUser" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">Ścieżka.</param>
        <param name="preserveForm">
          <see langword="true" /> Aby zachować <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji; <see langword="false" /> wyczyść <see cref="P:System.Web.HttpRequest.QueryString" /> i <see cref="P:System.Web.HttpRequest.Form" /> kolekcji.</param>
        <param name="method">Metoda HTTP do użycia dla nowego żądania.</param>
        <param name="headers">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> obiekt, który zawiera nagłówki żądania dla nowego żądania.</param>
        <param name="preserveUser">
          <see langword="true" /> Aby zachować tożsamość użytkownika; w przeciwnym razie <see langword="false" />. Inne przeciążenia tej metody wywołać tego przeciążenia metody z <c>preserveUser</c> ustawiono parametr <see langword="true" />.</param>
        <summary>Po zaimplementowaniu w klasie pochodnej, wykonuje asynchronicznie punkt końcowy z określonym adresem URL, przy użyciu określonego protokołu HTTP — metoda, nagłówki, ścieżka i opcje zachowania wartości formularza i zachowania tożsamości użytkownika.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, Dekoduje ciąg kodowany w celu uwzględnienia tylko znaki, które są dozwolone w adresie URL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public virtual string UrlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlDecode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Ciąg do zdekodowania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, Dekoduje ciąg kodowany w formacie adresu URL i zwraca Dekodowany ciąg.</summary>
        <returns>Tekst zdekodowana.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public virtual void UrlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UrlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UrlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UrlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">Ciąg do zdekodowania.</param>
        <param name="output">Strumień, który zawiera Dekodowany ciąg.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, Dekoduje ciąg zakodowane w adresie URL i wysyła dane wyjściowe do strumienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `output` Parametr jest przekazywany przez odwołanie do <xref:System.Web.HttpServerUtilityBase.UrlDecode%2A> metody. Aby pobrać dane wyjściowe z programu obsługi, po zakończeniu metody, należy użyć właściwości i metod `output` obiektu. Na przykład zobacz <xref:System.Web.HttpServerUtility.HtmlDecode%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, koduje ciąg, aby uwzględnić wyłącznie znaki dopuszczalne w adresie URL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public virtual string UrlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlEncode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Tekst do kodowania adresu URL.</param>
        <summary>W przypadku przesłonięcia w pochodnej klasie ciąg koduje adresu URL i zwraca ciąg kodowany jako.</summary>
        <returns>Tekst zakodowane w adresie URL.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public virtual void UrlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UrlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UrlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UrlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">Ciąg do kodowania.</param>
        <param name="output">Strumień, który zawiera ciąg zakodowany.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, ciąg koduje adresu URL i wysyła wynikowe dane wyjściowe do strumienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `output` Parametr jest przekazywany przez odwołanie do <xref:System.Web.HttpServerUtilityBase.UrlEncode%2A> metody. Aby pobrać dane wyjściowe z programu obsługi, po zakończeniu metody, należy użyć właściwości i metod `output` obiektu. Na przykład zobacz <xref:System.Web.HttpServerUtility.UrlEncode%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public virtual string UrlPathEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlPathEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlPathEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Ciąg do zakodowania adresu URL.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej koduje adres URL z sekcjami ścieżki ciągu adresu URL.</summary>
        <returns>Tekst zakodowane w adresie URL.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlTokenDecode">
      <MemberSignature Language="C#" Value="public virtual byte[] UrlTokenDecode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] UrlTokenDecode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlTokenDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlTokenDecode (input As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlTokenDecode(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Token ciągu adresu URL do zdekodowania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, dekoduje tokenem ciągu adresu URL do tablicy typu byte równoważne przy użyciu cyfr algorytmem Base64.</summary>
        <returns>Tablica bajtów zawierającą dekodowane token adresu URL.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlTokenEncode">
      <MemberSignature Language="C#" Value="public virtual string UrlTokenEncode (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlTokenEncode(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlTokenEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlTokenEncode (input As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlTokenEncode(cli::array &lt;System::Byte&gt; ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">Tablica bajtów do kodowania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, koduje tablicy bajtów w reprezentacji ciągu równoważne przy użyciu cyfr base64, dzięki czemu można używać w celu przesłania go na adres URL.</summary>
        <returns>Ciąg, który zawiera tablicę zakodowanej, jeśli długość <paramref name="input" /> jest większa niż 1; w przeciwnym razie ciąg pusty ("")</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Zawsze.</exception>
      </Docs>
    </Member>
  </Members>
</Type>