<Type Name="HttpCachePolicy" FullName="System.Web.HttpCachePolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de1fd13e089ca3e3758d206ee1b5aa17302fff94" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69396828" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCachePolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCachePolicy sealed" />
  <TypeSignature Language="F#" Value="type HttpCachePolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera metody ustawiania nagłówków HTTP związanych z pamięcią podręczną i kontrolowania wyjściowej pamięci podręcznej stron ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać ogólne informacje dotyczące nagłówków HTTP i kontrolowania buforowania, zobacz RFC 2616: Protokół HTTP/1.1, dostępny w [witrynie sieci Web organizacja World Wide Web Consortium (W3C)](https://go.microsoft.com/fwlink/?linkid=37125).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddValidationCallback">
      <MemberSignature Language="C#" Value="public void AddValidationCallback (System.Web.HttpCacheValidateHandler handler, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationCallback(class System.Web.HttpCacheValidateHandler handler, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValidationCallback (handler As HttpCacheValidateHandler, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationCallback(System::Web::HttpCacheValidateHandler ^ handler, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.AddValidationCallback : System.Web.HttpCacheValidateHandler * obj -&gt; unit" Usage="httpCachePolicy.AddValidationCallback (handler, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.HttpCacheValidateHandler" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handler"><see cref="T:System.Web.HttpCacheValidateHandler" /> Wartość.</param>
        <param name="data">Dowolne dane dostarczone przez użytkownika, które są przesyłane z powrotem do <see cref="M:System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)" /> obiektu delegowanego.</param>
        <summary>Rejestruje wywołanie zwrotne walidacji dla bieżącej odpowiedzi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> Metoda udostępnia mechanizm umożliwiający sprawdzanie reakcji w sposób programistyczny w pamięci podręcznej przed zwróceniem odpowiedzi do klienta przez wyjściową pamięć podręczną.  
  
 Przed udostępnieniem odpowiedzi z pamięci podręcznej serwera sieci Web wszystkie zarejestrowane programy obsługi są badane w celu zapewnienia poprawnego stanu zasobów. Jeśli jakakolwiek procedura obsługi ustawi flagę wskazującą, że buforowana odpowiedź jest nieprawidłowa, wpis jest oznaczony jako nieprawidłowy i wykluczony z pamięci podręcznej. W tym przypadku, a także gdy jakakolwiek procedura obsługi wskazuje, że buforowana odpowiedź powinna być ignorowana dla tego żądania, żądanie jest następnie obsługiwane tak, jakby było chybień pamięci podręcznej.  
  
 <xref:System.Web.HttpCachePolicy.AddValidationCallback%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dodać delegata, aby sprawdzić poprawność żądania na podstawie wartości ciągu zapytania.  
  
 [!code-aspx-csharp[Cache Validation Callback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache validation callback/CS/ValidationCallbackcs.aspx#1)]
 [!code-aspx-vb[Cache Validation Callback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache validation callback/VB/ValidationCallbackvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Określona <paramref name="handler" /> wartość to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendCacheExtension">
      <MemberSignature Language="C#" Value="public void AppendCacheExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendCacheExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.AppendCacheExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendCacheExtension (extension As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendCacheExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.AppendCacheExtension : string -&gt; unit" Usage="httpCachePolicy.AppendCacheExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">Tekst do dołączenia do <see langword="Cache-Control" /> nagłówka.</param>
        <summary>Dołącza określony tekst do <see langword="Cache-Control" /> nagłówka HTTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli przeglądarka nie rozpoznaje dyrektyw lub rozszerzeń pamięci podręcznej, przeglądarka musi zignorować nierozpoznane warunki. Aby uzyskać więcej informacji, zobacz RFC 2616: Protokół HTTP/1.1, dostępny w [witrynie sieci Web organizacja World Wide Web Consortium (W3C)](https://go.microsoft.com/fwlink/?linkid=37125).  
  
 <xref:System.Web.HttpCachePolicy.AppendCacheExtension%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie rozszerzenia kontroli pamięci podręcznej obsługiwanego przez program Internet Explorer. Serwer wskazuje przeglądarki, że zawartość nie ulegnie zmianie przez godzinę (`pre-check=3600`) i instruuje ją, aby pobrać zawartość bezpośrednio z lokalnej pamięci podręcznej. Jeśli jednak zawartość zostanie zmodyfikowana przez serwer, a użytkownik zażądał od 15 minut (`post-check= 900`) do jednej godziny, przeglądarka wyświetli informacje znajdujące się w lokalnej pamięci podręcznej, ale również sprawdza w tle i opcjonalne pobieranie nowej zawartości na serwerze.  
  
 [!code-csharp[Classic HttpCachePolicy.AppendCacheExtension Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.AppendCacheExtension Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.AppendCacheExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.AppendCacheExtension Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="extension" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCacheability">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheability GetCacheability ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.HttpCacheability GetCacheability() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetCacheability" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCacheability () As HttpCacheability" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCacheability GetCacheability();" />
      <MemberSignature Language="F#" Value="member this.GetCacheability : unit -&gt; System.Web.HttpCacheability" Usage="httpCachePolicy.GetCacheability " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheability</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dyrektywę kontroli pamięci podręcznej.</summary>
        <returns>Dyrektywa kontroli pamięci podręcznej.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheExtensions">
      <MemberSignature Language="C#" Value="public string GetCacheExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCacheExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetCacheExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCacheExtensions () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCacheExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetCacheExtensions : unit -&gt; string" Usage="httpCachePolicy.GetCacheExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera rozszerzenia pamięci podręcznej.</summary>
        <returns>Rozszerzenia pamięci podręcznej.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetETag">
      <MemberSignature Language="C#" Value="public string GetETag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetETag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetETag" />
      <MemberSignature Language="VB.NET" Value="Public Function GetETag () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetETag();" />
      <MemberSignature Language="F#" Value="member this.GetETag : unit -&gt; string" Usage="httpCachePolicy.GetETag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera element ETag.</summary>
        <returns>Element ETag.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetETagFromFileDependencies">
      <MemberSignature Language="C#" Value="public bool GetETagFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetETagFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetETagFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetETagFromFileDependencies () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetETagFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.GetETagFromFileDependencies : unit -&gt; bool" Usage="httpCachePolicy.GetETagFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera stan wskazujący, czy <see langword="ETag" /> nagłówek został ustawiony w oparciu o sygnatury czasowe zależności pliku procedury obsługi.</summary>
        <returns><see langword="true" />Jeśli nagłówek został ustawiony w oparciu o sygnatury czasowe zależności pliku programu obsługi; <see langword="false" />w przeciwnym razie. <see langword="ETag" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpires">
      <MemberSignature Language="C#" Value="public DateTime GetExpires ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetExpires() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetExpires" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpires () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetExpires();" />
      <MemberSignature Language="F#" Value="member this.GetExpires : unit -&gt; DateTime" Usage="httpCachePolicy.GetExpires " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera nagłówek wygaśnięcia.</summary>
        <returns>Nagłówek wygaśnięcia.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIgnoreRangeRequests">
      <MemberSignature Language="C#" Value="public bool GetIgnoreRangeRequests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIgnoreRangeRequests() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetIgnoreRangeRequests" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIgnoreRangeRequests () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIgnoreRangeRequests();" />
      <MemberSignature Language="F#" Value="member this.GetIgnoreRangeRequests : unit -&gt; bool" Usage="httpCachePolicy.GetIgnoreRangeRequests " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera stan żądań Ignoruj zakres.</summary>
        <returns><see langword="true" />Jeśli żądania zakresu są ignorowane; w <see langword="false" />przeciwnym razie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastModifiedFromFileDependencies">
      <MemberSignature Language="C#" Value="public bool GetLastModifiedFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetLastModifiedFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetLastModifiedFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastModifiedFromFileDependencies () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetLastModifiedFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.GetLastModifiedFromFileDependencies : unit -&gt; bool" Usage="httpCachePolicy.GetLastModifiedFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera stan ostatniej modyfikacji nagłówka ustawionej na podstawie sygnatury czasowej zależności pliku procedury obsługi.</summary>
        <returns><see langword="true" />Jeśli nagłówek Last-Modified jest ustawiony na wartość Base dla sygnatur czasowych zależności pliku programu obsługi; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan GetMaxAge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetMaxAge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetMaxAge" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMaxAge () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetMaxAge();" />
      <MemberSignature Language="F#" Value="member this.GetMaxAge : unit -&gt; TimeSpan" Usage="httpCachePolicy.GetMaxAge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera maksymalny wiek kontroli pamięci podręcznej.</summary>
        <returns>Maksymalny wiek kontroli pamięci podręcznej.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNoServerCaching">
      <MemberSignature Language="C#" Value="public bool GetNoServerCaching ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetNoServerCaching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetNoServerCaching" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNoServerCaching () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetNoServerCaching();" />
      <MemberSignature Language="F#" Value="member this.GetNoServerCaching : unit -&gt; bool" Usage="httpCachePolicy.GetNoServerCaching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera stan buforowania serwera dla bieżącej odpowiedzi.</summary>
        <returns><see langword="true" />Jeśli buforowanie serwera jest zatrzymane dla bieżącej odpowiedzi; w <see langword="false" />przeciwnym razie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNoStore">
      <MemberSignature Language="C#" Value="public bool GetNoStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetNoStore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetNoStore" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNoStore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetNoStore();" />
      <MemberSignature Language="F#" Value="member this.GetNoStore : unit -&gt; bool" Usage="httpCachePolicy.GetNoStore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera stan magazynu.</summary>
        <returns><see langword="true" />Jeśli żaden magazyn nie jest ustawiony; w <see langword="false" />przeciwnym razie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNoTransforms">
      <MemberSignature Language="C#" Value="public bool GetNoTransforms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetNoTransforms() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetNoTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNoTransforms () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetNoTransforms();" />
      <MemberSignature Language="F#" Value="member this.GetNoTransforms : unit -&gt; bool" Usage="httpCachePolicy.GetNoTransforms " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera stan dyrektywy HTTP no-transform.</summary>
        <returns><see langword="true" />Jeśli określono dyrektywę HTTP no-transform; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Włącza wysyłanie nagłówka HTTP kontroli pamięci podręcznej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOmitVaryStar">
      <MemberSignature Language="C#" Value="public int GetOmitVaryStar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOmitVaryStar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetOmitVaryStar" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOmitVaryStar () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOmitVaryStar();" />
      <MemberSignature Language="F#" Value="member this.GetOmitVaryStar : unit -&gt; int" Usage="httpCachePolicy.GetOmitVaryStar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera stan <see langword="vary:*" /> nagłówka.</summary>
        <returns><see langword="true" />Jeśli nagłówek zostanie pominięty; w przeciwnym <see langword="false" />razie. <see langword="vary:*" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyMaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan GetProxyMaxAge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetProxyMaxAge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetProxyMaxAge" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProxyMaxAge () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetProxyMaxAge();" />
      <MemberSignature Language="F#" Value="member this.GetProxyMaxAge : unit -&gt; TimeSpan" Usage="httpCachePolicy.GetProxyMaxAge " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera formant pamięci podręcznej HTTP: Maksymalny wiek serwera proxy.</summary>
        <returns>Formant pamięci podręcznej HTTP: Maksymalny wiek serwera proxy.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRevalidation">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheRevalidation GetRevalidation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.HttpCacheRevalidation GetRevalidation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetRevalidation" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRevalidation () As HttpCacheRevalidation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::HttpCacheRevalidation GetRevalidation();" />
      <MemberSignature Language="F#" Value="member this.GetRevalidation : unit -&gt; System.Web.HttpCacheRevalidation" Usage="httpCachePolicy.GetRevalidation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheRevalidation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera pamięć podręczną-Control: header, aby odzwierciedlała dyrektywy wymagane do ponownego zweryfikowania lub weryfikacji serwera proxy.</summary>
        <returns>Cache-Control: nagłówek w celu odzwierciedlenia dyrektywy musi być ponownie zweryfikowane lub proxy-revalidate.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie nie należy wysyłać żadnej z tych dyrektyw, chyba że jest on jawnie włączony przy użyciu tej metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUtcLastModified">
      <MemberSignature Language="C#" Value="public DateTime GetUtcLastModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetUtcLastModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetUtcLastModified" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUtcLastModified () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetUtcLastModified();" />
      <MemberSignature Language="F#" Value="member this.GetUtcLastModified : unit -&gt; DateTime" Usage="httpCachePolicy.GetUtcLastModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość <see langword="Last-Modified" /> nagłówka HTTP w uniwersalnym czasie koordynowanym (UTC).</summary>
        <returns>Wartość <see langword="Last-Modified" /> nagłówka HTTP.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVaryByCustom">
      <MemberSignature Language="C#" Value="public string GetVaryByCustom ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetVaryByCustom() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.GetVaryByCustom" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVaryByCustom () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetVaryByCustom();" />
      <MemberSignature Language="F#" Value="member this.GetVaryByCustom : unit -&gt; string" Usage="httpCachePolicy.GetVaryByCustom " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera niestandardowy ciąg, który jest używany do różnicowania buforowania HTTP.</summary>
        <returns>Niestandardowy ciąg służący do różnicowania buforowania HTTP.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSlidingExpiration">
      <MemberSignature Language="C#" Value="public bool HasSlidingExpiration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasSlidingExpiration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.HasSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Function HasSlidingExpiration () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasSlidingExpiration();" />
      <MemberSignature Language="F#" Value="member this.HasSlidingExpiration : unit -&gt; bool" Usage="httpCachePolicy.HasSlidingExpiration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość określającą, czy pamięć podręczna ma przewinięcie zasad wygasania.</summary>
        <returns><see langword="true" />Jeśli pamięć podręczna ma przewinięcie zasad wygasania; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.IsModified" />
      <MemberSignature Language="VB.NET" Value="Public Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsModified();" />
      <MemberSignature Language="F#" Value="member this.IsModified : unit -&gt; bool" Usage="httpCachePolicy.IsModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość określającą, czy pamięć podręczna HTTP została zmodyfikowana.</summary>
        <returns><see langword="true" />Jeśli pamięć podręczna została zmodyfikowana; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidUntilExpires">
      <MemberSignature Language="C#" Value="public bool IsValidUntilExpires ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValidUntilExpires() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.IsValidUntilExpires" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidUntilExpires () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidUntilExpires();" />
      <MemberSignature Language="F#" Value="member this.IsValidUntilExpires : unit -&gt; bool" Usage="httpCachePolicy.IsValidUntilExpires " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość określającą, czy pamięć podręczna ASP.NET powinna ignorować <see langword="Cache-Control" /> nagłówki HTTP wysyłane przez klienta, który unieważnia pamięć podręczną.</summary>
        <returns><see langword="true" />Jeśli pamięć podręczna ASP.NET powinna ignorować <see langword="Cache-Control" /> nagłówki HTTP wysyłane przez klienta; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllowResponseInBrowserHistory">
      <MemberSignature Language="C#" Value="public void SetAllowResponseInBrowserHistory (bool allow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllowResponseInBrowserHistory(bool allow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllowResponseInBrowserHistory (allow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllowResponseInBrowserHistory(bool allow);" />
      <MemberSignature Language="F#" Value="member this.SetAllowResponseInBrowserHistory : bool -&gt; unit" Usage="httpCachePolicy.SetAllowResponseInBrowserHistory allow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allow"><see langword="true" />Aby skierować przeglądarkę klienta do przechowywania odpowiedzi w folderze Historia; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="false" />.</param>
        <summary>Sprawia, że odpowiedź jest dostępna w pamięci podręcznej historii przeglądarki klienta, niezależnie <see cref="T:System.Web.HttpCacheability" /> od ustawienia wprowadzonego na serwerze, <paramref name="allow" /> gdy parametr jest <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.HttpCacheability> jest ustawiona na <xref:System.Web.HttpCacheability.NoCache> lub <xref:System.Web.HttpCacheability.ServerAndNoCache> nagłówekHTTPjestdomyślnieustawionynawartość-1;oznaczato,żeklientniebuforujeodpowiedziwfolderzeHistoria,takżewprzypadkuużywaniaprzyciskówwstecz/dalejklientżądanowejwersjiprogramu.`Expires` odpowiedź za każdym razem. To zachowanie można zastąpić przez wywołanie <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> metody `allow` z parametrem ustawionym na `true`.  
  
 Jeśli <xref:System.Web.HttpCacheability> jest ustawiona na wartość inną niż <xref:System.Web.HttpCacheability.NoCache> lub <xref:System.Web.HttpCacheability.ServerAndNoCache>, wywołanie <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> metody z dowolną wartością dla `allow` nie ma żadnego wpływu.  
  
 <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zastąpić metodę, <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> aby skierować klienta do przechowywania odpowiedzi w historii w niestandardowym. <xref:System.Web.HttpCachePolicy>  
  
 [!code-aspx-csharp[HttpCachePolicySetAllowResponseInBrowserHistory#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicySetAllowResponseInBrowserHistory/CS/httpcachepolicy_setallowresponseinbrowserhistorycs.aspx#1)]
 [!code-aspx-vb[HttpCachePolicySetAllowResponseInBrowserHistory#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicySetAllowResponseInBrowserHistory/VB/httpcachepolicy_setallowresponseinbrowserhistoryvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCacheability">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia nagłówek <see langword="Cache-Control" /> http. Nagłówek <see langword="Cache-Control" /> http określa sposób, w jaki dokumenty są buforowane w sieci.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCacheability">
      <MemberSignature Language="C#" Value="public void SetCacheability (System.Web.HttpCacheability cacheability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheability(valuetype System.Web.HttpCacheability cacheability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheability (cacheability As HttpCacheability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheability(System::Web::HttpCacheability cacheability);" />
      <MemberSignature Language="F#" Value="member this.SetCacheability : System.Web.HttpCacheability -&gt; unit" Usage="httpCachePolicy.SetCacheability cacheability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheability" Type="System.Web.HttpCacheability" />
      </Parameters>
      <Docs>
        <param name="cacheability">Wartość <see cref="T:System.Web.HttpCacheability" /> wyliczenia.</param>
        <summary>Ustawia jedną z <see cref="T:System.Web.HttpCacheability" />wartości nagłówka.<see langword="Cache-Control" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetCacheability%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób ustawiania `Cache-Control` nagłówka jako wartości wyliczanej dla. `no-cache`  
  
 [!code-csharp[Classic HttpCachePolicy.SetCacheability Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetCacheability Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="cacheability" />nie jest jedną z wartości wyliczenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetCacheability">
      <MemberSignature Language="C#" Value="public void SetCacheability (System.Web.HttpCacheability cacheability, string field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheability(valuetype System.Web.HttpCacheability cacheability, string field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheability (cacheability As HttpCacheability, field As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheability(System::Web::HttpCacheability cacheability, System::String ^ field);" />
      <MemberSignature Language="F#" Value="member this.SetCacheability : System.Web.HttpCacheability * string -&gt; unit" Usage="httpCachePolicy.SetCacheability (cacheability, field)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheability" Type="System.Web.HttpCacheability" />
        <Parameter Name="field" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cacheability">Wartość <see cref="T:System.Web.HttpCacheability" /> wyliczenia, dla której ma zostać ustawiony nagłówek.</param>
        <param name="field">Rozszerzenie kontroli pamięci podręcznej, które ma zostać dodane do nagłówka.</param>
        <summary>Ustawia jedną z <see cref="T:System.Web.HttpCacheability" /> wartości nagłówkaidołączarozszerzeniedodyrektywy.<see langword="Cache-Control" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rozszerzenie nazwy pola jest prawidłowe tylko w przypadku użycia z `private` dyrektywami lub. `no-cache` Aby uzyskać więcej informacji, zobacz RFC 2616: Protokół HTTP/1.1, dostępny w [witrynie sieci Web organizacja World Wide Web Consortium (W3C)](https://go.microsoft.com/fwlink/?linkid=37125).  
  
 Ta metoda zgłosi wyjątek nieprawidłowego argumentu w przypadku łączenia niezgodnych dyrektyw i rozszerzeń.  
  
 <xref:System.Web.HttpCachePolicy.SetCacheability%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak `Cache-Control` nagłówek jest ustawiony na wartość `private` wyliczenia i dodaje rozszerzenie kontroli pamięci podręcznej. Zmodyfikowana dyrektywa oznacza, że oprócz dowolnej nieudostępnionej pamięci podręcznej każda pamięć podręczna udostępniona tylko przez członków społeczności o nazwie "DEV" może buforować odpowiedź.  
  
 [!code-csharp[Classic HttpCachePolicy.SetCacheability1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetCacheability1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="field" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cacheability" />nie <see cref="F:System.Web.HttpCacheability.Private" /> jest ani <see cref="F:System.Web.HttpCacheability.NoCache" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetETag">
      <MemberSignature Language="C#" Value="public void SetETag (string etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetETag(string etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetETag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetETag (etag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetETag(System::String ^ etag);" />
      <MemberSignature Language="F#" Value="member this.SetETag : string -&gt; unit" Usage="httpCachePolicy.SetETag etag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="etag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="etag">Tekst, który ma być używany <see langword="ETag" /> jako nagłówek.</param>
        <summary>Ustawia nagłówek <see langword="ETag" /> http na określony ciąg.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ETag` Nagłówek jest unikatowym identyfikatorem dla określonej wersji dokumentu. Jest on używany przez klientów do weryfikowania zawartości w pamięci podręcznej klienta, aby uniknąć ponownego żądania. Po ustawieniu `ETag` nagłówka kolejne próby jego ustawienia kończą się niepowodzeniem i zostanie zgłoszony wyjątek.  
  
 <xref:System.Web.HttpCachePolicy.SetETag%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, `ETag` jak ustawić nagłówek jako wartość niestandardową.  
  
 [!code-csharp[Classic HttpCachePolicy.SetETag Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETag Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetETag Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETag Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="etag" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><see langword="ETag" /> Nagłówek został już ustawiony.  
  
—lub— 
<see cref="M:System.Web.HttpCachePolicy.SetETagFromFileDependencies" /> Został już wywołany.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetETagFromFileDependencies">
      <MemberSignature Language="C#" Value="public void SetETagFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetETagFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetETagFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetETagFromFileDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetETagFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.SetETagFromFileDependencies : unit -&gt; unit" Usage="httpCachePolicy.SetETagFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia nagłówek <see langword="ETag" /> http na podstawie sygnatur czasowych zależności plików programu obsługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A> Metoda`ETag` ustawia nagłówek przez pobranie ostatnich zmodyfikowanych sygnatur czasowych wszystkich plików, od których jest zależna procedura obsługi, połączenie wszystkich nazw plików i sygnatur czasowych w jeden ciąg, a następnie mieszanie tego ciągu do pojedynczego skrótu, który jest używany jako `ETag`.  
  
 <xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, `ETag` jak ustawić nagłówek.  
  
 [!code-csharp[Classic HttpCachePolicy.SetETagFromFileDependencies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETagFromFileDependencies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetETagFromFileDependencies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETagFromFileDependencies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see langword="ETag" /> Nagłówek został już ustawiony.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetExpires">
      <MemberSignature Language="C#" Value="public void SetExpires (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExpires(valuetype System.DateTime date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetExpires(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExpires (date As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExpires(DateTime date);" />
      <MemberSignature Language="F#" Value="member this.SetExpires : DateTime -&gt; unit" Usage="httpCachePolicy.SetExpires date" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">Wartość bezwzględna <see cref="T:System.DateTime" /> , aby <see langword="Expires" /> ustawić nagłówek.</param>
        <summary>Ustawia nagłówek <see langword="Expires" /> http na bezwzględną datę i godzinę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zakończy się niepowodzeniem, jeśli data wygaśnięcia narusza zasadę ograniczania.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób ustawiania czasu wygaśnięcia na 6:00 P.M. czas lokalny w bieżącym dniu wygaśnięcia.  
  
 [!code-csharp[Classic HttpCachePolicy.SetExpires Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetExpires Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetExpires Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetExpires Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastModified">
      <MemberSignature Language="C#" Value="public void SetLastModified (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLastModified(valuetype System.DateTime date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetLastModified(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastModified (date As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastModified(DateTime date);" />
      <MemberSignature Language="F#" Value="member this.SetLastModified : DateTime -&gt; unit" Usage="httpCachePolicy.SetLastModified date" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">Nowa <see cref="T:System.DateTime" /> wartość<see langword="Last-Modified" /> dla nagłówka.</param>
        <summary>Ustawia nagłówek <see cref="T:System.DateTime" /> http na dostarczoną wartość. <see langword="Last-Modified" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sygnatura czasowa w nagłówku `DateTime` httpwskazujedokumentzwartościąwskazującą,kiedydokumentzostałostatniozmodyfikowany.`Last-Modified`  
  
 Ta metoda zakończy się niepowodzeniem w przypadku naruszenia hierarchii restrykcyjności buforowania.  
  
 <xref:System.Web.HttpCachePolicy.SetLastModified%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, `Last-Modified` jak ustawić nagłówek na nową datę.  
  
 [!code-csharp[Classic HttpCachePolicy.SetLastModified Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModified Example/cs/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetLastModified Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="date" />jest późniejsza niż bieżąca <see langword="DateTime" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLastModifiedFromFileDependencies">
      <MemberSignature Language="C#" Value="public void SetLastModifiedFromFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLastModifiedFromFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastModifiedFromFileDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastModifiedFromFileDependencies();" />
      <MemberSignature Language="F#" Value="member this.SetLastModifiedFromFileDependencies : unit -&gt; unit" Usage="httpCachePolicy.SetLastModifiedFromFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia nagłówek <see langword="Last-Modified" /> http na podstawie sygnatur czasowych zależności plików programu obsługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak ustawić `Last-Modified` nagłówek <xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A> przy użyciu metody.  
  
 [!code-csharp[Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxAge">
      <MemberSignature Language="C#" Value="public void SetMaxAge (TimeSpan delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMaxAge(valuetype System.TimeSpan delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetMaxAge(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMaxAge (delta As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMaxAge(TimeSpan delta);" />
      <MemberSignature Language="F#" Value="member this.SetMaxAge : TimeSpan -&gt; unit" Usage="httpCachePolicy.SetMaxAge delta" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="delta">Przedział czasu używany do ustawiania <see langword="Cache" />  -  <see langword="Control: max-age" /> nagłówka.</param>
        <summary>Ustawia nagłówek <see langword="Cache-Control: max-age" /> http na podstawie określonego przedziału czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Max-age`jest maksymalnym bezwzględnym czasem, w którym dokument może istnieć, zanim zostanie uznany za przestarzały.  
  
 <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> Metoda nie używa przesuwania czasu wygaśnięcia i zakończy się niepowodzeniem, jeśli data wygaśnięcia narusza zasadę ograniczania.  
  
 <xref:System.Web.HttpCachePolicy.SetMaxAge%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
> [!NOTE]
>  <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> Jeśli metoda jest wywoływana wielokrotnie, w drugim i kolejnych wywołaniach wartość maksymalnego wieku może zostać obniżona.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak ustawić `Cache-Control: max-age` nagłówek na 0 godzin, 30 minut i 0 sekund.  
  
 [!code-csharp[Classic HttpCachePolicy.SetMaxAge Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetMaxAge Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetMaxAge Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetMaxAge Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="delta" />jest mniejsza niż 0 lub większa niż jeden rok.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetNoServerCaching">
      <MemberSignature Language="C#" Value="public void SetNoServerCaching ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoServerCaching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetNoServerCaching" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoServerCaching ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoServerCaching();" />
      <MemberSignature Language="F#" Value="member this.SetNoServerCaching : unit -&gt; unit" Usage="httpCachePolicy.SetNoServerCaching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje zatrzymanie buforowania wszystkich serwerów początkowych dla bieżącej odpowiedzi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jawnie odrzuca buforowanie dokumentu na serwerze źródłowym. Po ustawieniu wszystkie żądania dla dokumentu są w pełni przetwarzane. Gdy ta metoda jest wywoływana, nie można włączyć buforowania dla bieżącej odpowiedzi.  
  
 <xref:System.Web.HttpCachePolicy.SetNoServerCaching%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak wyłączyć buforowanie danych wyjściowych dla pozostałej części odpowiedzi.  
  
 [!code-csharp[Classic HttpCachePolicy.SetNoServerCaching Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoServerCaching Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetNoServerCaching Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoServerCaching Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoStore">
      <MemberSignature Language="C#" Value="public void SetNoStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoStore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetNoStore" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoStore ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoStore();" />
      <MemberSignature Language="F#" Value="member this.SetNoStore : unit -&gt; unit" Usage="httpCachePolicy.SetNoStore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia nagłówek <see langword="Cache-Control: no-store" /> http.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ilustruje sposób użycia <xref:System.Web.HttpCachePolicy.SetNoStore%2A> metody <xref:System.Web.HttpCachePolicy> klasy do skierowania klienta do programu, aby nie przechowywał odpowiedzi w jego historii.  
  
 [!code-aspx-csharp[HttpCachePolicySetNoStore#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicySetNoStore/CS/httpcachepolicy_setnostorecs.aspx#1)]
 [!code-aspx-vb[HttpCachePolicySetNoStore#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicySetNoStore/VB/httpcachepolicy_setnostorevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoTransforms">
      <MemberSignature Language="C#" Value="public void SetNoTransforms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoTransforms() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetNoTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoTransforms ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoTransforms();" />
      <MemberSignature Language="F#" Value="member this.SetNoTransforms : unit -&gt; unit" Usage="httpCachePolicy.SetNoTransforms " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia nagłówek <see langword="Cache-Control: no-transform" /> http.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nagłówek `Cache-Control: no-transform` http instruuje aplikacje buforowania sieci, aby nie modyfikować dokumentu.  
  
 Nagłówek HTTP uniemożliwia podrzędnym serwerom proxy zmienianie wartości nagłówków określonych `Content-Encoding`przez, `Content-Range`, lub `Content-Type` nagłówków (obejmuje to treść jednostki). `Cache-Control: no-transform` Na przykład uniemożliwiają one serwerom proxy konwertowanie obrazów GIF na PNG.  
  
 Podobnie jak w przypadku innych ograniczeń dotyczących buforowania <xref:System.Web.HttpCachePolicy.SetNoTransforms%2A> , po wywołaniu `Cache-Control: no-transform` <xref:System.Web.HttpCachePolicy> nie można wyłączyć nagłówka HTTP za pomocą interfejsu.  
  
 <xref:System.Web.HttpCachePolicy.SetNoTransforms%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, `Cache-Control: no-transform` jak wysłać dyrektywę z bieżącą odpowiedzią.  
  
 [!code-csharp[Classic HttpCachePolicy.SetNoTransforms Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoTransforms Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetNoTransforms Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoTransforms Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOmitVaryStar">
      <MemberSignature Language="C#" Value="public void SetOmitVaryStar (bool omit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOmitVaryStar(bool omit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetOmitVaryStar(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOmitVaryStar (omit As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOmitVaryStar(bool omit);" />
      <MemberSignature Language="F#" Value="member this.SetOmitVaryStar : bool -&gt; unit" Usage="httpCachePolicy.SetOmitVaryStar omit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="omit" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="omit"><see langword="true" />Aby skierować <see cref="T:System.Web.HttpCachePolicy" /> do nie używać wartości * dla swojej <see cref="P:System.Web.HttpCachePolicy.VaryByHeaders" /> właściwości; w przeciwnym razie <see langword="false" />.</param>
        <summary>Określa, czy odpowiedź powinna zawierać <see langword="vary:*" /> nagłówek, gdy jest on zróżnicowany przez parametry.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pozwala zapobiec dodaniu `vary:*` przez ached danych wyjściowych nagłówka do odpowiedzi wychodzącej, gdy buforowana odpowiedź jest różna przez parametr. Jest to przydatne w przypadku klientów, które różnią się w zależności od ciągu zapytania, ponieważ większość klientów będzie automatycznie `vary:*` różnić się od ciągu zapytania, bez potrzeby nagłówka.  
  
> [!NOTE]
>  Użycie `vary:*` nagłówka może wyłączyć wszystkie buforowanie klienta.  
  
 Jest to wygodna metoda wpływająca <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> na właściwość. Przekazanie `true` do metody <xref:System.Web.HttpCachePolicy> powoduje ignorowanie * wartości <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> właściwości.  
  
 <xref:System.Web.HttpCachePolicy.SetOmitVaryStar%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProxyMaxAge">
      <MemberSignature Language="C#" Value="public void SetProxyMaxAge (TimeSpan delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProxyMaxAge(valuetype System.TimeSpan delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetProxyMaxAge(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProxyMaxAge (delta As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProxyMaxAge(TimeSpan delta);" />
      <MemberSignature Language="F#" Value="member this.SetProxyMaxAge : TimeSpan -&gt; unit" Usage="httpCachePolicy.SetProxyMaxAge delta" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="delta">Przedział czasu używany do ustawiania <see langword="Cache-Control: s-maxage" /> nagłówka.</param>
        <summary>Ustawia nagłówek <see langword="Cache-Control: s-maxage" /> http na podstawie określonego przedziału czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> Metoda nie używa przesuwania czasu wygaśnięcia i zakończy się niepowodzeniem, jeśli data wygaśnięcia narusza zasadę ograniczania.  
  
 <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak ustawić `Cache-Control: s-maxage` nagłówek na 0 godzin, 30 minut i 0 sekund.  
  
 [!code-csharp[Classic HttpCachePolicy.SetProxyMaxAge Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetProxyMaxAge Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetProxyMaxAge Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetProxyMaxAge Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="delta" />jest mniejsza niż 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetRevalidation">
      <MemberSignature Language="C#" Value="public void SetRevalidation (System.Web.HttpCacheRevalidation revalidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRevalidation(valuetype System.Web.HttpCacheRevalidation revalidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetRevalidation(System.Web.HttpCacheRevalidation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRevalidation (revalidation As HttpCacheRevalidation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRevalidation(System::Web::HttpCacheRevalidation revalidation);" />
      <MemberSignature Language="F#" Value="member this.SetRevalidation : System.Web.HttpCacheRevalidation -&gt; unit" Usage="httpCachePolicy.SetRevalidation revalidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="revalidation" Type="System.Web.HttpCacheRevalidation" />
      </Parameters>
      <Docs>
        <param name="revalidation">Wartość wyliczenia, dla której <see langword="Cache-Control" /> ma zostać ustawiony nagłówek. <see cref="T:System.Web.HttpCacheRevalidation" /></param>
        <summary>Ustawia w nagłówku <see langword="must-revalidate" /> <see langword="proxy-revalidate" /> http lub na podstawie podanej wartości wyliczenia. <see langword="Cache-Control" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna, która jest równoznaczna <xref:System.Web.HttpCacheRevalidation.None>z, to wysłanie żadnej dyrektywy z nagłówka, chyba że zostanie jawnie określona przez tę metodę.  
  
 <xref:System.Web.HttpCachePolicy.SetRevalidation%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób ustawiania walidacji pamięci podręcznej do <xref:System.Web.HttpCacheRevalidation.AllCaches>.  
  
 [!code-csharp[Classic HttpCachePolicy.SetRevalidation Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetRevalidation Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetRevalidation Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetRevalidation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="revalidation" />nie jest jedną z wartości wyliczenia.</exception>
        <altmember cref="T:System.Web.HttpCacheRevalidation" />
      </Docs>
    </Member>
    <Member MemberName="SetSlidingExpiration">
      <MemberSignature Language="C#" Value="public void SetSlidingExpiration (bool slide);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSlidingExpiration(bool slide) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetSlidingExpiration(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSlidingExpiration (slide As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSlidingExpiration(bool slide);" />
      <MemberSignature Language="F#" Value="member this.SetSlidingExpiration : bool -&gt; unit" Usage="httpCachePolicy.SetSlidingExpiration slide" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="slide" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="slide"><see langword="true" />lub <see langword="false" />.</param>
        <summary>Ustawia wygasanie pamięci podręcznej na od wartości bezwzględnej do przesuwania</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy ustawienie wygasanie pamięci podręcznej jest `Cache-Control` ustawione na przesuwanie, nagłówek HTTP zostanie odnowiony z każdą odpowiedzią. Ten tryb wygasania jest identyczny z opcją konfiguracji usług IIS w celu dodania nagłówka wygaśnięcia do całego zestawu wyjściowego względem bieżącego czasu.  
  
 Jeśli jawnie ustawisz opcję przesunięty czas`false`wygaśnięcia na off (), to ustawienie zostanie zachowane, a wszystkie próby włączenia przewijania z przewijaniem zakończą się niepowodzeniem. Ta metoda nie mapuje bezpośrednio do nagłówka HTTP. Jest on używany przez kolejne moduły lub żądania procesów roboczych do ustawiania zasad pamięci podręcznej serwera pochodzenia.  
  
 <xref:System.Web.HttpCachePolicy.SetSlidingExpiration%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak ustawić ruchome wygasanie `true`na.  
  
 [!code-csharp[Classic HttpCachePolicy.SetSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidUntilExpires">
      <MemberSignature Language="C#" Value="public void SetValidUntilExpires (bool validUntilExpires);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValidUntilExpires(bool validUntilExpires) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetValidUntilExpires(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValidUntilExpires (validUntilExpires As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValidUntilExpires(bool validUntilExpires);" />
      <MemberSignature Language="F#" Value="member this.SetValidUntilExpires : bool -&gt; unit" Usage="httpCachePolicy.SetValidUntilExpires validUntilExpires" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validUntilExpires" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validUntilExpires"><see langword="true" />Jeśli pamięć podręczna <see langword="Cache-Control" /> ignoruje nagłówki ważności; <see langword="false" />w przeciwnym razie.</param>
        <summary>Określa, czy pamięć podręczna ASP.NET powinna <see langword="Cache-Control" /> ignorować nagłówki HTTP wysyłane przez klienta, który unieważnia pamięć podręczną.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest ustawiona na `true` wartość automatycznie, gdy zostanie użyta dyrektywa na stronie wysokiego poziomu. `<%@ OutputCache … %>` <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A>  
  
 Ta metoda jest dostępna, ponieważ niektóre przeglądarki odświeżają widok strony, wysyłają nagłówki Unieważnień pamięci podręcznej HTTP do serwera sieci Web i wykluczają stronę z pamięci podręcznej. Gdy parametr ma wartość `true`, ASP.NET ignoruje nagłówki nieprawidłowej pamięci podręcznej, a strona pozostaje w pamięci podręcznej do momentu jej wygaśnięcia. `validUntilExpires`  
  
 <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób użycia <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> metody w celu poinstruować, że wszystkie nagłówki nieprawidłowej pamięci podręcznej wysyłane przez klienta są ignorowane.  
  
 [!code-aspx-csharp[HttpCachePolicy_SetValidUntilExpires#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicy_SetValidUntilExpires/CS/httpcachepolicy_setvaliduntilexpirescs.aspx#1)]
 [!code-aspx-vb[HttpCachePolicy_SetValidUntilExpires#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicy_SetValidUntilExpires/VB/httpcachepolicy_setvaliduntilexpiresvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVaryByCustom">
      <MemberSignature Language="C#" Value="public void SetVaryByCustom (string custom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVaryByCustom(string custom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCachePolicy.SetVaryByCustom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVaryByCustom (custom As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVaryByCustom(System::String ^ custom);" />
      <MemberSignature Language="F#" Value="member this.SetVaryByCustom : string -&gt; unit" Usage="httpCachePolicy.SetVaryByCustom custom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="custom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="custom">Ciąg tekstowy, który będzie różnicować buforowane dane wyjściowe przez.</param>
        <summary>Określa niestandardowy ciąg tekstowy, który będzie różnicować zbuforowane odpowiedzi wyjściowe przez.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.SetVaryByCustom%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób ustawiania niestandardowego ciągu różnicowego na "Accept-Charset", co powoduje, że pamięć podręczna serwera pochodzenie umożliwia wybranie jednej z kilku buforowanych odpowiedzi w zależności od `Accept-Charset` nagłówka przeglądarki.  
  
 [!code-csharp[Classic HttpCachePolicy.SetVaryByCustom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetVaryByCustom Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCachePolicy.SetVaryByCustom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetVaryByCustom Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="custom" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Web.HttpCachePolicy.SetVaryByCustom(System.String)" /> Metoda została już wywołana.</exception>
      </Docs>
    </Member>
    <Member MemberName="UtcTimestampCreated">
      <MemberSignature Language="C#" Value="public DateTime UtcTimestampCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcTimestampCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.UtcTimestampCreated" />
      <MemberSignature Language="VB.NET" Value="Public Property UtcTimestampCreated As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcTimestampCreated { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.UtcTimestampCreated : DateTime with get, set" Usage="System.Web.HttpCachePolicy.UtcTimestampCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia sygnaturę czasową w uniwersalnym czasie koordynowanym ( <see cref="T:System.Web.HttpCachePolicy" />UTC) dla.</summary>
        <value><see cref="T:System.DateTime" /> Dla<see cref="T:System.Web.HttpCachePolicy" />elementu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByContentEncodings">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByContentEncodings VaryByContentEncodings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByContentEncodings VaryByContentEncodings" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.VaryByContentEncodings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByContentEncodings As HttpCacheVaryByContentEncodings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByContentEncodings ^ VaryByContentEncodings { System::Web::HttpCacheVaryByContentEncodings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByContentEncodings : System.Web.HttpCacheVaryByContentEncodings" Usage="System.Web.HttpCachePolicy.VaryByContentEncodings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByContentEncodings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę <see langword="Content-Encoding" /> nagłówków, które będą używane do różnicowania wyjściowej pamięci podręcznej.</summary>
        <value>Obiekt, który określa, <see langword="Content-Encoding" /> które nagłówki są używane do wybierania buforowanej odpowiedzi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> Właściwość zwraca listę nagłówków kodowania zawartości, które reprezentują schematy kompresji, aby różnicować wyjściową pamięć podręczną przez. Buforowanie dynamicznie skompresowanych odpowiedzi oznacza, że koszt kompresji jest ponoszony tylko raz podczas pierwszego żądania zasobu.  
  
 Właściwość jest używana `Accept-Encoding` z nagłówkiem żądania, aby określić, jak obsłużyć buforowane odpowiedzi dla różnych kodowań zawartości, które są dynamicznie kompresowane. <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> Nagłówek Accept-Encoding zawiera listę kodowań, które klient może zdekompresować.  
  
 W przypadku ustawienia pamięci podręcznej w taki sposób, aby była zależna od kodowania zawartości, może ona różnić `Accept-Encoding` się pośrednio przez wartość w nagłówku. Gdy żądanie jest przetwarzane, `Accept-Encoding` nagłówek jest sprawdzany, a pierwsze akceptowalne kodowanie jest identyfikowane i używane do wykonywania jednej z następujących akcji:  
  
-   Jeśli na <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> liście zostanie znalezione zgodne kodowanie, a w pamięci podręcznej istnieje zabuforowana odpowiedź, zostanie wysłana zbuforowana odpowiedź.  
  
-   Jeśli na <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> liście zostanie znalezione zgodne kodowanie, ale w pamięci podręcznej nie istnieje, odpowiedź jest generowana i wstawiona do pamięci podręcznej.  
  
-   Jeśli na <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> liście nie znaleziono zgodnego kodowania, pamięć podręczna szuka niezakodowanej odpowiedzi, nazywanej również odpowiedzią tożsamości. Jeśli Niezakodowana odpowiedź zostanie znaleziona, zostanie wysłana. W przeciwnym razie nowa Niezakodowana odpowiedź jest generowana, wysyłana i przechowywana w pamięci podręcznej.  
  
 Aby uzyskać więcej informacji na <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> temat właściwości, zobacz "RFC 2616: Protokół HTTP/1.1, który jest dostępny w [witrynie sieci Web organizacja World Wide Web Consortium (W3C)](https://go.microsoft.com/fwlink/?linkid=37125). Informacje o kodowaniu zawartości znajduje się w sekcji 14, "definicje pól nagłówka".  
  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> Właściwość można ustawić przy `VaryByContentEncodings` użyciu atrybutu [@ OutputCache](https://msdn.microsoft.com/library/28a9e101-fb44-4198-9cb6-b8a52312fec2) . Możesz również dodać profil pamięci podręcznej do elementu [OutputCacheProfile](https://msdn.microsoft.com/library/6df16c27-207d-4b52-9a6e-b3a541222b3d) w pliku Web. config.  
  
 <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak włączyć dynamicznie skompresowaną odpowiedź na potrzeby obsługi strony z wyjściowej pamięci podręcznej. Kodowanie, które jest akceptowalne, to "gzip" i jest ustawiane `VaryByContentEncodings` przy użyciu atrybutu dyrektywy [@ OutputCache](https://msdn.microsoft.com/library/28a9e101-fb44-4198-9cb6-b8a52312fec2) . Jeśli na serwerze sieci Web, na którym znajduje się Strona, nie jest włączona kompresja dynamiczna, wyjściowa pamięć podręczna nie będzie zawierała buforowanej odpowiedzi opartej na określonym kodowaniu zawartości.  
  
 [!code-aspx-csharp[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCachePolicy.VaryByContentEncodings/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCachePolicy.VaryByContentEncodings/VB/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.ContentEncoding" />
        <altmember cref="T:System.Web.HttpCacheVaryByContentEncodings" />
      </Docs>
    </Member>
    <Member MemberName="VaryByHeaders">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByHeaders VaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByHeaders VaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.VaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByHeaders As HttpCacheVaryByHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByHeaders ^ VaryByHeaders { System::Web::HttpCacheVaryByHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByHeaders : System.Web.HttpCacheVaryByHeaders" Usage="System.Web.HttpCachePolicy.VaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę wszystkich nagłówków HTTP, które będą używane do różnicowania danych wyjściowych w pamięci podręcznej.</summary>
        <value>Określa <see cref="T:System.Web.HttpCacheVaryByHeaders" /> , które nagłówki HTTP są używane do wybierania buforowanej odpowiedzi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element w pamięci podręcznej ma kilka różnych nagłówków, oddzielna wersja żądanego dokumentu jest dostępna w pamięci podręcznej dla każdego typu nagłówka HTTP.  
  
 <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpCachePolicy.SetOmitVaryStar(System.Boolean)" />
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
      </Docs>
    </Member>
    <Member MemberName="VaryByParams">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByParams VaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByParams VaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCachePolicy.VaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByParams As HttpCacheVaryByParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByParams ^ VaryByParams { System::Web::HttpCacheVaryByParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParams : System.Web.HttpCacheVaryByParams" Usage="System.Web.HttpCachePolicy.VaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę parametrów odebranych przez http <see langword="GET" /> lub http <see langword="POST" /> , które mają wpływ na pamięć podręczną.</summary>
        <value>Określa <see cref="T:System.Web.HttpCacheVaryByParams" /> , które nagłówki kontroli pamięci podręcznej są używane do wybierania buforowanej odpowiedzi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oddzielna wersja żądanego dokumentu jest dostępna w pamięci podręcznej dla każdego nazwanego <xref:System.Web.HttpCachePolicy.VaryByParams%2A> parametru w kolekcji.  
  
 <xref:System.Web.HttpCachePolicy.VaryByParams%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>
