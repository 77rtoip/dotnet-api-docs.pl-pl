<Type Name="IHttpHandler" FullName="System.Web.IHttpHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8cf383af2cfe41ccc4f4457e801dc8234e001255" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36574072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.IHttpHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHttpHandler" />
  <TypeSignature Language="F#" Value="type IHttpHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="27d1c-101">Definiuje kontrakt implementujący ASP.NET synchronicznie przetwarzanie żądań HTTP sieci Web przy użyciu niestandardowych programów obsługi HTTP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27d1c-101">Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27d1c-102">Można pisać niestandardowe programy obsługi HTTP do przetwarzania określonych, wstępnie zdefiniowanych typów żądań HTTP w dowolnym języku zgodne specyfikacja języka wspólnego (CLS).</span><span class="sxs-lookup"><span data-stu-id="27d1c-102">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language.</span></span> <span data-ttu-id="27d1c-103">Kod wykonywalny zdefiniowane w `HttpHandler` klasy, a nie konwencjonalnej strony ASP lub sieci Web ASP.NET, odpowiada na te określone żądania.</span><span class="sxs-lookup"><span data-stu-id="27d1c-103">Executable code defined in the `HttpHandler` classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests.</span></span> <span data-ttu-id="27d1c-104">Programów obsługi HTTP zapewniają sposób interakcji z niskiego poziomu żądań i odpowiedzi usługi serwera sieci Web usług IIS i zapewniać funkcje znacznie, podobnie jak rozszerzenia ISAPI, ale z modelem programowania prostsze.</span><span class="sxs-lookup"><span data-stu-id="27d1c-104">HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="27d1c-105">Jeśli Twoje obsługi będą uzyskiwać dostęp do wartości stanu sesji, musi on implementować <xref:System.Web.SessionState.IRequiresSessionState> interfejsu (interfejsem znacznika z żadnych metod).</span><span class="sxs-lookup"><span data-stu-id="27d1c-105">If your handler will access session state values, it must implement the <xref:System.Web.SessionState.IRequiresSessionState> interface (a marker interface with no methods).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReusable : bool" Usage="System.Web.IHttpHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27d1c-106">Pobiera wartość wskazującą, czy inne żądanie może użyć <see cref="T:System.Web.IHttpHandler" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27d1c-106">Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27d1c-107">
            <see langword="true" /> Jeśli <see cref="T:System.Web.IHttpHandler" /> wystąpienie jest wielokrotnego użytku; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27d1c-107">
              <see langword="true" /> if the <see cref="T:System.Web.IHttpHandler" /> instance is reusable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27d1c-108">Jawnie ustawiona <xref:System.Web.IHttpHandler.IsReusable%2A> właściwości `true` lub `false` przez kod podasz zastępujący <xref:System.Web.IHttpHandler.IsReusable%2A> metody dostępu właściwości (metoda pobierająca).</span><span class="sxs-lookup"><span data-stu-id="27d1c-108">You explicitly set the <xref:System.Web.IHttpHandler.IsReusable%2A> property to `true` or `false` by code you provide that overrides the <xref:System.Web.IHttpHandler.IsReusable%2A> property accessor (getter).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27d1c-109">Poniższy przykład kodu zapisuje cztery wiersze tekstu w odpowiedzi na żądanie klienta dla strony o nazwie handler.aspx strumienia wyjściowego HTTP.</span><span class="sxs-lookup"><span data-stu-id="27d1c-109">The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx.</span></span> <span data-ttu-id="27d1c-110">Wszystkie żądania dotyczące handler.aspx są obsługiwane przez `MyHttpHandler` klas w przestrzeni nazw `HandlerExample` zawarty w zestawie HandlerTest.dll.</span><span class="sxs-lookup"><span data-stu-id="27d1c-110">All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.</span></span>  
  
 [!code-csharp[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/CS/source.cs#1)]
 [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : System.Web.HttpContext -&gt; unit" Usage="iHttpHandler.ProcessRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="27d1c-111">
            <see cref="T:System.Web.HttpContext" /> Obiekt, który zawiera odwołania do wewnętrznych obiektów serwera (na przykład <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, i <see langword="Server" />) używane do obsługi żądań HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27d1c-111">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, and <see langword="Server" />) used to service HTTP requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27d1c-112">Umożliwia przetwarzanie żądań sieci HTTP Web przez niestandardowy <see langword="HttpHandler" /> implementującej <see cref="T:System.Web.IHttpHandler" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27d1c-112">Enables processing of HTTP Web requests by a custom <see langword="HttpHandler" /> that implements the <see cref="T:System.Web.IHttpHandler" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27d1c-113">Umieść niestandardowe `HttpHandler` kod <xref:System.Web.IHttpHandler.ProcessRequest%2A> metody wirtualnej, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="27d1c-113">Place your custom `HttpHandler` code in the <xref:System.Web.IHttpHandler.ProcessRequest%2A> virtual method, as shown in the following example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27d1c-114">Poniższy przykład kodu zapisuje cztery wiersze tekstu w odpowiedzi na żądanie klienta dla strony o nazwie handler.aspx strumienia wyjściowego HTTP.</span><span class="sxs-lookup"><span data-stu-id="27d1c-114">The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx.</span></span> <span data-ttu-id="27d1c-115">Wszystkie żądania dotyczące handler.aspx są obsługiwane przez `MyHttpHandler` klas w przestrzeni nazw `HandlerExample` zawarty w zestawie HandlerTest.dll.</span><span class="sxs-lookup"><span data-stu-id="27d1c-115">All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.</span></span>  
  
 [!code-csharp[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/CS/source.cs#1)]
 [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IHttpHandler.ProcessRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>