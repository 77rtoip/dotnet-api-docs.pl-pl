<Type Name="SiteMapNodeCollection" FullName="System.Web.SiteMapNodeCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f58893a8bdd35e16bc1bca02534e1b073c55035" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30694688" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SiteMapNodeCollection : System.Collections.IList, System.Web.UI.IHierarchicalEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SiteMapNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Web.UI.IHierarchicalEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.SiteMapNodeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SiteMapNodeCollection&#xA;Implements IHierarchicalEnumerable, IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class SiteMapNodeCollection : System::Collections::IList, System::Web::UI::IHierarchicalEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IHierarchicalEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zawiera kolekcję silnie typizowaną <see cref="T:System.Web.SiteMapNode" /> obiektów i implementuje <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> interfejs do obsługi nawigacji kolekcji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNodeCollection> Klasa udostępnia kolekcję silnie typizowaną <xref:System.Web.SiteMapNode> obiektów. Przechowuje <xref:System.Web.SiteMapNode> obiektów wewnętrznie w tablicy liczony od zera.  
  
 Można zmodyfikować <xref:System.Web.SiteMapNodeCollection> kolekcji po pierwszym utworzone, a następnie użyj poniższych metod, aby dodać, skopiuj i Usuń <xref:System.Web.SiteMapNode> obiektów:  
  
-   Aby dodać <xref:System.Web.SiteMapNode> obiektów, użyj <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, i <xref:System.Web.SiteMapNodeCollection.Insert%2A> metody.  
  
-   Aby skopiować <xref:System.Web.SiteMapNode> obiektów, użyj <xref:System.Web.SiteMapNodeCollection.CopyTo%2A> metody.  
  
-   Aby usunąć <xref:System.Web.SiteMapNode> obiektów, użyj <xref:System.Web.SiteMapNodeCollection.Remove%2A> metody.  
  
 Można tworzyć tylko do odczytu <xref:System.Web.SiteMapNodeCollection>, która nie zezwala na dodawanie, kopiowanie ani usuwania <xref:System.Web.SiteMapNode> obiektów przy użyciu statycznych <xref:System.Web.SiteMapNodeCollection.ReadOnly%2A> metody. <xref:System.Web.SiteMapNodeCollection> Kolekcje, które są zwracane przez <xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=nameWithType> i <xref:System.Web.UI.IHierarchyData.GetChildren%2A> metody są tylko do odczytu, w jakim są <xref:System.Web.SiteMapNodeCollection> który jest zwracany, gdy <xref:System.Web.SiteMapNode.ChildNodes%2A> właściwości jest dostępny na <xref:System.Web.SiteMapNode> obiekt, który zostanie zwrócony Dostawca. A <xref:System.NotSupportedException> wyjątku, gdy użytkownik próbuje zmodyfikować tylko do odczytu <xref:System.Web.SiteMapNodeCollection> przez ustawienie właściwości indeksatora domyślne lub przy użyciu dowolnej z następujących metod:  
  
-   <xref:System.Web.SiteMapNodeCollection.Add%2A>  
  
-   <xref:System.Web.SiteMapNodeCollection.AddRange%2A>  
  
-   <xref:System.Web.SiteMapNodeCollection.Clear%2A>  
  
-   <xref:System.Web.SiteMapNodeCollection.Insert%2A>  
  
-   <xref:System.Web.SiteMapNodeCollection.Remove%2A>  
  
-   <xref:System.Web.SiteMapNodeCollection.RemoveAt%2A>  
  
 Użyj <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> właściwości, aby sprawdzić połączenie przed wywołaniem dowolnej z metod z powyższej listy.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Web.SiteMapNodeCollection> kolekcji, a następnie dodaj <xref:System.Web.SiteMapNode> obiektów do niej przy użyciu <xref:System.Web.SiteMapNodeCollection.AddRange%2A> metody. <xref:System.Web.SiteMapNodeCollection> Jest podzbiorem bieżącej mapy witryny, pokazujący tylko pierwszych dwóch poziomów hierarchii.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/CS/webform2smccs.aspx#2)]
 [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/VB/webform2smcvb.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.SiteMap" />
    <altmember cref="T:System.Web.SiteMapNode" />
    <altmember cref="T:System.Web.SiteMapProvider" />
    <altmember cref="T:System.Web.UI.IHierarchyData" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.SiteMapNodeCollection" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNodeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapNodeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.SiteMapNodeCollection" /> klasy, która jest wystąpieniem domyślnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> konstruktora, aby utworzyć pustą <xref:System.Web.SiteMapNodeCollection> kolekcji. Możesz dodawać elementy do <xref:System.Web.SiteMapNodeCollection> przy użyciu <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, lub <xref:System.Web.SiteMapNodeCollection.Insert%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> konstruktora, aby utworzyć nową <xref:System.Web.SiteMapNodeCollection> kolekcji, a następnie dodaj elementy do <xref:System.Web.SiteMapNodeCollection> z <xref:System.Web.SiteMapNodeCollection.Add%2A> — metoda.  
  
 [!code-csharp[System.Web.SiteMapNode_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNode_2/CS/sitemapnode2acs.aspx.cs#1)]
 [!code-vb[System.Web.SiteMapNode_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNode_2/VB/sitemapnode2avb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNodeCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapNodeCollection(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">Początkowa pojemność <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.SiteMapNodeCollection" /> klasy o określonej pojemności początkowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> konstruktora w celu utworzenia <xref:System.Web.SiteMapNodeCollection> kolekcji o określonej pojemności początkowej.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.CollectionBase.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNodeCollection (System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapNodeCollection(System::Web::SiteMapNode ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.Web.SiteMapNode" /> do dodania do <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.SiteMapNodeCollection" /> i dodaje <see cref="T:System.Web.SiteMapNode" /> do obiektu <see cref="P:System.Collections.CollectionBase.InnerList" /> właściwości dla kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> konstruktora w celu utworzenia <xref:System.Web.SiteMapNodeCollection> kolekcji za pomocą pojedynczego początkowego <xref:System.Web.SiteMapNode> obiektu. Możesz dodawać elementy do <xref:System.Web.SiteMapNodeCollection> przy użyciu <xref:System.Web.SiteMapNodeCollection.Add%2A>, <xref:System.Web.SiteMapNodeCollection.AddRange%2A>, lub <xref:System.Web.SiteMapNodeCollection.Insert%2A> metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Web.SiteMapNodeCollection> kolekcji za pomocą pojedynczego początkowego <xref:System.Web.SiteMapNode> obiekt, a następnie dodaj <xref:System.Web.SiteMapNodeCollection> z <xref:System.Web.SiteMapNode> obiektów do niej przy użyciu <xref:System.Web.SiteMapNodeCollection.AddRange%2A> metody. Można zmodyfikować <xref:System.Web.SiteMapNodeCollection>, nawet jeśli osoba <xref:System.Web.SiteMapNode> obiekty mogą być tylko do odczytu.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/CS/webform2smccs.aspx#2)]
 [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/VB/webform2smcvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.SiteMapNode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNodeCollection (System.Web.SiteMapNode[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.SiteMapNode[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SiteMapNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapNodeCollection(cli::array &lt;System::Web::SiteMapNode ^&gt; ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode[]" />
      </Parameters>
      <Docs>
        <param name="value">Tablica typu <see cref="T:System.Web.SiteMapNode" /> do dodania do <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.SiteMapNodeCollection" /> i dodaje tablicy typu <see cref="T:System.Web.SiteMapNode" /> do <see cref="P:System.Collections.CollectionBase.InnerList" /> właściwości dla kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przy użyciu <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor jest odpowiednikiem wywołania <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor i dodawanie elementów do <xref:System.Web.SiteMapNodeCollection> kolekcji z <xref:System.Web.SiteMapNodeCollection.AddRange%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.SiteMapNode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteMapNodeCollection (System.Web.SiteMapNodeCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.SiteMapNodeCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.#ctor(System.Web.SiteMapNodeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SiteMapNodeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SiteMapNodeCollection(System::Web::SiteMapNodeCollection ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNodeCollection" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.Web.SiteMapNodeCollection" /> zawierający <see cref="T:System.Web.SiteMapNode" /> do dodania do bieżącego <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.SiteMapNodeCollection" /> i dodaje wszystkie elementy listy z określonym <see cref="T:System.Web.SiteMapNodeCollection" /> kolekcji <see cref="P:System.Collections.CollectionBase.InnerList" /> właściwości dla kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przy użyciu <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor jest odpowiednikiem wywołania <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> Konstruktor i dodawanie elementów do <xref:System.Web.SiteMapNodeCollection> kolekcji z <xref:System.Web.SiteMapNodeCollection.AddRange%2A> metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Web.SiteMapNodeCollection> kolekcji przy użyciu innego <xref:System.Web.SiteMapNodeCollection> z <xref:System.Web.SiteMapNode> obiektów jako podstawy. <xref:System.Web.SiteMapNode.GetAllNodes%2A?displayProperty=nameWithType> Metoda zwróci wartość tylko do odczytu <xref:System.Web.SiteMapNodeCollection>, która została wykryta po <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> zwraca właściwość `true`. Nowy <xref:System.Web.SiteMapNodeCollection> jest tworzony przy użyciu tylko do odczytu <xref:System.Web.SiteMapNodeCollection> i <xref:System.Web.SiteMapNodeCollection.Add%2A> i <xref:System.Web.SiteMapNodeCollection.Remove%2A> pomyślnie można wywołać metody.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/CS/webform1smccs.aspx#1)]
 [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/VB/webform1smcvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As SiteMapNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Web::SiteMapNode ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Web.SiteMapNode" /> Do dodania do <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Dodaje pojedynczy <see cref="T:System.Web.SiteMapNode" /> obiektu do kolekcji.</summary>
        <returns>Indeks <see cref="P:System.Collections.CollectionBase.InnerList" /> gdzie <see cref="T:System.Web.SiteMapNode" /> została umieszczona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można dodać <xref:System.Web.SiteMapNode> obiektu tylko do odczytu lub stałym rozmiarze <xref:System.Web.SiteMapNodeCollection> kolekcji. Można sprawdzić, czy <xref:System.Web.SiteMapNodeCollection> jest tylko do odczytu, sprawdzając <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> właściwości.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. W pierwszym przykładzie kodu pokazano, jak utworzyć nową <xref:System.Web.SiteMapNodeCollection> kolekcji i Dodaj do niej elementy. W drugim przykładzie kodu pokazano, jak dodać elementy do dostawcy mapy witryny niestandardowej.  
  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> konstruktora, aby utworzyć nową <xref:System.Web.SiteMapNodeCollection>, a następnie dodaj elementy do niego z <xref:System.Web.SiteMapNodeCollection.Add%2A> — metoda.  
  
 [!code-csharp[System.Web.SiteMapNode_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNode_2/CS/sitemapnode2acs.aspx.cs#1)]
 [!code-vb[System.Web.SiteMapNode_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNode_2/VB/sitemapnode2avb.aspx.vb#1)]  
  
 Poniższy przykładowy kod przedstawia implementację dostawcy mapy niestandardowej witryny oraz przedstawia sposób użycia <xref:System.Web.SiteMapNodeCollection.%23ctor%2A> konstruktora, aby utworzyć nową <xref:System.Web.SiteMapNodeCollection> i Dodaj elementy do <xref:System.Web.SiteMapNodeCollection> z <xref:System.Web.SiteMapNodeCollection.Add%2A> metody.  
  
 Ten przykładowy kod jest częścią większego przykładu kodu przewidzianych <xref:System.Web.SiteMapProvider> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/CS/simpletextsitemapprovider.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.SimpleTextSiteMapProvider_1/VB/simpletextsitemapprovider.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Web.SiteMapNodeCollection" /> Jest tylko do odczytu.</exception>
        <altmember cref="M:System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)" />
        <altmember cref="T:System.Web.SiteMapProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje zestaw <see cref="T:System.Web.SiteMapNode" /> obiekty do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Web.SiteMapNode[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Web.SiteMapNode[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (value As SiteMapNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Web::SiteMapNode ^&gt; ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode[]" />
      </Parameters>
      <Docs>
        <param name="value">Tablica typu <see cref="T:System.Web.SiteMapNode" /> do dodania do bieżącego <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Dodaje tablicy typu <see cref="T:System.Web.SiteMapNode" /> do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tablica, która została przekazana do <xref:System.Web.SiteMapNodeCollection.AddRange%2A> metody może zawierać `null` wartości, jednak prowadzi to do nieoczekiwanych wyjątków podczas <xref:System.Web.SiteMapNodeCollection> steruje się w kolekcji.  
  
 Nie można dodać <xref:System.Web.SiteMapNode> obiektu tylko do odczytu lub stałym rozmiarze <xref:System.Web.SiteMapNodeCollection>. Można sprawdzić, czy <xref:System.Web.SiteMapNodeCollection> jest tylko do odczytu, sprawdzając <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Web.SiteMapNodeCollection" /> Jest tylko do odczytu.</exception>
        <altmember cref="M:System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Web.SiteMapNodeCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Web.SiteMapNodeCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNodeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (value As SiteMapNodeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(System::Web::SiteMapNodeCollection ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNodeCollection" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.Web.SiteMapNodeCollection" /> zawierający <see cref="T:System.Web.SiteMapNode" /> obiekty do dodania do bieżącego <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Dodaje określony węzły <see cref="T:System.Web.SiteMapNodeCollection" /> do bieżącej kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNodeCollection> Kolekcji, który jest przekazywany do <xref:System.Web.SiteMapNodeCollection.AddRange%2A> metody może zawierać `null` <xref:System.Web.SiteMapNode> obiekty; jednak prowadzi to do nieoczekiwanych wyjątków podczas <xref:System.Web.SiteMapNodeCollection> zmieniany.  
  
 Nie można dodać <xref:System.Web.SiteMapNode> obiektu tylko do odczytu lub stałym rozmiarze <xref:System.Web.SiteMapNodeCollection>. Można sprawdzić, czy <xref:System.Web.SiteMapNodeCollection> jest tylko do odczytu, sprawdzając <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia modyfikowalnych <xref:System.Web.SiteMapNodeCollection> kolekcji, a następnie dodaj <xref:System.Web.SiteMapNode> obiektów do niej przy użyciu <xref:System.Web.SiteMapNodeCollection.AddRange%2A> — metoda.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/CS/webform2smccs.aspx#2)]
 [!code-vb[System.Web.SiteMapNodeCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_2/VB/webform2smcvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Web.SiteMapNodeCollection" /> Jest tylko do odczytu.</exception>
        <altmember cref="M:System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można sprawdzić, czy <xref:System.Web.SiteMapNodeCollection> kolekcja jest tylko do odczytu, sprawdzając <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> właściwości.  
  
 Aby usunąć określonych elementów <xref:System.Web.SiteMapNodeCollection>, użyj <xref:System.Web.SiteMapNodeCollection.Remove%2A> lub <xref:System.Web.SiteMapNodeCollection.RemoveAt%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Web.SiteMapNodeCollection" /> Jest tylko do odczytu.</exception>
        <altmember cref="M:System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (value As SiteMapNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Web::SiteMapNode ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Web.SiteMapNode" /> Do zlokalizowania w <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Określa, czy kolekcja zawiera określony <see cref="T:System.Web.SiteMapNode" /> obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Web.SiteMapNodeCollection" /> zawiera określony <see cref="T:System.Web.SiteMapNode" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNodeCollection.Contains%2A> Metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.SiteMapNodeCollection.Contains%2A> i <xref:System.Web.SiteMapNodeCollection.IndexOf%2A> metody <xref:System.Web.SiteMapNodeCollection> klasy. Dwóch dostawców sprawdza kod `AspNetXmlSiteMapProvider` i `MyXmlSiteMapProvider`, dla węzłów podrzędnych węzła głównego, które są duplikatami.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_4/cs/sourcecs.aspx#1)]
 [!code-vb[System.Web.SiteMapNodeCollection_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_4/vb/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.CollectionBase.Count" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (System.Web.SiteMapNode[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Web.SiteMapNode[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (array As SiteMapNode(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Web::SiteMapNode ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.SiteMapNode[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Jednowymiarowa tablica, która musi mieć od zera indeksowania i jest miejscem docelowym elementów kopiowanych z <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <param name="index">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</param>
        <summary>Kopiuje całą kolekcję zgodne jednowymiarowej tablicy, zaczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNodeCollection.CopyTo%2A> Metody deleguje do <xref:System.Collections.CollectionBase.List%2A?displayProperty=nameWithType> właściwość, która stanowi możliwe wyjątki, które są wymienione w "Wyjątki."  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> jest wielowymiarowy.  
  
 —lub—  
  
 Liczba <see cref="T:System.Web.SiteMapNode" /> obiektów w źródle <see cref="T:System.Web.SiteMapNodeCollection" /> jest większa niż dostępne miejsce od <paramref name="index" /> na końcu <paramref name="array" />.</exception>
        <altmember cref="M:System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów zawartych w kolekcji.</summary>
        <value>Liczba elementów w <see cref="T:System.Web.SiteMapNodeCollection" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.SiteMapNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.GetEnumerator" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetDataSourceView">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView (System.Web.UI.WebControls.SiteMapDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.SiteMapDataSourceView GetDataSourceView(class System.Web.UI.WebControls.SiteMapDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataSourceView (owner As SiteMapDataSource, viewName As String) As SiteMapDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::SiteMapDataSourceView ^ GetDataSourceView(System::Web::UI::WebControls::SiteMapDataSource ^ owner, System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SiteMapDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SiteMapDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">A <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> formant, który jest skojarzony widok.</param>
        <param name="viewName">Nazwa widoku.</param>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> obiekt, który jest skojarzony z węzłami w bieżącej kolekcji.</summary>
        <returns>Nazwane <see cref="T:System.Web.UI.WebControls.SiteMapDataSourceView" /> dla <see cref="T:System.Web.SiteMapNode" /> obiektów w bieżącym <see cref="T:System.Web.SiteMapNodeCollection" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera odwołanie do obiektu moduł wyliczający, który jest używany do wykonania iteracji w kolekcji.</summary>
        <returns>Obiekt, który implementuje <see cref="T:System.Collections.IEnumerator" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.SiteMapNodeCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHierarchicalDataSourceView">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView GetHierarchicalDataSourceView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.GetHierarchicalDataSourceView" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHierarchicalDataSourceView () As SiteMapHierarchicalDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::SiteMapHierarchicalDataSourceView ^ GetHierarchicalDataSourceView();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView" /> obiekt, który jest skojarzony z węzłami w bieżącej kolekcji.</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.SiteMapHierarchicalDataSourceView" /> dla <see cref="T:System.Web.SiteMapNode" /> obiektów w bieżącym <see cref="T:System.Web.SiteMapNodeCollection" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNodeCollection.GetDataSourceView(System.Web.UI.WebControls.SiteMapDataSource,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetHierarchyData">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.IHierarchyData GetHierarchyData (object enumeratedItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchyData GetHierarchyData(object enumeratedItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHierarchyData (enumeratedItem As Object) As IHierarchyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::IHierarchyData ^ GetHierarchyData(System::Object ^ enumeratedItem);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumeratedItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumeratedItem">Obiekt, dla którego ma zostać zwrócona <see cref="T:System.Web.UI.IHierarchyData" />.</param>
        <summary>Zwraca element danymi hierarchicznymi określonego elementu wyliczenia.</summary>
        <returns>
          <see cref="T:System.Web.UI.IHierarchyData" /> Reprezentujący obiekt przekazany do <see cref="M:System.Web.SiteMapNodeCollection.GetHierarchyData(System.Object)" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.IHierarchyData" />
        <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As SiteMapNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Web::SiteMapNode ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Web.SiteMapNode" /> Do zlokalizowania w <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Wyszukuje określony <see cref="T:System.Web.SiteMapNode" /> obiekt, a następnie zwraca liczony od zera indeks pierwszego wystąpienia w całej kolekcji.</summary>
        <returns>Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> w obrębie całej <see cref="T:System.Web.SiteMapNodeCollection" />, jeśli je znaleziono; w przeciwnym razie wartość -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.SiteMapNodeCollection.IndexOf%2A> Metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.SiteMapNodeCollection.Contains%2A> i <xref:System.Web.SiteMapNodeCollection.IndexOf%2A> metody <xref:System.Web.SiteMapNodeCollection> klasy. Dwóch dostawców sprawdza kod `AspNetXmlSiteMapProvider` i `MyXmlSiteMapProvider`, dla węzłów podrzędnych węzła głównego, które są duplikatami.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_4/cs/sourcecs.aspx#1)]
 [!code-vb[System.Web.SiteMapNodeCollection_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_4/vb/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Web::SiteMapNode ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks, w którym <see cref="T:System.Web.SiteMapNode" /> jest wstawiany.</param>
        <param name="value">
          <see cref="T:System.Web.SiteMapNode" /> Do wstawienia.</param>
        <summary>Wstawia określony <see cref="T:System.Web.SiteMapNode" /> obiektu do kolekcji pod określonym indeksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można sprawdzić, czy <xref:System.Web.SiteMapNodeCollection> kolekcja jest tylko do odczytu, sprawdzając <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera.  
  
 —lub—  
  
 <paramref name="index" /> jest większa niż <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Web.SiteMapNodeCollection" /> Jest tylko do odczytu.  
  
 —lub—  
  
 <see cref="T:System.Web.SiteMapNodeCollection" /> Ma stały rozmiar.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)" />
        <altmember cref="P:System.Web.SiteMapNodeCollection.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczną wskazującą, czy węzły mogą być dodania lub odjęcia z kolekcji.</summary>
        <value>
          <see langword="true" /> Jeśli możesz dodać <see cref="T:System.Web.SiteMapNode" /> obiektów do lub usuwanie <see cref="T:System.Web.SiteMapNode" /> obiektów z <see cref="T:System.Web.SiteMapNodeCollection" />; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczną wskazującą, czy kolekcja jest tylko do odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli można zmodyfikować <see cref="T:System.Web.SiteMapNodeCollection" />; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczną wskazującą, czy dostęp do kolekcji jest zsynchronizowany (wielowątkowość).</summary>
        <value>
          <see langword="true" /> Jeśli dostęp jest synchronizowane; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Web.SiteMapNode this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SiteMapNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As SiteMapNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SiteMapNode ^ default[int] { System::Web::SiteMapNode ^ get(int index); void set(int index, System::Web::SiteMapNode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks <see cref="T:System.Web.SiteMapNode" /> można znaleźć.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.SiteMapNode" /> obiektu pod określonym indeksem w kolekcji.</summary>
        <value>A <see cref="T:System.Web.SiteMapNode" /> reprezentujący element w <see cref="T:System.Web.SiteMapNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Web.SiteMapNodeCollection.Item%2A> indeksator w celu wykonania iteracji zawartość <xref:System.Web.SiteMapNodeCollection> kolekcji lub zastąpić <xref:System.Web.SiteMapNode> obiektu pod określonym indeksem.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.SiteMapNodeCollection.Item%2A> indeksatora, aby pobrać <xref:System.Web.SiteMapNode> obiekt z <xref:System.Web.SiteMapNodeCollection> kolekcji. W tym przykładzie <xref:System.Web.SiteMapNode> obiekt jest usunięty z jej położenie w drugi element w tablicy wewnętrznej przy użyciu <xref:System.Web.SiteMapNodeCollection.Remove%2A> — metoda i jest dołączany do tablicy z <xref:System.Web.SiteMapNodeCollection.Add%2A> metody. Aby wstawić <xref:System.Web.SiteMapNode> obiekt o określonym indeksie, natomiast dołączenie go do końca tablicy, użyj <xref:System.Web.SiteMapNodeCollection.Insert%2A> metody.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/CS/webform1smccs.aspx#2)]
 [!code-vb[System.Web.SiteMapNodeCollection_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/VB/webform1smcvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Web.SiteMapNodeCollection" /> Jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera.  
  
 \- lub -  
  
 <paramref name="index" /> jest doskonałym rozwiązaniem niż <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość dostarczona do metody ustawiającej jest <see langword="null" />.</exception>
        <altmember cref="M:System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected virtual void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidate(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Web.SiteMapNode" /> Do sprawdzania poprawności.</param>
        <summary>Wykonuje dodatkowe procesy niestandardowych podczas sprawdzania poprawności wartości.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> nie jest <see cref="T:System.Web.SiteMapNode" />.</exception>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.SiteMapNodeCollection.OnValidate(System.Object)" /> Metoda pozwala implementacje do definiowania procesów, które należy wykonać podczas wykonywania standardowe zachowanie podstawowych <see cref="T:System.Collections.ArrayList" /> obiektu. Definiując <see cref="M:System.Web.SiteMapNodeCollection.OnValidate(System.Object)" /> metody implementacje można dodać funkcji do dziedziczonej metody bez konieczności zastąpić wszystkie inne metody. W szczególności <see cref="M:System.Web.SiteMapNodeCollection.OnValidate(System.Object)" /> metoda jest wywoływana w dowolnym momencie <see cref="T:System.Web.SiteMapNodeCollection" /> kolekcja jest używana przez odwołanie do <see cref="T:System.Collections.IList" /> interfejsu.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Web.SiteMapNodeCollection ReadOnly (System.Web.SiteMapNodeCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.SiteMapNodeCollection ReadOnly(class System.Web.SiteMapNodeCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.ReadOnly(System.Web.SiteMapNodeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (collection As SiteMapNodeCollection) As SiteMapNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::SiteMapNodeCollection ^ ReadOnly(System::Web::SiteMapNodeCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SiteMapNodeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Web.SiteMapNodeCollection" />
      </Parameters>
      <Docs>
        <param name="collection">
          <see cref="T:System.Web.SiteMapNodeCollection" /> Zawierający <see cref="T:System.Web.SiteMapNode" /> obiektów można dodać tylko do odczytu <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Zwraca kolekcję tylko do odczytu, która zawiera węzły w określonym <see cref="T:System.Web.SiteMapNodeCollection" /> kolekcji.</summary>
        <returns>Tylko do odczytu <see cref="T:System.Web.SiteMapNodeCollection" /> o takim samym <see cref="T:System.Web.SiteMapNode" /> elementy i struktury jako oryginalny <see cref="T:System.Web.SiteMapNodeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można sprawdzić, czy <xref:System.Web.SiteMapNodeCollection> kolekcja jest tylko do odczytu, sprawdzając <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> właściwości. <xref:System.Web.SiteMapNodeCollection.IsFixedSize%2A> Właściwość również zwraca `true` podczas <xref:System.Web.SiteMapNodeCollection> jest tylko do odczytu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> właściwości, aby sprawdzić czy <xref:System.Web.SiteMapNodeCollection> kolekcja jest tylko do odczytu lub można modyfikować. Jeśli `siteNodes` można modyfikować, `MoveNode` jest wywoływane na nim; w przeciwnym razie klon <xref:System.Web.SiteMapNodeCollection> jest tworzony przy użyciu `siteNodes` jako podstawy.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/CS/webform1smccs.aspx#1)]
 [!code-vb[System.Web.SiteMapNodeCollection_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/VB/webform1smcvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collection" /> jest <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Tylko do odczytu <see cref="T:System.Web.SiteMapNodeCollection" /> kolekcji obsługuje operacji odczytu i wyszukiwania, ale nie obsługuje <see cref="M:System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)" />, <see cref="Overload:System.Web.SiteMapNodeCollection.AddRange" />, <see cref="M:System.Web.SiteMapNodeCollection.Clear" />, <see cref="M:System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)" />, <see cref="M:System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)" />, i <see cref="M:System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)" /> metod ani metody ustawiającej na indeksatora domyślne Właściwość <see cref="P:System.Web.SiteMapNodeCollection.Item(System.Int32)" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Web.SiteMapNode value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Web.SiteMapNode value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As SiteMapNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Web::SiteMapNode ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.SiteMapNode" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Web.SiteMapNode" /> Do usunięcia z <see cref="T:System.Web.SiteMapNodeCollection" />.</param>
        <summary>Usuwa określoną <see cref="T:System.Web.SiteMapNode" /> obiekt z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można sprawdzić, czy <xref:System.Web.SiteMapNodeCollection> kolekcja jest tylko do odczytu, sprawdzając <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> właściwości.  
  
 <xref:System.Web.SiteMapNodeCollection.Remove%2A> Metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.SiteMapNodeCollection.Remove%2A> metodę, aby usunąć <xref:System.Web.SiteMapNode> obiekt z <xref:System.Web.SiteMapNodeCollection> kolekcji, a następnie dołącz <xref:System.Web.SiteMapNode> obiekt na koniec <xref:System.Web.SiteMapNodeCollection> przy użyciu <xref:System.Web.SiteMapNodeCollection.Add%2A> — metoda. Jeśli <xref:System.Web.SiteMapNodeCollection> jest tylko do odczytu, <xref:System.NotSupportedException> Przechwycono wyjątek.  
  
 [!code-csharp[System.Web.SiteMapNodeCollection_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/CS/webform1smccs.aspx#2)]
 [!code-vb[System.Web.SiteMapNodeCollection_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SiteMapNodeCollection_1/VB/webform1smcvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> nie istnieje w kolekcji.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Web.SiteMapNodeCollection" /> Jest tylko do odczytu.  
  
 —lub—  
  
 <see cref="T:System.Web.SiteMapNodeCollection" /> Ma stały rozmiar.</exception>
        <altmember cref="M:System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.AddRange(System.Web.SiteMapNode[])" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu do usunięcia.</param>
        <summary>Usuwa <see cref="T:System.Web.SiteMapNode" /> obiektu o określonym indeksie kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można sprawdzić, czy <xref:System.Web.SiteMapNodeCollection> kolekcja jest tylko do odczytu, sprawdzając <xref:System.Web.SiteMapNodeCollection.IsReadOnly%2A> właściwości.  
  
 Aby usunąć element z <xref:System.Web.SiteMapNodeCollection> , określając <xref:System.Web.SiteMapNode> obiektu do usunięcia, użyj <xref:System.Web.SiteMapNodeCollection.Remove%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera.  
  
 \- lub -  
  
 <paramref name="index" /> jest większa niż <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Web.SiteMapNodeCollection" /> Jest tylko do odczytu.  
  
 \- lub -  
  
 <see cref="T:System.Web.SiteMapNodeCollection" /> Ma stały rozmiar.</exception>
        <altmember cref="M:System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)" />
        <altmember cref="P:System.Web.SiteMapNodeCollection.IsReadOnly" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizujący dostęp do kolekcji.</summary>
        <value>Obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Web.SiteMapNodeCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyliczanie za pośrednictwem <xref:System.Web.SiteMapNodeCollection> kolekcji leżą nie jest procedurą awaryjny wątku. Nawet wtedy, gdy <xref:System.Web.SiteMapNodeCollection> jest synchronizowane, inne wątki mogą modyfikować <xref:System.Web.SiteMapNodeCollection>, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz albo blokady <xref:System.Web.SiteMapNodeCollection> podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Jednowymiarowa tablica, która musi mieć od zera indeksowania i jest miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.CollectionBase" />.</param>
        <param name="index">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</param>
        <summary>Kopiuje elementy <see cref="T:System.Collections.ICollection" /> interfejs do tablicy, zaczynając od określonego indeksu tablicy. Klasa ta nie może być dziedziczona.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> jest wielowymiarowy.  
  
 —lub—  
  
 Liczba <see cref="T:System.Web.SiteMapNode" /> obiektów w źródle <see cref="T:System.Web.SiteMapNodeCollection" /> jest większa niż dostępne miejsce od <paramref name="index" /> na końcu <paramref name="array" />.</exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.CopyTo(System.Web.SiteMapNode[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów, które są zawarte w <see cref="T:System.Collections.ICollection" /> interfejsu. Klasa ta nie może być dziedziczona.</summary>
        <value>Liczba elementów zawartych w <see cref="T:System.Collections.ICollection" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.SiteMapNodeCollection.Count" />
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see langword="Boolean" /> wartość wskazującą, czy dostęp do <see cref="T:System.Collections.ICollection" /> interfejsu jest zsynchronizowany (wielowątkowość). Klasa ta nie może być dziedziczona.</summary>
        <value>
          <see langword="true" /> Jeśli dostęp do <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wielowątkowość); w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.SiteMapNodeCollection.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Collections.ICollection" /> interfejsu. Klasa ta nie może być dziedziczona.</summary>
        <value>Obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Collections.ICollection" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.SiteMapNodeCollection.SyncRoot" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> Który może służyć do iterowania po <see cref="T:System.Web.SiteMapNodeCollection" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt do dodania do <see cref="T:System.Collections.IList" />.</param>
        <summary>Dodaje element do kolekcji w <see cref="T:System.Collections.IList" /> interfejsu. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
        <returns>Pozycja, do której dodano nowy element.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Web.SiteMapNodeCollection.Add(System.Web.SiteMapNode)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie elementy z kolekcji w <see cref="T:System.Collections.IList" /> interfejsu. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Clear" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNodeCollection.Clear" />
        <altmember cref="M:System.Collections.IList.Clear" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt do zlokalizowania w <see cref="T:System.Collections.IList" />.</param>
        <summary>Określa, czy kolekcja w <see cref="T:System.Collections.IList" /> interfejs zawiera określoną wartość logiczną.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekt znajduje się w <see cref="T:System.Collections.IList" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNodeCollection.Contains(System.Web.SiteMapNode)" />
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt do zlokalizowania w <see cref="T:System.Collections.IList" />.</param>
        <summary>Określa indeks konkretny element w kolekcji, która jest zwracana w wyniku <see cref="T:System.Collections.IList" /> interfejsu. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
        <returns>Indeks wartości na liście, jeśli znaleziono; w przeciwnym razie wartość -1.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNodeCollection.IndexOf(System.Web.SiteMapNode)" />
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera <c>indeksu</c> w celu wstawienia <c>wartość</c>.</param>
        <param name="value">Obiekt do wstawienia do <see cref="T:System.Collections.IList" />.</param>
        <summary>Wstawia element do kolekcji w <see cref="T:System.Collections.IList" /> interfejsu pod określonym indeksem. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNodeCollection.Insert(System.Int32,System.Web.SiteMapNode)" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see langword="Boolean" /> wartość wskazującą, czy kolekcja ma stały rozmiar. Opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.SiteMapNodeCollection" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see langword="Boolean" /> wartość wskazującą, czy kolekcja jest tylko do odczytu. Opis tego elementu członkowskiego, zobacz <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.SiteMapNodeCollection" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SiteMapNodeCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu do pobrania.</param>
        <summary>Pobiera <see cref="T:System.Collections.IList" /> element pod określonym indeksem.</summary>
        <value>Element pod określonym indeksem.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.SiteMapNodeCollection.Item(System.Int32)" />
        <altmember cref="P:System.Collections.IList.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt do usunięcia z <see cref="T:System.Collections.IList" />.</param>
        <summary>Usuwa pierwsze wystąpienie określonego obiektu z kolekcji w <see cref="T:System.Collections.IList" /> interfejsu. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNodeCollection.Remove(System.Web.SiteMapNode)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks elementu, który ma zostać usunięty.</param>
        <summary>Usuwa <see cref="T:System.Collections.IList" /> element pod określonym indeksem. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.SiteMapNodeCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.IList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IHierarchicalEnumerable.GetHierarchyData">
      <MemberSignature Language="C#" Value="System.Web.UI.IHierarchyData IHierarchicalEnumerable.GetHierarchyData (object enumeratedItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.IHierarchyData System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(object enumeratedItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHierarchyData (enumeratedItem As Object) As IHierarchyData Implements IHierarchicalEnumerable.GetHierarchyData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::IHierarchyData ^ System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(System::Object ^ enumeratedItem) = System::Web::UI::IHierarchicalEnumerable::GetHierarchyData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumeratedItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumeratedItem">Obiekt, dla którego ma zostać zwrócona <see cref="T:System.Web.UI.IHierarchyData" />.</param>
        <summary>Zwraca element danymi hierarchicznymi określonego elementu wyliczenia. Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData(System.Object)" />.</summary>
        <returns>
          <see cref="T:System.Web.UI.IHierarchyData" /> Reprezentujący obiekt przekazany do <see cref="M:System.Web.SiteMapNodeCollection.System#Web#UI#IHierarchicalEnumerable#GetHierarchyData(System.Object)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>