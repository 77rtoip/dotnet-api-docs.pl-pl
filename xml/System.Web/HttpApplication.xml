<Type Name="HttpApplication" FullName="System.Web.HttpApplication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce3f7a3a63eab675b24796ada89aa6b08147094f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37586720" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpApplication : IDisposable, System.ComponentModel.IComponent, System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpApplication extends System.Object implements class System.ComponentModel.IComponent, class System.IDisposable, class System.Web.IHttpAsyncHandler, class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplication" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpApplication&#xA;Implements IComponent, IDisposable, IHttpAsyncHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplication : IDisposable, System::ComponentModel::IComponent, System::Web::IHttpAsyncHandler" />
  <TypeSignature Language="F#" Value="type HttpApplication = class&#xA;    interface IComponent&#xA;    interface IDisposable&#xA;    interface IHttpAsyncHandler&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.IHttpAsyncHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje metody, właściwości i zdarzenia, które są wspólne dla wszystkich obiektów w aplikacji w aplikacji ASP.NET. Ta klasa jest klasą bazową dla aplikacji, które są zdefiniowane przez użytkownika w pliku Global.asax.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wystąpienia elementu <xref:System.Web.HttpApplication> klasy są tworzone w infrastrukturze platformy ASP.NET, nie przez użytkownika bezpośrednio. Jedno wystąpienie <xref:System.Web.HttpApplication> klasa jest używana do przetwarzania dużej liczby żądań w okresie swojego istnienia. Jednak go przetwarzać tylko jedno żądanie w danym momencie. W związku z tym zmienne Członkowskie może służyć do przechowywania danych na żądanie.  
  
 Aplikacja wywołuje zdarzenia, które są obsługiwane przez moduły niestandardowe, które implementują <xref:System.Web.IHttpModule> interfejs lub przez kod obsługi zdarzeń, która jest zdefiniowana w pliku Global.asax plików. Moduły niestandardowe, które implementują <xref:System.Web.IHttpModule> interfejsu można umieścić w folderze App_Code lub w bibliotece DLL w folderze Bin.  
  
 <xref:System.Web.HttpApplication> został wprowadzony w .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
> [!NOTE]
>  Podczas uruchamiania usług IIS 7.0 w trybie zintegrowanym, moduły niestandardowe w folderze App_Code lub Bin folderu mają zastosowanie do wszystkich żądań w Potok żądań. Kod obsługi zdarzeń w pliku Global.asax ma zastosowanie tylko do żądania, które są mapowane do obsługi platformy ASP.NET.  
  
 Zdarzenia aplikacji są wywoływane w następującej kolejności:  
  
1.  <xref:System.Web.HttpApplication.BeginRequest>  
  
2.  <xref:System.Web.HttpApplication.AuthenticateRequest>  
  
3.  <xref:System.Web.HttpApplication.PostAuthenticateRequest>  
  
4.  <xref:System.Web.HttpApplication.AuthorizeRequest>  
  
5.  <xref:System.Web.HttpApplication.PostAuthorizeRequest>  
  
6.  <xref:System.Web.HttpApplication.ResolveRequestCache>  
  
7.  <xref:System.Web.HttpApplication.PostResolveRequestCache>  
  
     Po <xref:System.Web.HttpApplication.PostResolveRequestCache> zdarzeń i przed <xref:System.Web.HttpApplication.PostMapRequestHandler> zdarzenie, program obsługi zdarzeń (jest to strona, która odnosi się do adresu URL żądania) jest tworzone. Gdy serwer korzysta z usług IIS 7.0 w trybie zintegrowanym oraz w co najmniej programu .NET Framework w wersji 3.0, <xref:System.Web.HttpApplication.MapRequestHandler> zdarzenie jest wywoływane. Gdy serwer jest uruchomiony usług IIS 7.0 w trybie klasycznym lub starszej wersji usług IIS, to zdarzenie nie mogą być obsługiwane.  
  
8.  <xref:System.Web.HttpApplication.PostMapRequestHandler>  
  
9. <xref:System.Web.HttpApplication.AcquireRequestState>  
  
10. <xref:System.Web.HttpApplication.PostAcquireRequestState>  
  
11. <xref:System.Web.HttpApplication.PreRequestHandlerExecute>  
  
     Program obsługi zdarzeń jest wykonywany.  
  
12. <xref:System.Web.HttpApplication.PostRequestHandlerExecute>  
  
13. <xref:System.Web.HttpApplication.ReleaseRequestState>  
  
14. <xref:System.Web.HttpApplication.PostReleaseRequestState>  
  
     Po <xref:System.Web.HttpApplication.PostReleaseRequestState> zdarzenie jest zgłaszane, wszystkie istniejące filtry odpowiedzi będzie filtrować dane wyjściowe.  
  
15. <xref:System.Web.HttpApplication.UpdateRequestCache>  
  
16. <xref:System.Web.HttpApplication.PostUpdateRequestCache>  
  
17. <xref:System.Web.HttpApplication.LogRequest>.  
  
     To zdarzenie jest obsługiwane w trybie zintegrowanym pakietu usług IIS 7.0 oraz w co najmniej .NET Framework 3.0  
  
18. <xref:System.Web.HttpApplication.PostLogRequest>  
  
     To zdarzenie jest obsługiwany tryb usługi IIS 7.0 zintegrowane i co najmniej programu .NET Framework 3.0  
  
19. <xref:System.Web.HttpApplication.EndRequest>  
  
   
  
## Examples  
 Dwa poniższe przykłady prezentują sposób użycia <xref:System.Web.HttpApplication> klasy i jego zdarzeń. Pierwszy przykład pokazuje, jak utworzyć niestandardowy moduł HTTP i nawiązać z nim zdarzenie. Drugi przykład przedstawia sposób modyfikowania pliku Web.config.  
  
 Poniższy przykład pokazuje, jak utworzyć niestandardowy moduł HTTP i połączyć <xref:System.Web.HttpApplication.AcquireRequestState> zdarzenia do modułu HTTP. Moduły HTTP przechwytuje każde żądanie zasobów aplikacji sieci Web, co pozwoliłoby Filtrowanie żądań klienta. Każdy moduł HTTP, która ją subskrybuje <xref:System.Web.HttpApplication> zdarzenie musi implementować <xref:System.Web.IHttpModule> interfejsu.  
  
 [!code-csharp[System.Web.HttpApplication1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpApplication1/cs/source.cs#1)]
 [!code-vb[System.Web.HttpApplication1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpApplication1/vb/source.vb#1)]  
  
 Zanim nastąpi zdarzenie w niestandardowy moduł HTTP, należy zmodyfikować ustawienia konfiguracji w pliku Web.config w celu powiadamiania programu ASP.NET o module protokołu HTTP. W poniższym przykładzie przedstawiono ustawienie odpowiednia konfiguracja `httpModules` sekcja pliku Web.config. Następujące ustawienie ma zastosowanie do trybu usługi IIS 7.0 klasycznego i wcześniejszych wersji usług IIS.  
  
```csharp  
<configuration>  
  <system.web>  
    <httpModules>  
      <add type="Samples.AspNet.CS.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </httpModules>  
  </system.web>  
</configuration>  
```  
  
```vb  
<configuration>  
  <system.web>  
    <httpModules>  
      <add type="Samples.AspNet.VB.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </httpModules>  
  </system.web>  
</configuration>  
```  
  
 Następujące ustawienie ma zastosowanie do usług IIS 7.0 w zintegrowanym trybie.  
  
```csharp  
<configuration>  
  <system.webServer>  
    <modules>  
      <add type="Samples.AspNet.CS.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </modules>  
  </system.webServer>  
</configuration>  
```  
  
```vb  
<configuration>  
  <system.webServer>  
    <modules>  
      <add type="Samples.AspNet.VB.CustomHTTPModule"  
        name="CustomHttpModule" />  
      <modules>  
  </system.webServer>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.IHttpHandlerFactory" />
    <altmember cref="T:System.Web.IHttpHandler" />
    <altmember cref="T:System.Web.IHttpModule" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpApplication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.HttpApplication" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler AcquireRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcquireRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AcquireRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcquireRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcquireRequestState;" />
      <MemberSignature Language="F#" Value="member this.AcquireRequestState : EventHandler " Usage="member this.AcquireRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy program ASP.NET uzyskuje bieżący stan (na przykład stan sesji), który jest skojarzony z bieżącego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AcquireRequestState> Zdarzenie jest wywoływane po utworzeniu programu obsługi zdarzeń.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Na przykład obsługa <xref:System.Web.HttpApplication.AcquireRequestState> zdarzeń, zobacz <xref:System.Web.HttpApplication> temat.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAcquireRequestState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAcquireRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAcquireRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAcquireRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAcquireRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnAcquireRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAcquireRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAcquireRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAcquireRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnAcquireRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAuthenticateRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthenticateRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthenticateRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthenticateRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnAuthenticateRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthenticateRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthenticateRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthenticateRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnAuthenticateRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAuthorizeRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthorizeRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthorizeRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthorizeRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnAuthorizeRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthorizeRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthorizeRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthorizeRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnAuthorizeRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnBeginRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.BeginRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.BeginRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnBeginRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnBeginRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnBeginRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnBeginRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnBeginRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnBeginRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnBeginRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.BeginRequest" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.BeginRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.BeginRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.BeginRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnBeginRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnBeginRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnBeginRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnBeginRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnBeginRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnBeginRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnBeginRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.BeginRequest" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.BeginRequest" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.BeginRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.BeginRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.BeginRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnEndRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.EndRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.EndRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnEndRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnEndRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnEndRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnEndRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnEndRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnEndRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnEndRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.EndRequest" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.EndRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.EndRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.EndRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnEndRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnEndRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnEndRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnEndRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnEndRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnEndRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnEndRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.EndRequest" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.EndRequest" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.EndRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.EndRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.EndRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnLogRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.LogRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.LogRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> został wprowadzony w .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnLogRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnLogRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnLogRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnLogRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.LogRequest" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.LogRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.LogRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.LogRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> został wprowadzony w .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnLogRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnLogRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnLogRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnLogRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.LogRequest" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.LogRequest" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.LogRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.LogRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.LogRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnMapRequestHandlerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> został wprowadzony w .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnMapRequestHandlerAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnMapRequestHandlerAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnMapRequestHandlerAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnMapRequestHandlerAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> został wprowadzony w .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnMapRequestHandlerAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnMapRequestHandlerAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnMapRequestHandlerAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnMapRequestHandlerAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAcquireRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAcquireRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAcquireRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAcquireRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostAcquireRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAcquireRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAcquireRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAcquireRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostAcquireRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAuthenticateRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthenticateRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthenticateRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthenticateRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostAuthenticateRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthenticateRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthenticateRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthenticateRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostAuthenticateRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAuthorizeRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthorizeRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthorizeRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthorizeRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostAuthorizeRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthorizeRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthorizeRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthorizeRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostAuthorizeRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostLogRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostLogRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostLogRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> został wprowadzony w .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostLogRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostLogRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostLogRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostLogRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostLogRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostLogRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> został wprowadzony w .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostLogRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostLogRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostLogRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostLogRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostLogRequest" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostLogRequest" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostMapRequestHandlerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostMapRequestHandlerAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostMapRequestHandlerAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostMapRequestHandlerAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostMapRequestHandlerAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostMapRequestHandlerAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostMapRequestHandlerAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostMapRequestHandlerAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostMapRequestHandlerAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> kolekcji.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostReleaseRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostReleaseRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostReleaseRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostReleaseRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostReleaseRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostReleaseRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostReleaseRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostReleaseRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostReleaseRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostRequestHandlerExecuteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostRequestHandlerExecuteAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostRequestHandlerExecuteAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostRequestHandlerExecuteAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostRequestHandlerExecuteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostRequestHandlerExecuteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostRequestHandlerExecuteAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostResolveRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostResolveRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostResolveRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostResolveRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostResolveRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostResolveRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostResolveRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostResolveRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostResolveRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostUpdateRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostUpdateRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostUpdateRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostUpdateRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostUpdateRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostUpdateRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostUpdateRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> , Rozpoczyna się przetwarzanie asynchroniczne zdarzenia.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPreRequestHandlerExecuteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPreRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRequestHandlerExecuteAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRequestHandlerExecuteAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPreRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPreRequestHandlerExecuteAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPreRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRequestHandlerExecuteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRequestHandlerExecuteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPreRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPreRequestHandlerExecuteAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> kolekcji.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnReleaseRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnReleaseRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnReleaseRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnReleaseRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnReleaseRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnReleaseRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnReleaseRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnReleaseRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnReleaseRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnResolveRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> programu obsługi zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnResolveRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnResolveRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnResolveRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnResolveRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> programu obsługi zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnResolveRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnResolveRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnResolveRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnResolveRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> programu obsługi zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnUpdateRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnUpdateRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnUpdateRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnUpdateRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</param>
        <param name="eh">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnUpdateRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnUpdateRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnUpdateRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <see cref="T:System.Web.BeginEventHandler" /> Którego początkowe asynchronicznego przetwarzania <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</param>
        <param name="endHandler">
          <see cref="T:System.Web.EndEventHandler" /> , Kończy przetwarzanie asynchroniczne <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</param>
        <param name="state">Skojarzony stan, aby dodać do asynchronicznego <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</param>
        <summary>Dodaje określony <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> zdarzeń do kolekcji asynchronicznych <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> procedury obsługi zdarzeń dla bieżącego żądania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationState" Usage="System.Web.HttpApplication.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan aplikacji.</summary>
        <value>
          <see cref="T:System.Web.HttpApplicationState" /> Dla bieżącego żądania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżący stan aplikacji składa się ze słownikiem klucz/wartość obiektów w całej aplikacji, które służy do przechowywania obiektów .NET Framework i wartości skalarnych, that are related to wiele żądań sieci Web z wielu klientów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateRequest">
      <MemberSignature Language="C#" Value="public event EventHandler AuthenticateRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AuthenticateRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AuthenticateRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthenticateRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AuthenticateRequest;" />
      <MemberSignature Language="F#" Value="member this.AuthenticateRequest : EventHandler " Usage="member this.AuthenticateRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy moduł zabezpieczeń ustanowiła tożsamości użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AuthenticateRequest> Zdarzenie sygnalizuje, że mechanizm uwierzytelniania skonfigurowanego uwierzytelnił bieżącego żądania. Subskrybowanie <xref:System.Web.HttpApplication.AuthenticateRequest> zdarzeń zapewnia, że żądanie będzie odbywać się przed przetworzeniem dołączonego modułu lub procedura obsługi zdarzeń.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />
      </Docs>
    </Member>
    <Member MemberName="AuthorizeRequest">
      <MemberSignature Language="C#" Value="public event EventHandler AuthorizeRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AuthorizeRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AuthorizeRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizeRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AuthorizeRequest;" />
      <MemberSignature Language="F#" Value="member this.AuthorizeRequest : EventHandler " Usage="member this.AuthorizeRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy moduł zabezpieczeń wykryła uwierzytelnienia użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.AuthorizeRequest> Zdarzenie sygnalizuje, że program ASP.NET ma uprawnienia bieżącego żądania. Subskrybowanie <xref:System.Web.HttpApplication.AuthorizeRequest> zapewnia zdarzenia, żądania uwierzytelnienia i autoryzacji przed przetworzeniem dołączonego modułu lub procedura obsługi zdarzeń.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />
      </Docs>
    </Member>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public event EventHandler BeginRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BeginRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.BeginRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeginRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BeginRequest;" />
      <MemberSignature Language="F#" Value="member this.BeginRequest : EventHandler " Usage="member this.BeginRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje jako pierwsze zdarzenie w łańcuchu potoku HTTP wykonania, gdy ASP.NET odpowie na żądanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.BeginRequest> Zdarzenie sygnalizuje utworzenia dowolnego danego nowe żądanie. To zdarzenie jest zawsze inicjowane i zawsze pierwszego zdarzenia podczas przetwarzania żądania.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.EndRequest" />
      </Docs>
    </Member>
    <Member MemberName="CompleteRequest">
      <MemberSignature Language="C#" Value="public void CompleteRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.CompleteRequest" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteRequest ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteRequest();" />
      <MemberSignature Language="F#" Value="member this.CompleteRequest : unit -&gt; unit" Usage="httpApplication.CompleteRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że program ASP.NET pominąć wszystkie zdarzenia i filtrowanie danych na HTTP łańcucha wykonywania potoku i bezpośrednie wykonywanie <see cref="E:System.Web.HttpApplication.EndRequest" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.HttpApplication.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje właściwe dla protokołu HTTP o bieżącym żądaniu.</summary>
        <value>
          <see cref="T:System.Web.HttpContext" /> Dla bieżącego żądania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="httpApplication.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa <see cref="T:System.Web.HttpApplication" /> wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, <xref:System.Web.HttpApplication.Session%2A>, I <xref:System.Web.HttpApplication.Application%2A> właściwości nie są dostępne do użycia podczas <xref:System.Web.HttpApplication.Dispose%2A> metoda jest wykonywana.  
  
 <xref:System.Web.HttpApplication.Dispose%2A> Wywołania metody <xref:System.Web.IHttpModule.Dispose%2A> metody na każdym z zarejestrowaną <xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A> wystąpienia aplikacji i zgłasza <xref:System.Web.HttpApplication.Disposed> zdarzeń.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas zastępowania <see cref="M:System.Web.HttpApplication.Dispose" /> w klasie pochodnej, upewnij się, że wywołanie klasy bazowej <see cref="M:System.Web.HttpApplication.Dispose" /> metody, która zarejestrowana delegaci otrzymają zdarzenie.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy aplikacja zostanie usunięty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu <xref:System.Web.HttpApplication.Disposed> delegata, możesz zidentyfikować metody, która obsługuje zdarzenie. Aby skojarzyć zdarzenia z programu obsługi zdarzeń, należy dodać wystąpienia <xref:System.Web.HttpApplication.Disposed> delegować do zdarzenia. Program obsługi zdarzeń jest wywoływany, gdy wystąpi zdarzenie, chyba że usuniesz <xref:System.Web.HttpApplication.Disposed> delegować.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public event EventHandler EndRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EndRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.EndRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EndRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EndRequest;" />
      <MemberSignature Language="F#" Value="member this.EndRequest : EventHandler " Usage="member this.EndRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje jako ostatnie zdarzenie w łańcuchu potoku HTTP wykonania, gdy ASP.NET odpowie na żądanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.EndRequest> Zdarzeń jest zawsze wywołane, gdy <xref:System.Web.HttpApplication.CompleteRequest%2A> metoda jest wywoływana.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.BeginRequest" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event EventHandler Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Error" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.Error" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Error As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Error;" />
      <MemberSignature Language="F#" Value="member this.Error : EventHandler " Usage="member this.Error : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wystąpił nieobsługiwany wyjątek jest zgłaszany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątek, który wywołuje <xref:System.Web.HttpApplication.Error> zdarzeń może zostać oceniony przez wywołanie <xref:System.Web.HttpServerUtility.GetLastError%2A> metody. Jeśli aplikacja generuje dane wyjściowe błędów niestandardowych, Pomiń komunikat o błędzie domyślny, który jest generowany przez platformę ASP.NET, przez wywołanie <xref:System.Web.HttpServerUtility.ClearError%2A> metody.  
  
> [!NOTE]
>  Jeśli Twoja aplikacja sieci Web usług XML sieci Web, nie można użyć <xref:System.Web.HttpApplication.Error> zdarzenia dla obsługi wyjątków globalnego tych usług. Program obsługi HTTP usług sieci Web XML zużywa każdy wyjątek, który występuje w usługi sieci Web XML i przekształca je błędu protokołu SOAP przed <xref:System.Web.HttpApplication.Error> wywoływana. Aby obsłużyć wyjątki usług sieci Web XML, Utwórz rozszerzenie SOAP do przetworzenia wyjątki usług sieci Web w niestandardowych globalnego programu obsługi wyjątków.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.HttpApplication.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę zdarzeń delegatów obsługi przetworzyć wszystkie zdarzenia aplikacji.</summary>
        <value>
          <see cref="T:System.ComponentModel.EventHandlerList" /> Zawierający nazwy delegatów obsługi zdarzeń.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputCacheProviderName">
      <MemberSignature Language="C#" Value="public virtual string GetOutputCacheProviderName (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetOutputCacheProviderName(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutputCacheProviderName (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetOutputCacheProviderName(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetOutputCacheProviderName : System.Web.HttpContext -&gt; string&#xA;override this.GetOutputCacheProviderName : System.Web.HttpContext -&gt; string" Usage="httpApplication.GetOutputCacheProviderName context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> , Udostępniający odwołania do wewnętrznych obiektów serwera, które są używane do obsługi żądań HTTP.</param>
        <summary>Pobiera nazwę domyślny dostawca wyjściowej pamięci podręcznej, który jest skonfigurowany dla witryny sieci Web.</summary>
        <returns>Nazwa domyślnego dostawcy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy przesłonić tę metodę i użyj go, aby zwrócić nazwę spośród wszystkich dostawców pamięci podręcznej danych wyjściowych, który jest skonfigurowany dla witryny sieci Web. ASP.NET pobiera odwołanie do nazwanych dostawcy i używa go do przechowywania danych w pamięci podręcznej danych wyjściowych dla aktualnie wykonywanej żądania.  
  
 Domyślnie w programie ASP.NET: wszystkie odpowiedzi HTTP w celu renderowania stron i kontrolek używają pamięci podręcznej danych wyjściowych w pamięci. Możesz zmienić domyślny dostawca wyjściowej pamięci podręcznej jest używana dla aplikacji sieci Web, określając nazwę innego dostawcy `defaultProvider`.  
  
 Ponadto można wybrać różnych dostawców pamięci podręcznej danych wyjściowych dla poszczególnych kontrolek i dla poszczególnych żądań. Najprostszym sposobem wybierz innego dostawcę wyjściowej pamięci podręcznej w przypadku różnych kontrolek użytkownika sieci Web jest tak w sposób deklaratywny za pomocą nowego `providerName` atrybutu w dyrektywie strony lub kontroli, jak pokazano w poniższym przykładzie:  
  
```  
<%@ OutputCache Duration="60" VaryByParam="None"   
    providerName="DiskCache" %>  
```  
  
 Aby określić dostawcę pamięci podręcznej danych wyjściowych inne niż dla żądania HTTP, możesz przesłonić tę metodę w pliku Global.asax programowo określić który dostawca do użycia dla określonego żądania. Aby uzyskać więcej informacji, zobacz [program ASP.NET buforowanie Przegląd](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak programowo określić dostawcy pamięci podręcznej o nazwie `DiskCache` wszystkie żądania HTTP, który prowadzi do strony Advanced.aspx.  

```csharp  
public override string GetOutputCacheProviderName(HttpContext context)  
{  
    if (context.Request.Path.EndsWith("Advanced.aspx"))  
        return "DiskCache";  
    else  
        return base.GetOutputCacheProviderName(context);  
}  
```  

```vb  
Public Overloads Overrides Sub GetOutputCacheProviderName(ByVal context _  
        As HttpContext) As String   
    If context.Request.Path.EndsWith("Advanced.aspx") Then   
        Return "DiskCache"   
    Else   
        Return MyBase.GetOutputCacheProviderName(context)   
    End If   
End Sub  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="context" /> jest <see langword="null" /> lub jest pustym ciągiem.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVaryByCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetVaryByCustomString (System.Web.HttpContext context, string custom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetVaryByCustomString(class System.Web.HttpContext context, string custom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVaryByCustomString (context As HttpContext, custom As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetVaryByCustomString(System::Web::HttpContext ^ context, System::String ^ custom);" />
      <MemberSignature Language="F#" Value="abstract member GetVaryByCustomString : System.Web.HttpContext * string -&gt; string&#xA;override this.GetVaryByCustomString : System.Web.HttpContext * string -&gt; string" Usage="httpApplication.GetVaryByCustomString (context, custom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="custom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> Obiektu, który zawiera informacje o bieżącym żądaniu sieci Web.</param>
        <param name="custom">Niestandardowy ciąg, który określa, które odpowiedzi z pamięci podręcznej jest używany do odpowiedzi na bieżące żądanie.</param>
        <summary>Udostępnia implementację całej aplikacji <see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /> właściwości.</summary>
        <returns>Jeśli wartość <paramref name="custom" /> parametr jest <see langword="&quot;browser&quot;" />, w przeglądarce <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zastąpić <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> Aby dodać nową metodę do obliczania wartości niestandardowe różnią się przez, które są oparte na bieżące żądanie. Implementacja musi wywołać klasy bazowej dla wartości niestandardowych, które nie rozpoznaje. Aby uzyskać więcej informacji, zobacz [jak: wersje pamięci podręcznej ciągów niestandardowego za pomocą strony](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.Init" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init();" />
      <MemberSignature Language="F#" Value="abstract member Init : unit -&gt; unit&#xA;override this.Init : unit -&gt; unit" Usage="httpApplication.Init " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje kod niestandardowy inicjowania, po dodaniu wszystkich modułów programu obsługi zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W klasie pochodnej, można zastąpić <xref:System.Web.HttpApplication.Init%2A> metodę, aby dodać kod niestandardowy jednorazowe inicjowanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequest">
      <MemberSignature Language="C#" Value="public event EventHandler LogRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LogRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.LogRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LogRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LogRequest;" />
      <MemberSignature Language="F#" Value="member this.LogRequest : EventHandler " Usage="member this.LogRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje zaraz przed, ASP.NET wykonuje wszystkie rejestrowania dla bieżącego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.LogRequest> Zdarzenie jest zgłaszane, nawet jeśli wystąpi błąd. Możesz podać program obsługi zdarzeń dla <xref:System.Web.HttpApplication.LogRequest> zdarzenia w celu zapewnienia niestandardowego rejestrowania dla żądania.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.HttpApplication.LogRequest> został wprowadzony w .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zapewnić program obsługi zdarzeń dla <xref:System.Web.HttpApplication.LogRequest> zdarzeń. Program obsługi zdarzeń obsługuje także kilka innych zdarzeń. W związku z tym <xref:System.Web.HttpContext.CurrentNotification%2A> i <xref:System.Web.HttpContext.IsPostNotification%2A> właściwości są używane do ustalenia, jakie kodu do uruchomienia.  
  
 [!code-csharp[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/VB/App_Code/TestModule.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostLogRequest" />
      </Docs>
    </Member>
    <Member MemberName="MapRequestHandler">
      <MemberSignature Language="C#" Value="public event EventHandler MapRequestHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MapRequestHandler" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.MapRequestHandler" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MapRequestHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MapRequestHandler;" />
      <MemberSignature Language="F#" Value="member this.MapRequestHandler : EventHandler " Usage="member this.MapRequestHandler : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy program obsługi jest zaznaczona, aby odpowiedzieć na żądanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.MapRequestHandler> Zdarzeń jest używana przez infrastrukturę platformy ASP.NET do określenia programu obsługi żądania dla bieżącego żądania. Aby uzyskać więcej informacji, zobacz [porady: rejestrowanie programów obsługi HTTP](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.HttpApplication.MapRequestHandler> został wprowadzony w .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostMapRequestHandler" />
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public System.Web.HttpModuleCollection Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpModuleCollection Modules" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As HttpModuleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpModuleCollection ^ Modules { System::Web::HttpModuleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Modules : System.Web.HttpModuleCollection" Usage="System.Web.HttpApplication.Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpModuleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję modułów dla bieżącej aplikacji.</summary>
        <value>
          <see cref="T:System.Web.HttpModuleCollection" /> Zawierający nazwy modułów dla aplikacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecuteRequestStep">
      <MemberSignature Language="C#" Value="public void OnExecuteRequestStep (Action&lt;System.Web.HttpContextBase,Action&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnExecuteRequestStep(class System.Action`2&lt;class System.Web.HttpContextBase, class System.Action&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnExecuteRequestStep (callback As Action(Of HttpContextBase, Action))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnExecuteRequestStep(Action&lt;System::Web::HttpContextBase ^, Action ^&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.OnExecuteRequestStep : Action&lt;System.Web.HttpContextBase, Action&gt; -&gt; unit" Usage="httpApplication.OnExecuteRequestStep callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase,System.Action&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">Metoda wywołania zwrotnego.</param>
        <summary>Określa wywołanie zwrotne do wywołania po wykonaniu kroku wykonywania żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Ta metoda zapewnia elastyczność w potoku platformy ASP.NET, aby ułatwić deweloperom implementowania funkcji w otaczającym kontekście scenariuszy, a także tworzenie bibliotek, które interesują przepływ wykonania programu ASP.NET (na przykład, śledzenie, profilowanie, diagnostyki i Liczba transakcji).
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostAcquireRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler PostAcquireRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAcquireRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAcquireRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAcquireRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAcquireRequestState;" />
      <MemberSignature Language="F#" Value="member this.PostAcquireRequestState : EventHandler " Usage="member this.PostAcquireRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy stan żądania (na przykład stan sesji), który jest skojarzony z bieżącym żądaniem został uzyskany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.PostAcquireRequestState> Zdarzenie jest wywoływane po wykonaniu <xref:System.Web.HttpApplication.AcquireRequestState> wystąpiło zdarzenie. Funkcja, która ją subskrybuje <xref:System.Web.HttpApplication.AcquireRequestState> zdarzeń mają dostęp do wszelkich danych jest przetwarzany przez <xref:System.Web.HttpApplication.PostAcquireRequestState>.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AcquireRequestState" />
      </Docs>
    </Member>
    <Member MemberName="PostAuthenticateRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostAuthenticateRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAuthenticateRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAuthenticateRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAuthenticateRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAuthenticateRequest;" />
      <MemberSignature Language="F#" Value="member this.PostAuthenticateRequest : EventHandler " Usage="member this.PostAuthenticateRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy moduł zabezpieczeń ustanowiła tożsamości użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.PostAuthenticateRequest> Zdarzenie jest wywoływane po wykonaniu <xref:System.Web.HttpApplication.AuthenticateRequest> wystąpiło zdarzenie. Funkcja, która ją subskrybuje <xref:System.Web.HttpApplication.PostAuthenticateRequest> zdarzeń mają dostęp do wszelkich danych jest przetwarzany przez <xref:System.Web.HttpApplication.PostAuthenticateRequest>.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AuthenticateRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostAuthorizeRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostAuthorizeRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAuthorizeRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAuthorizeRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAuthorizeRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAuthorizeRequest;" />
      <MemberSignature Language="F#" Value="member this.PostAuthorizeRequest : EventHandler " Usage="member this.PostAuthorizeRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy został autoryzowany użytkownika dla bieżącego żądania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.PostAuthorizeRequest> Zdarzenie sygnalizuje, że program ASP.NET ma uprawnienia bieżącego żądania. Subskrybowanie <xref:System.Web.HttpApplication.PostAuthorizeRequest> zdarzeń zapewnia uwierzytelniania i autoryzacji żądania przed przetworzeniem dołączonego modułu lub procedura obsługi zdarzeń.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AuthorizeRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostLogRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostLogRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostLogRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostLogRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostLogRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostLogRequest;" />
      <MemberSignature Language="F#" Value="member this.PostLogRequest : EventHandler " Usage="member this.PostLogRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy program ASP.NET została ukończona, przetwarzanie wszystkich procedur obsługi zdarzeń dla <see cref="E:System.Web.HttpApplication.LogRequest" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 <xref:System.Web.HttpApplication.PostLogRequest> został wprowadzony w .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.LogRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostMapRequestHandler">
      <MemberSignature Language="C#" Value="public event EventHandler PostMapRequestHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostMapRequestHandler" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostMapRequestHandler" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostMapRequestHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostMapRequestHandler;" />
      <MemberSignature Language="F#" Value="member this.PostMapRequestHandler : EventHandler " Usage="member this.PostMapRequestHandler : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ASP.NET został zamapowany bieżące żądanie do narzędzia obsługi zdarzeń właściwe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.MapRequestHandler" />
      </Docs>
    </Member>
    <Member MemberName="PostReleaseRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler PostReleaseRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostReleaseRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostReleaseRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostReleaseRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostReleaseRequestState;" />
      <MemberSignature Language="F#" Value="member this.PostReleaseRequestState : EventHandler " Usage="member this.PostReleaseRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ASP.NET została ukończona, wykonywanie wszystkie żądania procedury obsługi zdarzeń i stanu żądania, których dane zostały zapisane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ReleaseRequestState" />
      </Docs>
    </Member>
    <Member MemberName="PostRequestHandlerExecute">
      <MemberSignature Language="C#" Value="public event EventHandler PostRequestHandlerExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostRequestHandlerExecute" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostRequestHandlerExecute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostRequestHandlerExecute As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostRequestHandlerExecute;" />
      <MemberSignature Language="F#" Value="member this.PostRequestHandlerExecute : EventHandler " Usage="member this.PostRequestHandlerExecute : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy program ASP.NET programu obsługi zdarzeń (na przykład strony lub usługi sieci Web XML) kończy działanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />
      </Docs>
    </Member>
    <Member MemberName="PostResolveRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler PostResolveRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostResolveRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostResolveRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostResolveRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostResolveRequestCache;" />
      <MemberSignature Language="F#" Value="member this.PostResolveRequestCache : EventHandler " Usage="member this.PostResolveRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy program ASP.NET pomija wykonanie bieżącego programu obsługi zdarzeń i umożliwia moduł buforowania obsługiwać żądania z pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="PostUpdateRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler PostUpdateRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostUpdateRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostUpdateRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostUpdateRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostUpdateRequestCache;" />
      <MemberSignature Language="F#" Value="member this.PostUpdateRequestCache : EventHandler " Usage="member this.PostUpdateRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy program ASP.NET zakończy się aktualizowanie pamięci podręcznej modułów i przechowywanie odpowiedzi, które są używane do obsługi kolejnych żądań z pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.PostUpdateRequestCache> Zdarzenie jest wywoływane po wykonaniu <xref:System.Web.HttpApplication.UpdateRequestCache> wystąpiło zdarzenie. Gdy <xref:System.Web.HttpApplication.PostUpdateRequestCache> jest wywołane, ASP.NET została zakończona przetwarzania kodu i zawartości pamięci podręcznej jest aktualnie finalizowana.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.UpdateRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="PreRequestHandlerExecute">
      <MemberSignature Language="C#" Value="public event EventHandler PreRequestHandlerExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRequestHandlerExecute" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreRequestHandlerExecute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRequestHandlerExecute As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRequestHandlerExecute;" />
      <MemberSignature Language="F#" Value="member this.PreRequestHandlerExecute : EventHandler " Usage="member this.PreRequestHandlerExecute : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje zaraz przed, ASP.NET, który rozpoczyna się wykonywanie programu obsługi zdarzeń (na przykład strony lub usługi XML sieci Web).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />
      </Docs>
    </Member>
    <Member MemberName="PreSendRequestContent">
      <MemberSignature Language="C#" Value="public event EventHandler PreSendRequestContent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreSendRequestContent" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreSendRequestContent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreSendRequestContent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreSendRequestContent;" />
      <MemberSignature Language="F#" Value="member this.PreSendRequestContent : EventHandler " Usage="member this.PreSendRequestContent : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje zaraz przed, ASP.NET przesyła zawartość do klienta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.PreSendRequestContent> Zdarzeń mogą wystąpić wiele razy.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
 > [!WARNING]
 > Nie używaj `PreSendRequestContent` z modułów zarządzanych, które implementują `IHttpModule`. Ustawienie tych właściwości mogą powodować problemy z żądań asynchronicznych. Kombinacja żądane Routing aplikacji (ARR) i technologia websockets może prowadzić do wyjątki naruszenie zasad dostępu, które może spowodować, że w3wp ulega awarii. Na przykład iiscore! W3_CONTEXT_BASE::GetIsLastNotification + 68 w iiscore.dll spowodowała wyjątek naruszenie zasad dostępu (0xC0000005).
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreSendRequestHeaders" />
      </Docs>
    </Member>
    <Member MemberName="PreSendRequestHeaders">
      <MemberSignature Language="C#" Value="public event EventHandler PreSendRequestHeaders;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreSendRequestHeaders" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreSendRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreSendRequestHeaders As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreSendRequestHeaders;" />
      <MemberSignature Language="F#" Value="member this.PreSendRequestHeaders : EventHandler " Usage="member this.PreSendRequestHeaders : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje zaraz przed, ASP.NET wysyła nagłówki HTTP do klienta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
 > [!WARNING]
 > Nie używaj `PreSendRequestHeaders` z modułów zarządzanych, które implementują `IHttpModule`. Ustawienie tych właściwości mogą powodować problemy z żądań asynchronicznych. Kombinacja żądane Routing aplikacji (ARR) i technologia websockets może prowadzić do wyjątki naruszenie zasad dostępu, które może spowodować, że w3wp ulega awarii. Na przykład iiscore! W3_CONTEXT_BASE::GetIsLastNotification + 68 w iiscore.dll spowodowała wyjątek naruszenie zasad dostępu (0xC0000005).
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreSendRequestContent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterModule">
      <MemberSignature Language="C#" Value="public static void RegisterModule (Type moduleType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterModule(class System.Type moduleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.RegisterModule(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterModule (moduleType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterModule(Type ^ moduleType);" />
      <MemberSignature Language="F#" Value="static member RegisterModule : Type -&gt; unit" Usage="System.Web.HttpApplication.RegisterModule moduleType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="moduleType">Typ modułu.</param>
        <summary>Rejestruje Moduł aplikacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler ReleaseRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReleaseRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.ReleaseRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReleaseRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReleaseRequestState;" />
      <MemberSignature Language="F#" Value="member this.ReleaseRequestState : EventHandler " Usage="member this.ReleaseRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu programu ASP.NET, wykonywanie wszystkich procedur obsługi zdarzeń żądania. To zdarzenie powoduje, że stan modułów, aby zapisać bieżące dane o stanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.HttpApplication.ReleaseRequestState> zdarzenie jest zgłaszane w aplikacji zostało zakończone z tym żądaniem i platformy ASP.NET jest sygnalizowane, aby przechowywać stan żądania.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostReleaseRequestState" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Web.HttpRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpRequest ^ Request { System::Web::HttpRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.Web.HttpRequest" Usage="System.Web.HttpApplication.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt wewnętrzne żądania dla bieżącego żądania.</summary>
        <value>
          <see cref="T:System.Web.HttpRequest" /> Obiektu, który przetwarza aplikacji.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.HttpRequest" /> Obiekt jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler RequestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RequestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.RequestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RequestCompleted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RequestCompleted;" />
      <MemberSignature Language="F#" Value="member this.RequestCompleted : EventHandler " Usage="member this.RequestCompleted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostały zwolnione zarządzanych obiektów, które są skojarzone z żądaniem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpApplication.RequestCompleted> Zdarzenie jest wywoływane po wszystkich zarządzanych modułów i zostały wywołane programy obsługi w potoku ASP.NET. Dzięki temu modułów, aby wyczyścić zasoby, które zostały wykonane po wszystkich zarządzanych moduły i programy obsługi. Użyj tego zdarzenia, jeśli określony czas, aby jawnie usuwa zarządzane zasoby utworzone w trakcie żądania jest wymagana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler ResolveRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResolveRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.ResolveRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResolveRequestCache;" />
      <MemberSignature Language="F#" Value="member this.ResolveRequestCache : EventHandler " Usage="member this.ResolveRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ASP.NET zakończy się zdarzenie autoryzacji, aby umożliwić buforowanie modułów obsługiwać żądań z pamięci podręcznej, z pominięciem wykonywanie programu obsługi zdarzeń (na przykład strony lub usługi XML sieci Web).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Web.HttpResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpResponse ^ Response { System::Web::HttpResponse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Web.HttpResponse" Usage="System.Web.HttpApplication.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt odpowiedzi wewnętrzne dla bieżącego żądania.</summary>
        <value>
          <see cref="T:System.Web.HttpResponse" /> Obiektu, który przetwarza aplikacji.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.HttpResponse" /> Obiekt jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtility" Usage="System.Web.HttpApplication.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt wewnętrzny serwer dla bieżącego żądania.</summary>
        <value>
          <see cref="T:System.Web.HttpServerUtility" /> Obiektu, który przetwarza aplikacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.SessionState.HttpSessionState" Usage="System.Web.HttpApplication.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt wewnętrzne sesji, który zapewnia dostęp do danych sesji.</summary>
        <value>
          <see cref="T:System.Web.SessionState.HttpSessionState" /> Obiektu dla bieżącej sesji.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.SessionState.HttpSessionState" /> Obiekt jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Web.HttpApplication.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia interfejs witryny, dla <see cref="T:System.ComponentModel.IComponent" /> implementacji.</summary>
        <value>
          <see cref="T:System.ComponentModel.ISite" /> Obiekt, który umożliwia kontener służący do zarządzania i komunikować się z ich elementów podrzędnych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpAsyncHandler.BeginProcessRequest">
      <MemberSignature Language="C#" Value="IAsyncResult IHttpAsyncHandler.BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IAsyncResult System.Web.IHttpAsyncHandler.BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback cb, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function BeginProcessRequest (context As HttpContext, cb As AsyncCallback, extraData As Object) As IAsyncResult Implements IHttpAsyncHandler.BeginProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual IAsyncResult ^ System.Web.IHttpAsyncHandler.BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ cb, System::Object ^ extraData) = System::Web::IHttpAsyncHandler::BeginProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="cb" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> , Udostępniający odwołania do wewnętrznych obiektów serwera, które są używane do obsługi żądań HTTP.</param>
        <param name="cb">
          <see cref="T:System.AsyncCallback" /> Do wywołania po ukończeniu asynchronicznego wywołania metody. Jeśli <c>cb</c> parametr jest <see langword="null" />, delegat nie jest wywoływana.</param>
        <param name="extraData">Dodatkowe dane wymagane do przetwarzania żądania.</param>
        <summary>Inicjuje asynchroniczne połączenie z programem obsługi zdarzeń HTTP.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Zawierający informacje o stanie procesu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpAsyncHandler.EndProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpAsyncHandler.EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpAsyncHandler.EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Sub EndProcessRequest (result As IAsyncResult) Implements IHttpAsyncHandler.EndProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult ^ result) = System::Web::IHttpAsyncHandler::EndProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> Zawierający informacje o stanie procesu.</param>
        <summary>Udostępnia proces asynchroniczny <see langword="End" /> metoda po zakończeniu procesu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A> metodę, aby zgłaszać wyjątków, które są przechwytywane podczas procesu asynchronicznego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.IsReusable">
      <MemberSignature Language="C#" Value="bool System.Web.IHttpHandler.IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReusable As Boolean Implements IHttpHandler.IsReusable" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.IHttpHandler.IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.HttpApplication.System.Web.IHttpHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see langword="Boolean" /> wartość wskazującą, czy inne żądanie może użyć <see cref="T:System.Web.IHttpHandler" /> obiektu.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.IHttpHandler" /> obiekt jest wielokrotnego użytku; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby jawnie ustawić `IsReusable` właściwości `true` lub `false`, podaj kod, który zastępuje `IsReusable` metody dostępu właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.ProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpHandler.ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpHandler.ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ProcessRequest (context As HttpContext) Implements IHttpHandler.ProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpHandler.ProcessRequest(System::Web::HttpContext ^ context) = System::Web::IHttpHandler::ProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> , Udostępniający odwołania do wewnętrznych obiektów serwera, które są używane do obsługi żądań HTTP.</param>
        <summary>Umożliwia przetwarzanie żądań sieci HTTP Web przez niestandardowy program obsługi HTTP, który implementuje <see cref="T:System.Web.IHttpHandler" /> interfejsu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą <xref:System.Web.IHttpModule> i <xref:System.Web.IHttpHandler> interfejsy jako odwołanie do <xref:System.Web.HttpContext> obiektu dla bieżącego żądania HTTP. Obiekt umożliwia dostęp do wewnętrznych `Request`, `Response`, i `Server` obiektów dla żądania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">We wszystkich przypadkach.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler UpdateRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler UpdateRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.UpdateRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ UpdateRequestCache;" />
      <MemberSignature Language="F#" Value="member this.UpdateRequestCache : EventHandler " Usage="member this.UpdateRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ASP.NET zakończy się wykonywanie programu obsługi zdarzeń, aby umożliwić buforowanie modułów przechowywania odpowiedzi, które będą używane do obsługi kolejnych żądań z pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Web.HttpApplication.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt wewnętrzne użytkownika dla bieżącego żądania.</summary>
        <value>
          <see cref="T:System.Security.Principal.IPrincipal" /> Obiekt, który reprezentuje bieżący użytkownik uwierzytelnieni lub anonimowi.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Security.Principal.IPrincipal" /> Obiekt jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>