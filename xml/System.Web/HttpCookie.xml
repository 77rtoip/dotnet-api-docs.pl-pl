<Type Name="HttpCookie" FullName="System.Web.HttpCookie">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2c352df1b28f38f0a3b065d4d267aae07a567d2" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39761039" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpCookie" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookie extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookie" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookie" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookie sealed" />
  <TypeSignature Language="F#" Value="type HttpCookie = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="379d8-101">Zapewnia bezpieczny sposób tworzenia i manipulowania poszczególnych plików cookie protokołu HTTP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="379d8-101">Provides a type-safe way to create and manipulate individual HTTP cookies.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="379d8-102"><xref:System.Web.HttpCookie> Klasy pobiera i ustawia właściwości poszczególnych plików cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-102">The <xref:System.Web.HttpCookie> class gets and sets properties of individual cookies.</span></span> <span data-ttu-id="379d8-103"><xref:System.Web.HttpCookieCollection> Klasa dostarcza metody do przechowywania, pobieranie i zarządzania nimi wiele plików cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-103">The <xref:System.Web.HttpCookieCollection> class provides methods to store, retrieve, and manage multiple cookies.</span></span>  
  
 <span data-ttu-id="379d8-104">Program ASP.NET zawiera dwie kolekcje wewnętrzne pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-104">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="379d8-105">Kolekcji udostępniane za pośrednictwem <xref:System.Web.HttpRequest.Cookies%2A> zbiór <xref:System.Web.HttpRequest> obiekt zawiera pliki cookie przesyłanych przez klienta do serwera w `Cookie` nagłówka.</span><span class="sxs-lookup"><span data-stu-id="379d8-105">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of the <xref:System.Web.HttpRequest> object contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="379d8-106">Kolekcji udostępniane za pośrednictwem <xref:System.Web.HttpResponse.Cookies%2A> zbiór <xref:System.Web.HttpResponse> obiekt zawiera nowe pliki cookie, utworzony na serwerze i przekazywane do klienta w `Set-Cookie` nagłówka odpowiedzi HTTP.</span><span class="sxs-lookup"><span data-stu-id="379d8-106">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of the <xref:System.Web.HttpResponse> object contains new cookies created on the server and transmitted to the client in the `Set-Cookie` HTTP response header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="379d8-107">Poniższy przykład kodu pokazuje, jak sprawdzić, czy plik cookie o nazwie `DateCookieExample` w <xref:System.Web.HttpRequest> obiektu.</span><span class="sxs-lookup"><span data-stu-id="379d8-107">The following code example demonstrates how to check for a cookie named `DateCookieExample` in the <xref:System.Web.HttpRequest> object.</span></span> <span data-ttu-id="379d8-108">Jeśli plik cookie nie zostanie znaleziony, zostanie utworzony i dodany do <xref:System.Web.HttpResponse> obiektu.</span><span class="sxs-lookup"><span data-stu-id="379d8-108">If the cookie is not found, it is created and added to the <xref:System.Web.HttpResponse> object.</span></span> <span data-ttu-id="379d8-109">Plik cookie jest równa wygaśnie po upływie 10 minut.</span><span class="sxs-lookup"><span data-stu-id="379d8-109">The cookie is set to expire in 10 minutes.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookie/cs/HttpCookie.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookie/vb/HttpCookie.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpResponse" />
    <altmember cref="T:System.Web.HttpRequest" />
    <altmember cref="T:System.Web.HttpCookieCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.HttpCookie" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-110">Initializes a new instance of the <see cref="T:System.Web.HttpCookie" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpCookie : string -&gt; System.Web.HttpCookie" Usage="new System.Web.HttpCookie name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="379d8-111">Nazwa nowego pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-111">The name of the new cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="379d8-112">Tworzy i nazwy nowego pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-112">Creates and names a new cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="379d8-113">Poniższy przykład kodu tworzy i nazwy nowego pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-113">The following code example creates and names a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpCookie : string * string -&gt; System.Web.HttpCookie" Usage="new System.Web.HttpCookie (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="379d8-114">Nazwa nowego pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-114">The name of the new cookie.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="379d8-115">Wartość nowego pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-115">The value of the new cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="379d8-116">Tworzy nazwy i przypisuje wartość do nowego pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-116">Creates, names, and assigns a value to a new cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="379d8-117">Poniższy przykład kodu tworzy nazwy i ustawia wartość nowego pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-117">The following code example creates, names, and sets the value of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Web.HttpCookie.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-118">Pobiera lub ustawia domenę do skojarzenia z plikiem cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-118">Gets or sets the domain to associate the cookie with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-119">Nazwa domeny do skojarzenia z plikiem cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-119">The name of the domain to associate the cookie with.</span>
          </span>
          <span data-ttu-id="379d8-120">Wartością domyślną jest bieżąca domena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-120">The default value is the current domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="379d8-121">Ustawienie `Domain` atrybut ogranicza przesyłania pliku cookie do klientów żądających zasobu z tej domeny.</span><span class="sxs-lookup"><span data-stu-id="379d8-121">Setting the `Domain` attribute limits transmission of the cookie to clients requesting a resource from that domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="379d8-122">Poniższy przykład kodu ustawia domenę pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-122">The following code example sets the cookie's domain.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Domain Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Domain Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public DateTime Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Expires { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Expires : DateTime with get, set" Usage="System.Web.HttpCookie.Expires" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-123">Pobiera lub ustawia datę i godzinę wygaśnięcia pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-123">Gets or sets the expiration date and time for the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-124">Godzina dnia (na kliencie), w jakim wygasa plik cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-124">The time of day (on the client) at which the cookie expires.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="379d8-125">Poniższy przykład kodu ustawia czas wygaśnięcia pliku cookie do 10 minut od bieżącego czasu.</span><span class="sxs-lookup"><span data-stu-id="379d8-125">The following code example sets the expiration time of the cookie to 10 minutes from the current time.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Expires Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/CS/default.aspx#2)]
 [!code-vb[Classic HttpCookie.Expires Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/VB/default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HasKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasKeys : bool" Usage="System.Web.HttpCookie.HasKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-126">Pobiera wartość wskazującą, czy plik cookie ma podklucze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-126">Gets a value indicating whether a cookie has subkeys.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-127">
            <see langword="true" /> Jeśli plik cookie ma podklucze, w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-127">
              <see langword="true" /> if the cookie has subkeys, otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="379d8-128">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="379d8-129">Poniższy przykład kodu sprawdza, czy każdy element członkowski kolekcji plików cookie dla wielu wartości.</span><span class="sxs-lookup"><span data-stu-id="379d8-129">The following code example examines each member of a cookie collection for multiple values.</span></span> <span data-ttu-id="379d8-130">Jeśli plik cookie <xref:System.Web.HttpCookie.HasKeys%2A> właściwość `true`, wskazującą, czy występują wiele wartości, w tym przykładzie kopiuje nazwy wartości do tablicy jeden ciąg i odpowiadające im wartości do innej tablicy ciągów.</span><span class="sxs-lookup"><span data-stu-id="379d8-130">If a cookie's <xref:System.Web.HttpCookie.HasKeys%2A> property is `true`, indicating that multiple values are present, this example copies the value names into one string array and the corresponding values into another string array.</span></span> <span data-ttu-id="379d8-131">Na przykład sposobu tworzenia wielu wartości pliku cookie, zobacz <xref:System.Web.HttpCookie.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="379d8-131">For an example of how to create multiple values for a cookie, see <xref:System.Web.HttpCookie.Values%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="HttpOnly">
      <MemberSignature Language="C#" Value="public bool HttpOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HttpOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpOnly : bool with get, set" Usage="System.Web.HttpCookie.HttpOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-132">Pobiera lub ustawia wartość określającą, czy plik cookie jest dostępny za pomocą skryptu po stronie klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-132">Gets or sets a value that specifies whether a cookie is accessible by client-side script.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-133">
            <see langword="true" /> Jeśli plik cookie ma <see langword="HttpOnly" /> atrybutu i nie może być używane, za pomocą skryptu po stronie klienta; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-133">
              <see langword="true" /> if the cookie has the <see langword="HttpOnly" /> attribute and cannot be accessed through a client-side script; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="379d8-134">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-134">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="379d8-135">Program Microsoft Internet Explorer w wersji 6 z dodatkiem Service Pack 1 lub nowszym obsługuje właściwości pliku cookie, <xref:System.Web.HttpCookie.HttpOnly%2A>, które mogą pomóc w Eliminuj zagrożenia skryptów między witrynami, których wynikiem kradzieży plików cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-135">Microsoft Internet Explorer version 6 Service Pack 1 and later supports a cookie property, <xref:System.Web.HttpCookie.HttpOnly%2A>, that can help mitigate cross-site scripting threats that result in stolen cookies.</span></span> <span data-ttu-id="379d8-136">Skradzione pliki cookie mogą zawierać poufne informacje z identyfikacją użytkownika do witryny, takich jak ASP.NET session identyfikator lub formularzy biletu uwierzytelniania i mogą być powtórzone przez osobę atakującą w celu podszyć się jako użytkownik i uzyskania informacji poufnych.</span><span class="sxs-lookup"><span data-stu-id="379d8-136">Stolen cookies can contain sensitive information identifying the user to the site, such as the ASP.NET session ID or forms authentication ticket, and can be replayed by the attacker in order to masquerade as the user or obtain sensitive information.</span></span> <span data-ttu-id="379d8-137">Gdy `HttpOnly` plik cookie jest odbierany przez przeglądarkę zgodny, jest niedostępny do skryptu po stronie klienta.</span><span class="sxs-lookup"><span data-stu-id="379d8-137">When an `HttpOnly` cookie is received by a compliant browser, it is inaccessible to client-side script.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="379d8-138">Ustawienie <xref:System.Web.HttpCookie.HttpOnly%2A> właściwości `true` nie uniemożliwia osobie atakującej dostęp do kanału sieci przed bezpośrednim dostępem do pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-138">Setting the <xref:System.Web.HttpCookie.HttpOnly%2A> property to `true` does not prevent an attacker with access to the network channel from accessing the cookie directly.</span></span> <span data-ttu-id="379d8-139">Należy wziąć pod uwagę przy użyciu protokołu Secure Sockets Layer (SSL) w celu ochrony przed tym.</span><span class="sxs-lookup"><span data-stu-id="379d8-139">Consider using Secure Sockets Layer (SSL) to help protect against this.</span></span> <span data-ttu-id="379d8-140">Zabezpieczenia stacji roboczej jest również ważna, ponieważ złośliwy użytkownik, można użyć z otwartego okna przeglądarki lub komputer zawierający trwałe pliki cookie w celu uzyskania dostępu do witryny sieci Web przy użyciu tożsamości przez wiarygodnego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="379d8-140">Workstation security is also important, as a malicious user could use an open browser window or a computer containing persistent cookies to obtain access to a Web site with a legitimate user's identity.</span></span>  
  
 <span data-ttu-id="379d8-141">Aby uzyskać więcej informacji na temat możliwych ataków i jak ta właściwość może pomóc w ich wyeliminowanie, zobacz [Mitigating Cross-site Scripting za pomocą plików cookie tylko HTTP](http://go.microsoft.com/fwlink/?LinkId=41580).</span><span class="sxs-lookup"><span data-stu-id="379d8-141">For more information on possible attacks and how this property can help mitigate them, see [Mitigating Cross-site Scripting With HTTP-only Cookies](http://go.microsoft.com/fwlink/?LinkId=41580).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="379d8-142">Poniższy przykład kodu demonstruje sposób pisania `HttpOnly` pliku cookie i pokazuje, jak nie jest dostępny dla klientów za pośrednictwem ECMAScript.</span><span class="sxs-lookup"><span data-stu-id="379d8-142">The following code example demonstrates how to write an `HttpOnly` cookie and shows how it is not accessible by the client through ECMAScript.</span></span>  
  
 [!code-aspx-csharp[HttpOnlyCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpOnlyCookie/CS/httponlycookiecs.aspx#1)]
 [!code-aspx-vb[HttpOnlyCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpOnlyCookie/vb/httponlycookievb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.HttpCookie.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="379d8-143">Klucz (indeks) wartość pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-143">The key (index) of the cookie value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="379d8-144">Pobiera skrót do <see cref="P:System.Web.HttpCookie.Values" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-144">Gets a shortcut to the <see cref="P:System.Web.HttpCookie.Values" /> property.</span>
          </span>
          <span data-ttu-id="379d8-145">Ta właściwość jest udostępniana na potrzeby utrzymywania zgodności z poprzednimi wersjami programu Active Server Pages (ASP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-145">This property is provided for compatibility with previous versions of Active Server Pages (ASP).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-146">Wartość pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-146">The cookie value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.HttpCookie.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-147">Pobiera lub ustawia nazwę pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-147">Gets or sets the name of a cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-148">Wartość domyślna to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), chyba że Konstruktor Określa, w przeciwnym razie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-148">The default value is a null reference (<see langword="Nothing" /> in Visual Basic) unless the constructor specifies otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="379d8-149">Poniższy przykład kodu odbiera kolekcję plików cookie z klienta w `Cookie` nagłówek i pętlę kolekcji wyszukiwanie przy użyciu określonej nazwy pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-149">The following code example receives a cookie collection from the client in the `Cookie` header and loops through the collection looking for a cookie with the specific name.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Name Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Name Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.HttpCookie.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-150">Pobiera lub ustawia ścieżkę wirtualną do przesłania z bieżącym plikiem cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-150">Gets or sets the virtual path to transmit with the current cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-151">Ścieżka wirtualna do przesłania z plikiem cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-151">The virtual path to transmit with the cookie.</span>
          </span>
          <span data-ttu-id="379d8-152">Wartość domyślna to <see langword="/" />, który jest głównym serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-152">The default is <see langword="/" />, which is the server root.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="379d8-153"><xref:System.Web.HttpCookie.Path%2A> Rozszerza właściwość <xref:System.Web.HttpCookie.Domain%2A> właściwości do opisania całkowicie określonych adresów URL, do której stosują się pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-153">The <xref:System.Web.HttpCookie.Path%2A> property extends the <xref:System.Web.HttpCookie.Domain%2A> property to completely describe the specific URL to which the cookie applies.</span></span> <span data-ttu-id="379d8-154">Na przykład w www.microsoft.com/asp http:/ adresu URL, domena jest www.microsoft.com, a ścieżka jest /asp.</span><span class="sxs-lookup"><span data-stu-id="379d8-154">For example, in the URL http:/www.microsoft.com/asp, the domain is www.microsoft.com and the path is /asp.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="379d8-155">Poniższy kod ustawia przykład <xref:System.Web.HttpCookie.Path%2A> właściwości nowego pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-155">The following code example sets the <xref:System.Web.HttpCookie.Path%2A> property of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Path Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Path Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Path Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Path Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Domain" />
      </Docs>
    </Member>
    <Member MemberName="SameSite">
      <MemberSignature Language="C#" Value="public System.Web.SameSiteMode SameSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SameSiteMode SameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.SameSite" />
      <MemberSignature Language="VB.NET" Value="Public Property SameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SameSiteMode SameSite { System::Web::SameSiteMode get(); void set(System::Web::SameSiteMode value); };" />
      <MemberSignature Language="F#" Value="member this.SameSite : System.Web.SameSiteMode with get, set" Usage="System.Web.HttpCookie.SameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-156">Pobiera lub ustawia wartość atrybutu SameSite pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-156">Gets or sets the value for the SameSite attribute of the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-157">Jedna z wartości wyliczenia, które reprezentuje tryb wymuszania pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-157">One of the enumeration values that represents the enforcement mode of the cookie.</span>
          </span>
          <span data-ttu-id="379d8-158">Jeśli aplikacja jest przeznaczony dla .NET Framework 4.7.2 lub nowsze wersje, wartością domyślną jest <see cref="F:System.Web.SameSiteMode.Lax" />; w przeciwnym razie wartość domyślna to <see cref="F:System.Web.SameSiteMode.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-158">If the application targets the .NET Framework 4.7.2 or later versions, the default value is <see cref="F:System.Web.SameSiteMode.Lax" />; otherwise, the default value is <see cref="F:System.Web.SameSiteMode.None" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="public bool Secure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Secure" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Secure" />
      <MemberSignature Language="VB.NET" Value="Public Property Secure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Secure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Secure : bool with get, set" Usage="System.Web.HttpCookie.Secure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-159">Pobiera lub ustawia wartość wskazującą, czy do przesyłania pliku cookie, za pomocą Secure Sockets Layer (SSL) — oznacza to, za pomocą tylko protokołu HTTPS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-159">Gets or sets a value indicating whether to transmit the cookie using Secure Sockets Layer (SSL)--that is, over HTTPS only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-160">
            <see langword="true" /> Aby przesłać plik cookie przez połączenie SSL (HTTPS); w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-160">
              <see langword="true" /> to transmit the cookie over an SSL connection (HTTPS); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="379d8-161">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-161">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="379d8-162">Aby ustawić przekazywania plikami cookie przy użyciu protokołu SSL dla całej aplikacji, należy ją włączyć w pliku konfiguracji aplikacji w pliku Web.config, który znajduje się w katalogu głównym aplikacji.</span><span class="sxs-lookup"><span data-stu-id="379d8-162">To set the transmission of cookies using SSL for an entire application, enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</span></span> <span data-ttu-id="379d8-163">Aby uzyskać więcej informacji, zobacz [httpCookies — Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span><span class="sxs-lookup"><span data-stu-id="379d8-163">For more information, see [httpCookies Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span></span> <span data-ttu-id="379d8-164">Wartości ustawiane programowo przy użyciu <xref:System.Web.HttpCookie.Secure%2A> właściwości zastępują wartości ustawione w pliku Web.config.</span><span class="sxs-lookup"><span data-stu-id="379d8-164">Values set programmatically using the <xref:System.Web.HttpCookie.Secure%2A> property override values set in the Web.config file.</span></span>  
  
 <span data-ttu-id="379d8-165">Gdy korzystające z poufnych informacji, zdecydowanie zaleca się używania protokołu HTTPS z szyfrowaniem SSL.</span><span class="sxs-lookup"><span data-stu-id="379d8-165">When dealing with sensitive information, it is strongly recommended that you use HTTPS protocol with SSL encryption.</span></span> <span data-ttu-id="379d8-166">SSL chroni przed danych przed zmianą (integralność danych), zapewnia ochronę tożsamości użytkownika (poufność) i gwarantuje, że dane pochodzą z oczekiwanych klientów (uwierzytelnianie).</span><span class="sxs-lookup"><span data-stu-id="379d8-166">SSL protects against data being altered (data integrity), protects a user's identity (confidentiality), and assures that data originates from the expected client (authentication).</span></span> <span data-ttu-id="379d8-167">Aby uzyskać więcej informacji na temat korzyści z szyfrowania, zobacz [usługi kryptograficzne](~/docs/standard/security/cryptographic-services.md).</span><span class="sxs-lookup"><span data-stu-id="379d8-167">For more information on the benefits of encryption, see [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).</span></span> <span data-ttu-id="379d8-168">Aby uzyskać więcej informacji o konfigurowaniu protokołu SSL na serwerze sieci Web usług Internet Information Services (IIS), zobacz [Konfigurowanie protokołu SSL na serwerze sieci Web lub witryny sieci Web](http://go.microsoft.com/fwlink/?LinkId=38553).</span><span class="sxs-lookup"><span data-stu-id="379d8-168">For more information about configuring SSL on an Internet Information Services (IIS) Web server, see [Configuring SSL on a Web Server or a Web Site](http://go.microsoft.com/fwlink/?LinkId=38553).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="379d8-169">Poniższy kod wykonuje akcję, jeśli plik cookie jest ustawiony do przesyłania przy użyciu protokołu SSL.</span><span class="sxs-lookup"><span data-stu-id="379d8-169">The following code example takes action if the cookie is set to transmit using SSL.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Secure Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Secure Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shareable">
      <MemberSignature Language="C#" Value="public bool Shareable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shareable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Shareable" />
      <MemberSignature Language="VB.NET" Value="Public Property Shareable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shareable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Shareable : bool with get, set" Usage="System.Web.HttpCookie.Shareable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-170">Określa, czy plik cookie może uczestniczyć w buforowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-170">Determines whether the cookie is allowed to participate in output caching.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-171">
            <see langword="true" /> Aby określić, że buforowanie danych wyjściowych nie zostanie wyłączone dla zapewniają <see cref="T:System.Web.HttpResponse" /> zawierający co najmniej jeden wychodzących plików cookie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-171">
              <see langword="true" /> to specify that output caching will not be suppressed for a give <see cref="T:System.Web.HttpResponse" /> containing one or more outbound cookies; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="379d8-172">Jeśli dany <xref:System.Web.HttpResponse> zawiera jeden lub więcej plików cookie ruchu wychodzącego z <xref:System.Web.HttpCookie.Shareable%2A> ustawiono `false` (wartość domyślna), dane wyjściowe pamięci podręcznej będą pomijane dla odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="379d8-172">If a given <xref:System.Web.HttpResponse> contains one or more outbound cookies with <xref:System.Web.HttpCookie.Shareable%2A> is set to `false` (the default value), output caching will be suppressed for the response.</span></span> <span data-ttu-id="379d8-173">Zapobiega to pliki cookie, które zawierają potencjalnie poufne informacje, które miałyby pamięci podręcznej w odpowiedzi i wysyłane do wielu klientów.</span><span class="sxs-lookup"><span data-stu-id="379d8-173">This prevents cookies that contain potentially sensitive information from being cached in the response and sent to multiple clients.</span></span>  <span data-ttu-id="379d8-174">Aby zezwolić na odpowiedź zawierającą pliki cookie w pamięci podręcznej, skonfigurować buforowanie zazwyczaj odpowiedzi, np. przy użyciu `OutputCache` dyrektywy lub MVC [OutputCache] atrybutu, a następnie ustaw wszystkie wychodzące pliki cookie mają <xref:System.Web.HttpCookie.Shareable%2A> równa `true`.</span><span class="sxs-lookup"><span data-stu-id="379d8-174">To allow a response containing cookies to be cached, configure caching normally for the response, such as using the `OutputCache` directive or MVC's [OutputCache] attribute, and set all outbound cookies to have <xref:System.Web.HttpCookie.Shareable%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out System.Web.HttpCookie result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Web.HttpCookie&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.TryParse(System.String,System.Web.HttpCookie@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As HttpCookie) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] System::Web::HttpCookie ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Web.HttpCookie.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.Web.HttpCookie" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="379d8-175">Ciąg reprezentujący plik cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-175">The string representation of a cookie.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="379d8-176">Jeśli konwersja powiodła się, zawiera <see cref="T:System.Web.HttpCookie" /> równowartości zawarte w pliku cookie <paramref name="input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-176">If the conversion succeeded, contains the <see cref="T:System.Web.HttpCookie" /> value equivalent to the cookie contained in <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="379d8-177">W przypadku niepowodzenia konwersji <paramref name="result" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-177">If the conversion failed, <paramref name="result" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="379d8-178">Jeśli konwersja nie powiedzie się <paramref name="input" /> parametr jest <see langword="null" /> lub puste lub jeśli nazwa pliku cookie nie można ustalić na podstawie <paramref name="input" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-178">The conversion fails if the <paramref name="input" /> parameter is <see langword="null" /> or empty or if a cookie name can't be determined from <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="379d8-179">Wartość tego parametru jest zastępowany przez metodę; parametr jest przekazywany przez odwołanie i ustawiona na wartość null, tak szybko, jak podano metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-179">This parameter's value is overwritten by the method; the parameter is passed by reference and set to null as soon as the method is entered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="379d8-180">Konwertuje określony ciąg reprezentujący plik cookie do jego <see cref="T:System.Web.HttpCookie" /> równoważne i zwraca wartość wskazującą, czy konwersja powiodła się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-180">Converts the specified string representation of a cookie into its <see cref="T:System.Web.HttpCookie" /> equivalent and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="379d8-181">
            <see langword="true" /> Jeśli <paramref name="input" /> został przekonwertowany pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-181">
              <see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.HttpCookie.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-182">Pobiera lub ustawia wartość pliku cookie indywidualnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-182">Gets or sets an individual cookie value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-183">Wartość pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-183">The value of the cookie.</span>
          </span>
          <span data-ttu-id="379d8-184">Wartość domyślna to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-184">The default value is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="379d8-185">Poniższy przykład kodu ustawia wartość do wartości "abc123" istniejący plik cookie.</span><span class="sxs-lookup"><span data-stu-id="379d8-185">The following code example sets the value of an existing cookie to "abc123".</span></span>  
  
 [!code-csharp[Classic HttpCookie.Value Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Value Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Values { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpCookie.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="379d8-186">Pobiera kolekcję par klucz wartość, które są zawarte w obiekcie pojedynczego pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-186">Gets a collection of key/value pairs that are contained within a single cookie object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="379d8-187">Kolekcja wartości plików cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="379d8-187">A collection of cookie values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="379d8-188">Poniższy przykład kodu tworzy nowy plik cookie i dodaje kilka wartości.</span><span class="sxs-lookup"><span data-stu-id="379d8-188">The following code example creates a new cookie and adds several values to it.</span></span> <span data-ttu-id="379d8-189">Na przykład sposób wyodrębniania wielu wartości z jednego pliku cookie zobacz <xref:System.Web.HttpCookie.HasKeys%2A>.</span><span class="sxs-lookup"><span data-stu-id="379d8-189">For an example of how to extract multiple values from one cookie, see <xref:System.Web.HttpCookie.HasKeys%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Values Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Values Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Values Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Values Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
  </Members>
</Type>