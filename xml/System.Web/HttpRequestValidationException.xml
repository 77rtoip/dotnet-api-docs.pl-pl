<Type Name="HttpRequestValidationException" FullName="System.Web.HttpRequestValidationException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7879410d076bbc54a941e98ea9cada12d389b046" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36574410" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequestValidationException : System.Web.HttpException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit HttpRequestValidationException extends System.Web.HttpException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequestValidationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequestValidationException&#xA;Inherits HttpException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestValidationException sealed : System::Web::HttpException" />
  <TypeSignature Language="F#" Value="type HttpRequestValidationException = class&#xA;    inherit HttpException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.HttpException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wyjątek zgłaszany, gdy mogą okazać się złośliwe ciąg wejściowy jest otrzymanych od klienta jako część danych żądania. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ograniczający i Walidacja danych wejściowych użytkownika jest niezbędne w aplikacji sieci Web, aby zapobiec atakom hakerom, które opierają się na złośliwe ciągów wejściowych. Ataki skryptów między witrynami są przykładem takich hacks. Inne typy danych złośliwe lub niepożądane mogą być przekazywane w żądaniu przez różne rodzaje danych wejściowych. Poprzez ograniczenie rodzajów danych, które są przekazywane na niskim poziomie w aplikacji, można zapobiec niepożądanych zdarzeń, nawet wtedy, gdy programistów, którzy korzystają z kodu nie należy umieszczać techniki weryfikacji prawidłowego w miejscu.  
  
 Sprawdzanie poprawności żądań wykryje potencjalnie złośliwego klienta w danych wejściowych i ten wyjątek, przerwanie przetwarzania żądania. Przerwij żądanie może oznaczać próbę naruszenia zabezpieczeń aplikacji, takich jak atak skryptowy między witrynami. Zdecydowanie zaleca się, że aplikacja jawnie sprawdziła wszystkie dane wejściowe dotyczące przerwań żądania. Jednak wyłączyć sprawdzanie poprawności żądań przez ustawienie `validateRequest` atrybut dyrektywy do `false`, jak pokazano w poniższym przykładzie:  
  
 `<%@ Page validateRequest="false" %>`  
  
 Aby wyłączyć weryfikację żądań dla aplikacji, należy go zmodyfikować albo utworzyć plik Web.config dla aplikacji i zestaw `validateRequest` atrybutu `pages` sekcji do `false`, jak pokazano w poniższym przykładzie:  
  
```  
<configuration>   
  <system.web>   
    <pages validateRequest="false" />   
  </system.web>   
</configuration>   
```  
  
 Aby wyłączyć weryfikację żądań dla wszystkich aplikacji na serwerze, istnieje możliwość modyfikacji w pliku Machine.config.  
  
> [!NOTE]
>  Zdecydowanie zaleca się, że aplikacja jawnie sprawdziła wszystkie dane wejściowe używanych oprócz weryfikacji żądań wykonywanych przez program ASP.NET. Funkcja sprawdzania poprawności żądania nie może przechwycić wszystkie ataków, zwłaszcza tych, co w szczególności przed logiki aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób sprawdzania wprowadzenia danych przez złośliwego użytkownika przy użyciu <xref:System.Web.HttpRequestValidationException>.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpRequestValidationException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpRequestValidationException/CS/httprequestvalidationexception_cs.aspx#1)]
 [!code-aspx-vb[HttpRequestValidationException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpRequestValidationException/VB/HttpRequestValidationException_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przeciążone. Tworzy nowe wystąpienie klasy <see cref="T:System.Web.HttpRequestValidationException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Web.HttpRequestValidationException" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Ciąg opisujący błąd.</param>
        <summary>Tworzy nową <see cref="T:System.Web.HttpRequestValidationException" /> wyjątek z powodu określonego błędu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawartość `message` parametr ma być człowieka do odczytu. Element wywołujący <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29> Konstruktor jest wymagana do zapewnienia, że `message` ciąg został zlokalizowany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string * Exception -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie opisujący przyczynę wyjątek.</param>
        <param name="innerException">Wyjątek, który jest przyczyną bieżącego wyjątku. Jeśli ten parametr nie jest <see langword="null" />, bieżący wyjątek jest zgłaszany w <see langword="catch" /> bloku, który obsługuje wyjątek wewnętrzny.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.HttpRequestValidationException" /> z określonego komunikatu o błędzie i odwołania do wyjątek wewnętrzny będący przyczyną tego wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątek zgłaszany bezpośrednio w wyniku poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości. <xref:System.Exception.InnerException%2A> Właściwość zwraca tę samą wartość, która została przekazana do <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> konstruktora, lub `null` Jeśli <xref:System.Exception.InnerException%2A> właściwości nie dostarcza wartość wyjątek wewnętrzny, aby <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>