<Type Name="HttpRequestValidationException" FullName="System.Web.HttpRequestValidationException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72a59a6081b132f78ec08db76dc5407e17c859d9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37586018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequestValidationException : System.Web.HttpException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit HttpRequestValidationException extends System.Web.HttpException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequestValidationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequestValidationException&#xA;Inherits HttpException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestValidationException sealed : System::Web::HttpException" />
  <TypeSignature Language="F#" Value="type HttpRequestValidationException = class&#xA;    inherit HttpException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.HttpException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wyjątek, który jest zgłaszany, gdy potencjalnie złośliwych ciąg wejściowy jest otrzymany od klienta jako część danych żądania. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ograniczając i sprawdzanie poprawności danych wejściowych użytkownika jest niezbędne do aplikacji sieci Web, aby zapobiec atakom haker, korzystających z ciągów wejściowych złośliwe. Dotyczy to na przykład hakerskie takie ataki z użyciem skryptów między witrynami. Inne typy danych złośliwe lub niepożądane, może być przekazywany w żądaniu za pośrednictwem różne rodzaje danych wejściowych. Ograniczając rodzaje danych, który jest przekazywany na niskim poziomie w aplikacji, można zapobiec niepożądanych zdarzeń, nawet wtedy, gdy programistów, którzy korzystają z kodu nie umieszczaj technik jest odpowiednia Weryfikacja na miejscu.  
  
 Weryfikacja żądania wykrywa potencjalnie złośliwego klienta w danych wejściowych i zgłasza wyjątek w ten sposób, aby przerwać przetwarzania żądania. Przerwanie żądania może wskazywać na próbę naruszenia zabezpieczeń aplikacji, takich jak atak skryptów między witrynami. Zdecydowanie zaleca się, aby aplikacja jawnie sprawdziła wszystkie dane wejściowe dotyczące żądania przerwań. Jednak wyłączono weryfikację żądań, ustawiając `validateRequest` atrybutu w dyrektywie jako `false`, jak pokazano w poniższym przykładzie:  
  
 `<%@ Page validateRequest="false" %>`  
  
 Aby wyłączyć weryfikację żądań dla aplikacji, należy go zmodyfikować albo utworzyć plik Web.config dla aplikacji i zestaw `validateRequest` atrybutu `pages` sekcji `false`, jak pokazano w poniższym przykładzie:  
  
```  
<configuration>   
  <system.web>   
    <pages validateRequest="false" />   
  </system.web>   
</configuration>   
```  
  
 Aby wyłączyć weryfikację żądań dla wszystkich aplikacji na serwerze, można wprowadzić modyfikacji do pliku Machine.config.  
  
> [!NOTE]
>  Zdecydowanie zaleca się, że aplikacja jawnie sprawdziła wszystkie dane wejściowe, których ona używa, oprócz weryfikacji żądań, wykonywane przez platformę ASP.NET. Funkcję weryfikacji żądania nie może przechwytywać wszystkie ataków, zwłaszcza tych, które specjalnie specjalnie dla twojej aplikacji logiki.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak sprawdzić, czy wprowadzenia danych przez złośliwego użytkownika przy użyciu <xref:System.Web.HttpRequestValidationException>.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, że dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpRequestValidationException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpRequestValidationException/CS/httprequestvalidationexception_cs.aspx#1)]
 [!code-aspx-vb[HttpRequestValidationException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpRequestValidationException/VB/HttpRequestValidationException_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przeciążone. Tworzy nowe wystąpienie klasy <see cref="T:System.Web.HttpRequestValidationException" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Web.HttpRequestValidationException" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Ciąg, który opisuje błąd.</param>
        <summary>Tworzy nową <see cref="T:System.Web.HttpRequestValidationException" /> wyjątku z określonym komunikatem o błędzie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawartość `message` powinna być ludzi do odczytu. Obiekt wywołujący <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29> konstruktora jest wymagany do zapewnienia, że `message` ciąg został zlokalizowany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string * Exception -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat o błędzie wyjaśniający przyczynę wyjątku.</param>
        <param name="innerException">Wyjątek, który jest przyczyną bieżącego wyjątku. Jeśli ten parametr nie jest <see langword="null" />, bieżący wyjątek jest zgłaszany w <see langword="catch" /> blok, który obsługuje wyjątek wewnętrzny.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.HttpRequestValidationException" /> klasy przy użyciu określonego komunikatu o błędzie i odwołania do wewnętrznego wyjątku, który jest przyczyną wyjątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątek generowany jako bezpośredni wynik poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku we <xref:System.Exception.InnerException%2A> właściwości. <xref:System.Exception.InnerException%2A> Właściwość zwraca taką samą wartość, która została przekazana do <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> konstruktora, lub `null` Jeśli <xref:System.Exception.InnerException%2A> nie dostarcza wartości wewnętrznego wyjątku do <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>