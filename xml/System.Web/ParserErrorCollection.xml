<Type Name="ParserErrorCollection" FullName="System.Web.ParserErrorCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a5441c22354ea2b14f62227b26c4d68994b78af" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69385458" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParserErrorCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ParserErrorCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.ParserErrorCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParserErrorCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParserErrorCollection sealed : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type ParserErrorCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zarządza zestawem błędów parsera wykrytych podczas analizowania. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa zawiera metody i właściwości, których można użyć do zarządzania <xref:System.Web.ParserError> kolekcją obiektów. <xref:System.Web.ParserErrorCollection> Na przykład można dodać zestaw błędów parsera do kolekcji podczas analizowania przy użyciu obiektu niestandardowego <xref:System.Web.Compilation.BuildProvider> do raportowania wszystkich wyjątków analizy przechwytywanych podczas analizowania.  
  
 Aby dodać błędy parsera do, usuń je z lub znajdź je w kolekcji, wykonaj następujące czynności:  
  
-   Metoda dodawania pojedynczego <xref:System.Web.ParserError> obiektu do kolekcji. <xref:System.Web.ParserErrorCollection.Add%2A>  
  
-   Metody dodawania wielu <xref:System.Web.ParserError> obiektów do kolekcji. <xref:System.Web.ParserErrorCollection.AddRange%2A>  
  
-   <xref:System.Web.ParserError> Obie metody i <xref:System.Web.ParserErrorCollection.Item%2A> właściwości,któresąindeksatorem,abydodaćpojedynczyobiektdokolekcjiookreślonymindeksie.<xref:System.Web.ParserErrorCollection> <xref:System.Web.ParserErrorCollection.Insert%2A>  
  
 Ponadto można użyć <xref:System.Web.ParserErrorCollection> klasy, aby wykonać następujące czynności:  
  
-   Usuwanie <xref:System.Web.ParserError> obiektów<xref:System.Web.ParserErrorCollection.Remove%2A> przy użyciu metody.  
  
-   Sprawdź, czy dany <xref:System.Web.ParserError> element znajduje się w kolekcji przy <xref:System.Web.ParserErrorCollection.Contains%2A> użyciu metody.  
  
-   Znajdź miejsce, <xref:System.Web.ParserError> w którym znajduje się obiekt w kolekcji przy <xref:System.Web.ParserErrorCollection.IndexOf%2A> użyciu metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób korzystania z <xref:System.Web.ParserErrorCollection> metod.  
  
 [!code-csharp[System.Web.ParserErrorCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#1)]
 [!code-vb[System.Web.ParserErrorCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.HttpException" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.ParserErrorCollection" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserErrorCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserErrorCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.ParserErrorCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zainicjować wystąpienie <xref:System.Web.ParserErrorCollection> klasy.  
  
 [!code-csharp[System.Web.ParserErrorCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#2)]
 [!code-vb[System.Web.ParserErrorCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserErrorCollection (System.Web.ParserError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.ParserError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.#ctor(System.Web.ParserError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ParserError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserErrorCollection(cli::array &lt;System::Web::ParserError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.ParserErrorCollection : System.Web.ParserError[] -&gt; System.Web.ParserErrorCollection" Usage="new System.Web.ParserErrorCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError[]" />
      </Parameters>
      <Docs>
        <param name="value">Tablica typu <see cref="T:System.Web.ParserError" /> , która określa błędy do dodania do kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.ParserErrorCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor dodaje tablicę <xref:System.Web.ParserError>obiektówdokolekcji. <xref:System.Web.ParserErrorCollection.%23ctor%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Add(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As ParserError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.ParserError -&gt; int" Usage="parserErrorCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Web.ParserError" /> Wartość, która ma zostać dodana do kolekcji.</param>
        <summary>Dodaje wartość do kolekcji.</summary>
        <returns>Indeks wartości w kolekcji; w przeciwnym razie-1, jeśli wartość znajduje się już w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.ParserErrorCollection.Add%2A> , aby dodać istniejący <xref:System.Web.ParserError> obiekt do kolekcji. Nie można dodać tego samego <xref:System.Web.ParserError> obiektu do kolekcji więcej niż raz. Po wywołaniu <xref:System.Web.ParserErrorCollection.Add%2A> metody <xref:System.Web.ParserError> przy użyciu obiektu, który znajduje się już w kolekcji, Dodawanie kończy się niepowodzeniem i-1 jest zwracane.  
  
 Aby dodać wiele obiektów do kolekcji, użyj <xref:System.Web.ParserErrorCollection.AddRange%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dodać <xref:System.Web.ParserError> obiekt <xref:System.Web.ParserErrorCollection> do obiektu.  
  
 [!code-csharp[System.Web.ParserErrorCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#3)]
 [!code-vb[System.Web.ParserErrorCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje <see cref="T:System.Web.ParserError" /> obiekty do kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.ParserError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.ParserError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.AddRange(System.Web.ParserError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ParserError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Web::ParserError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.ParserError[] -&gt; unit" Usage="parserErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError[]" />
      </Parameters>
      <Docs>
        <param name="value">Tablica typu <see cref="T:System.Web.ParserError" /> , która określa wartości, które mają zostać dodane do kolekcji.</param>
        <summary>Dodaje tablicę <see cref="T:System.Web.ParserError" /> obiektów do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.ParserErrorCollection.AddRange%2A> , aby dodać <xref:System.Web.ParserError> tablicę obiektów do kolekcji. Metoda jest przydatna w przypadku tworzenia wielu <xref:System.Web.ParserError> obiektów i dodawania ich do kolekcji przy użyciu jednego wywołania metody. <xref:System.Web.ParserErrorCollection.AddRange%2A> Aby dodać poszczególne <xref:System.Web.ParserError> obiekty do kolekcji, <xref:System.Web.ParserErrorCollection.Add%2A> Użyj metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dodać zakres <xref:System.Web.ParserError> obiektów <xref:System.Web.ParserErrorCollection> do obiektu.  
  
 [!code-csharp[System.Web.ParserErrorCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#4)]
 [!code-vb[System.Web.ParserErrorCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.ParserErrorCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.ParserErrorCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.AddRange(System.Web.ParserErrorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ParserErrorCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Web::ParserErrorCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.ParserErrorCollection -&gt; unit" Usage="parserErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserErrorCollection" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Web.ParserErrorCollection" /> Obiekt<see cref="T:System.Web.ParserError" /> zawierający obiekty do dodania do kolekcji.</param>
        <summary>Dodaje obiekty w istniejącym <see cref="T:System.Web.ParserErrorCollection" /> do kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przeciwieństwie <xref:System.Web.ParserErrorCollection.Add%2A> do metody <xref:System.Web.ParserErrorCollection.AddRange%2A> Metoda nie ma wartości zwracanej, która może <xref:System.Web.ParserError> służyć do określenia, czy dodany obiekt znajduje się już w kolekcji. Jeśli potrzebujesz tych informacji, użyj <xref:System.Web.ParserErrorCollection.Contains%2A> metody przed użyciem. <xref:System.Web.ParserErrorCollection.AddRange%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dodać zakres <xref:System.Web.ParserError> obiektów <xref:System.Web.ParserErrorCollection> do obiektu.  
  
 [!code-csharp[System.Web.ParserErrorCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#4)]
 [!code-vb[System.Web.ParserErrorCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Web.ParserError" /> Wartość to<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Contains(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ParserError) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.ParserError -&gt; bool" Usage="parserErrorCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Web.ParserError" /> Aby zlokalizować w kolekcji.</param>
        <summary>Określa, <see cref="T:System.Web.ParserError" /> czy obiekt znajduje się w kolekcji.</summary>
        <returns><see langword="true" />Jeśli znajduje się w kolekcji; <see langword="false" />w przeciwnym razie. <see cref="T:System.Web.ParserError" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można dodać tego samego <xref:System.Web.ParserError> obiektu do kolekcji więcej niż raz. Jednak próba dodania <xref:System.Web.ParserError> obiektu więcej niż raz nie spowoduje zgłoszenie wyjątku. Zamiast tego Dodawanie nie powiedzie się. W tym przypadku <xref:System.Web.ParserErrorCollection.Add%2A> Metoda zwróci wartość-1. Jednak metody <xref:System.Web.ParserErrorCollection.Insert%2A> i nie mają zwracanych wartości. <xref:System.Web.ParserErrorCollection.AddRange%2A> Podczas dodawania <xref:System.Web.ParserError> obiektów przy użyciu jednej z tych metod <xref:System.Web.ParserErrorCollection.Contains%2A> Użyj metody, aby określić, czy konkretny <xref:System.Web.ParserError> obiekt znajduje się już w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób wyszukiwania wystąpienia określonego <xref:System.Web.ParserError> obiektu <xref:System.Web.ParserErrorCollection> w obiekcie.  
  
 [!code-csharp[System.Web.ParserErrorCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#5)]
 [!code-vb[System.Web.ParserErrorCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.ParserError[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.ParserError[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.CopyTo(System.Web.ParserError[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ParserError(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::ParserError ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.ParserError[] * int -&gt; unit" Usage="parserErrorCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.ParserError[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tablica <see cref="T:System.Web.ParserError" /> , do której są kopiowane błędy analizatora składni w kolekcji.</param>
        <param name="index">Pierwszy indeks w tablicy, do której <see cref="T:System.Web.ParserError" /> jest kopiowany.</param>
        <summary><see cref="T:System.Web.ParserError" /> Kopiuje obiekty w kolekcji do zgodnej jednowymiarowej tablicy, rozpoczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.ParserErrorCollection.CopyTo%2A> , aby <xref:System.Web.ParserError> skopiować obiekty w kolekcji (łącznie z odwołaniami do elementów zawartych w nich) do zgodnej tablicy, rozpoczynając od określonego indeksu. Jest to przydatne, gdy chcesz sortować <xref:System.Web.ParserError> obiekty w kolekcji przy <xref:System.Array.Sort%2A> użyciu metody. W tym celu:  
  
1.  <xref:System.Web.ParserError> Skopiuj obiekty do zgodnej tablicy.  
  
2.  Sortuj tablicę.  
  
3.  Użyj metody <xref:System.Web.ParserErrorCollection.Remove%2A> , aby usunąć <xref:System.Web.ParserError> wszystkie obiekty z kolekcji.  
  
4.  <xref:System.Web.ParserErrorCollection.AddRange%2A> Użyj metody, aby dodać posortowaną tablicę z powrotem do kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak skopiować zawartość <xref:System.Web.ParserErrorCollection> obiektu do określonej <xref:System.Web.ParserError> tablicy.  
  
 [!code-csharp[System.Web.ParserErrorCollection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#6)]
 [!code-vb[System.Web.ParserErrorCollection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.IndexOf(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ParserError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.ParserError -&gt; int" Usage="parserErrorCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Web.ParserError" /> Aby zlokalizować w kolekcji.</param>
        <summary>Pobiera indeks określonego <see cref="T:System.Web.ParserError" /> obiektu w kolekcji.</summary>
        <returns>Indeks <see cref="T:System.Web.ParserError" /> (liczony od zera) obiektów w kolekcji; w przeciwnym razie, <see cref="T:System.Web.ParserError" /> Jeśli nie znajduje się w kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby określić indeks <xref:System.Web.ParserError> obiektu w kolekcji. <xref:System.Web.ParserErrorCollection.IndexOf%2A> Jest to przydatne do określania indeksu każdego z nich <xref:System.Web.ParserError> podczas iteracji kolekcji przy <xref:System.Collections.IEnumerator> użyciu obiektu zwróconego przez <xref:System.Collections.CollectionBase.GetEnumerator%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zlokalizować indeks <xref:System.Web.ParserError> obiektu pod określonym indeksem <xref:System.Web.ParserErrorCollection> w kolekcji.  
  
 [!code-csharp[System.Web.ParserErrorCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#5)]
 [!code-vb[System.Web.ParserErrorCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Insert(System.Int32,System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As ParserError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.ParserError -&gt; unit" Usage="parserErrorCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="index">Indeks w kolekcji, w której ma zostać wstawiony <see cref="T:System.Web.ParserError" />.</param>
        <param name="value">Obiekt <see cref="T:System.Web.ParserError" /> , który ma zostać wstawiony do kolekcji.</param>
        <summary>Wstawia określony <see cref="T:System.Web.ParserError" /> obiekt do kolekcji o określonym indeksie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.ParserErrorCollection.Insert%2A> , aby wstawić istniejący <xref:System.Web.ParserError> obiekt w określonym indeksie w kolekcji.  
  
 Nie można dodać tego samego <xref:System.Web.ParserError> obiektu do kolekcji więcej niż raz. Po wywołaniu <xref:System.Web.ParserErrorCollection.Insert%2A> metody przy <xref:System.Web.ParserError> użyciu, która znajduje się już w kolekcji, wstawianie nie powiedzie się. Użyj metody przed wstawieniem, aby określić, czy dany <xref:System.Web.ParserError> element znajduje się już w kolekcji. <xref:System.Web.ParserErrorCollection.Contains%2A> Aby zmienić położenie <xref:System.Web.ParserError> w kolekcji, należy najpierw usunąć ją za <xref:System.Web.ParserErrorCollection.Remove%2A> pomocą metody, a następnie wstawić ją w żądanym indeksie przy użyciu <xref:System.Web.ParserErrorCollection.Insert%2A>.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak wstawić <xref:System.Web.ParserError> obiekt w określonym indeksie <xref:System.Web.ParserErrorCollection> w kolekcji.  
  
 [!code-csharp[System.Web.ParserErrorCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#8)]
 [!code-vb[System.Web.ParserErrorCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.ParserError this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ParserError Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.ParserErrorCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ParserError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ParserError ^ default[int] { System::Web::ParserError ^ get(int index); void set(int index, System::Web::ParserError ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.ParserError with get, set" Usage="System.Web.ParserErrorCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ParserError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks w kolekcji <see cref="T:System.Web.ParserError" /> obiektu do pobrania lub ustawienia.</param>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.ParserError" /> obiekt pod określonym indeksem w kolekcji.</summary>
        <value><see cref="T:System.Web.ParserError" /> Na określonym indeksie w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby pobrać obiekt o określonym indeksie w kolekcji. <xref:System.Web.ParserError> <xref:System.Web.ParserErrorCollection.Item%2A> Jeśli masz odwołanie do <xref:System.Web.ParserError> obiektu i potrzebujesz indeksu, <xref:System.Web.ParserErrorCollection.IndexOf%2A> Użyj metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Remove(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As ParserError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.ParserError -&gt; unit" Usage="parserErrorCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Web.ParserError" /> Do usunięcia z kolekcji.</param>
        <summary>Usuwa określony <see cref="T:System.Web.ParserError" /> obiekt z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.ParserErrorCollection.Remove%2A> , aby <xref:System.Web.ParserError> usunąć obiekt z kolekcji, jeśli <xref:System.Web.ParserError>masz odwołanie do.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.ParserError> jak usunąć z określonego indeksu <xref:System.Web.ParserErrorCollection> w obiekcie.  
  
 [!code-csharp[System.Web.ParserErrorCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#8)]
 [!code-vb[System.Web.ParserErrorCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
