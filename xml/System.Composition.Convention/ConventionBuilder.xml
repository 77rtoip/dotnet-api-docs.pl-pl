<Type Name="ConventionBuilder" FullName="System.Composition.Convention.ConventionBuilder">
  <TypeSignature Language="C#" Value="public class ConventionBuilder : System.Composition.Convention.AttributedModelProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConventionBuilder extends System.Composition.Convention.AttributedModelProvider" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Convention.ConventionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ConventionBuilder&#xA;Inherits AttributedModelProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConventionBuilder : System::Composition::Convention::AttributedModelProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Convention</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Composition.Convention.AttributedModelProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fd186-101">Udostępnia metody do tworzenia i konfigurowania reguły określające obiektów CLR jako części Managed Extensibility Framework (MEF).</span><span class="sxs-lookup"><span data-stu-id="fd186-101">Provides methods for creating and configuring rules to define CLR objects as Managed Extensibility Framework (MEF) parts.</span></span></summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConventionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ConventionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConventionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd186-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.Composition.Convention.ConventionBuilder" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="fd186-102">Initializes a new instance of the <see cref="T:System.Composition.Convention.ConventionBuilder" /> class.</span></span></summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ForType">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ConventionBuilder.ForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ForType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd186-103">Typ.</span><span class="sxs-lookup"><span data-stu-id="fd186-103">The type.</span></span></param>
        <summary><span data-ttu-id="fd186-104">Tworzy regułę, która ma zastosowanie do określonego typu.</span><span class="sxs-lookup"><span data-stu-id="fd186-104">Creates a rule that applies to the specified type.</span></span></summary>
        <returns><span data-ttu-id="fd186-105">Obiekt, który może służyć do dalszego skonfigurowania reguły.</span><span class="sxs-lookup"><span data-stu-id="fd186-105">An object that can be used to further configure the rule.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ForType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder&lt;T&gt; ForType&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder`1&lt;!!T&gt; ForType&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ConventionBuilder.ForType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function ForType(Of T) () As PartConventionBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder&lt;T&gt; ^ ForType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="fd186-106">Typ ogólny.</span><span class="sxs-lookup"><span data-stu-id="fd186-106">The generic type.</span></span></typeparam>
        <summary><span data-ttu-id="fd186-107">Tworzy regułę, która ma zastosowanie do określonego typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fd186-107">Creates a rule that applies to the specified generic type.</span></span></summary>
        <returns><span data-ttu-id="fd186-108">Obiekt, który może służyć do dalszego skonfigurowania reguły.</span><span class="sxs-lookup"><span data-stu-id="fd186-108">An object that can be used to further configure the rule.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ForTypesDerivedFrom">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ForTypesDerivedFrom (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ForTypesDerivedFrom(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ConventionBuilder.ForTypesDerivedFrom(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ForTypesDerivedFrom(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd186-109">Typ.</span><span class="sxs-lookup"><span data-stu-id="fd186-109">The type.</span></span></param>
        <summary><span data-ttu-id="fd186-110">Tworzy regułę, która ma zastosowanie do wszystkich typów, które implementuje lub są uzyskiwane z określonego typu.</span><span class="sxs-lookup"><span data-stu-id="fd186-110">Creates a rule that applies to all types that implement, or are derived from, the specified type.</span></span></summary>
        <returns><span data-ttu-id="fd186-111">Obiekt, który może służyć do dalszego skonfigurowania reguły.</span><span class="sxs-lookup"><span data-stu-id="fd186-111">An object that can be used to further configure the rule.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ForTypesDerivedFrom&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder&lt;T&gt; ForTypesDerivedFrom&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder`1&lt;!!T&gt; ForTypesDerivedFrom&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ConventionBuilder.ForTypesDerivedFrom``1" />
      <MemberSignature Language="VB.NET" Value="Public Function ForTypesDerivedFrom(Of T) () As PartConventionBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder&lt;T&gt; ^ ForTypesDerivedFrom();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="fd186-112">Typ ogólny.</span><span class="sxs-lookup"><span data-stu-id="fd186-112">The generic type.</span></span></typeparam>
        <summary><span data-ttu-id="fd186-113">Tworzy regułę, która ma zastosowanie do wszystkich typów, które implementuje lub pochodzą z określonego typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fd186-113">Creates a rule that applies to all types that implement, or are derived from, the specified generic type.</span></span></summary>
        <returns><span data-ttu-id="fd186-114">Obiekt, który może służyć do dalszego skonfigurowania reguły.</span><span class="sxs-lookup"><span data-stu-id="fd186-114">An object that can be used to further configure the rule.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ForTypesMatching">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ForTypesMatching (Predicate&lt;Type&gt; typeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ForTypesMatching(class System.Predicate`1&lt;class System.Type&gt; typeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ConventionBuilder.ForTypesMatching(System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function ForTypesMatching (typeFilter As Predicate(Of Type)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ForTypesMatching(Predicate&lt;Type ^&gt; ^ typeFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeFilter" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="typeFilter"><span data-ttu-id="fd186-115">Predykat do dopasowania.</span><span class="sxs-lookup"><span data-stu-id="fd186-115">The predicate to match.</span></span></param>
        <summary><span data-ttu-id="fd186-116">Tworzy regułę, która ma zastosowanie do typów, które odpowiada określony predykat.</span><span class="sxs-lookup"><span data-stu-id="fd186-116">Creates a rule that applies to types that match the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="fd186-117">Obiekt, który może służyć do dalszego skonfigurowania reguły.</span><span class="sxs-lookup"><span data-stu-id="fd186-117">An object that can be used to further configure the rule.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ForTypesMatching&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder&lt;T&gt; ForTypesMatching&lt;T&gt; (Predicate&lt;Type&gt; typeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder`1&lt;!!T&gt; ForTypesMatching&lt;T&gt;(class System.Predicate`1&lt;class System.Type&gt; typeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ConventionBuilder.ForTypesMatching``1(System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function ForTypesMatching(Of T) (typeFilter As Predicate(Of Type)) As PartConventionBuilder(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder&lt;T&gt; ^ ForTypesMatching(Predicate&lt;Type ^&gt; ^ typeFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="typeFilter" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="fd186-118">Typ do dopasowania dopasować.</span><span class="sxs-lookup"><span data-stu-id="fd186-118">The type to match.</span></span></typeparam>
        <param name="typeFilter"><span data-ttu-id="fd186-119">Predykat do dopasowania.</span><span class="sxs-lookup"><span data-stu-id="fd186-119">The predicate to match.</span></span></param>
        <summary><span data-ttu-id="fd186-120">Tworzy regułę, która ma zastosowanie do typów, które odpowiada określony predykat i typu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="fd186-120">Creates a rule that applies to types that match the specified predicate and generic type.</span></span></summary>
        <returns><span data-ttu-id="fd186-121">Obiekt, który może służyć do dalszego skonfigurowania reguły.</span><span class="sxs-lookup"><span data-stu-id="fd186-121">An object that can be used to further configure the rule.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (Type reflectedType, System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Type reflectedType, class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ConventionBuilder.GetCustomAttributes(System.Type,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (reflectedType As Type, member As MemberInfo) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(Type ^ reflectedType, System::Reflection::MemberInfo ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectedType" Type="System.Type" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="reflectedType"><span data-ttu-id="fd186-122">Typ.</span><span class="sxs-lookup"><span data-stu-id="fd186-122">The type.</span></span></param>
        <param name="member"><span data-ttu-id="fd186-123">Element członkowski do wglądu.</span><span class="sxs-lookup"><span data-stu-id="fd186-123">The member to inspect.</span></span></param>
        <summary><span data-ttu-id="fd186-124">Pobiera listę atrybutów niestandardowych zastosowanych do określonego elementu członkowskiego określonego typu.</span><span class="sxs-lookup"><span data-stu-id="fd186-124">Retrieves the list of custom attributes applied to the specified member of the specified type.</span></span></summary>
        <returns><span data-ttu-id="fd186-125">Kolekcja atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="fd186-125">A collection of custom attributes.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (Type reflectedType, System.Reflection.ParameterInfo parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Type reflectedType, class System.Reflection.ParameterInfo parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.ConventionBuilder.GetCustomAttributes(System.Type,System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (reflectedType As Type, parameter As ParameterInfo) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(Type ^ reflectedType, System::Reflection::ParameterInfo ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectedType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="reflectedType"><span data-ttu-id="fd186-126">Typ.</span><span class="sxs-lookup"><span data-stu-id="fd186-126">The type.</span></span></param>
        <param name="parameter"><span data-ttu-id="fd186-127">Parametr do wglądu.</span><span class="sxs-lookup"><span data-stu-id="fd186-127">The parameter to inspect.</span></span></param>
        <summary><span data-ttu-id="fd186-128">Pobiera listę atrybutów niestandardowych zastosowanych do określonego parametru określonego typu.</span><span class="sxs-lookup"><span data-stu-id="fd186-128">Retrieves the list of custom attributes applied to the specified parameter of the specified type.</span></span></summary>
        <returns><span data-ttu-id="fd186-129">Kolekcja atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="fd186-129">A collection of custom attributes.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>