<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37a3148889c3b14f07bc04c2fad9bdab14236993" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36404978" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje zestaw właściwości i metody dla generowania kodu źródłowego w środowisku kompilacji platformy ASP.NET. Ta klasa jest abstrakcyjna.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używa środowiska kompilacji platformy ASP.NET <xref:System.Web.Compilation.BuildProvider> obiekty do generowania kodu źródłowego dla różnych typów plików w aplikacji. Klasy wyprowadzone z <xref:System.Web.Compilation.BuildProvider> głównie Podaj kod źródłowy dla plików, stron sieci Web, zasobów i inne elementy niestandardowe.  
  
 Zwykle nie należy tworzyć wystąpienia <xref:System.Web.Compilation.BuildProvider> bezpośrednio klasa. Zamiast tego należy zaimplementować klasę, która jest pochodną <xref:System.Web.Compilation.BuildProvider>i skonfiguruj <xref:System.Web.Compilation.BuildProvider> środowisko kompilacji wdrożenia do użycia w programie ASP.NET.  
  
 Wystąpienia <xref:System.Web.Compilation.BuildProvider> klasy są używane z <xref:System.Web.Compilation.AssemblyBuilder> obiektów, aby utworzyć jeden lub więcej plików w skompilowanym zestawie. A <xref:System.Web.Compilation.BuildProvider> wystąpienia generuje kod źródłowy w odpowiednim języku dla poszczególnych plików i <xref:System.Web.Compilation.AssemblyBuilder> obiektu łączy źródła zamieszczone przez każdą <xref:System.Web.Compilation.BuildProvider> wystąpienia w jednym zestawie.  
  
 Środowisko kompilacji platformy ASP.NET używa wystąpienia <xref:System.Web.Compilation.BuildProvider> klasa do tworzenia plików w aplikacji. <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> Właściwość <xref:System.Web.Compilation.BuildProvider> klasy określa ścieżkę pliku, który ma zostać utworzony. Rozszerzenie pliku każdego pliku w aplikacji jest zamapowane do odpowiedniego dostawcy kompilacji. Inicjuje środowisko kompilacji platformy ASP.NET <xref:System.Web.Compilation.BuildProvider> wystąpienia dla każdego pliku na podstawie rozszerzenia pliku i używa <xref:System.Web.Compilation.BuildProvider> metod do wygenerowania kodu źródłowego dla pliku. Przekazuje środowisko kompilacji platformy ASP.NET <xref:System.Web.Compilation.AssemblyBuilder> obiekt na podstawie kompilatora preferowany język i kontekst pliku do <xref:System.Web.Compilation.BuildProvider> metody podczas kompilowania zestawu z co najmniej jeden plik, aby <xref:System.Web.Compilation.BuildProvider> wystąpienia może przyczynić się Kod źródłowy dla jego pliku do ogólnej zestawu.  
  
 Aby zdefiniować akcji niestandardowej kompilacji dla typu pliku w aplikacji ASP.NET, musi pochodzić z klasy <xref:System.Web.Compilation.BuildProvider>implementować członków w klasie pochodnej tworzenia typu pliku i skonfigurować dostawcę kompilacji dla odpowiedniego rozszerzenia pliku w pliku konfiguracyjnym aplikacji.  
  
 Określa rozszerzenie pliku dla plików obsługiwane oraz czy dostawcy kompilacji obsługuje pliki kodu, pliki sieci Web, pliki zasobów lub wszystkich plików. Użyj `type` atrybutu, aby określić pełną nazwę typu implementacji dostawcy kompilacji. Użyj <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> klasę, aby określić, czy dostawcy kompilacji mają zastosowanie do plików w katalogu App_Code, pliki w katalogu zawartości sieci Web do globalnych lub lokalnych zasobów lub do wszystkich plików. Użyj `extension` atrybutu określ rozszerzenie pliku używany do identyfikowania plików <xref:System.Web.Compilation.BuildProvider> obsługuje klasy. Użyj <xref:System.Web.Configuration.BuildProviderCollection> klasy do sprawdzenia kompilacji dostawców w pliku konfiguracji. Aby uzyskać więcej informacji o konfigurowaniu dostawcy kompilacji, zobacz [buildProviders elementu kompilacji (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 Do implementowania dostawcy kompilacji, który generuje kod źródłowy niestandardowy typ pliku, klasa wyprowadzona z <xref:System.Web.Compilation.BuildProvider>i Zastąp <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> do generowania kodu źródłowego dla obsługiwany typ pliku. Wygenerowany źródło jest dodawane do <xref:System.Web.Compilation.AssemblyBuilder> obiektu w postaci wykresu CodeDOM, lub zawartość, która reprezentuje pliku kodu źródłowego fizycznych. Jeśli dostawcy kompilacji wymaga określonego języka programowania, Zastąp <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> właściwości do zwrócenia <xref:System.Web.Compilation.CompilerType> obiektu dla obsługiwanych języków programowania. Jeśli dostawcy kompilacji nie wymaga określonego języka programowania, nie zastępują <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> właściwości; użyj implementacji klasy podstawowej, co oznacza, że dostawcy kompilacji można użyć dowolnego języka .NET Framework, takich jak Visual Basic lub C#.  
  
 Do implementowania dostawcy kompilacji, który generuje kod źródłowy dla zawartości sieci Web, klasa wyprowadzona z <xref:System.Web.Compilation.BuildProvider> i zastąpić <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> metodę, aby zwrócić <xref:System.Type> dla klasy generowane przez <xref:System.Web.Compilation.BuildProvider>. Zastąpienie <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> do generowania kodu źródłowego dla typu zawarty w pliku obsługiwane.  
  
> [!NOTE]
>  Dodawanie dostosowany <xref:System.Web.Compilation.BuildProvider> klasy do pliku Web.config działa w witrynie sieci Web programu ASP.NET, ale nie działa w projekcie aplikacji sieci Web ASP.NET. W projekcie aplikacji sieci Web, kod, który jest generowany przez <xref:System.Web.Compilation.BuildProvider> klasy nie może występować w aplikacji. Aby uzyskać więcej informacji, zobacz [omówienie wstępnej kompilacji projektu aplikacji sieci Web ASP.NET](http://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementacji dostawcy kompilacji proste, dziedziczenia z klasy abstrakcyjnej <xref:System.Web.Compilation.BuildProvider> klasy podstawowej. Dostawcy kompilacji overrides <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, i <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> elementów członkowskich klasy podstawowej. Przykład nie zawiera implementacji `SampleClassGenerator` klasy. Aby uzyskać więcej informacji, zobacz <xref:System.CodeDom.CodeCompileUnit> Przegląd klasy.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Compilation.BuildProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ <xref:System.Web.Compilation.BuildProvider> klasa jest abstrakcyjna, nie można utworzyć wystąpienia <xref:System.Web.Compilation.BuildProvider> bezpośrednio za pomocą konstruktora.  
  
 Podczas tworzenia klasy pochodnej z <xref:System.Web.Compilation.BuildProvider> klasy, Zastąp konstruktora, aby zaimplementować akcje niestandardowe inicjowania implementacji dostawcy kompilacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje typ kompilatora używane przez dostawcę kompilacji do generowania kodu źródłowego dla typu niestandardowego pliku.</summary>
        <value>Tylko do odczytu <see cref="T:System.Web.Compilation.CompilerType" /> generator kodu, kompilator kodu oraz ustawienia kompilatora używany do tworzenia kodu źródłowego dla ścieżki wirtualnej. Zwraca klasę podstawową <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> właściwości zawierają ustawienia umożliwiające kompilowanie kodu źródłowego dla implementacji <xref:System.Web.Compilation.BuildProvider>. <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> Jest właściwość `null` dostawcy kompilacji nie wymaga języka kodu określonych dla Generowanie i kompilowanie kodu źródłowego.  
  
 Aby ustawić wartość <xref:System.Web.Compilation.CompilerType> obiektu w implementacji dostawcy kompilacji, użyj <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> lub <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> metody.  
  
 <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> Właściwość określa <xref:System.CodeDom.Compiler.CodeDomProvider> implementację, która umożliwia generowanie i kompilowanie kodu źródłowego dla dostawcy kompilacji. <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> Właściwość definiuje ustawienia, które są używane do kompilowania kodu źródłowego do zestawu.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementacji dostawcy kompilacji proste, dziedziczenia z klasy abstrakcyjnej <xref:System.Web.Compilation.BuildProvider> klasy podstawowej. Dostawcy kompilacji overrides <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, i <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> elementów członkowskich klasy podstawowej.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">Konstruktor zestawu, który odwołuje się do kodu źródłowego generowany przez dostawcę kompilacji.</param>
        <summary>Generuje kod źródłowy dla ścieżki wirtualnej dostawcy kompilacji i dodaje kod źródłowy do konstruktora określonego zestawu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Do implementowania dostawcy kompilacji, który generuje kod źródłowy niestandardowy typ pliku, klasa wyprowadzona z <xref:System.Web.Compilation.BuildProvider> klasy, a następnie zastąpić <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> do generowania kodu źródłowego dla obsługiwany typ pliku.  
  
 Zazwyczaj kompilacji dostawcy <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> odczyty implementacji <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> właściwość, analizuje zawartość i dodaje kod źródłowy wygenerowane do określonego <xref:System.Web.Compilation.AssemblyBuilder> obiektu. Kod źródłowy może przyczynić się do zestawu w formie <xref:System.IO.TextWriter> obiektu lub wykresu CodeDOM. Aby dodać kod źródłowy do zestawu przy użyciu <xref:System.IO.TextWriter> obiektów, użyj <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metody. Aby dodać kod źródłowy w postaci wykresu CodeDOM do zestawu, użyj <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metody.  
  
 Jeśli dostawcy kompilacji generuje kod źródłowy w określonym języku programowania, konieczne jest przesłonięcie <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> właściwości do zwrócenia <xref:System.Web.Compilation.CompilerType> obiektu dla obsługiwanych języków programowania.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementacji dostawcy kompilacji proste, dziedziczenia z klasy abstrakcyjnej <xref:System.Web.Compilation.BuildProvider> klasy podstawowej. Dostawcy kompilacji overrides <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, i <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> elementów członkowskich klasy podstawowej.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">Po powrocie z tej metody zawiera słownik, który zawiera wszystkie numery wierszy skojarzonych i wyrażenia pragma wiersza kodu źródłowego. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Reprezentuje kontener dla wygenerowanego wykresu CodeDOM.</summary>
        <returns>Kontener dla wykresu CodeDOM, który jest generowany przez <see cref="T:System.Web.Compilation.BuildProvider" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być używana przez <xref:System.Web.Compilation.ClientBuildManager> klasy wyróżnianie składni i projektanta obsługuje w programie Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Wyniki kompilacji dla ścieżki wirtualnej dostawcy kompilacji.</param>
        <summary>Generuje ciąg w celu jego utrwalenia w skompilowanym zestawie.</summary>
        <returns>Ciąg utrwalenia w środowisku kompilacji lub <see langword="null" /> Jeśli <see cref="T:System.Web.Compilation.BuildProvider" /> wystąpienia nie implementuje <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> Metody <xref:System.Web.Compilation.BuildManager> obiektu tworzy wystąpienie dostawcy kompilacji wejściowej ścieżki wirtualnej i wywołania <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> metoda <xref:System.Web.Compilation.BuildProvider> obiektu.  
  
 Podstawowym <xref:System.Web.Compilation.BuildProvider> klasy zwraca `null` dla <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> metody i wskazujący, że <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> nie jest zaimplementowana.  
  
 Można zaimplementować w niektórych implementacjach dostawcy kompilacji <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> zamiast <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> metody. A <xref:System.Web.Compilation.BuildProvider> obiekt zwykle używa <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> do zwrócenia <xref:System.Type> obiektu dla ścieżki wirtualnej. Jednak <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> metody można użyć w celu wskazania, że <xref:System.Web.Compilation.BuildProvider> obiektu może spowodować wygenerowanie wiele typów ścieżki wirtualnej.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ustawienia kompilatora dla języka domyślnego w aplikacji.</summary>
        <returns>A <see cref="T:System.Web.Compilation.CompilerType" /> reprezentujący Ustawienia kompilatora dla języka domyślnego w aplikacji. Klasa podstawowa zwraca kompilatora domyślne na podstawie pliku konfiguracji aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> metody do sprawdzenia domyślny typ kompilatora dla dostawcy kompilacji. Użyj <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> metody do sprawdzenia typu kompilatora skonfigurowane u dostawcy kompilacji dla nazwy określonego języka.  
  
 Podstawowym <xref:System.Web.Compilation.BuildProvider> klasy określa domyślne kompilatora typu przy użyciu `defaultLanguage` atrybutu wartości w sekcji pliku konfiguracji aplikacji. Jeśli nie ma domyślne ustawienia języka w sekcji kompilacja, ustawić przy użyciu domyślnego typu kompilatora <xref:Microsoft.VisualBasic.VBCodeProvider> dostawcy języka.  
  
 Podczas tworzenia klasy pochodnej z <xref:System.Web.Compilation.BuildProvider> klasy, można użyć <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> można ustawić <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> właściwości w implementacji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">Nazwa języka kodu.</param>
        <summary>Zwraca ustawienia kompilatora dla dostawcy kompilacji na podstawie określonego języka.</summary>
        <returns>A <see cref="T:System.Web.Compilation.CompilerType" /> reprezentujący Ustawienia kompilatora dla dostawcy kompilacji na podstawie określonego języka. Klasa podstawowa zwraca domyślne ustawienia kompilatora języka na podstawie pliku konfiguracji aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> metody do sprawdzenia typu kompilatora skonfigurowane w dostawcy kompilacji dla nazwy określonego języka. Użyj <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> metody do sprawdzenia domyślny typ kompilatora dla dostawcy kompilacji.  
  
 Podstawowym <xref:System.Web.Compilation.BuildProvider> klasy określa domyślne kompilatora typu przy użyciu <xref:System.Web.Configuration.Compiler> elementów w <xref:System.Web.Configuration.CompilationSection.Compilers%2A> właściwość <xref:System.Web.Configuration.CompilationSection> obiektu pliku konfiguracji. Jest to równoważne badanie elementów i elementów w sekcji w pliku konfiguracji. Na przykład w przypadku `language` wartość VB, zwraca metody klasy podstawowej <xref:System.Web.Compilation.CompilerType> obiekt, który odpowiada skonfigurowane ustawienia dla wystąpienia <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.  
  
 Jeśli pochodzi od <xref:System.Web.Compilation.BuildProvider> klasy, można użyć <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> można ustawić <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> wartości właściwości dla języka obsługiwanego przez implementacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="language" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException">
          <paramref name="language" /> nie pasuje kompilatora skonfigurowane dla dostawcy kompilacji.</exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Wyniki kompilacji dla ścieżki wirtualnej dostawcy kompilacji.</param>
        <summary>Zwraca typ generowany przez dostawcę kompilacji z ścieżki wirtualnej.</summary>
        <returns>Typ, który jest generowany przez dostawcę kompilacji dla ścieżki wirtualnej. Zwraca klasę podstawową <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Do implementowania dostawcy kompilacji, który generuje kod źródłowy zawartości sieci Web, takich jak pliki aspx, klasa wyprowadzona z <xref:System.Web.Compilation.BuildProvider> klasy i zastąpić <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> metodę, aby zwracany typ generowany przez dostawcę kompilacji.  
  
 System kompilacji ASP.NET kompiluje pliki dla każdego dostawcy kompilacji i generuje <xref:System.CodeDom.Compiler.CompilerResults> obiektu, który jest przekazywany do <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> metody. Zazwyczaj kompilacji dostawcy <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementacja używa <xref:System.Reflection.Assembly.GetType%2A> metoda <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> właściwości danych wejściowych `results` obiektu do zwrócenia podanego typu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Wyniki kompilacji dla ścieżki wirtualnej dostawcy kompilacji.</param>
        <summary>Zwraca wartość wskazującą akcji wymaganych po utworzeniu ścieżki wirtualnej.</summary>
        <returns>A <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> wartość wskazującą, środowisko kompilacji akcji wymaganych po utworzeniu ścieżki wirtualnej w programie ASP.NET.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> Metoda jest używana przez środowisko kompilacji platformy ASP.NET przy użyciu wystąpienia <xref:System.Web.Compilation.BuildProvider> klasa do tworzenia plików i załadować skompilowane zestawy.  
  
 Podstawowym <xref:System.Web.Compilation.BuildProvider> klasy metoda zwraca <xref:System.Web.Compilation.BuildProviderResultFlags.Default> wartość pola, co oznacza, że żadna specjalna Akcja wymagana podczas tworzenia ścieżki wirtualnej.  
  
 Podczas tworzenia klasy pochodnej z <xref:System.Web.Compilation.BuildProvider> klasy, można zaimplementować <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> metody do zwrócenia innego <xref:System.Web.Compilation.BuildProviderResultFlags> wartość dla typu niestandardowego pliku lub ścieżki wirtualnej. Wymaga na przykład jeśli kompilowania ścieżce wirtualnej zawierający <xref:System.AppDomain> obiekt do załadowania, można powrócić <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> wartość wyliczenia z Twojej <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> — metoda.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zostanie otwarty czytnik tekstu do odczytu z ścieżki wirtualnej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zostanie otwarty czytnik tekstu do odczytu z ścieżkę wirtualną bieżącego obiektu dostawcy kompilacji.</summary>
        <returns>Otwórz <see cref="T:System.IO.TextReader" /> można odczytać zawartości <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.IO.TextReader.Read%2A> metody w zwróconym <xref:System.IO.TextReader> obiektu do odczytu zawartości <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> właściwość <xref:System.Web.Compilation.BuildProvider> obiektu.  
  
 Po wywołaniu <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> metody, należy użyć <xref:System.IO.TextReader.Close%2A> metody, aby zamknąć <xref:System.IO.TextReader> obiektu i zwolnić zasobów systemowych skojarzone.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka wirtualna do odczytu.</param>
        <summary>Zostanie otwarty czytnik tekstu do odczytu z określonej ścieżki wirtualnej.</summary>
        <returns>Otwórz <see cref="T:System.IO.TextReader" /> można odczytać zawartości określonej ścieżki wirtualnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.IO.TextReader.Read%2A> metody w zwróconym <xref:System.IO.TextReader> obiektu do odczytu treści ścieżki wirtualnej.  
  
 Po wywołaniu <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> metody, należy użyć <xref:System.IO.TextReader.Close%2A> metody, aby zamknąć <xref:System.IO.TextReader> obiektu i zwolnić zasobów systemowych skojarzone.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera strumień do odczytu z ścieżki wirtualnej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Otwiera strumień do odczytu ścieżkę wirtualną bieżącego obiektu dostawcy kompilacji.</summary>
        <returns>Otwórz <see cref="T:System.IO.Stream" /> można odczytać zawartości <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.IO.Stream.Read%2A> metody w zwróconym <xref:System.IO.Stream> obiektu do odczytu treści ścieżkę wirtualną dla <xref:System.Web.Compilation.BuildProvider> obiektu.  
  
 Po wywołaniu <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> metody, należy użyć <xref:System.IO.Stream.Close%2A> metody, aby zamknąć <xref:System.IO.Stream> obiektu i zwolnić zasobów systemowych skojarzone.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka wirtualna do odczytu.</param>
        <summary>Otwiera strumień do odczytu z określonej ścieżki wirtualnej.</summary>
        <returns>Otwórz <see cref="T:System.IO.Stream" /> można odczytać zawartości określonej ścieżki wirtualnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.IO.Stream.Read%2A> metody w zwróconym <xref:System.IO.Stream> obiektu do odczytu treści ścieżki wirtualnej.  
  
 Po wywołaniu <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> metody, należy użyć <xref:System.IO.Stream.Close%2A> metody, aby zamknąć <xref:System.IO.Stream> obiektu i zwolnić zasobów systemowych skojarzone.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Wyniki kompilatora.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia przejrzyj komunikaty o błędach kompilatora, dzięki czemu można zmodyfikować je, aby znaleźć więcej informacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dzięki czemu można modyfikować błędy kompilatora, zanim zostaną one wyświetlone w celu wprowadzenia bardziej użyteczne użytkownikowi tekst błędu zwykle przesłonić tę metodę. Jest to przydatne w scenariuszach, w których znane kontekstu określonych błędów i może dostarczyć informacji do użytkownika dotyczące rozwiązywania tych problemów. Oryginalny komunikat o błędzie kompilatora odnoszą się zazwyczaj do konstrukcji konkretnego języka i może nie mieć rzeczywista Przyczyna i rozwiązanie widocznych dla użytkownika.  
  
 Błędy mogą korzystać za pomocą <xref:System.CodeDom.Compiler.CompilerResults> obiekt, który jest przekazywany do metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje zestawów do skompilowania ze źródłem generowany przez dostawcę kompilacji.</summary>
        <value>Kolekcja tylko do odczytu zestawy, które mogą odwoływać się generowany przez dostawcę kompilacji kodu źródłowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET kompilacji inicjuje środowisko zbiór zestawów, które są dostępne do użytku przez dostawcę kompilacji. Kod źródłowy generowany przez dostawcę kompilacji w zestawów występujących w odwołaniach służy typy publiczne. Przywoływany zestaw kolekcji składa się z innych zestawów wbudowane w aplikacji ASP.NET i zestawy wymienionych w elemencie w pliku konfiguracji.  
  
 Jeśli dostawcy kompilacji generuje kod źródłowy, który odwołuje się do następującej liczby dodatkowych zestawów, dostawcy kompilacji dodaje dodatkowe zestawy za pomocą <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> metody. Środowisko budowania środowiska ASP.NET rozpoznaje kompilacji typów zewnętrznych podczas kompilowania zestawu przy użyciu przywoływanych zestawach dodane przez dostawców i domyślną kolekcję zestawów dostępnych dla odwołania.  
  
 <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> Kolekcja nie zawiera zestawów, które są dodawane do odwołania przez innych dostawców kompilacji za pośrednictwem <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extension">Rozszerzenia nazwy pliku, którego dostawcy kompilacji.</param>
        <param name="providerType">Klasa dostawcy kompilacji.</param>
        <summary>Rejestruje dostawcę kompilacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do rejestrowania dostawcy kompilacji zamiast definiując je w pliku Web.config. Aby uzyskać więcej informacji o dostawcach kompilacji, zobacz <xref:System.Web.Compilation.BuildProvider> klasy i [buildProviders elementu kompilacji (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje plik, który ma zostać utworzony przez tę implementację dostawcy kompilacji.</summary>
        <value>Ciąg tylko do odczytu, który określa ścieżkę wirtualną pliku, który ma być kompilowana przez tego dostawcę kompilacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ścieżka wirtualna <xref:System.Web.Compilation.BuildProvider> obiekt jest ścieżka do pliku, który jest kompilowany przez dostawcę kompilacji. Na przykład, jeśli skonfigurowano niestandardowy <xref:System.Web.Compilation.BuildProvider> klasa do tworzenia wszystkie pliki w witrynie sieci Web z niestandardowego rozszerzenia .abc, jeśli witryny sieci Web ma nazwę witryny "website1" i witryny sieci Web zawiera plik o nazwie Example.abc, <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> właściwość zawiera wartość `/WebSite1/Example.abc`.  
  
 Rozszerzenie pliku każdego pliku w aplikacji określa typ pliku, a odpowiedni dostawcy kompilacji dla danego typu pliku. Inicjuje środowisko kompilacji platformy ASP.NET <xref:System.Web.Compilation.BuildProvider> obiekt dla każdego pliku na podstawie typu pliku i używa <xref:System.Web.Compilation.BuildProvider> metod do wygenerowania źródła dla każdego pliku.  
  
 Aby uzyskać więcej informacji o konfigurowaniu dostawcy kompilacji, zobacz [buildProviders elementu kompilacji (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje kolekcję ścieżki wirtualne, które muszą zostać skompilowane zanim dostawcy kompilacji generuje kod.</summary>
        <value>Kolekcja tylko do odczytu ciągów reprezentujących ścieżki wirtualne, które jest zależny od tego wystąpienia dostawcy kompilacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> Właściwości to zbiór ścieżek wirtualnych, które muszą być skompilowane przed <xref:System.Web.Compilation.BuildProvider> wystąpienia generuje kod źródłowy. Zestawy z ścieżek wirtualnych w <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> są dodawane jako odwołania do kompilacji dla <xref:System.Web.Compilation.BuildProvider> wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>