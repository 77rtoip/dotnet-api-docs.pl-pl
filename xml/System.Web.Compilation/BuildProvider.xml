<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcd4b1524f182e6479395f31d232df35ce2e5ab2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69142392" /></Metadata><TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje zestaw właściwości i metod do generowania kodu źródłowego w środowisku kompilacji ASP.NET. Ta klasa jest abstrakcyjna.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Środowisko kompilacji ASP.NET używa <xref:System.Web.Compilation.BuildProvider> obiektów do generowania kodu źródłowego dla różnych typów plików w aplikacji. Klasy pochodzące od <xref:System.Web.Compilation.BuildProvider> przedniego udostępniają kod źródłowy dla plików, stron sieci Web, zasobów i innych elementów niestandardowych.  
  
 Zwykle nie jest tworzone wystąpienie <xref:System.Web.Compilation.BuildProvider> klasy bezpośrednio. Zamiast tego należy zaimplementować klasę, która pochodzi od <xref:System.Web.Compilation.BuildProvider>i <xref:System.Web.Compilation.BuildProvider> skonfigurować implementację do użycia w środowisku kompilacji ASP.NET.  
  
 Wystąpienia klasy są używane z <xref:System.Web.Compilation.AssemblyBuilder> obiektami do kompilowania co najmniej jednego pliku do skompilowanego zestawu. <xref:System.Web.Compilation.BuildProvider> Wystąpienie generuje kod źródłowy w odpowiednim języku dla poszczególnych plików, <xref:System.Web.Compilation.AssemblyBuilder> a obiekt łączy Źródło współtworzone przez każde <xref:System.Web.Compilation.BuildProvider> wystąpienie do jednego zestawu. <xref:System.Web.Compilation.BuildProvider>  
  
 Środowisko kompilacji ASP.NET używa wystąpień <xref:System.Web.Compilation.BuildProvider> klasy do kompilowania plików w aplikacji. <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> Właściwość<xref:System.Web.Compilation.BuildProvider> klasy wskazuje ścieżkę do pliku, który ma zostać skompilowany. Rozszerzenie pliku każdego pliku w aplikacji jest zamapowane na odpowiedniego dostawcę kompilacji. Środowisko kompilacji ASP.NET inicjuje <xref:System.Web.Compilation.BuildProvider> wystąpienie dla każdego pliku na podstawie rozszerzenia pliku i <xref:System.Web.Compilation.BuildProvider> używa metod do wygenerowania kodu źródłowego dla pliku. Środowisko kompilacji ASP.NET przekazuje <xref:System.Web.Compilation.AssemblyBuilder> obiekt na podstawie preferowanego języka kompilatora i kontekstu pliku <xref:System.Web.Compilation.BuildProvider> do metod podczas kompilowania zestawu z jednego lub kilku <xref:System.Web.Compilation.BuildProvider> plików, dzięki czemu wystąpienie może współtworzyć kod źródłowy dla jego pliku do ogólnego zestawu.  
  
 Aby zdefiniować niestandardowe akcje kompilacji dla typu pliku w aplikacji ASP.NET, należy utworzyć klasę z <xref:System.Web.Compilation.BuildProvider>, zaimplementować składowe w klasie pochodnej do tworzenia typu pliku i skonfigurować dostawcę kompilacji dla odpowiedniego rozszerzenia pliku w pliku konfiguracyjnym aplikacji.  
  
 Określa rozszerzenie pliku dla obsługiwanych plików i czy dostawca kompilacji obsługuje pliki kodu, pliki sieci Web, pliki zasobów czy wszystkie pliki. Użyj atrybutu `type` , aby określić w pełni kwalifikowaną nazwę typu implementacji dostawcy kompilacji. <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> Użyj klasy, aby określić, czy dostawca kompilacji ma zastosowanie do plików w katalogu App_Code, do plików w katalogu zawartości sieci Web, do zasobów globalnych lub lokalnych lub do wszystkich plików. Użyj atrybutu `extension` , aby określić rozszerzenie pliku używane do identyfikowania plików obsługiwanych przez <xref:System.Web.Compilation.BuildProvider> klasę. Użyj klasy <xref:System.Web.Configuration.BuildProviderCollection> , aby przejrzeć dostawców kompilacji w pliku konfiguracji. Aby uzyskać więcej informacji na temat konfigurowania dostawcy kompilacji, zobacz [element buildProviders dla kompilacji (Schemat ustawień ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 Aby zaimplementować dostawcę kompilacji, który generuje kod źródłowy dla niestandardowego typu pliku, należy utworzyć klasę z <xref:System.Web.Compilation.BuildProvider>i <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> zastąpić metodę w celu wygenerowania kodu źródłowego dla obsługiwanego typu plików. Generowane źródło jest dodawane do <xref:System.Web.Compilation.AssemblyBuilder> obiektu w postaci wykresu CodeDOM lub jako zawartość reprezentująca fizyczny plik kodu źródłowego. Jeśli dostawca kompilacji wymaga określonego języka programowania, Zastąp <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> właściwość, aby <xref:System.Web.Compilation.CompilerType> zwrócić obiekt dla obsługiwanego języka programowania. Jeśli dostawca kompilacji nie wymaga określonego języka programowania, nie należy przesłaniać <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> właściwości; Użyj implementacji klasy bazowej, która wskazuje, że dostawca kompilacji może korzystać z dowolnego .NET Framework języka, takiego jak Visual Basic lub. C#  
  
 Aby zaimplementować dostawcę kompilacji, który generuje kod źródłowy dla zawartości sieci Web, należy utworzyć klasę <xref:System.Web.Compilation.BuildProvider> z i <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> zastąpić metodę zwracającą <xref:System.Type> dla klasy wygenerowanej przez <xref:System.Web.Compilation.BuildProvider>. Zastąp <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metodę w celu wygenerowania kodu źródłowego dla typu dostarczonego przez obsługiwany plik.  
  
> [!NOTE]
>  Dodanie dostosowanej <xref:System.Web.Compilation.BuildProvider> klasy do pliku Web. config działa w witrynie sieci Web ASP.NET, ale nie działa w projekcie aplikacji sieci Web ASP.NET. W projekcie aplikacji sieci Web kod generowany przez <xref:System.Web.Compilation.BuildProvider> klasę nie może zostać uwzględniony w aplikacji. Aby uzyskać więcej informacji, zobacz Omówienie wstępnej [kompilacji projektu aplikacji sieci Web ASP.NET](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje prostą implementację dostawcy kompilacji, która dziedziczy z abstrakcyjnej <xref:System.Web.Compilation.BuildProvider> klasy bazowej. Dostawca kompilacji zastępuje <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>elementy członkowskie klasy <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>podstawowej, <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> , i. Przykład nie obejmuje implementacji `SampleClassGenerator` klasy. Aby uzyskać więcej informacji, zobacz <xref:System.CodeDom.CodeCompileUnit> Omówienie klasy.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Compilation.BuildProvider" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ Klasa jest abstrakcyjna, nie można utworzyć <xref:System.Web.Compilation.BuildProvider> wystąpienia bezpośrednio przy użyciu konstruktora. <xref:System.Web.Compilation.BuildProvider>  
  
 Podczas wyprowadzania z <xref:System.Web.Compilation.BuildProvider> klasy, Przesłoń konstruktora, aby zaimplementować niestandardowe akcje inicjowania dla implementacji dostawcy kompilacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje typ kompilatora używany przez dostawcę kompilacji do generowania kodu źródłowego dla niestandardowego typu pliku.</summary>
        <value>Tylko <see cref="T:System.Web.Compilation.CompilerType" /> do odczytu reprezentujący generator kodu, kompilator kodu i ustawienia kompilatora używane do kompilowania kodu źródłowego dla ścieżki wirtualnej. Klasa bazowa zwraca wartość <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości, aby podać ustawienia dla kompilowania kodu źródłowego dla <xref:System.Web.Compilation.BuildProvider>implementacji. <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> Właściwość <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> jest`null` , jeśli dostawca kompilacji nie wymaga określonego języka kodu do generowania i kompilowania kodu źródłowego.  
  
 Aby ustawić wartość dla <xref:System.Web.Compilation.CompilerType> obiektu w ramach implementacji dostawcy kompilacji, <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> Użyj metody lub <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> .  
  
 <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> Właściwość<xref:System.CodeDom.Compiler.CodeDomProvider> określa implementację, która jest używana do generowania i kompilowania kodu źródłowego dla dostawcy kompilacji. <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> Właściwość definiuje ustawienia, które są używane do kompilowania kodu źródłowego do zestawu.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje prostą implementację dostawcy kompilacji, która dziedziczy z abstrakcyjnej <xref:System.Web.Compilation.BuildProvider> klasy bazowej. Dostawca kompilacji zastępuje <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>elementy członkowskie klasy <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>podstawowej, <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> , i.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">Konstruktor zestawu, który odwołuje się do kodu źródłowego wygenerowanego przez dostawcę kompilacji.</param>
        <summary>Generuje kod źródłowy dla ścieżki wirtualnej dostawcy kompilacji i dodaje kod źródłowy do określonego konstruktora zestawu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zaimplementować dostawcę kompilacji, który generuje kod źródłowy dla niestandardowego typu pliku, należy utworzyć klasę z <xref:System.Web.Compilation.BuildProvider> klasy i <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> zastąpić metodę w celu wygenerowania kodu źródłowego dla obsługiwanego typu plików.  
  
 Zazwyczaj <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementacja dostawcy kompilacji <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> odczytuje właściwość, analizuje zawartość i dodaje wygenerowany kod źródłowy do określonego <xref:System.Web.Compilation.AssemblyBuilder> obiektu. Kod źródłowy można współtworzyć w zestawie w postaci <xref:System.IO.TextWriter> obiektu lub wykresu CodeDOM. Aby dodać kod źródłowy do zestawu za pomocą <xref:System.IO.TextWriter> obiektu, <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> Użyj metody. Aby dodać kod źródłowy do zestawu wykresu CodeDOM, użyj <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metody.  
  
 Jeśli dostawca kompilacji generuje kod źródłowy w określonym języku programowania, należy zastąpić <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> właściwość, aby <xref:System.Web.Compilation.CompilerType> zwracała obiekt dla obsługiwanego języka programowania.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje prostą implementację dostawcy kompilacji, która dziedziczy z abstrakcyjnej <xref:System.Web.Compilation.BuildProvider> klasy bazowej. Dostawca kompilacji zastępuje <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>elementy członkowskie klasy <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>podstawowej, <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> , i.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Dynamiczne generowanie i kompilacja kodu źródłowego</related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">Gdy ta metoda zwraca, zawiera słownik zawierający wszystkie skojarzone numery wierszy i dyrektywy pragma wiersza kodu źródłowego. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Reprezentuje kontener wygenerowanego wykresu CodeDOM.</summary>
        <returns>Kontener wykresu CodeDOM, który jest generowany przez <see cref="T:System.Web.Compilation.BuildProvider" /> wystąpienie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być używana w ramach <xref:System.Web.Compilation.ClientBuildManager> klasy do wyróżniania składni i obsługi projektanta w programie Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Wyniki kompilacji dla ścieżki wirtualnej dostawcy kompilacji.</param>
        <summary>Generuje ciąg, który ma zostać utrwalony w skompilowanym zestawie.</summary>
        <returns>Ciąg, który ma zostać utrwalony w środowisku kompilacji, <see langword="null" /> lub <see cref="T:System.Web.Compilation.BuildProvider" /> Jeśli wystąpienie nie implementuje <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda obiektu tworzy wystąpienie dostawcy kompilacji dla wejściowej <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> ścieżki wirtualnej i <xref:System.Web.Compilation.BuildProvider> wywołuje metodę dla obiektu. <xref:System.Web.Compilation.BuildManager> <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>  
  
 Klasa bazowa <xref:System.Web.Compilation.BuildProvider> `null` zwraca dla <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> metody, wskazując, że <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> nie jest zaimplementowana.  
  
 Niektóre implementacje dostawcy kompilacji można <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> zaimplementować zamiast <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> metody. Obiekt zwykle używa <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> do zwrócenia <xref:System.Type> obiektu dla ścieżki wirtualnej. <xref:System.Web.Compilation.BuildProvider> Jednak metoda może służyć do wskazywania <xref:System.Web.Compilation.BuildProvider> , że obiekt może generować wiele typów ze ścieżki wirtualnej. <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ustawienia kompilatora dla języka domyślnego w aplikacji.</summary>
        <returns><see cref="T:System.Web.Compilation.CompilerType" /> Reprezentuje ustawienia kompilatora dla języka domyślnego w aplikacji. Klasa bazowa zwraca domyślny kompilator oparty na pliku konfiguracyjnym aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> Użyj metody, aby przeanalizować domyślny typ kompilatora dla dostawcy kompilacji. <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> Użyj metody, aby przejrzeć typ kompilatora skonfigurowany w dostawcy kompilacji dla określonej nazwy języka.  
  
 Klasa bazowa <xref:System.Web.Compilation.BuildProvider> określa domyślny typ kompilatora `defaultLanguage` przy użyciu wartości atrybutu w sekcji pliku konfiguracyjnego aplikacji. Jeśli w sekcji kompilacja nie ma domyślnego ustawienia język, domyślny typ kompilatora jest ustawiany przy użyciu <xref:Microsoft.VisualBasic.VBCodeProvider> dostawcy języka.  
  
 Podczas wyprowadzania z <xref:System.Web.Compilation.BuildProvider> klasy można użyć <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> , aby ustawić <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> właściwość w ramach implementacji.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">Nazwa języka kodu.</param>
        <summary>Zwraca ustawienia kompilatora dla dostawcy kompilacji na podstawie określonego języka.</summary>
        <returns><see cref="T:System.Web.Compilation.CompilerType" /> Reprezentuje ustawienia kompilatora dla dostawcy kompilacji na podstawie określonego języka. Klasa bazowa zwraca domyślne ustawienia kompilatora dla języka w oparciu o plik konfiguracyjny aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> Użyj metody, aby przejrzeć typ kompilatora skonfigurowany w dostawcy kompilacji dla określonej nazwy języka. <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> Użyj metody, aby przeanalizować domyślny typ kompilatora dla dostawcy kompilacji.  
  
 Klasa bazowa <xref:System.Web.Compilation.BuildProvider> określa domyślny typ kompilatora <xref:System.Web.Configuration.Compiler> przy użyciu elementów <xref:System.Web.Configuration.CompilationSection> we <xref:System.Web.Configuration.CompilationSection.Compilers%2A> właściwości obiektu w pliku konfiguracji. Jest to równoznaczne z badaniem elementów w i elementów w sekcji pliku konfiguracji. Na przykład dla `language` wartości VB metoda klasy bazowej <xref:System.Web.Compilation.CompilerType> zwraca obiekt, który odnosi się do skonfigurowanych <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>ustawień wystąpienia.  
  
 Podczas wyprowadzania z <xref:System.Web.Compilation.BuildProvider> klasy można użyć <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> , aby ustawić <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> wartość właściwości dla języka obsługiwanego przez implementację.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="language" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException"><paramref name="language" />nie pasuje do skonfigurowanego kompilatora dla dostawcy kompilacji.</exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Wyniki kompilacji dla ścieżki wirtualnej dostawcy kompilacji.</param>
        <summary>Zwraca typ wygenerowany przez dostawcę kompilacji ze ścieżki wirtualnej.</summary>
        <returns>Typ, który jest generowany przez dostawcę kompilacji dla ścieżki wirtualnej. Klasa bazowa zwraca wartość <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zaimplementować dostawcę kompilacji, który generuje kod źródłowy dla zawartości sieci Web, takiej jak pliki aspx, należy utworzyć klasę z <xref:System.Web.Compilation.BuildProvider> klasy i <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> zastąpić metodę w celu zwrócenia typu wygenerowanego przez dostawcę kompilacji.  
  
 System kompilacji ASP.NET kompiluje pliki dla każdego dostawcy kompilacji i generuje <xref:System.CodeDom.Compiler.CompilerResults> obiekt, który jest przesyłany <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> do metody. Zazwyczaj <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementacja dostawcy kompilacji <xref:System.Reflection.Assembly.GetType%2A> używa metody we <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> właściwości obiektu wejściowego `results` w celu zwrócenia podanego typu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Wyniki kompilacji dla ścieżki wirtualnej dostawcy kompilacji.</param>
        <summary>Zwraca wartość wskazującą akcje wymagane w przypadku skompilowania ścieżki wirtualnej.</summary>
        <returns><see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> Wartość wskazująca akcje wymagane po skompilowaniu ścieżki wirtualnej w środowisku kompilacji ASP.NET.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana przez środowisko kompilacji ASP.NET podczas używania wystąpień <xref:System.Web.Compilation.BuildProvider> klasy do kompilowania plików i ładowania skompilowanych zestawów. <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>  
  
 Metoda klasy <xref:System.Web.Compilation.BuildProvider> bazowej <xref:System.Web.Compilation.BuildProviderResultFlags.Default> zwraca wartość pola, wskazując, że nie jest wymagana żadna specjalna akcja w przypadku skompilowania ścieżki wirtualnej.  
  
 Podczas wyprowadzania z <xref:System.Web.Compilation.BuildProvider> klasy można <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> zaimplementować metodę, aby zwrócić inną <xref:System.Web.Compilation.BuildProviderResultFlags> wartość dla niestandardowego typu pliku lub ścieżki wirtualnej. Na przykład jeśli ponowna kompilacja ścieżki wirtualnej wymaga, aby obiekt zawierający <xref:System.AppDomain> został ponownie załadowany, można <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> zwrócić wartość wyliczenia z <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera czytelnika tekstu do odczytu ze ścieżki wirtualnej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Otwiera czytelnika tekstu do odczytu ze ścieżki wirtualnej bieżącego obiektu dostawcy kompilacji.</summary>
        <returns>Otwarty <see cref="T:System.IO.TextReader" /> , który może służyć do odczytywania zawartości <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody na zwracanym <xref:System.IO.TextReader> obiekcie, aby <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> odczytać zawartość właściwości <xref:System.Web.Compilation.BuildProvider> obiektu. <xref:System.IO.TextReader.Read%2A>  
  
 Po wywołaniu <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> metody należy <xref:System.IO.TextReader.Close%2A> użyć metody, aby zamknąć <xref:System.IO.TextReader> obiekt i zwolnić skojarzone zasoby systemowe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka wirtualna do odczytania.</param>
        <summary>Otwiera czytelnika tekstu do odczytu z określonej ścieżki wirtualnej.</summary>
        <returns>Otwarty <see cref="T:System.IO.TextReader" /> , który może służyć do odczytywania zawartości określonej ścieżki wirtualnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody na zwracanym <xref:System.IO.TextReader> obiekcie, aby odczytać zawartość ścieżki wirtualnej. <xref:System.IO.TextReader.Read%2A>  
  
 Po wywołaniu <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> metody należy <xref:System.IO.TextReader.Close%2A> użyć metody, aby zamknąć <xref:System.IO.TextReader> obiekt i zwolnić skojarzone zasoby systemowe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera strumień do odczytu ze ścieżki wirtualnej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Otwiera strumień służący do odczytywania ścieżki wirtualnej bieżącego obiektu dostawcy kompilacji.</summary>
        <returns>Otwarty <see cref="T:System.IO.Stream" /> , który może służyć do odczytywania zawartości <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody na zwracanym <xref:System.IO.Stream> obiekcie, aby odczytać zawartość ścieżki wirtualnej dla <xref:System.Web.Compilation.BuildProvider> obiektu. <xref:System.IO.Stream.Read%2A>  
  
 Po wywołaniu <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> metody należy <xref:System.IO.Stream.Close%2A> użyć metody, aby zamknąć <xref:System.IO.Stream> obiekt i zwolnić skojarzone zasoby systemowe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Ścieżka wirtualna do odczytania.</param>
        <summary>Otwiera strumień do odczytu z określonej ścieżki wirtualnej.</summary>
        <returns>Otwarty <see cref="T:System.IO.Stream" /> , który może służyć do odczytywania zawartości określonej ścieżki wirtualnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody na zwracanym <xref:System.IO.Stream> obiekcie, aby odczytać zawartość ścieżki wirtualnej. <xref:System.IO.Stream.Read%2A>  
  
 Po wywołaniu <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> metody należy <xref:System.IO.Stream.Close%2A> użyć metody, aby zamknąć <xref:System.IO.Stream> obiekt i zwolnić skojarzone zasoby systemowe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="results">Wyniki kompilatora.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, umożliwia przejrzenie komunikatów o błędach kompilatora, aby można było je zmodyfikować, aby uzyskać więcej informacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle zastępujemy tę metodę, aby można było zmodyfikować błędy kompilatora przed ich wyświetleniem, aby tekst błędu był bardziej użyteczny dla użytkownika. Jest to przydatne w scenariuszach, w których wiadomo kontekst niektórych błędów i zawiera informacje dotyczące sposobu ich naprawy. Oryginalny komunikat o błędzie kompilatora jest zwykle specyficzny dla konkretnej konstrukcji językowej i może nie spowodować, że rzeczywista przyczyna lub rozwiązanie jest oczywiste dla użytkownika.  
  
 Można uzyskać dostęp do błędów przy użyciu <xref:System.CodeDom.Compiler.CompilerResults> obiektu, który jest przesyłany do metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje zestawy do skompilowania ze źródłem wygenerowanym przez dostawcę kompilacji.</summary>
        <value>Kolekcja zestawów, do której może odwoływać się kod źródłowy wygenerowany przez dostawcę kompilacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Środowisko kompilacji ASP.NET inicjuje zbiór zestawów, które są dostępne dla odwołania przez dostawcę kompilacji. Kod źródłowy wygenerowany przez dostawcę kompilacji może używać typów publicznych w przywoływanych zestawach. Kolekcja zestawów, do której się odwołuje, składa się z innych zestawów wbudowanych w aplikacji ASP.NET oraz zestawów wymienionych w elemencie w pliku konfiguracji.  
  
 Jeśli dostawca kompilacji generuje kod źródłowy, który odwołuje się do dodatkowych zestawów, dostawca kompilacji dodaje dodatkowe zestawy przy <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> użyciu metody. Środowisko kompilacji ASP.NET rozpoznaje typy zewnętrzne podczas kompilacji zestawu przy użyciu zestawów, do których istnieją odwołania dodane przez dostawców kompilacji i domyślną kolekcję zestawów dostępnych do odwołania.  
  
 Kolekcja nie zawiera zestawów, które są dodawane do odwołania przez innych dostawców kompilacji <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> za pomocą metody. <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="providerType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="extension">Rozszerzenie nazwy pliku, dla którego jest przeznaczony dostawca kompilacji.</param>
        <param name="providerType">Klasa dostawcy kompilacji.</param>
        <summary>Rejestruje dostawcę kompilacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można użyć do rejestrowania dostawców kompilacji zamiast definiowania ich w pliku Web. config. Aby uzyskać więcej informacji o dostawcach kompilacji, <xref:System.Web.Compilation.BuildProvider> zobacz Klasa i [element buildProviders dla kompilacji (Schemat ustawień ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje plik, który ma zostać skompilowany przez tę implementację dostawcy kompilacji.</summary>
        <value>Ciąg tylko do odczytu, który określa ścieżkę wirtualną pliku do skompilowania przez tego dostawcę kompilacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ścieżka <xref:System.Web.Compilation.BuildProvider> wirtualna obiektu jest ścieżką do pliku, który jest kompilowany przez dostawcę kompilacji. Na przykład jeśli skonfigurowano klasę niestandardową <xref:System.Web.Compilation.BuildProvider> do kompilowania wszystkich plików w witrynie sieci Web przy użyciu rozszerzenia niestandardowego. ABC, jeśli witryna sieci Web ma nazwę WebSite1, a witryna sieci Web zawiera plik o nazwie example. ABC <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> , właściwość zawiera wartość `/WebSite1/Example.abc`.  
  
 Rozszerzenie pliku każdego pliku w aplikacji określa typ pliku i odpowiedniego dostawcę kompilacji dla typu pliku. Środowisko kompilacji ASP.NET inicjuje <xref:System.Web.Compilation.BuildProvider> obiekt dla każdego pliku na podstawie typu pliku i <xref:System.Web.Compilation.BuildProvider> używa metod do generowania źródła dla każdego pliku.  
  
 Aby uzyskać więcej informacji na temat konfigurowania dostawcy kompilacji, zobacz [element buildProviders dla kompilacji (Schemat ustawień ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje kolekcję ścieżek wirtualnych, które muszą zostać skompilowane przed wygenerowaniem kodu przez dostawcę kompilacji.</summary>
        <value>Kolekcja ciągów tylko do odczytu reprezentująca ścieżki wirtualne, od których zależy to wystąpienie dostawcy kompilacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest kolekcją ścieżek wirtualnych, które muszą zostać skompilowane <xref:System.Web.Compilation.BuildProvider> przed wystąpieniem generuje kod źródłowy. <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> Zestawy ze ścieżek wirtualnych w programie <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> są dodawane jako odwołania do kompilacji dla tego <xref:System.Web.Compilation.BuildProvider> wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>
