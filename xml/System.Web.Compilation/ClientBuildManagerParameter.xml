<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df67407c6097ad233c005e63868b8e8810f3a9aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579271" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera wartości przekazane do kompilatora ASP.NET podczas wstępnej kompilacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strony sieci Web ASP.NET i pliki kodu można wstępnie skompilowana do ułatwienia szybszej odpowiedzi dla użytkowników i umożliwiają wdrożenie witryny bez wdrażania kodu źródłowego. Aby uzyskać więcej informacji o wstępnej kompilacji witryny sieci Web ASP.NET, zobacz [omówienie wstępnej kompilacji projektu witryny sieci Web programu ASP.NET](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).  
  
 <xref:System.Web.Compilation.ClientBuildManagerParameter> Klasy przechowuje wartości, które są używane podczas wstępnej kompilacji. <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Właściwość określa, jak zestaw zostanie skompilowany. Na przykład można ustawić <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> do <xref:System.Web.Compilation.PrecompilationFlags.Clean> ponownie skompilować wszystkie składniki skompilowane wcześniej lub ustaw ją na <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> umożliwiające wynikowego zestawu zastąpić wszystkie składniki w katalogu docelowym. <xref:System.Web.Compilation.PrecompilationFlags> Modułu wyliczającego ma <xref:System.FlagsAttribute> atrybut umożliwiający bitowe łączenie wartości jego elementów członkowskich. <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Właściwość może zawierać więcej niż jedną wartość z <xref:System.Web.Compilation.PrecompilationFlags> wyliczeniu, aby określić kombinację zachowania wstępnej kompilacji.  
  
 Albo <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> właściwości lub <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> właściwości jest przypisywana wartość do utworzenia zestawu z silną nazwą. Obie wartości, nie trzeba ustawić można utworzyć zestawu z silną nazwą.  
  
 A <xref:System.Web.Compilation.ClientBuildManagerParameter> obiekt jest przekazywany do <xref:System.Web.Compilation.ClientBuildManager> obiektu za pomocą <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> konstruktora.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest częścią przykładowego kodu w <xref:System.Web.Compilation.ClientBuildManager> Przegląd klasy. W tym przykładzie <xref:System.Web.Compilation.ClientBuildManagerParameter> obiekt jest tworzony i ustawić jej wartości. Wynikowy zestaw ma silnej nazwy na podstawie podanego pliku kluczy i zostanie prekompilowanie zgodnie z dostarczonych <xref:System.Web.Compilation.PrecompilationFlags> wartości.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje wszystkie wartości właściwości. Te wartości musi być ustawiona za pośrednictwem <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, i <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> właściwości po utworzeniu obiektu.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest częścią przykładowego kodu w <xref:System.Web.Compilation.ClientBuildManager> Przegląd klasy. W tym przykładzie <xref:System.Web.Compilation.ClientBuildManagerParameter> obiekt jest tworzony i ustawić jej wartości. Wynikowy zestaw ma silnej nazwy na podstawie podanego pliku kluczy i zostanie prekompilowanie zgodnie z dostarczonych <xref:System.Web.Compilation.PrecompilationFlags> wartości.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wykluczonych ścieżek wirtualnych.</summary>
        <value>Wykluczonych ścieżek wirtualnych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagi, które określają zachowanie wstępnej kompilacji.</summary>
        <value>
          <see cref="T:System.Web.Compilation.PrecompilationFlags" /> Dla kompilacji klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Właściwość określa, jak zestaw zostanie skompilowany. Na przykład można ustawić <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> do <xref:System.Web.Compilation.PrecompilationFlags.Clean> ponownie skompilować wszystkie składniki skompilowane wcześniej lub ustaw ją na <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> umożliwiające wynikowego zestawu zastąpić wszystkie składniki w katalogu docelowym. <xref:System.Web.Compilation.PrecompilationFlags> Modułu wyliczającego ma <xref:System.FlagsAttribute> atrybut umożliwiający bitowe łączenie wartości jego elementów członkowskich. <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Właściwość może zawierać więcej niż jedną wartość z <xref:System.Web.Compilation.PrecompilationFlags> wyliczeniu, aby określić kombinację zachowania wstępnej kompilacji.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest częścią przykładowego kodu w <xref:System.Web.Compilation.ClientBuildManager> Przegląd klasy. W tym przykładzie <xref:System.Web.Compilation.ClientBuildManagerParameter> obiekt jest tworzony i ustawić jej wartości. Wynikowy zestaw ma silnej nazwy na podstawie podanego pliku kluczy i zostanie prekompilowanie zgodnie z dostarczonych <xref:System.Web.Compilation.PrecompilationFlags> wartości.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kontener klucza używany podczas kompilacji.</summary>
        <value>A <see cref="T:System.String" /> wartości dla kontenera kluczy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Albo <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> właściwości lub <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> właściwości jest przypisywana wartość do utworzenia zestawu z silną nazwą. Obie wartości, nie trzeba ustawić można utworzyć zestawu z silną nazwą.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest podobny do przykładów kodu w <xref:System.Web.Compilation.ClientBuildManager> Przegląd klas, z wyjątkiem tego, że zestaw wynikowy będzie ma oparte na podanego kontenera klucza silnej nazwy. Będzie ona prekompilowanie zgodnie z dostarczonych <xref:System.Web.Compilation.PrecompilationFlags> wartości.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia plik klucza używany podczas kompilacji.</summary>
        <value>A <see cref="T:System.String" /> wartości dla pliku klucza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Albo <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> właściwości lub <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> właściwości jest przypisywana wartość do utworzenia zestawu z silną nazwą. Obie wartości, nie trzeba ustawić można utworzyć zestawu z silną nazwą.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest częścią przykładowego kodu w <xref:System.Web.Compilation.ClientBuildManager> Przegląd klasy. W tym przykładzie <xref:System.Web.Compilation.ClientBuildManagerParameter> obiekt jest tworzony i ustawić jej wartości. Wynikowy zestaw ma silnej nazwy na podstawie podanego pliku kluczy i zostanie prekompilowanie zgodnie z dostarczonych <xref:System.Web.Compilation.PrecompilationFlags> wartości.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
  </Members>
</Type>