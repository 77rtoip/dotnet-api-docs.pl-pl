<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0bbff3f7e9b001bcb0d05f1a7b17730044138ba8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69142221" /></Metadata><TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <TypeSignature Language="F#" Value="type ClientBuildManagerParameter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera wartości przesyłane do kompilatora ASP.NET podczas wstępnej kompilacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET strony sieci Web i pliki kodu mogą być wstępnie skompilowane, aby ułatwić użytkownikom szybsze reagowanie na wdrażanie lokacji bez wdrażania kodu źródłowego. Aby uzyskać więcej informacji na temat prekompilowania witryny sieci Web ASP.NET, zobacz Omówienie wstępnej [kompilacji projektu witryny sieci web ASP.NET](https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).  
  
 <xref:System.Web.Compilation.ClientBuildManagerParameter> Klasa przechowuje wartości, które są używane podczas wstępnej kompilacji. <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Właściwość określa sposób kompilowania zestawu. Na przykład można ustawić <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> <xref:System.Web.Compilation.PrecompilationFlags.Clean> , aby ponownie skompilować wszystkie poprzednio skompilowane składniki <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> , lub ustawić go tak, aby zezwalać na zestaw, aby zastąpić wszystkie składniki w katalogu docelowym. Moduł wyliczający ma atrybut, który umożliwia bitową kombinację jego wartości składowych. <xref:System.FlagsAttribute> <xref:System.Web.Compilation.PrecompilationFlags> Właściwość może zawierać więcej niż jedną wartość z wyliczenia, <xref:System.Web.Compilation.PrecompilationFlags> aby określić kombinację zachowań prekompilowania. <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>  
  
 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Właściwość<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> lub właściwość ma przypisaną wartość, aby utworzyć zestaw o silnej nazwie. Nie trzeba ustawiać obu wartości, aby utworzyć zestaw o silnej nazwie.  
  
 Obiekt jest przesyłany <xref:System.Web.Compilation.ClientBuildManager> do obiektu za pomocą <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> konstruktora. <xref:System.Web.Compilation.ClientBuildManagerParameter>  
  
   
  
## Examples  
 Poniższy przykład kodu jest częścią przykładu kodu znajdującego się w <xref:System.Web.Compilation.ClientBuildManager> przeglądzie klasy. W przykładzie <xref:System.Web.Compilation.ClientBuildManagerParameter> tworzony jest obiekt i jego wartości ustawione. Wynikowy zestaw będzie miał silną nazwę na podstawie dostarczonego pliku klucza i zostanie wstępnie skompilowany zgodnie z podanymi <xref:System.Web.Compilation.PrecompilationFlags> wartościami.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
    <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Prekompilowanie witryny sieci Web ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor nie inicjuje żadnych wartości właściwości. Te wartości muszą być ustawiane za <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>pomocą <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>właściwości, <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> i po utworzeniu obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu jest częścią przykładu kodu znajdującego się w <xref:System.Web.Compilation.ClientBuildManager> przeglądzie klasy. W przykładzie <xref:System.Web.Compilation.ClientBuildManagerParameter> tworzony jest obiekt i jego wartości ustawione. Wynikowy zestaw będzie miał silną nazwę na podstawie dostarczonego pliku klucza i zostanie wstępnie skompilowany zgodnie z podanymi <xref:System.Web.Compilation.PrecompilationFlags> wartościami.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExcludedVirtualPaths : System.Collections.Generic.List&lt;string&gt;" Usage="System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wykluczone ścieżki wirtualne.</summary>
        <value>Wykluczone ścieżki wirtualne.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.PrecompilationFlags : System.Web.Compilation.PrecompilationFlags with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagi określające zachowanie wstępnej kompilacji.</summary>
        <value><see cref="T:System.Web.Compilation.PrecompilationFlags" /> Dla kompilacji klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Właściwość określa sposób kompilowania zestawu. Na przykład można ustawić <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> <xref:System.Web.Compilation.PrecompilationFlags.Clean> , aby ponownie skompilować wszystkie poprzednio skompilowane składniki <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> , lub ustawić go tak, aby zezwalać na zestaw, aby zastąpić wszystkie składniki w katalogu docelowym. Moduł wyliczający ma atrybut, który umożliwia bitową kombinację jego wartości składowych. <xref:System.FlagsAttribute> <xref:System.Web.Compilation.PrecompilationFlags> Właściwość może zawierać więcej niż jedną wartość z wyliczenia, <xref:System.Web.Compilation.PrecompilationFlags> aby określić kombinację zachowań prekompilowania. <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu jest częścią przykładu kodu znajdującego się w <xref:System.Web.Compilation.ClientBuildManager> przeglądzie klasy. W przykładzie <xref:System.Web.Compilation.ClientBuildManagerParameter> tworzony jest obiekt i jego wartości ustawione. Wynikowy zestaw będzie miał silną nazwę na podstawie dostarczonego pliku klucza i zostanie wstępnie skompilowany zgodnie z podanymi <xref:System.Web.Compilation.PrecompilationFlags> wartościami.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Prekompilowanie witryny sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyContainer : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kontener kluczy używany podczas kompilacji.</summary>
        <value>A <see cref="T:System.String" /> wartości kontenera kluczy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Właściwość<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> lub właściwość ma przypisaną wartość, aby utworzyć zestaw o silnej nazwie. Nie trzeba ustawiać obu wartości, aby utworzyć zestaw o silnej nazwie.  
  
   
  
## Examples  
 Poniższy przykład kodu jest podobny do przykładu kodu znalezionego w <xref:System.Web.Compilation.ClientBuildManager> przeglądzie klasy, z tą różnicą, że powstały zestaw będzie miał silną nazwę na podstawie podanego kontenera kluczy. Zostanie ona wstępnie skompilowana według podanych <xref:System.Web.Compilation.PrecompilationFlags> wartości.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Prekompilowanie witryny sieci Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f3022b39-f17f-48c1-b067-025eab0ce8bc">Importowanie i eksportowanie kontenerów kluczy RSA konfiguracji ochrony</related>
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyFile : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia plik klucza używany podczas kompilacji.</summary>
        <value><see cref="T:System.String" /> Wartość pliku klucza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Właściwość<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> lub właściwość ma przypisaną wartość, aby utworzyć zestaw o silnej nazwie. Nie trzeba ustawiać obu wartości, aby utworzyć zestaw o silnej nazwie.  
  
   
  
## Examples  
 Poniższy przykład kodu jest częścią przykładu kodu znajdującego się w <xref:System.Web.Compilation.ClientBuildManager> przeglądzie klasy. W przykładzie <xref:System.Web.Compilation.ClientBuildManagerParameter> tworzony jest obiekt i jego wartości ustawione. Wynikowy zestaw będzie miał silną nazwę na podstawie dostarczonego pliku klucza i zostanie wstępnie skompilowany zgodnie z podanymi <xref:System.Web.Compilation.PrecompilationFlags> wartościami.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
        <related type="Article" href="https://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a">Prekompilowanie witryny sieci Web ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/ffbf6d9e-4a88-4a8a-9645-4ce0ee1ee5f9">Tworzenie i używanie zestawów o silnej nazwie</related>
      </Docs>
    </Member>
  </Members>
</Type>
