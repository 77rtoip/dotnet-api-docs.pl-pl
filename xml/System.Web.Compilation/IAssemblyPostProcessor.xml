<Type Name="IAssemblyPostProcessor" FullName="System.Web.Compilation.IAssemblyPostProcessor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef11be2b5c8f36df2cdcae9656724390a8e34339" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36604131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAssemblyPostProcessor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAssemblyPostProcessor implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IAssemblyPostProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAssemblyPostProcessor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAssemblyPostProcessor : IDisposable" />
  <TypeSignature Language="F#" Value="type IAssemblyPostProcessor = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje metodę, którą klasa implementuje przetworzyć zestawu po zestaw został utworzony.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Do klasy implementującej interfejs ten ma dostęp do zestawu został skompilowany. <xref:System.Web.Compilation.AssemblyBuilder> Klasy kompiluje zestawów i sprawdza, czy <xref:System.Web.Compilation.IAssemblyPostProcessor> interfejs został zarejestrowany w pliku konfiguracji sieci Web. Jeśli tak, <xref:System.Web.Compilation.AssemblyBuilder> wystąpienie wywołania <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> metodę <xref:System.Web.Compilation.IAssemblyPostProcessor> interfejs do wykonywania dowolnych akcji po kompilacji i przed podczas ładowania zestawu. Na przykład narzędzie profiler może zawierać implementację tego interfejsu do ustanawiania sond w zestawie.  
  
 Gdy <xref:System.Web.Compilation.IAssemblyPostProcessor> interfejsu jest zarejestrowany, aplikacji ASP.NET i jego zestawów są zawsze kompilowane w trybie debugowania.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia implementacja <xref:System.Web.Compilation.IAssemblyPostProcessor> interfejsu i zarejestruj go w pliku Web.config aplikacji sieci Web.  
  
 Pierwsza część przykładowy kod tworzy klasę o nazwie `Samples.Process.postProcessTest` implementującej <xref:System.Web.Compilation.IAssemblyPostProcessor> interfejsu. Ta klasa wykonuje proste akcji zapisu pliku podczas <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> metoda jest wywoływana.  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 Kompiluj klasy do pliku dll przy użyciu polecenia `csc /target:library postProcessTest.cs`. Dodaj wynikowy plik dll na folder Bin aplikacji ASP.NET i zarejestrować biblioteki dll w pliku Web.config, jak pokazano w poniższym kodzie.  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 Gdy użytkownik odwiedza witrynę sieci Web, aplikacji sieci Web jest dynamicznie skompilowanych i MyTest.txt zostanie zapisany plik C:\compile.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="PostProcessAssembly">
      <MemberSignature Language="C#" Value="public void PostProcessAssembly (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostProcessAssembly(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostProcessAssembly (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostProcessAssembly(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member PostProcessAssembly : string -&gt; unit" Usage="iAssemblyPostProcessor.PostProcessAssembly path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Ścieżka do zestawu.</param>
        <summary>Metoda wywoływana przed zestaw jest ładowany umożliwia dla klasy implementującej można zmodyfikować zestawu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.AssemblyBuilder> Klasa wywołuje tę metodę zestaw został skompilowany. Wszystkie akcje do wykonania przed załadowaniem zestaw powinien być uwzględniany w ramach tej metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia implementacja <xref:System.Web.Compilation.IAssemblyPostProcessor> interfejsu i zarejestruj go w pliku Web.config aplikacji sieci Web.  
  
 Pierwsza część przykładowy kod tworzy klasę o nazwie `Samples.Process.postProcessTest` implementującej <xref:System.Web.Compilation.IAssemblyPostProcessor> interfejsu. Ta klasa wykonuje proste akcji zapisu pliku podczas <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> metoda jest wywoływana.  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 Kompiluj klasy do pliku dll przy użyciu polecenia `csc /target:library postProcessTest.cs`. Dodaj wynikowy plik dll na folder Bin aplikacji ASP.NET i zarejestrować biblioteki dll w pliku Web.config, jak pokazano w poniższym kodzie.  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 Gdy użytkownik odwiedza witrynę sieci Web, aplikacji sieci Web jest dynamicznie skompilowanych i MyTest.txt zostanie zapisany plik C:\compile.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>