<Type Name="ImplicitResourceKey" FullName="System.Web.Compilation.ImplicitResourceKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="25954523b544ecc15660ee39ead2fd909b83b74a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579025" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImplicitResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImplicitResourceKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ImplicitResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImplicitResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImplicitResourceKey sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera pola, które identyfikują klucz niejawne zasobu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ImplicitResourceKey> Klasa zawiera pola, które identyfikują klucz niejawne zasobu.  
  
 Niejawne zasobów jest przypisany do formantu w następującym formacie:  
  
```  
<asp:label runat="server" id="label1" meta:resourcekey="Welcome"  
    text="Welcome"   
      ie:text="Welcome Internet Explorer User"    
    forecolor="blue"/>    
```  
  
 Podczas analizy strony niejawne zasobów jest konwertowany na jawne klucze w postaci [*filtru*:]*prefiks*.* Właściwość*[.* podwłaściwości*]. Wartości zasobów z określonym prefiksem (w powyższym przykładzie prefiksem `Welcome`) są przypisane do dopasowania właściwości formantu. Na przykład załóżmy, że istnieją wartości w kodzie pliku ani źródła zasobów następujących kluczy:  
  
 `Welcome.Text`  
  
 `Ie:Welcome.Text`  
  
 `Welcome.Forecolor`  
  
 Te wartości są przypisane do ich właściwości kontroli.  
  
 Klucze niejawne zasobów można odwoływać się tylko zasobów lokalnych.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.IImplicitResourceProvider" />
    <altmember cref="T:System.Web.Compilation.IResourceProvider" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Compilation.ImplicitResourceKey" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImplicitResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ImplicitResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImplicitResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Compilation.ImplicitResourceKey" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.IImplicitResourceProvider" />
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImplicitResourceKey (string filter, string keyPrefix, string property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter, string keyPrefix, string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ImplicitResourceKey.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String, keyPrefix As String, property As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImplicitResourceKey(System::String ^ filter, System::String ^ keyPrefix, System::String ^ property);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="keyPrefix" Type="System.String" />
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter">Wartość filtru klucz niejawne zasobu.</param>
        <param name="keyPrefix">Prefiks do identyfikacji grupy właściwości.</param>
        <param name="property">Właściwość i podrzędnych, jeśli zostanie podana dla klucza zasobu niejawnej.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Compilation.ImplicitResourceKey" /> z określonymi wartościami dla <see cref="P:System.Web.Compilation.ImplicitResourceKey.Filter" />, <see cref="P:System.Web.Compilation.ImplicitResourceKey.KeyPrefix" /> i <see cref="P:System.Web.Compilation.ImplicitResourceKey.Property" /> właściwości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ImplicitResourceKey.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość filtru klucza niejawne zasobów.</summary>
        <value>A <see cref="T:System.String" /> zawierający wartość filtru dla wyrażenia niejawnego zasobu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ImplicitResourceKey.Filter%2A> Właściwość odwołuje się do wartości przed dwukropkiem (:) w wyrażeniu. Na przykład załóżmy, że ma niejawne zasobów w następującym formacie:  
  
```  
<asp:label runat="server" id="label1" meta:resourcekey="Welcome"  
        text="Welcome"   
        ie:text="Welcome Internet Explorer User"    
        forecolor="blue"/>    
```  
  
 Ten zasób zawiera trzy klucze, które potencjalnie zlokalizowane wartości zasobów można pobrać z zasobów plików ani źródła kodu. Jeden z tych kluczy jest `Ie:Welcome.Text`, w których "Ie" jest <xref:System.Web.Compilation.ImplicitResourceKey.Filter%2A> wartość.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.IImplicitResourceProvider" />
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
      </Docs>
    </Member>
    <Member MemberName="KeyPrefix">
      <MemberSignature Language="C#" Value="public string KeyPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ImplicitResourceKey.KeyPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ KeyPrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia prefiks identyfikujący grupę właściwości.</summary>
        <value>A <see cref="T:System.String" /> zawierający prefiks dla wyrażenia niejawnego zasobów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ImplicitResourceKey.KeyPrefix%2A> Właściwości wiąże ze sobą zbiór właściwości, które można przypisać do formantu. <xref:System.Web.Compilation.ImplicitResourceKey.KeyPrefix%2A> Właściwość odwołuje się do wartości po dwukropka (:) w wyrażeniu, jeśli istnieje, a przed pierwszą kropkę (.). Na przykład załóżmy, że ma niejawne zasobów w następującym formacie:  
  
```  
<asp:label runat="server" id="label1" meta:resourcekey="Welcome"  
        text="Welcome"   
        ie:text="Welcome Internet Explorer User"    
        forecolor="blue"/>    
```  
  
 Ten zasób zawiera trzy klucze `Welcome.Text`, `Ie:Welcome.Text`, i `Welcome.Forecolor`, która potencjalnie ma zlokalizowanych wartości zasobów można pobrać z zasobów plików ani źródła kodu. Każdy klucz ma `"Welcome"` jako <xref:System.Web.Compilation.ImplicitResourceKey.KeyPrefix%2A> wartość.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.IImplicitResourceProvider" />
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public string Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Property" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ImplicitResourceKey.Property" />
      <MemberSignature Language="VB.NET" Value="Public Property Property As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Property { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwość i podrzędnych, jeśli zostanie podana dla klucza zasobu niejawnej.</summary>
        <value>A <see cref="T:System.String" /> zawierającą właściwości i podwłaściwości dla wyrażenia niejawnego zasobów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ImplicitResourceKey.Property%2A> Właściwość określa właściwość formantu do lokalizacji. <xref:System.Web.Compilation.ImplicitResourceKey.Property%2A> Właściwość odwołuje się do wartości po pierwszym kropki (.) w wyrażeniu. Na przykład załóżmy, że ma niejawne zasobów w następującym formacie:  
  
```  
<asp:label runat="server" id="label1" meta:resourcekey="Welcome"  
        text="Welcome"   
        ie:text="Welcome Internet Explorer User"    
        forecolor="blue"/>    
```  
  
 Ten zasób zawiera trzy klucze `Welcome.Text`, `Ie:Welcome.Text`, i `Welcome.Forecolor`, która potencjalnie ma zlokalizowanych wartości zasobów można pobrać z zasobów plików ani źródła kodu. Te klucze mają <xref:System.Web.Compilation.ImplicitResourceKey.Property%2A> wartości `"Text"`, `"Text"`, i `"Forecolor"`odpowiednio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>