<Type Name="AssemblyBuilder" FullName="System.Web.Compilation.AssemblyBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b89a6b3beaa31058655b9710bf25aa493262051c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36604281" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia kontener dla kompilowania zestawu z jedną lub więcej ścieżek wirtualnych w ramach projektu programu ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wystąpienia <xref:System.Web.Compilation.AssemblyBuilder> klasy są używane z <xref:System.Web.Compilation.BuildProvider> metody, aby utworzyć jeden lub więcej plików w skompilowanym zestawie klasy.  
  
 <xref:System.Web.Compilation.BuildProvider> Klasa definiuje funkcję kompilacji dla poszczególnych plików i <xref:System.Web.Compilation.AssemblyBuilder> klasy łączy kodu źródłowego zamieszczone przez każdą <xref:System.Web.Compilation.BuildProvider> wystąpienia w jednym zestawie. Przekazuje środowisko kompilacji platformy ASP.NET <xref:System.Web.Compilation.AssemblyBuilder> do obiektu <xref:System.Web.Compilation.BuildProvider> metody podczas kompilowania zestawu z jednego lub więcej plików, dlatego każdy <xref:System.Web.Compilation.BuildProvider> wystąpienia może przyczynić się kodu źródłowego dla pliku jej do ogólnej zestawu.  
  
 Środowisko kompilacji platformy ASP.NET określa języka i kompilatora wymagane przez pliki w projekcie, na podstawie <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> właściwości. Pliki grup środowiska kompilacji na podstawie swoich ustawień kompilatora i tworzy zestaw z plików, które wymagają tego samego kompilatora.  
  
 <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> Właściwość wskazuje <xref:System.CodeDom.Compiler.CodeDomProvider> implementacji środowiska kompilacji platformy ASP.NET używa do kompilacji zestawu z kodu źródłowego zamieszczone przez każdą <xref:System.Web.Compilation.BuildProvider> implementacji.  
  
 A <xref:System.Web.Compilation.BuildProvider> obiektu wspiera kod źródłowy w postaci wykresu CodeDOM przy użyciu <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metody. A <xref:System.Web.Compilation.BuildProvider> obiektu wspiera przechowywane w pliku fizycznego przy użyciu kodu źródłowego <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metody.  
  
 Po każdym poleceniu <xref:System.Web.Compilation.BuildProvider> obiektu wspiera kodu źródłowego przy użyciu odpowiednich <xref:System.Web.Compilation.AssemblyBuilder> metod kompilacji platformy ASP.NET używa środowiska <xref:System.Web.Compilation.AssemblyBuilder> klasy do kompilowania kodu źródłowego zebranych w zestawie.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementacji dostawcy kompilacji proste, dziedziczenia z klasy abstrakcyjnej <xref:System.Web.Compilation.BuildProvider> klasy podstawowej. Dostawcy kompilacji overrides <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, i <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> elementów członkowskich klasy podstawowej.  
  
 W <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementacji metody, dostawcy kompilacji dodaje wygenerowany kod dla kompilacji zestawu za pomocą <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metody. Przykład nie zawiera implementacji `SampleClassGenerator` klasy. Aby uzyskać więcej informacji, zobacz <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
  </Docs>
  <Members>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyReference (a As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssemblyReference(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Assembly -&gt; unit" Usage="assemblyBuilder.AddAssemblyReference a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">Zestaw odwołuje się plik jednostkę lub źródło kompilacji kodu uwzględniony w kompilacji zestawu.</param>
        <summary>Dodaje zestaw, który odwołuje się do niego wygenerowany dla pliku kodu źródłowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.Compilation.BuildProvider> implementacja używa <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> metody podczas generowania kodu źródłowego, który odwołuje się do typów w zestawie wejściowego.  
  
 Inicjuje środowisko kompilacji platformy ASP.NET, domyślną kolekcję zestawów dostępnych dla odwołania za pośrednictwem dostawcy kompilacji w <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> właściwości. Jeśli dostawcy kompilacji generuje kod źródłowy, który odwołuje się do następującej liczby dodatkowych zestawów, dostawcy kompilacji dodaje dodatkowe zestawy za pomocą <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> metody. Środowisko budowania środowiska ASP.NET rozpoznaje kompilacji typów zewnętrznych podczas kompilowania zestawu przy użyciu przywoływanych zestawach dodane przez dostawców i domyślną kolekcję zestawów dostępnych dla odwołania.  
  
 Zazwyczaj <xref:System.Web.Compilation.BuildProvider> obiekt dodaje kod źródłowy <xref:System.Web.Compilation.AssemblyBuilder> obiektu w <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metody. Jeśli dostawcy kompilacji generuje kod źródłowy, który używa typu zewnętrznego dostawcy kompilacji dodaje zestaw typu przy użyciu <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> metody.  
  
 Użyj <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> metody w celu dodania przywoływanego zestawu wymagane w kodzie źródłowym generowane przez <xref:System.Web.Compilation.BuildProvider> wystąpienia dla określonego typu pliku. Użyj [zestawy elementu dla kompilacji (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) element konfiguracji do konfigurowania zestawu do odwołania na poszczególne typy plików w projekcie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.Web.Compilation.BuildProvider buildProvider, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCodeCompileUnit(System::Web::Compilation::BuildProvider ^ buildProvider, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="member this.AddCodeCompileUnit : System.Web.Compilation.BuildProvider * System.CodeDom.CodeCompileUnit -&gt; unit" Usage="assemblyBuilder.AddCodeCompileUnit (buildProvider, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Dostawcy kompilacji generowania <c>compileUnit</c>.</param>
        <param name="compileUnit">Jednostka kompilacji kodu do uwzględnienia w kompilacji zestawu.</param>
        <summary>Dodaje kod źródłowy dla zestawu w formie wykresu CodeDOM.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.Compilation.BuildProvider> implementacja wywołuje <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metody podczas generowania wykresu CodeDOM dla ścieżki wirtualnej. Dodaje się kod źródłowy <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> został uwzględniony w kompilacji zestawu.  
  
 Zazwyczaj kompilacji dostawcy <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metoda odczytuje implementacji <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> właściwości, analizuje zawartość, a następnie dodanie kodu źródłowego wygenerowane do określonego <xref:System.Web.Compilation.AssemblyBuilder> obiektu. Używa dostawcy kompilacji <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metody w celu dodania kod źródłowy w postaci wykresu CodeDOM do zestawu. Alternatywnie można użyć dostawcy kompilacji <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metody w celu dodania kodu źródłowego jako plik fizyczny do zestawu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kompilatora używany do tworzenia kodu źródłowego do zestawu.</summary>
        <value>Tylko do odczytu <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementacja używana do kompilowania kodu źródłowego przekazanych przez każdego dostawcy kompilacji w zestawie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> Właściwość wskazuje <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> implementacji środowiska kompilacji platformy ASP.NET używa do kompilacji zestawu z kodu źródłowego zamieszczone przez każdą <xref:System.Web.Compilation.BuildProvider> implementacji.  
  
 Środowisko kompilacji platformy ASP.NET określa języka i kompilatora wymagane przez pliki w projekcie, na podstawie <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> właściwości. Pliki grup środowiska kompilacji na podstawie swoich ustawień kompilatora i tworzy zestaw z plików, które wymagają tego samego kompilatora.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
        <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeFile">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextWriter CreateCodeFile(class System.Web.Compilation.BuildProvider buildProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextWriter ^ CreateCodeFile(System::Web::Compilation::BuildProvider ^ buildProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateCodeFile : System.Web.Compilation.BuildProvider -&gt; System.IO.TextWriter" Usage="assemblyBuilder.CreateCodeFile buildProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Generowanie pliku źródła kodu dostawcy kompilacji.</param>
        <summary>Umożliwia dostawcy kompilacji utworzyć pliku tymczasowego źródła i obejmują pliku źródłowego w kompilacji zestawu.</summary>
        <returns>Otwórz <see cref="T:System.IO.TextWriter" /> można zapisać pliku tymczasowego kodu źródłowego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.Compilation.BuildProvider> implementacja wywołuje <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metody podczas generowania pliku źródłowego dla ścieżki wirtualnej. Dodaje się kod źródłowy <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> został uwzględniony w kompilacji zestawu.  
  
 Zazwyczaj dostawcy kompilacji <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metoda odczytuje implementacji <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> właściwości, analizuje zawartość, a następnie dodanie kodu źródłowego wygenerowane do określonego <xref:System.Web.Compilation.AssemblyBuilder> obiektu. Używa dostawcy kompilacji <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metody w celu dodania kodu źródłowego jako plik fizyczny do zestawu. Alternatywnie można użyć dostawcy kompilacji <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metody w celu dodania kod źródłowy w postaci wykresu CodeDOM do zestawu.  
  
 Po wywołaniu <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>, dostawcy kompilacji zapisuje źródło zawartości pliku przy użyciu zwróconego <xref:System.IO.TextWriter> obiektu. Po zapisaniu pliku źródłowego <xref:System.Web.Compilation.BuildProvider> musi być używane przez obiekt <xref:System.IO.TextWriter.Close%2A> metody, aby zamknąć <xref:System.IO.TextWriter> obiektu i zwolnić zasobów systemowych skojarzone.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementacji dostawcy kompilacji proste, dziedziczenia z klasy abstrakcyjnej <xref:System.Web.Compilation.BuildProvider> klasy podstawowej. Dostawcy kompilacji overrides <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, i <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> elementów członkowskich klasy podstawowej.  
  
 W <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementacji metody, dostawcy kompilacji dodaje wygenerowany kod dla kompilacji zestawu za pomocą <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metody. Przykład nie zawiera implementacji `SampleClassGenerator` klasy. Aby uzyskać więcej informacji, zobacz <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmbeddedResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream CreateEmbeddedResource(class System.Web.Compilation.BuildProvider buildProvider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ CreateEmbeddedResource(System::Web::Compilation::BuildProvider ^ buildProvider, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateEmbeddedResource : System.Web.Compilation.BuildProvider * string -&gt; System.IO.Stream" Usage="assemblyBuilder.CreateEmbeddedResource (buildProvider, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Dostawca kompilacji generowania zasobu.</param>
        <param name="name">Nazwa pliku zasobu do utworzenia.</param>
        <summary>Umożliwia dostawcy kompilacji utworzyć plik zasobów do uwzględnienia w kompilacji zestawu.</summary>
        <returns>Otwórz <see cref="T:System.IO.Stream" /> można zapisać zasoby, które są zawarte w kompilacji zestawu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> metody <xref:System.Web.Compilation.BuildProvider> obiekt zapisuje zasobu zawartość pliku za pomocą zwróconego <xref:System.IO.Stream> obiektu. Na przykład dostawcy kompilacji może zapisać zasobów przy użyciu <xref:System.Resources.ResourceWriter> obiektu. Po zapisaniu pliku zasobu, należy użyć dostawcy kompilacji <xref:System.IO.Stream.Close%2A> metody, aby zamknąć <xref:System.IO.Stream> obiektu i zwolnić zasobów systemowych skojarzone.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> nie jest prawidłową nazwą pliku.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeFactory">
      <MemberSignature Language="C#" Value="public void GenerateTypeFactory (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateTypeFactory(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateTypeFactory (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateTypeFactory(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypeFactory : string -&gt; unit" Usage="assemblyBuilder.GenerateTypeFactory typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nazwa typu do wygenerowania.</param>
        <summary>Wstawia szablon szybkiego obiekt fabryki dla typu w skompilowanym zestawie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.Compilation.BuildProvider> implementacja wywołuje <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> metody w celu zoptymalizowania wydajności dla częste podczas tworzenia wystąpienia typu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetTempFilePhysicalPath">
      <MemberSignature Language="C#" Value="public string GetTempFilePhysicalPath (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTempFilePhysicalPath(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTempFilePhysicalPath (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTempFilePhysicalPath(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.GetTempFilePhysicalPath : string -&gt; string" Usage="assemblyBuilder.GetTempFilePhysicalPath extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">Rozszerzenie pliku dla pliku tymczasowego.</param>
        <summary>Generuje ścieżkę pliku tymczasowego.</summary>
        <returns>Ścieżka do pliku tymczasowego, z określonym rozszerzeniem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.Compilation.BuildProvider> implementacja wywołuje <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> metodę, aby pobrać ścieżki pliku tymczasowego, który jest automatycznie usuwany jest skompilowany zestaw.  
  
 <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> Metoda generuje ścieżkę unikatowego tymczasowego pliku, ale nie tworzy pliku.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
      </Docs>
    </Member>
  </Members>
</Type>