<Type Name="AssemblyBuilder" FullName="System.Web.Compilation.AssemblyBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e5df6f757a1107d98334dbb0bc65addce01baf6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69097259" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia kontener do kompilowania zestawu z co najmniej jednej ścieżki wirtualnej w projekcie ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wystąpienia klasy są używane z <xref:System.Web.Compilation.BuildProvider> metodami klasy do kompilowania co najmniej jednego pliku do skompilowanego zestawu. <xref:System.Web.Compilation.AssemblyBuilder>  
  
 Klasa definiuje funkcje kompilacji dla poszczególnych plików, <xref:System.Web.Compilation.AssemblyBuilder> a Klasa łączy kod źródłowy, który został wniesiony przez każde <xref:System.Web.Compilation.BuildProvider> wystąpienie do jednego zestawu. <xref:System.Web.Compilation.BuildProvider> Środowisko kompilacji ASP.NET przekazuje <xref:System.Web.Compilation.AssemblyBuilder> obiekt <xref:System.Web.Compilation.BuildProvider> do metod podczas kompilowania zestawu z jednego lub większej liczby plików, dzięki czemu każde <xref:System.Web.Compilation.BuildProvider> wystąpienie może współtworzyć kod źródłowy dla jego pliku do ogólnego zestawu.  
  
 Środowisko kompilacji ASP.NET określa język i kompilator wymagane przez pliki w ramach projektu, na podstawie <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> właściwości. Środowisko kompilacji grupuje pliki na podstawie ich ustawień kompilatora i kompiluje zestaw z plików, które wymagają tego samego kompilatora.  
  
 Właściwość wskazuje implementację, która jest wykorzystywana przez środowisko kompilacji ASP.NET do kompilowania zestawu z kodu źródłowego utworzonego przez każdą <xref:System.Web.Compilation.BuildProvider> implementację. <xref:System.CodeDom.Compiler.CodeDomProvider> <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>  
  
 Obiekt tworzy kod źródłowy w postaci wykresu CodeDOM <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> przy użyciu metody. <xref:System.Web.Compilation.BuildProvider> Obiekt przyczynia się do kodu źródłowego przechowywanego w pliku fizycznym <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> przy użyciu metody. <xref:System.Web.Compilation.BuildProvider>  
  
 Gdy każdy <xref:System.Web.Compilation.BuildProvider> obiekt wniesie kod źródłowy przy użyciu odpowiednich <xref:System.Web.Compilation.AssemblyBuilder> metod, środowisko kompilacji <xref:System.Web.Compilation.AssemblyBuilder> ASP.NET używa klasy do kompilowania zebranego kodu źródłowego do zestawu.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje prostą implementację dostawcy kompilacji, która dziedziczy z abstrakcyjnej <xref:System.Web.Compilation.BuildProvider> klasy bazowej. Dostawca kompilacji zastępuje <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>elementy członkowskie klasy <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>podstawowej, <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> , i.  
  
 W implementacji <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metody dostawca kompilacji dodaje wygenerowany kod dla kompilacji zestawu przy użyciu metody. <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Przykład nie obejmuje implementacji `SampleClassGenerator` klasy. Aby uzyskać więcej informacji, zobacz <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
  </Docs>
  <Members>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyReference (a As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssemblyReference(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Assembly -&gt; unit" Usage="assemblyBuilder.AddAssemblyReference a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">Zestaw, do którego odwołuje się jednostka kompilacji kodu lub plik źródłowy uwzględniony w kompilacji zestawu.</param>
        <summary>Dodaje zestaw, do którego odwołuje się kod źródłowy wygenerowany dla pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider> Implementacja<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> używa metody podczas generowania kodu źródłowego, który odwołuje się do typów w zestawie wejściowym.  
  
 Środowisko kompilacji ASP.NET inicjuje domyślną kolekcję zestawów dostępnych dla odwołania przez dostawcę kompilacji we <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> właściwości. Jeśli dostawca kompilacji generuje kod źródłowy, który odwołuje się do dodatkowych zestawów, dostawca kompilacji dodaje dodatkowe zestawy przy <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> użyciu metody. Środowisko kompilacji ASP.NET rozpoznaje typy zewnętrzne podczas kompilacji zestawu przy użyciu zestawów, do których istnieją odwołania dodane przez dostawców kompilacji i domyślną kolekcję zestawów dostępnych do odwołania.  
  
 Zazwyczaj obiekt dodaje kod źródłowy <xref:System.Web.Compilation.AssemblyBuilder> do obiektu w <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metodzie. <xref:System.Web.Compilation.BuildProvider> Jeśli dostawca kompilacji generuje kod źródłowy, który używa typu zewnętrznego, dostawca kompilacji dodaje zestaw typu za pomocą <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> metody.  
  
 Użyj metody <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> , aby dodać przywoływany zestaw wymagany w kodzie źródłowym wygenerowanym <xref:System.Web.Compilation.BuildProvider> przez wystąpienie dla określonego typu pliku. Użyj elementu assemblys dla elementu konfiguracji [kompilacja (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) , aby skonfigurować zestaw do odwoływania się do wielu typów plików w projekcie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.Web.Compilation.BuildProvider buildProvider, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCodeCompileUnit(System::Web::Compilation::BuildProvider ^ buildProvider, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="member this.AddCodeCompileUnit : System.Web.Compilation.BuildProvider * System.CodeDom.CodeCompileUnit -&gt; unit" Usage="assemblyBuilder.AddCodeCompileUnit (buildProvider, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Trwa generowanie <paramref name="compileUnit" />dostawcy kompilacji.</param>
        <param name="compileUnit">Jednostka kompilacji kodu do uwzględnienia w kompilacji zestawu.</param>
        <summary>Dodaje kod źródłowy zestawu w postaci wykresu CodeDOM.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider> Implementacja<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> wywołuje metodę podczas generowania wykresu CodeDOM dla ścieżki wirtualnej. Dodany kod źródłowy <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> jest zawarty w kompilacji zestawu.  
  
 Zazwyczaj implementacja <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> metody dostawcy kompilacji <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> odczytuje właściwość, analizuje zawartość, a następnie dodaje wygenerowany kod źródłowy do określonego <xref:System.Web.Compilation.AssemblyBuilder> obiektu. Dostawca kompilacji używa <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metody, aby dodać kod źródłowy jako wykres CodeDOM do zestawu. Alternatywnie dostawca kompilacji może użyć <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metody, aby dodać kod źródłowy jako plik fizyczny do zestawu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kompilator używany do kompilowania kodu źródłowego do zestawu.</summary>
        <value>Implementacja tylko <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> do odczytu użyta do kompilowania kodu źródłowego, który został wniesiony przez każdego dostawcę kompilacji do zestawu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość wskazuje implementację, która jest wykorzystywana przez środowisko kompilacji ASP.NET do kompilowania zestawu z kodu źródłowego utworzonego przez każdą <xref:System.Web.Compilation.BuildProvider> implementację. <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>  
  
 Środowisko kompilacji ASP.NET określa język i kompilator wymagane przez pliki w ramach projektu, na podstawie <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> właściwości. Środowisko kompilacji grupuje pliki na podstawie ich ustawień kompilatora i kompiluje zestaw z plików, które wymagają tego samego kompilatora.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
        <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeFile">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextWriter CreateCodeFile(class System.Web.Compilation.BuildProvider buildProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextWriter ^ CreateCodeFile(System::Web::Compilation::BuildProvider ^ buildProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateCodeFile : System.Web.Compilation.BuildProvider -&gt; System.IO.TextWriter" Usage="assemblyBuilder.CreateCodeFile buildProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Dostawca kompilacji generujący plik źródłowy kodu.</param>
        <summary>Umożliwia dostawcy kompilacji utworzenie tymczasowego pliku źródłowego i dołączenie pliku źródłowego do kompilacji zestawu.</summary>
        <returns>Otwarty <see cref="T:System.IO.TextWriter" /> , który może służyć do pisania kodu źródłowego w pliku tymczasowym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider> Implementacja<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> wywołuje metodę podczas generowania pliku źródłowego dla ścieżki wirtualnej. Dodany kod źródłowy <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> jest zawarty w kompilacji zestawu.  
  
 Zazwyczaj implementacja metody dostawcy <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> kompilacji <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> odczytuje właściwość, analizuje zawartość, a następnie dodaje wygenerowany kod źródłowy do określonego <xref:System.Web.Compilation.AssemblyBuilder> obiektu. Dostawca kompilacji używa <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metody, aby dodać kod źródłowy jako plik fizyczny do zestawu. Alternatywnie dostawca kompilacji może użyć <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> metody do dodania kodu źródłowego jako wykresu CodeDOM do zestawu.  
  
 Po wywołaniu <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>dostawca kompilacji zapisuje zawartość pliku źródłowego przy użyciu zwróconego <xref:System.IO.TextWriter> obiektu. Po zapisaniu pliku <xref:System.Web.Compilation.BuildProvider> źródłowego obiekt musi <xref:System.IO.TextWriter.Close%2A> użyć metody, aby zamknąć <xref:System.IO.TextWriter> obiekt i zwolnić skojarzone zasoby systemowe.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje prostą implementację dostawcy kompilacji, która dziedziczy z abstrakcyjnej <xref:System.Web.Compilation.BuildProvider> klasy bazowej. Dostawca kompilacji zastępuje <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>elementy członkowskie klasy <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>podstawowej, <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> , i.  
  
 W implementacji <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> metody dostawca kompilacji dodaje wygenerowany kod dla kompilacji zestawu przy użyciu metody. <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> Przykład nie obejmuje implementacji `SampleClassGenerator` klasy. Aby uzyskać więcej informacji, zobacz <xref:System.CodeDom.CodeCompileUnit>.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmbeddedResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream CreateEmbeddedResource(class System.Web.Compilation.BuildProvider buildProvider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ CreateEmbeddedResource(System::Web::Compilation::BuildProvider ^ buildProvider, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateEmbeddedResource : System.Web.Compilation.BuildProvider * string -&gt; System.IO.Stream" Usage="assemblyBuilder.CreateEmbeddedResource (buildProvider, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildProvider">Dostawca kompilacji generujący zasób.</param>
        <param name="name">Nazwa pliku zasobów, który ma zostać utworzony.</param>
        <summary>Umożliwia dostawcy kompilacji utworzenie pliku zasobów do uwzględnienia w kompilacji zestawu.</summary>
        <returns>Otwarty <see cref="T:System.IO.Stream" /> , który może służyć do zapisu zasobów, które są uwzględnione w kompilacji zestawu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> metody <xref:System.Web.Compilation.BuildProvider> obiekt zapisuje zawartość pliku zasobów przy użyciu zwróconego <xref:System.IO.Stream> obiektu. Na przykład dostawca kompilacji może zapisać zasoby przy użyciu <xref:System.Resources.ResourceWriter> obiektu. Po zapisaniu pliku zasobów dostawca kompilacji musi użyć <xref:System.IO.Stream.Close%2A> metody, aby <xref:System.IO.Stream> zamknąć obiekt i zwolnić skojarzone zasoby systemowe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> nie jest prawidłową nazwą pliku.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeFactory">
      <MemberSignature Language="C#" Value="public void GenerateTypeFactory (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateTypeFactory(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateTypeFactory (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateTypeFactory(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypeFactory : string -&gt; unit" Usage="assemblyBuilder.GenerateTypeFactory typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nazwa typu do wygenerowania.</param>
        <summary>Wstawia szybki szablon fabryki obiektów dla typu do skompilowanego zestawu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider> Implementacja<xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> wywołuje metodę w celu optymalizacji wydajności dla częstego tworzenia wystąpień typu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetTempFilePhysicalPath">
      <MemberSignature Language="C#" Value="public string GetTempFilePhysicalPath (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTempFilePhysicalPath(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTempFilePhysicalPath (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTempFilePhysicalPath(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.GetTempFilePhysicalPath : string -&gt; string" Usage="assemblyBuilder.GetTempFilePhysicalPath extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">Rozszerzenie pliku, które ma być używane dla pliku tymczasowego.</param>
        <summary>Generuje ścieżkę pliku tymczasowego.</summary>
        <returns>Ścieżka do pliku tymczasowego z określonym rozszerzeniem pliku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider> Implementacja<xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> wywołuje metodę w celu pobrania tymczasowej ścieżki pliku, która jest usuwana automatycznie po skompilowaniu zestawu.  
  
 <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> Metoda generuje unikatową ścieżkę pliku tymczasowego, ale nie tworzy pliku.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
      </Docs>
    </Member>
  </Members>
</Type>
