<Type Name="IWcfReferenceReceiveContextInformation" FullName="System.Web.Compilation.IWcfReferenceReceiveContextInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71bb12d5ce0b448cf5c953abf671ad0fa3a13bcc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30578554" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWcfReferenceReceiveContextInformation" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje interfejs do implementacji, aby uzyskać informacje o kontekście dodatkowe.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs umożliwia WSDL mechanismto importera otrzymywanie informacji dodatkowy kontekst dla lepsze Generowanie serwera proxy i deweloperów lepsze środowisko w programie Visual Studio. Jeśli implementuje importerów WSDL <xref:System.Web.Compilation.IWcfReferenceReceiveContextInformation> interfejsu `ReceiveImportContextInformation` metoda zostanie wywołana przez generator proxy WCF przed żadnych metod <xref:System.ServiceModel.Description.IWsdlImportExtension> i <xref:System.ServiceModel.Description.IPolicyImportExtension> są nazywane.  
  
 Informacje o kontekście dodatkowe odwołuje się do parametrów przekazanych do `ReceiveImportContextInformation` metody. Parametry zawierają zawartość wszystkie pliki rozszerzenia i odwołanie do obiektu, który implementuje <xref:System.IServiceProvider> interfejsu. Wszystkie pliki rozszerzenia przekazywany do metody są specyficzne dla importera i służą do przechowywania dodatkowych informacji, które są im potrzebne. To, że program Visual Studio nie kontroluje zawartości plików i nie używa ich bezpośrednio.  
  
> [!NOTE]
>  Importerów dotyczą mechanizm rozszerzalności WCF. Mechanizm ten umożliwia dostosowanie sposobu generowania kodu serwera proxy z dokumentów metadanych (WSDL/XSD), które opisują usługi. Aby uzyskać więcej informacji, zobacz [importowanie niestandardowych metadanych dla rozszerzenia WCF](http://go.microsoft.com/fwlink/?LinkId=92310) w witrynie MSDN.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveImportContextInformation">
      <MemberSignature Language="C#" Value="public void ReceiveImportContextInformation (System.Collections.Generic.IDictionary&lt;string,byte[]&gt; serviceReferenceExtensionFileContents, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveImportContextInformation(class System.Collections.Generic.IDictionary`2&lt;string, unsigned int8[]&gt; serviceReferenceExtensionFileContents, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReceiveImportContextInformation (serviceReferenceExtensionFileContents As IDictionary(Of String, Byte()), serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveImportContextInformation(System::Collections::Generic::IDictionary&lt;System::String ^, cli::array &lt;System::Byte&gt; ^&gt; ^ serviceReferenceExtensionFileContents, IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceReferenceExtensionFileContents" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Byte[]&gt;" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceReferenceExtensionFileContents">Udostępnia zawartość wszystkie pliki rozszerzenia, które są skojarzone z pliku .svcmap odwołania do usługi WCF.</param>
        <param name="serviceProvider">Odwołanie do dostawcy usług programu Visual Studio można wykonać zapytania, aby uzyskać dodatkowe informacje.</param>
        <summary>Pobiera informacje kontekstu dodatkowe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `serviceReferenceExtensionFileContents` Parametru zapewnia zawartość wszystkie pliki rozszerzenia skojarzone z pliku .svcmap odwołanie do usługi WCF, takie jak Reference.config lub niestandardowego rozszerzenia plików, które zostały dodane do rozszerzalności.  
  
> [!NOTE]
>  Każdy interfejs otrzymanych od dostawcy usług, które są specyficzne dla programu Visual Studio nie będzie dostępne dla rozszerzenia importu podczas uruchamiania w kontekście dostawcy kompilacji programu ASP.NET. Jest to sytuacji, gdy odwołania do usługi WCF jest skompilowana w projekcie programu ASP.NET.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>