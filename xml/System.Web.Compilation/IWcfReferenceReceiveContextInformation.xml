<Type Name="IWcfReferenceReceiveContextInformation" FullName="System.Web.Compilation.IWcfReferenceReceiveContextInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30ee7c797b89007a29824a441a9d6164b90789f0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69142105" /></Metadata><TypeSignature Language="C#" Value="public interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="F#" Value="type IWcfReferenceReceiveContextInformation = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje interfejs do wdrożenia w celu uzyskania dodatkowych informacji kontekstowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs umożliwia mechanizmowi importera WSDL otrzymywanie dodatkowych informacji kontekstowych dotyczących lepszej generacji serwerów proxy i lepszego środowiska programistycznego w programie Visual Studio. Jeśli importer WSDL <xref:System.Web.Compilation.IWcfReferenceReceiveContextInformation> implementuje interfejs `ReceiveImportContextInformation` , Metoda zostanie wywołana przez <xref:System.ServiceModel.Description.IWsdlImportExtension> Generator proxy WCF przed wywołaniem metod i <xref:System.ServiceModel.Description.IPolicyImportExtension> .  
  
 Dodatkowe informacje kontekstu odnoszą się do parametrów przesłanych do `ReceiveImportContextInformation` metody. Parametry obejmują zawartość wszystkich plików rozszerzeń i odwołanie do obiektu, który implementuje <xref:System.IServiceProvider> interfejs. Wszystkie pliki rozszerzeń przesłane do metody są specyficzne dla importera i są używane do przechowywania wszelkich dodatkowych informacji, których potrzebują. Oznacza to, że program Visual Studio nie kontroluje zawartości tych plików i nie korzysta bezpośrednio z nich.  
  
> [!NOTE]
>  Importerzy zapoznają się z mechanizmem rozszerzalności programu WCF. Ten mechanizm umożliwia dostosowanie sposobu generowania kodu serwera proxy z dokumentów metadanych (WSDL/XSD), które opisują usługę. Aby uzyskać więcej informacji, zobacz [Importowanie niestandardowych metadanych dla rozszerzenia WCF](https://go.microsoft.com/fwlink/?LinkId=92310) w witrynie MSDN.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveImportContextInformation">
      <MemberSignature Language="C#" Value="public void ReceiveImportContextInformation (System.Collections.Generic.IDictionary&lt;string,byte[]&gt; serviceReferenceExtensionFileContents, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveImportContextInformation(class System.Collections.Generic.IDictionary`2&lt;string, unsigned int8[]&gt; serviceReferenceExtensionFileContents, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReceiveImportContextInformation (serviceReferenceExtensionFileContents As IDictionary(Of String, Byte()), serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveImportContextInformation(System::Collections::Generic::IDictionary&lt;System::String ^, cli::array &lt;System::Byte&gt; ^&gt; ^ serviceReferenceExtensionFileContents, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveImportContextInformation : System.Collections.Generic.IDictionary&lt;string, byte[]&gt; * IServiceProvider -&gt; unit" Usage="iWcfReferenceReceiveContextInformation.ReceiveImportContextInformation (serviceReferenceExtensionFileContents, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceReferenceExtensionFileContents" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Byte[]&gt;" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceReferenceExtensionFileContents">Udostępnia zawartość wszystkich plików rozszerzeń, które są skojarzone z plikiem. svcmap odwołania usługi WCF.</param>
        <param name="serviceProvider">Odwołanie do dostawcy usługi programu Visual Studio, aby uzyskać dodatkowe informacje.</param>
        <summary>Pobiera dodatkowe informacje kontekstowe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `serviceReferenceExtensionFileContents` Parametr zawiera zawartość wszystkich plików rozszerzeń skojarzonych z plikiem. svcmap odwołania usługi WCF, takich jak Reference. config lub niestandardowych plików rozszerzeń, które zostały dodane za pomocą rozszerzalności.  
  
> [!NOTE]
>  Każdy interfejs otrzymany od dostawcy usług, który jest specyficzny dla programu Visual Studio, nie będzie dostępny dla rozszerzenia importu, gdy działa w kontekście dostawcy kompilacji ASP.NET. Jest to przypadek, gdy odwołanie do usługi WCF jest kompilowane w projekcie ASP.NET.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
