<Type Name="ResourceExpressionBuilder" FullName="System.Web.Compilation.ResourceExpressionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc75438d96e02fc763100d3e892d1a49653e6346" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579193" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResourceExpressionBuilder : System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionBuilder extends System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ResourceExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceExpressionBuilder&#xA;Inherits ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionBuilder : System::Web::Compilation::ExpressionBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Compilation.ExpressionBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.ResourceExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionPrefix("Resources")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia kod do analizatora strony do przypisywania wartości właściwości w formancie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ResourceExpressionBuilder> Klasy tworzy kod, aby pobrać wartości zasobów podczas wykonywania strony. Plik zasobów zwykle zawiera informacje zlokalizowane dla konkretnego języka i kultury.  
  
 Wyrażenie zasobu ma postać `<%$ Resources: ClassKey, ResourceKey %>` wewnątrz strony. Część wyrażenia przed dwukropkiem (:) określa typ wyrażenia konstruktora do użycia, a część po dwukropku oznacza, że klucz klasy nazwy i zasobów. Poprzedniego wyrażenia może pobrać następującej wartości z pliku o nazwie `ClassKey.resx`:  
  
```  
<data name="ResourceKey"><value xml:space="preserve">Hello!</value></data>  
```  
  
 Jeśli parser strony napotka wyrażenia z `Resources` prefiksu, tworzy wystąpienie <xref:System.Web.Compilation.ResourceExpressionBuilder> klasy. <xref:System.Web.Compilation.ResourceExpressionBuilder> Klasy oblicza wyrażenie lub generuje kod w celu zwrócenia wartości dla wyrażenia podczas wykonywania strony.  
  
 Jeśli na stronie, który zostanie skompilowany, napotkano wyrażenie <xref:System.Web.Compilation.ResourceExpressionBuilder> obiektu generuje kod, który pobiera określoną wartość z pliku zasobów. Jeśli wyrażenie na stronie, który nie zostanie skompilowany, <xref:System.Web.Compilation.ResourceExpressionBuilder> obiektu zwraca wartość z pliku zasobów, gdy strona zostanie przeanalizowany.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera waluty z pliku zasobu.  
  
 [!code-aspx-csharp[System.Web.Compilation.ResourceExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ResourceExpressionBuilder/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.Compilation.ResourceExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ResourceExpressionBuilder/VB/Default.aspx#1)]
  
 Ten kod odczytuje następującej wartości z pliku zasobu o nazwie `Financial.resx` w katalogu App_GlobalResources.  
  
```  
<data name="Currency"><value xml:space="preserve">US dollars</value></data>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditor" />
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ResourceExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Compilation.ResourceExpressionBuilder" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target">Obiekt zawierający wyrażenie.</param>
        <param name="entry">Obiekt, który reprezentuje informacje dotyczące właściwości powiązany z wyrażeniem.</param>
        <param name="parsedData">Obiekt zawierający przeanalizowany danych zwrócony przez <see cref="Overload:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression" /> metody.</param>
        <param name="context">Informacje kontekstowe oceny wyrażenia.</param>
        <summary>Zwraca wartość z pliku zasobów.</summary>
        <returns>
          <see cref="T:System.Object" /> Skojarzone z wyrażeniem przeanalizowany. Przeanalizowana wyrażenie zawiera klucz klasy nazwy i zasobów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana, gdy wyrażenie w postaci `<%$ Resources: someResourceKey %>` napotkano na stronie, która korzysta z funkcji nie kompilacji. Go pobiera odpowiednią wartość z parę klucz/wartość w pliku zasobów.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry">Nazwa właściwości obiektu.</param>
        <param name="parsedData">Przeanalizowana wartość wyrażenia.</param>
        <param name="context">Właściwości formantu lub strony.</param>
        <summary>Zwraca wyrażenie kod, aby ocenić podczas wykonywania strony.</summary>
        <returns>A <see cref="T:System.CodeDom.CodeExpression" /> która wywołuje metodę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana podczas tworzenia CodeDOM strony lub kontrolki. <xref:System.CodeDom.CodeExpression> Zwrócił obiekt jest typu <xref:System.CodeDom.CodeMethodInvokeExpression> i reprezentuje metodę do wywołania po odczytywania wartości zasobów podczas wykonywania strony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExpression">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca obiekt, który reprezentuje wyrażenie przeanalizowany.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExpression">
      <MemberSignature Language="C#" Value="public static System.Web.Compilation.ResourceExpressionFields ParseExpression (string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Compilation.ResourceExpressionFields ParseExpression(string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExpression (expression As String) As ResourceExpressionFields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Compilation::ResourceExpressionFields ^ ParseExpression(System::String ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.ResourceExpressionFields</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">Wartość wyrażenia do przeanalizowania.</param>
        <summary>Zwraca obiekt, który reprezentuje wyrażenie przeanalizowany.</summary>
        <returns>
          <see cref="T:System.Web.Compilation.ResourceExpressionFields" /> Dla wyrażenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda analizuje wyrażenia i zwraca <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> i <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> wartości właściwości w zwróconym <xref:System.Web.Compilation.ResourceExpressionFields> obiektu, jeśli te właściwości są udostępniane w wyrażeniu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExpression">
      <MemberSignature Language="C#" Value="public override object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ParseExpression(string expression, class System.Type propertyType, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ParseExpression (expression As String, propertyType As Type, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ParseExpression(System::String ^ expression, Type ^ propertyType, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="expression">Wartość deklaratywne wyrażenia.</param>
        <param name="propertyType">Typ właściwości jest powiązana z wyrażeniem.</param>
        <param name="context">Informacje kontekstowe oceny wyrażenia.</param>
        <summary>Zwraca obiekt, który reprezentuje wyrażenie przeanalizowany.</summary>
        <returns>
          <see cref="T:System.Object" /> Reprezentujący przeanalizowany wyrażenia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwrócona <xref:System.Object> jest typu <xref:System.Web.Compilation.ResourceExpressionFields>. Ta metoda analizuje wyrażenia i zwraca <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> i <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> wartości właściwości w zwróconym <xref:System.Web.Compilation.ResourceExpressionFields> obiektu, jeśli te właściwości są udostępniane w wyrażeniu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Wyrażenie zasobu nie można odnaleźć lub jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public override bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca wartość wskazującą, czy na stronie, która korzysta z funkcji kompilacji nie można oszacować wyrażenia.</summary>
        <value>
          <see langword="true" /> we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate%2A> Właściwość wskazuje, czy <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> metoda została zaimplementowana w klasie. <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> musi być implementowana w Konstruktor wyrażeń wyrażenie ma zostać obliczone na stronie, która korzysta z funkcji nie kompilacji. <xref:System.Web.Compilation.ResourceExpressionBuilder> obsługiwana obliczania wartości zasobów na nieskompilowanej stron, dzięki czemu ta właściwość zawsze zwraca `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
  </Members>
</Type>