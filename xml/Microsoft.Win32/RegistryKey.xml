<Type Name="RegistryKey" FullName="Microsoft.Win32.RegistryKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd1c542732c55e805b838b930fc5df9a58097d3b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36657899" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistryKey : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RegistryKey extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.RegistryKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryKey&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryKey sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type RegistryKey = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje węzeł poziom klucza w rejestrze systemu Windows. Ta klasa jest hermetyzacji rejestru.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać wystąpienia <xref:Microsoft.Win32.RegistryKey>, użyj jednej z statyczne elementy członkowskie <xref:Microsoft.Win32.Registry> klasy.  
  
 Rejestr działa jako centralne repozytorium informacji dla systemu operacyjnego i aplikacji na komputerze. Rejestr jest zorganizowana w formacie hierarchicznym zgodne z logiczną kolejnością przechowywaną w niej elementów (zobacz <xref:Microsoft.Win32.Registry> podstawowym poziomie elementów w tej hierarchii). Gdy informacje są przechowywane w rejestrze, wybierz odpowiednią lokalizację, w zależności od typu informacje są przechowywane. Pamiętaj uniknąć niszczenia informacji utworzone przez inne aplikacje, ponieważ może spowodować, że te aplikacje działać w nieoczekiwany sposób, mogą także mieć niekorzystny wpływ na jego własnej aplikacji.  
  
> [!IMPORTANT]
>  Ten typ implementuje <xref:System.IDisposable> interfejsu. Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego. Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> metody w `try` / `catch` bloku. Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak `using` (w języku C#) lub `Using` (w języku Visual Basic). Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu tematu.  
  
 Klucze rejestru są podstawowa jednostka organizacji w rejestrze i można porównać do folderów w Eksploratorze plików. Dany klucz mogą mieć podklucze, tak samo, jak folder może mieć podfoldery. Każdy klucz mogą zostać usunięte, tak długo, jak długo użytkownik ma odpowiednie uprawnienia, aby to zrobić, a klucz nie jest częścią klucza podstawowego lub na poziomie bezpośrednio pod klucze podstawowe. Każdy klucz może istnieć wiele wartości skojarzone z nim (wartość można porównać pliku), które są używane do przechowywania informacji — na przykład informacje dotyczące aplikacji zainstalowanych na komputerze. Każda wartość zawiera jedną określonych informacji, które można pobrać lub zaktualizować na żądanie. Na przykład można utworzyć <xref:Microsoft.Win32.RegistryKey> dla Twojej firmy w kluczu klucza HKEY_LOCAL_MACHINE\Software, a następnie podklucz dla każdej aplikacji, która tworzy firmy. Każdy zawiera informacje specyficzne dla tej aplikacji, takich jak ustawienia koloru, położenie i rozmiar, ekranu lub rozpoznane rozszerzeń plików.  
  
 Zauważ, że informacje przechowywane w rejestrze jest dostępna dla innych aplikacji i użytkowników i w związku z tym nie należy używać do przechowywania danych zabezpieczeń lub informacje o aplikacji krytyczne.  
  
> [!CAUTION]
>  Nie ujawniaj <xref:Microsoft.Win32.RegistryKey> obiektów w taki sposób, że złośliwy program można utworzyć tysiące znaczenia podkluczy lub par klucz/wartość. Na przykład nie wolno pozwalać obiektom wywołującym na wprowadzanie umownych kluczy ani wartości.  
  
 Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], długość klucza rejestru nie jest już ograniczona do 255 znaków.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć podklucz w gałęzi HKEY_CURRENT_USER, manipulować zawartością, a następnie usunąć podklucza.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
    <altmember cref="T:Microsoft.Win32.RegistryHive" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="registryKey.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka klucz i opróżnia go na dysku, jeśli jego zawartość zostały zmodyfikowane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody na kluczy systemowych nie wpłyną, ponieważ klucze systemu nigdy nie są zamknięte.  
  
 Tej metody nie można wywołać w wystąpieniu `RegistryKey` który jest już zamknięty.  
  
   
  
## Examples  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:Microsoft.Win32.RegistryKey> klasy.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.Win32.RegistryKey.Flush" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowy podklucz lub otwiera istniejący podklucz.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey subkey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey">Nazwa lub ścieżka podklucza, który ma zostać utworzony lub otwarty. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <summary>Tworzy nowy podklucz lub otwiera istniejący podklucz do zapisu.</summary>
        <returns>Nowo utworzony podklucz lub <see langword="null" /> Jeśli działanie nie powiodło się. Jeśli określono ciąg o zerowej długości <paramref name="subkey" />, bieżący <see cref="T:Microsoft.Win32.RegistryKey" /> obiekt jest zwracany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby można było wykonać tę akcję, użytkownik musi mieć uprawnienia na tym poziomie i poniżej w hierarchii rejestru.  
  
> [!CAUTION]
>  Nie ujawniaj <xref:Microsoft.Win32.RegistryKey> obiektów w taki sposób, że złośliwy program można utworzyć tysiące znaczenia podkluczy lub par klucz/wartość. Na przykład nie wolno pozwalać obiektom wywołującym na wprowadzanie umownych kluczy ani wartości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć podklucz w gałęzi HKEY_CURRENT_USER, manipulować zawartością, a następnie usunąć podklucza.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do utworzenia lub otwarcia klucza rejestru.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest zamknięty, na którym ta metoda jest wywoływana (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Nie można zapisać do, na przykład nie został otwarty jako zapisywalnego klucza, lub użytkownik nie ma niezbędne uprawnienia.</exception>
        <exception cref="T:System.IO.IOException">Poziomów zagnieżdżenia przekracza 510.  - lub - wystąpił błąd systemowy, taki jak usunięcie klucza, próba utworzenia klucza w <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> głównego.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">uprawnienia do modyfikowania określony klucz rejestru, jeśli istnieje lub możliwość tworzenia obszar klucza rejestru, jeśli go jeszcze nie istnieje. Skojarzone wyliczenia: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, permissionCheck As RegistryKeyPermissionCheck) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
      </Parameters>
      <Docs>
        <param name="subkey">Nazwa lub ścieżka podklucza, który ma zostać utworzony lub otwarty. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <param name="permissionCheck">Jedna z wartości wyliczenia, która określa, czy klucz jest otwarty w celu odczytu lub odczytu i zapisu.</param>
        <summary>Tworzy nowy podklucz lub otwiera istniejący podklucz do zapisu przy użyciu opcji wyboru określonego uprawnienia.</summary>
        <returns>Nowo utworzony podklucz lub <see langword="null" /> Jeśli działanie nie powiodło się. Jeśli określono ciąg o zerowej długości <paramref name="subkey" />, bieżący <see cref="T:Microsoft.Win32.RegistryKey" /> obiekt jest zwracany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby można było wykonać tę akcję, użytkownik musi mieć uprawnienia na tym poziomie i poniżej w hierarchii rejestru.  
  
> [!CAUTION]
>  Nie ujawniaj <xref:Microsoft.Win32.RegistryKey> obiektów w taki sposób, że złośliwy program można utworzyć tysiące znaczenia podkluczy lub par klucz/wartość. Na przykład nie wolno pozwalać obiektom wywołującym na wprowadzanie umownych kluczy ani wartości.  
  
 Aby można było używać <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metody, musi mieć wystąpienia <xref:Microsoft.Win32.RegistryKey> klasy. Aby uzyskać wystąpienia <xref:Microsoft.Win32.RegistryKey>, użyj jednej z statyczne elementy członkowskie <xref:Microsoft.Win32.Registry> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do utworzenia lub otwarcia klucza rejestru.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="permissionCheck" /> zawiera nieprawidłową wartość.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest zamknięty, na którym ta metoda jest wywoływana (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Nie można zapisać do, na przykład nie został otwarty jako zapisywalnego klucza, lub użytkownik nie ma niezbędne uprawnienia.</exception>
        <exception cref="T:System.IO.IOException">Poziomów zagnieżdżenia przekracza 510.  - lub - wystąpił błąd systemowy, taki jak usunięcie klucza, próba utworzenia klucza w <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> głównego.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">uprawnienia do modyfikowania określony klucz rejestru, jeśli istnieje lub możliwość tworzenia obszar klucza rejestru, jeśli go jeszcze nie istnieje. Skojarzone wyliczenia: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, bool writable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, writable As Boolean) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, bool writable);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * bool -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, writable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="writable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="subkey">Nazwa lub ścieżka podklucza, który ma zostać utworzony lub otwarty. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <param name="writable">
          <see langword="true" /> Aby wskazać nowego podklucza jest zapisywalny; w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy nowy podklucz lub otwiera istniejący podklucz z określonego dostępu.  Dostępne od wersji [! INCLUDE[net_v46](~/includes/NET-v46-MD.MD)]</summary>
        <returns>Nowo utworzony podklucz lub <see langword="null" /> Jeśli działanie nie powiodło się. Jeśli określono ciąg o zerowej długości <paramref name="subkey" />, bieżący <see cref="T:Microsoft.Win32.RegistryKey" /> obiekt jest zwracany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby można było wykonać tę akcję, użytkownik musi mieć uprawnienia na tym poziomie i poniżej w hierarchii rejestru.  
  
> [!CAUTION]
>  Nie ujawniaj <xref:Microsoft.Win32.RegistryKey> obiektów w taki sposób, że złośliwy program można utworzyć tysiące znaczenia podkluczy lub par klucz/wartość. Na przykład nie wolno pozwalać obiektom wywołującym na wprowadzanie umownych kluczy ani wartości.  
  
 Aby można było używać <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> metody, musi mieć wystąpienia <xref:Microsoft.Win32.RegistryKey> klasy. Aby uzyskać wystąpienia <xref:Microsoft.Win32.RegistryKey>, użyj jednej z statyczne elementy członkowskie <xref:Microsoft.Win32.Registry> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do utworzenia lub otwarcia klucza rejestru.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Bieżące <see cref="T:Microsoft.Win32.RegistryKey" /> nie można zapisać do, na przykład nie został otwarty jako zapisywalnego klucza, lub użytkownik nie ma niezbędne uprawnienia.</exception>
        <exception cref="T:System.IO.IOException">Poziomów zagnieżdżenia przekracza 510.  - lub - wystąpił błąd systemowy, taki jak usunięcie klucza, próba utworzenia klucza w <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> głównego.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistrySecurity registrySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * System.Security.AccessControl.RegistrySecurity -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck, registrySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
      </Parameters>
      <Docs>
        <param name="subkey">Nazwa lub ścieżka podklucza, który ma zostać utworzony lub otwarty. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <param name="permissionCheck">Jedna z wartości wyliczenia, która określa, czy klucz jest otwarty w celu odczytu lub odczytu i zapisu.</param>
        <param name="registrySecurity">Kontrolę dostępu dla nowego klucza.</param>
        <summary>Tworzy nowy podklucz lub otwiera istniejący podklucz do zapisu, za pomocą wyboru określonego uprawnienia zabezpieczeń opcja i rejestru.</summary>
        <returns>Nowo utworzony podklucz lub <see langword="null" /> Jeśli działanie nie powiodło się. Jeśli określono ciąg o zerowej długości <paramref name="subkey" />, bieżący <see cref="T:Microsoft.Win32.RegistryKey" /> obiekt jest zwracany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> Metoda tworzy klucz rejestru, który ma kontroli dostępu określone przez `registrySecurity` parametru. <xref:Microsoft.Win32.RegistryKey> Obiekt, który jest zwracany reprezentuje klucz rejestru, ale ten obiekt nie jest ograniczona przez kontroli dostępu określone w `registrySecurity` parametru.  
  
 Jeśli `permissionCheck` jest <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>, klucz został otwarty do odczytu i zapisu. Jeśli `permissionCheck` jest <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType>, klucz został otwarty do odczytu.  
  
 W celu zapewnienia zgodności z poprzednimi wersjami klucz został otwarty do odczytu i zapisu, jeśli `permissionCheck` jest <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType> , ale ma także klucza nadrzędnego <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>. Jeśli klucz nadrzędny ma inne ustawienie, stan odczytu/zapisu jest określany przez ustawienie klucza nadrzędnego.  
  
 Aby można było wykonać tę akcję, użytkownik musi mieć uprawnienia na tym poziomie i poniżej w hierarchii rejestru.  
  
> [!CAUTION]
>  Nie ujawniaj <xref:Microsoft.Win32.RegistryKey> obiektów w taki sposób, że złośliwy program można utworzyć tysiące znaczenia podkluczy lub par klucz/wartość. Na przykład nie wolno pozwalać obiektom wywołującym na wprowadzanie umownych kluczy ani wartości.  
  
 Aby można było używać <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metody, musi mieć wystąpienia <xref:Microsoft.Win32.RegistryKey> klasy. Aby uzyskać wystąpienia <xref:Microsoft.Win32.RegistryKey>, użyj jednej z statyczne elementy członkowskie <xref:Microsoft.Win32.Registry> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do utworzenia lub otwarcia klucza rejestru.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="permissionCheck" /> zawiera nieprawidłową wartość.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest zamknięty, na którym ta metoda jest wywoływana (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Bieżące <see cref="T:Microsoft.Win32.RegistryKey" /> nie można zapisać do, na przykład nie został otwarty jako zapisywalnego klucza, lub użytkownik nie ma niezbędne uprawnienia.</exception>
        <exception cref="T:System.IO.IOException">Poziomów zagnieżdżenia przekracza 510.  - lub - wystąpił błąd systemowy, taki jak usunięcie klucza, próba utworzenia klucza w <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> głównego.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">uprawnienia do modyfikowania określony klucz rejestru, jeśli istnieje lub możliwość tworzenia obszar klucza rejestru, jeśli go jeszcze nie istnieje. Skojarzone wyliczenia: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable, Microsoft.Win32.RegistryOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, bool writable, valuetype Microsoft.Win32.RegistryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, writable As Boolean, options As RegistryOptions) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, bool writable, Microsoft::Win32::RegistryOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * bool * Microsoft.Win32.RegistryOptions -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, writable, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="writable" Type="System.Boolean" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryOptions" />
      </Parameters>
      <Docs>
        <param name="subkey">Nazwa lub ścieżka podklucza, który ma zostać utworzony lub otwarty. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <param name="writable">
          <see langword="true" /> Aby wskazać nowego podklucza jest zapisywalny; w przeciwnym razie <see langword="false" />.</param>
        <param name="options">Opcja rejestru do użycia.</param>
        <summary>Tworzy nowy podklucz lub otwiera istniejący podklucz z określonego dostępu.  Dostępne od wersji [! INCLUDE[net_v46](~/includes/NET-v46-MD.MD)]</summary>
        <returns>Nowo utworzony podklucz lub <see langword="null" /> Jeśli działanie nie powiodło się. Jeśli określono ciąg o zerowej długości <paramref name="subkey" />, bieżący <see cref="T:Microsoft.Win32.RegistryKey" /> obiekt jest zwracany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby można było wykonać tę akcję, użytkownik musi mieć uprawnienia na tym poziomie i poniżej w hierarchii rejestru.  
  
> [!CAUTION]
>  Nie ujawniaj <xref:Microsoft.Win32.RegistryKey> obiektów w taki sposób, że złośliwy program można utworzyć tysiące znaczenia podkluczy lub par klucz/wartość. Na przykład nie wolno pozwalać obiektom wywołującym na wprowadzanie umownych kluczy ani wartości.  
  
 Aby można było używać <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> metody, musi mieć wystąpienia <xref:Microsoft.Win32.RegistryKey> klasy. Aby uzyskać wystąpienia <xref:Microsoft.Win32.RegistryKey>, użyj jednej z statyczne elementy członkowskie <xref:Microsoft.Win32.Registry> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> nie określono prawidłową opcją</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do utworzenia lub otwarcia klucza rejestru.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Bieżące <see cref="T:Microsoft.Win32.RegistryKey" /> nie można zapisać do, na przykład nie został otwarty jako zapisywalnego klucza, lub użytkownik nie ma niezbędne uprawnienia.</exception>
        <exception cref="T:System.IO.IOException">Poziomów zagnieżdżenia przekracza 510.  - lub - wystąpił błąd systemowy, taki jak usunięcie klucza, próba utworzenia klucza w <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> głównego.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions options);" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions options) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions);" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions registryOptions) cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, Microsoft::Win32::RegistryOptions options);" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, permissionCheck As RegistryKeyPermissionCheck, options As RegistryOptions) As RegistryKey" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * Microsoft.Win32.RegistryOptions -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" Index="0" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" Index="1" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryOptions" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0" />
        <Parameter Name="registryOptions" Type="Microsoft.Win32.RegistryOptions" Index="2" FrameworkAlternate="netcore-2.0" />
      </Parameters>
      <Docs>
        <param name="subkey">Nazwa lub ścieżka podklucza, który ma zostać utworzony lub otwarty.</param>
        <param name="permissionCheck">Jedna z wartości wyliczenia, która określa, czy klucz jest otwarty w celu odczytu lub odczytu i zapisu.</param>
        <param name="options">Opcję rejestru, aby użyć; na przykład, który tworzy volatile klucza.</param>
        <param name="registryOptions">To be added.</param>
        <summary>Tworzy podklucz lub otwiera podklucz do zapisu, korzystając z opcji wyboru i rejestru określonego uprawnienia.</summary>
        <returns>Nowo utworzony podklucz lub <see langword="null" /> Jeśli działanie nie powiodło się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać bieżącą <xref:Microsoft.Win32.RegistryKey> obiektów, należy określić ciąg pusty ("") dla `subkey`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący <see cref="T:Microsoft.Win32.RegistryKey" /> obiekt jest zamknięty (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Bieżące <see cref="T:Microsoft.Win32.RegistryKey" /> nie można zapisać obiektu; na przykład nie został otwarty jako zapisywalnego klucza lub użytkownik nie ma wymaganych praw dostępu.</exception>
        <exception cref="T:System.IO.IOException">Poziomów zagnieżdżenia przekracza 510.  - lub - wystąpił błąd systemowy, taki jak usunięcie klucza, próba utworzenia klucza w <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> głównego.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do utworzenia lub otwarcia klucza rejestru.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions, System.Security.AccessControl.RegistrySecurity registrySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions registryOptions, class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, Microsoft::Win32::RegistryOptions registryOptions, System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * Microsoft.Win32.RegistryOptions * System.Security.AccessControl.RegistrySecurity -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck, registryOptions, registrySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
        <Parameter Name="registryOptions" Type="Microsoft.Win32.RegistryOptions" />
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
      </Parameters>
      <Docs>
        <param name="subkey">Nazwa lub ścieżka podklucza, który ma zostać utworzony lub otwarty.</param>
        <param name="permissionCheck">Jedna z wartości wyliczenia, która określa, czy klucz jest otwarty w celu odczytu lub odczytu i zapisu.</param>
        <param name="registryOptions">Opcja rejestru do użycia.</param>
        <param name="registrySecurity">Kontrolę dostępu dla nowego podklucza.</param>
        <summary>Tworzy podklucz lub otwiera podklucz do zapisu przy użyciu określonego uprawnienia wyboru opcji, opcji rejestru i zabezpieczeń rejestru.</summary>
        <returns>Nowo utworzony podklucz lub <see langword="null" /> Jeśli działanie nie powiodło się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać bieżącą <xref:Microsoft.Win32.RegistryKey> obiektów, należy określić ciąg pusty ("") dla `subkey`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Bieżący <see cref="T:Microsoft.Win32.RegistryKey" /> obiekt jest zamknięty. Nie można uzyskać dostępu do zamkniętego kluczy.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Bieżące <see cref="T:Microsoft.Win32.RegistryKey" /> nie można zapisać obiektu; na przykład nie został otwarty jako zapisywalnego klucza lub użytkownik nie ma wymaganych praw dostępu.</exception>
        <exception cref="T:System.IO.IOException">Poziomów zagnieżdżenia przekracza 510.  - lub - wystąpił błąd systemowy, taki jak usunięcie klucza, próba utworzenia klucza w <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> głównego.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do utworzenia lub otwarcia klucza rejestru.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa określony podkluczu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteSubKey">
      <MemberSignature Language="C#" Value="public void DeleteSubKey (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKey(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKey (subkey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKey(System::String ^ subkey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKey : string -&gt; unit" Usage="registryKey.DeleteSubKey subkey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey">Nazwa podklucza do usunięcia. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <summary>Usuwa określony podkluczu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby usunąć podklucze podrzędne, użyj <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.  
  
 Usunięcie kluczy rejestru, należy zachować ostrożność.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source2.cpp#5)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source2.cs#5)]
 [!code-vb[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="subkey" /> Ma podklucze podrzędne</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="subkey" /> Parametr określa prawidłowy klucz rejestru</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> jest <see langword="null" /></exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do usunięcia klucza.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Możliwość modyfikowania wskazanego klucza rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSubKey">
      <MemberSignature Language="C#" Value="public void DeleteSubKey (string subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKey(string subkey, bool throwOnMissingSubKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKey (subkey As String, throwOnMissingSubKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKey(System::String ^ subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKey : string * bool -&gt; unit" Usage="registryKey.DeleteSubKey (subkey, throwOnMissingSubKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="throwOnMissingSubKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="subkey">Nazwa podklucza do usunięcia. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <param name="throwOnMissingSubKey">Wskazuje, czy wyjątek powinien być zgłaszany w przypadku, jeśli nie można odnaleźć określonego podkluczu. Jeśli ten argument jest <see langword="true" /> i określony podklucz nie istnieje, jest wyjątek. Jeśli ten argument jest <see langword="false" /> i określony podklucz nie istnieje, nie podjęto żadnej akcji.</param>
        <summary>Usuwa określony podklucz i określa, czy wyjątek jest zgłaszany, jeśli podklucz nie zostanie znaleziony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby usunąć podklucze podrzędne, użyj <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.  
  
 Usunięcie kluczy rejestru, należy zachować ostrożność.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="subkey" /> ma podklucze podrzędne.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="subkey" /> nie określono prawidłowy klucz rejestru, a <paramref name="throwOnMissingSubKey" /> jest <see langword="true" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do usunięcia klucza.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Możliwość modyfikowania wskazanego klucza rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteSubKeyTree">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa podklucz i rekursywnie do podklucze podrzędne, z obsługi wyjątków opcjonalne.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteSubKeyTree">
      <MemberSignature Language="C#" Value="public void DeleteSubKeyTree (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKeyTree(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKeyTree (subkey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKeyTree(System::String ^ subkey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKeyTree : string -&gt; unit" Usage="registryKey.DeleteSubKeyTree subkey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey">Podklucz do usunięcia. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <summary>Usuwa podklucz i rekursywnie klucze podrzędne wszystkie podrzędne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Musi mieć odpowiednie uprawnienia do usuwania podklucz i jego drzewa.  
  
> [!CAUTION]
>  Usunięcie określonego klucza spowoduje usunięcie wszystkich wpisów poniżej klucza w drzewie. Ostrzeżenie nie będzie dostępna. Jeśli chcesz usunąć podklucza tylko w przypadku, jeśli nie ma żadnych podklucze podrzędne, użyj <xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A> metody.  
  
   
  
## Examples  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:Microsoft.Win32.RegistryKey> klasy.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Próby usunięcia gałęzi głównej.  - lub - <paramref name="subkey" /> nie określa prawidłowego podklucza rejestru.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do usunięcia klucza.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Możliwość modyfikowania wskazanego klucza rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSubKeyTree">
      <MemberSignature Language="C#" Value="public void DeleteSubKeyTree (string subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKeyTree(string subkey, bool throwOnMissingSubKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKeyTree (subkey As String, throwOnMissingSubKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKeyTree(System::String ^ subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKeyTree : string * bool -&gt; unit" Usage="registryKey.DeleteSubKeyTree (subkey, throwOnMissingSubKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="throwOnMissingSubKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="subkey">Nazwa podklucza do usunięcia. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <param name="throwOnMissingSubKey">Wskazuje, czy wyjątek powinien być zgłaszany w przypadku, jeśli nie można odnaleźć określonego podkluczu. Jeśli ten argument jest <see langword="true" /> i określony podklucz nie istnieje, jest wyjątek. Jeśli ten argument jest <see langword="false" /> i określony podklucz nie istnieje, nie podjęto żadnej akcji.</param>
        <summary>Usuwa określony podklucz i rekursywnie klucze podrzędne wszystkie podrzędne i określa, czy wyjątek jest zgłaszany, gdy podklucz nie zostanie odnaleziony.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Została podjęta próba usunięcia gałęzi głównej drzewa.  - lub - <paramref name="subkey" /> nie określa prawidłowego podklucza rejestru, a <paramref name="throwOnMissingSubKey" /> jest <see langword="true" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subkey" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zamknięciu (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do usunięcia klucza.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Możliwość modyfikowania wskazanego klucza rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa określoną wartość z tego klucza, a zgłasza wyjątek, jeśli wartość nie zostanie znaleziony.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteValue">
      <MemberSignature Language="C#" Value="public void DeleteValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteValue (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.DeleteValue : string -&gt; unit" Usage="registryKey.DeleteValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa wartości do usunięcia.</param>
        <summary>Usuwa określoną wartość z tego klucza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W systemie Windows 95, Windows 98, Windows 98 Wydanie drugie i Windows Millennium Edition, określając pustego ciągu `name` parametru nie powoduje usunięcia wartości domyślnej.  
  
   
  
## Examples  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:Microsoft.Win32.RegistryKey> klasy.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#3)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#3)]
 [!code-vb[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> nie jest prawidłowym odwołaniem do wartości.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do usuwania wartości.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest tylko do odczytu.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Aby uzyskać możliwość usunięcia określonego klucza rejestru. Wyliczenia skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="DeleteValue">
      <MemberSignature Language="C#" Value="public void DeleteValue (string name, bool throwOnMissingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteValue(string name, bool throwOnMissingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteValue (name As String, throwOnMissingValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteValue(System::String ^ name, bool throwOnMissingValue);" />
      <MemberSignature Language="F#" Value="member this.DeleteValue : string * bool -&gt; unit" Usage="registryKey.DeleteValue (name, throwOnMissingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnMissingValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa wartości do usunięcia.</param>
        <param name="throwOnMissingValue">Wskazuje, czy wyjątek powinien być zgłaszany w przypadku, jeśli nie można odnaleźć określonej wartości. Jeśli ten argument jest <see langword="true" /> i nie ma określonej wartości, jest wyjątek. Jeśli ten argument jest <see langword="false" /> i określona wartość nie istnieje, nie podjęto żadnej akcji.</param>
        <summary>Usuwa określoną wartość z tego klucza i określa, czy wyjątek jest zgłaszany, jeśli wartość nie zostanie znaleziony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `throwOnMissingValue` jest `false`, nie istnieje sposób sprawdzić, czy usunięcie zakończyło się powodzeniem, bez następnie próby uzyskania dostępu do wartości tylko usunięte. Dlatego należy zachować ostrożność podczas usuwania wartości z rejestru w ten sposób.  
  
 W systemie Windows 95, Windows 98, Windows 98 Wydanie drugie i Windows Millennium Edition, określając pustego ciągu `name` parametru nie powoduje usunięcia wartości domyślnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> nie jest prawidłowym odwołaniem do wartości i <paramref name="throwOnMissingValue" /> jest <see langword="true" />.  - lub - <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do usuwania wartości.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest tylko do odczytu.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Aby uzyskać możliwość usunięcia określonego klucza rejestru. Wyliczenia skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="registryKey.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:Microsoft.Win32.RegistryKey" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie `Dispose` po zakończeniu przy użyciu <xref:Microsoft.Win32.RegistryKey>. `Dispose` Pozostawia metody <xref:Microsoft.Win32.RegistryKey> w stanie uniemożliwiającym jego używanie. Po wywołaniu `Dispose`, konieczne jest zwolnienie wszystkich odwołań do <xref:Microsoft.Win32.RegistryKey> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:Microsoft.Win32.RegistryKey> klasy.  
  
 Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Wywoływanie zawsze `Dispose` przed zwolnieniem ostatniego odwołania do <xref:Microsoft.Win32.RegistryKey>. W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:Microsoft.Win32.RegistryKey> obiektu `Finalize` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="registryKey.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje wszystkie atrybuty określonego otworzyć klucza rejestru w rejestrze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie jest konieczne do wywołania `Flush` można zapisać wprowadzonych zmian do klucza. Zmiany w rejestrze są opróżniane na dysku po jego opóźnieniem maszyna do spłukiwania korzysta z rejestru. Opróżnianie opóźnieniem występuje regularnie i automatycznie po przedział czasu określony przez system. Zmiany w rejestrze również są opróżniane na dysku na zamknięcie systemu.  
  
 W odróżnieniu od <xref:Microsoft.Win32.RegistryKey.Close%2A>, `Flush` zwracana tylko wtedy, gdy wszystkie dane zostały zapisane w rejestrze.  
  
 `Flush` Funkcja może także zapisać części lub wszystkich innych kluczy. Nadmiernie wywołanie tej funkcji może mieć negatywny wpływ na wydajność aplikacji.  
  
 Aplikacji powinny wywoływać tylko `Flush` Jeśli musi być bezwzględna niektórych, że zmiany w rejestrze są zapisywane na dysku. Ogólnie rzecz biorąc `Flush` rzadko, jeśli kiedykolwiek, muszą być używane.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.Win32.RegistryKey.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FromHandle">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy klucz rejestru z określonego dojścia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey FromHandle(class Microsoft.Win32.SafeHandles.SafeRegistryHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As SafeRegistryHandle) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ FromHandle(Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : Microsoft.Win32.SafeHandles.SafeRegistryHandle -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.FromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
      </Parameters>
      <Docs>
        <param name="handle">Dojście do klucza rejestru.</param>
        <summary>Tworzy klucz rejestru z określonego dojścia.</summary>
        <returns>Klucz rejestru.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="handle" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do wykonania tej akcji.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey FromHandle(class Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As SafeRegistryHandle, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ FromHandle(Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ handle, Microsoft::Win32::RegistryView view);" />
      <MemberSignature Language="F#" Value="static member FromHandle : Microsoft.Win32.SafeHandles.SafeRegistryHandle * Microsoft.Win32.RegistryView -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.FromHandle (handle, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
      </Parameters>
      <Docs>
        <param name="handle">Dojście do klucza rejestru.</param>
        <param name="view">Widok rejestru do użycia.</param>
        <summary>Tworzy klucz rejestru z określonego dojścia i ustawienie rejestru widoku.</summary>
        <returns>Klucz rejestru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `view` Parametr dla tej metody jest używany podczas kolejnych operacji, takich jak otwieranie podkluczy.  
  
 Jeśli `view` jest <xref:Microsoft.Win32.RegistryView.Registry64> , ale maszyna jest uruchomiona 32-bitowym systemie operacyjnym, będzie używać klucza zwróconego <xref:Microsoft.Win32.RegistryView.Registry32> widoku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="view" /> jest nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="handle" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do wykonania tej akcji.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca kontrolę dostępu dla bieżącego klucza rejestru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistrySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.RegistrySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As RegistrySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::RegistrySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.RegistrySecurity" Usage="registryKey.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistrySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kontrolę dostępu dla bieżącego klucza rejestru.</summary>
        <returns>Obiekt, który opisuje uprawnień kontroli dostępu do klucza rejestru reprezentowany przez bieżący <see cref="T:Microsoft.Win32.RegistryKey" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przeciążenie tej metody jest odpowiednikiem wywołania <xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29> przeciążenie metody z bitowego kombinację następujących flag: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, i <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>. Można użyć tego przeciążenia, aby wyszukać inne uprawnienia.  
  
 Użytkownik musi mieć <xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType> praw, aby wywołać tę metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.InvalidOperationException">Bieżący klucz został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistrySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.RegistrySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As RegistrySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::RegistrySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.RegistrySecurity" Usage="registryKey.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistrySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="includeSections">Bitowe połączenie wartości wyliczenia, który określa typ informacji o zabezpieczeniach do pobrania.</param>
        <summary>Zwraca wartość określonej części kontrolę dostępu dla bieżącego klucza rejestru.</summary>
        <returns>Obiekt, który opisuje uprawnień kontroli dostępu do klucza rejestru reprezentowany przez bieżący <see cref="T:Microsoft.Win32.RegistryKey" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zażądać uprawnień dostępu, w obecnie przydzielony do użytkowników, określ bitowe połączenie następujące flagi: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, i <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>. Alternatywnie można użyć <xref:Microsoft.Win32.RegistryKey.GetAccessControl> przeciążenie metody, która określa dokładnie kombinację wartości.  
  
 Użytkownik musi mieć <xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType> praw, aby wywołać tę metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wystarczających uprawnień.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.InvalidOperationException">Bieżący klucz został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubKeyNames">
      <MemberSignature Language="C#" Value="public string[] GetSubKeyNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetSubKeyNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubKeyNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetSubKeyNames();" />
      <MemberSignature Language="F#" Value="member this.GetSubKeyNames : unit -&gt; string[]" Usage="registryKey.GetSubKeyNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera tablica ciągów zawierająca wszystkie nazwy podkluczy.</summary>
        <returns>Tablica ciągów zawierająca nazwy podkluczy dla bieżącego klucza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie nie rekursywnie Znajdź nazwy. Zwraca nazwy na podstawowym poziomie, z którego została wywołana.  
  
   
  
## Examples  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:Microsoft.Win32.RegistryKey> klasy.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do odczytu z klucza.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd systemowy, na przykład bieżący klucz został usunięty.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Aby uzyskać możliwość odczytać z rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartość skojarzoną z podaną nazwą.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string -&gt; obj" Usage="registryKey.GetValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa wartości do pobrania. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <summary>Pobiera wartość skojarzoną z podaną nazwą. Zwraca <see langword="null" /> Jeśli pary nazwa/wartość nie istnieje w rejestrze.</summary>
        <returns>Wartość skojarzoną z <paramref name="name" />, lub <see langword="null" /> Jeśli <paramref name="name" /> nie znaleziono.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Klucz rejestru może mieć jedną wartość, która nie jest skojarzona z żadną nazwą. Gdy ta nienazwana wartość jest wyświetlana w Edytorze rejestru, zamiast nazwy pojawia się ciąg „(Domyślna)”. Aby pobrać to nienazwane wartość, określ `null` lub ciąg pusty ("") dla `name`.  
  
 Gdy <xref:Microsoft.Win32.RegistryKey.GetValue%2A> metoda pobiera wartości ciągu rozwijania (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), rozszerza ciągów środowiska przy użyciu danych z lokalnego środowiska. Aby pobrać wartości ciągu rozwijania z rejestru na komputerze zdalnym, należy użyć <xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29> przeciążenie metody, aby określić chcesz rozszerzyć ciągów środowiska.  
  
> [!NOTE]
>  Jeśli wartość zawierającą rozwijania odwołań do zmiennych środowiskowych przechowywanych jako ciąg (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), a nie jako ciąg rozwijania (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> nie zwiększa. Można rozwinąć taki ciąg po pobraniu przez wywołanie metody <xref:System.Environment.ExpandEnvironmentVariables%2A> metody.  
  
> [!NOTE]
>  Zalecanym sposobem pobrania danych z <xref:Microsoft.Win32.Registry.PerformanceData> klucza jest użycie <xref:System.Diagnostics.PerformanceCounter> klasy, a nie <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> metody.  
>   
>  <xref:Microsoft.Win32.RegistryKey.GetValue%2A> nie obsługuje odczytywania wartości typu REG_NONE lub REG_LINK.  W obu przypadkach wartość domyślna (`null`) jest zwracany zamiast rzeczywistej wartości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy klucza testowego i dodaje wartości różnych typów danych w kluczu. W przykładzie następnie odczytuje pary nazwa/wartość i wyświetla je w konsoli przy użyciu <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> metoda pobierania odpowiednie typy danych rejestru.  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do czytania treści klucza rejestru.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zawierający określona wartość jest zamknięty (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.IO.IOException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zawierający określona wartość został oznaczony do usunięcia.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Odczytywanie zawartości rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">można odczytać klucza rejestru typu REG_EXPAND_SZ. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * obj -&gt; obj" Usage="registryKey.GetValue (name, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa wartości do pobrania. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <param name="defaultValue">Wartość zwracana, gdy <c>nazwa</c> nie istnieje.</param>
        <summary>Pobiera wartość skojarzoną z podaną nazwą. Jeśli nazwa nie zostanie znaleziony, zwraca wartość domyślną, podane.</summary>
        <returns>Wartość skojarzoną z <paramref name="name" />, ze wszystkimi osadzone zmienne środowiskowe lewej podarkusz nierozwinięty lub <paramref name="defaultValue" /> Jeśli <paramref name="name" /> nie znaleziono.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego przeciążenia <xref:Microsoft.Win32.RegistryKey.GetValue%2A> do obsługi w przypadku, gdy nazwa nie istnieje jeszcze — na przykład przy pierwszym uruchomieniu aplikacji. Zawsze, gdy można wywołać tego przeciążenia, użyj `defaultValue` parametr, aby określić wartość zwracana, gdy `name` nie istnieje.  
  
> [!NOTE]
>  Klucz rejestru może mieć jedną wartość, która nie jest skojarzona z żadną nazwą. Gdy ta nienazwana wartość jest wyświetlana w Edytorze rejestru, zamiast nazwy pojawia się ciąg „(Domyślna)”. Aby pobrać to nienazwane wartość, określ `null` lub ciąg pusty ("") dla `name`.  
  
 Gdy <xref:Microsoft.Win32.RegistryKey.GetValue%2A> metoda pobiera wartości ciągu rozwijania (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), rozszerza ciągów środowiska przy użyciu danych z lokalnego środowiska. Aby pobrać wartości ciągu rozwijania z rejestru na komputerze zdalnym, należy użyć <xref:Microsoft.Win32.RegistryKey.GetValue%2A> przeciążenia, aby określić chcesz rozszerzyć ciągów środowiska.  
  
> [!NOTE]
>  Jeśli wartość zawierającą rozwijania odwołań do zmiennych środowiskowych przechowywanych jako ciąg (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), a nie jako ciąg rozwijania (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> — metoda nie zwiększa. Można rozwinąć taki ciąg po pobraniu przez wywołanie metody <xref:System.Environment.ExpandEnvironmentVariables%2A> metody.  
  
> [!NOTE]
>  Zalecanym sposobem pobrania danych z <xref:Microsoft.Win32.Registry.PerformanceData> klucza jest użycie <xref:System.Diagnostics.PerformanceCounter> klasy, a nie <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> metody.  
>   
>  <xref:Microsoft.Win32.RegistryKey.GetValue%2A> nie obsługuje odczytywania wartości typu REG_NONE lub REG_LINK.  W obu przypadkach wartość domyślna (`null`) jest zwracany zamiast rzeczywistej wartości.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy klucz testu o wartości i pobiera tę wartość. Przykład podejmuje próbę pobrania nieistniejącą wartości z klucza; w takim przypadku <xref:Microsoft.Win32.RegistryKey.GetValue%2A> metoda zwraca określoną wartość domyślną.  
  
 [!code-cpp[Classic RegistryKey.GetValue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RegistryKey.GetValue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/CS/source.cs#1)]
 [!code-vb[Classic RegistryKey.GetValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do czytania treści klucza rejestru.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zawierający określona wartość jest zamknięty (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.IO.IOException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zawierający określona wartość został oznaczony do usunięcia.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Odczytywanie zawartości rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">można odczytać klucza rejestru typu REG_EXPAND_SZ. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name, object defaultValue, Microsoft.Win32.RegistryValueOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name, object defaultValue, valuetype Microsoft.Win32.RegistryValueOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String, defaultValue As Object, options As RegistryValueOptions) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name, System::Object ^ defaultValue, Microsoft::Win32::RegistryValueOptions options);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * obj * Microsoft.Win32.RegistryValueOptions -&gt; obj" Usage="registryKey.GetValue (name, defaultValue, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryValueOptions" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa wartości do pobrania. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <param name="defaultValue">Wartość zwracana, gdy <c>nazwa</c> nie istnieje.</param>
        <param name="options">Jedna z wartości wyliczenia, które określa opcjonalne przetwarzania pobrana wartość.</param>
        <summary>Pobiera wartość skojarzoną z podanych opcji nazwy i pobierania. Jeśli nazwa nie zostanie znaleziony, zwraca wartość domyślną, podane.</summary>
        <returns>Wartość skojarzoną z <paramref name="name" />, przetworzonych zgodnie z określonym <paramref name="options" />, lub <paramref name="defaultValue" /> Jeśli <paramref name="name" /> nie znaleziono.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie umożliwia określenie specjalnego przetwarzania pobrana wartość. Na przykład można określić <xref:Microsoft.Win32.RegistryValueOptions.DoNotExpandEnvironmentNames?displayProperty=nameWithType> podczas pobierania wartości rejestru typu <xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType> można pobrać ciągu bez rozwijania osadzone zmienne środowiskowe.  
  
 Użyj `defaultValue` parametr, aby określić wartość zwracana, gdy `name` nie istnieje.  
  
> [!NOTE]
>  Klucz rejestru może mieć jedną wartość, która nie jest skojarzona z żadną nazwą. Gdy ta nienazwana wartość jest wyświetlana w Edytorze rejestru, zamiast nazwy pojawia się ciąg „(Domyślna)”. Aby pobrać to nienazwane wartość, określ `null` lub ciąg pusty ("") dla `name`.  
>   
>  <xref:Microsoft.Win32.RegistryKey.GetValue%2A> nie obsługuje odczytywania wartości typu REG_NONE lub REG_LINK.  W obu przypadkach wartość domyślna (`null`) jest zwracany zamiast rzeczywistej wartości.  
  
   
  
## Examples  
 Poniższy przykładowy kod tworzy klucz testu, dodaje wartość przy użyciu zmiennej środowiskowej osadzonych i pobiera wartości w formularzach zarówno rozwinięte, jak i nierozwiniętego.  
  
 [!code-cpp[RegistryValueOptions#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryValueOptions/CPP/RegistryValueOptions.cpp#1)]
 [!code-csharp[RegistryValueOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryValueOptions/CS/source.cs#1)]
 [!code-vb[RegistryValueOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryValueOptions/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do czytania treści klucza rejestru.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zawierający określona wartość jest zamknięty (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.IO.IOException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zawierający określona wartość został oznaczony do usunięcia.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> nie jest prawidłową <see cref="T:Microsoft.Win32.RegistryValueOptions" /> wartości; na przykład nieprawidłową wartość jest rzutowane na <see cref="T:Microsoft.Win32.RegistryValueOptions" />.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Odczytywanie zawartości rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">można odczytać klucza rejestru typu REG_EXPAND_SZ. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueOptions" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValueKind">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryValueKind GetValueKind (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Win32.RegistryValueKind GetValueKind(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueKind (name As String) As RegistryValueKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryValueKind GetValueKind(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetValueKind : string -&gt; Microsoft.Win32.RegistryValueKind" Usage="registryKey.GetValueKind name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryValueKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa o typie danych rejestru ma być pobrana wartość. W tym ciągu nie jest rozróżniana wielkość liter.</param>
        <summary>Pobiera wartości skojarzone z określoną nazwą typu danych rejestru.</summary>
        <returns>Typ danych rejestru wartość skojarzoną z <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Klucz rejestru może mieć jedną wartość, która nie jest skojarzona z żadną nazwą. Gdy ta nienazwana wartość jest wyświetlana w Edytorze rejestru, zamiast nazwy pojawia się ciąg „(Domyślna)”. Można pobrać typu danych rejestru tego nienazwane wartość, określ `null` lub ciąg pusty ("") dla `name`.  
  
 Opis rejestru obsługiwane typy danych, zobacz <xref:Microsoft.Win32.RegistryValueKind> wyliczenia.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy klucza testowego i dodaje wartości różnych typów danych w kluczu. W przykładzie następnie odczytuje pary nazwa/wartość i wyświetla je w konsoli przy użyciu <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> metoda pobierania odpowiednie typy danych rejestru.  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do czytania treści klucza rejestru.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zawierający określona wartość jest zamknięty (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.IO.IOException">Podklucz zawiera określoną wartość, nie istnieje.  - lub - pary nazwa/wartość, określony przez <paramref name="name" /> nie istnieje.  Ten wyjątek nie jest generowany w systemie Windows 95, Windows 98 lub Windows Millennium Edition.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Odczytywanie zawartości rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)" />
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
      </Docs>
    </Member>
    <Member MemberName="GetValueNames">
      <MemberSignature Language="C#" Value="public string[] GetValueNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetValueNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValueNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetValueNames();" />
      <MemberSignature Language="F#" Value="member this.GetValueNames : unit -&gt; string[]" Usage="registryKey.GetValueNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera tablica ciągów zawierająca wszystkie nazwy wartości skojarzonego z tym kluczem.</summary>
        <returns>Tablica ciągów zawierająca nazw wartości dla bieżącego klucza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie zostaną znalezione nie nazw wartości dla klucza, zwracana jest pusta tablica.  
  
 Klucz rejestru może mieć wartości domyślnej — to znaczy pary nazwa/wartość, w którym nazwa jest pustym ciągiem (""). Jeśli ustawiono wartość domyślną klucz rejestru, tablica zwrócona przez <xref:Microsoft.Win32.RegistryKey.GetValueNames%2A> metoda zawiera pusty ciąg.  
  
   
  
## Examples  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:Microsoft.Win32.RegistryKey> klasy.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do czytania treści klucza rejestru.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd systemowy; na przykład bieżący klucz został usunięty.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Aby uzyskać możliwość odczytać z rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As SafeRegistryHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ Handle { Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : Microsoft.Win32.SafeHandles.SafeRegistryHandle" Usage="Microsoft.Win32.RegistryKey.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeRegistryHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> obiekt, który reprezentuje rejestru klucza bieżącego <see cref="T:Microsoft.Win32.RegistryKey" /> hermetyzuje obiektu.</summary>
        <value>Dojście do klucza rejestru.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Klucz rejestru jest zamknięty. Nie można uzyskać dostępu do zamkniętego kluczy.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd systemowy, taki jak usunięcie bieżącego klucza.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do odczytu klucza.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego. Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Win32.RegistryKey.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę klucza.</summary>
        <value>Bezwzględny (kwalifikowaną) nazwę klucza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa klucza zawiera ścieżkę bezwzględną tego klucza w rejestrze, zawsze zaczynając od klucza podstawowego, na przykład HKEY_LOCAL_MACHINE.  
  
   
  
## Examples  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:Microsoft.Win32.RegistryKey> klasy.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zamknięciu (zamkniętego klucze będą niedostępne).</exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.ToString" />
      </Docs>
    </Member>
    <Member MemberName="OpenBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenBaseKey (Microsoft.Win32.RegistryHive hKey, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenBaseKey (hKey As RegistryHive, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenBaseKey(Microsoft::Win32::RegistryHive hKey, Microsoft::Win32::RegistryView view);" />
      <MemberSignature Language="F#" Value="static member OpenBaseKey : Microsoft.Win32.RegistryHive * Microsoft.Win32.RegistryView -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.OpenBaseKey (hKey, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
      </Parameters>
      <Docs>
        <param name="hKey">Klucz HKEY do otwarcia.</param>
        <param name="view">Widok rejestru do użycia.</param>
        <summary>Zostanie otwarty nowy <see cref="T:Microsoft.Win32.RegistryKey" /> reprezentujący żądanego klucza na komputerze lokalnym w określonym widoku.</summary>
        <returns>Klucz rejestru żądanej.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hKey" /> lub <paramref name="view" /> jest nieprawidłowy.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do wykonania tej akcji.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenRemoteBaseKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zostanie otwarty nowy T:Microsoft.Win32.RegistryKey, reprezentujący żądany klucz komputera zdalnego z opcją rejestru określonego widoku.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenRemoteBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenRemoteBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRemoteBaseKey (hKey As RegistryHive, machineName As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenRemoteBaseKey(Microsoft::Win32::RegistryHive hKey, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member OpenRemoteBaseKey : Microsoft.Win32.RegistryHive * string -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.OpenRemoteBaseKey (hKey, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hKey">Klucz HKEY, aby otworzyć, z <see cref="T:Microsoft.Win32.RegistryHive" /> wyliczenia.</param>
        <param name="machineName">Komputer zdalny.</param>
        <summary>Zostanie otwarty nowy <see cref="T:Microsoft.Win32.RegistryKey" /> reprezentujący żądanego klucza na komputerze zdalnym.</summary>
        <returns>Klucz rejestru żądanej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rejestru komputera lokalnego jest otwarty, jeśli `machineName` jest <xref:System.String.Empty?displayProperty=nameWithType>. Żądany klucza musi być kluczem głównym na komputerze zdalnym i jest identyfikowany przez odpowiednie <xref:Microsoft.Win32.RegistryHive> wartość.  
  
 Aby klucz, aby można zdalnie serwerem a klientem maszyny musi być uruchomiona usługa Rejestr zdalny i ma włączoną administrację zdalną.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak otworzyć klucza rejestru na komputerze zdalnym i wyliczyć wartości klucza. Komputer zdalny musi działać usługa Rejestr zdalny. Określ nazwę komputera zdalnego jako argument wiersza polecenia podczas wywoływania programu.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hKey" /> jest nieprawidłowy.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="machineName" /> Nie znaleziono.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="machineName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma odpowiednich uprawnień do wykonania tej operacji.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryHive" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OpenRemoteBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenRemoteBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, string machineName, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRemoteBaseKey (hKey As RegistryHive, machineName As String, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenRemoteBaseKey(Microsoft::Win32::RegistryHive hKey, System::String ^ machineName, Microsoft::Win32::RegistryView view);" />
      <MemberSignature Language="F#" Value="static member OpenRemoteBaseKey : Microsoft.Win32.RegistryHive * string * Microsoft.Win32.RegistryView -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.OpenRemoteBaseKey (hKey, machineName, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
        <Parameter Name="machineName" Type="System.String" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
      </Parameters>
      <Docs>
        <param name="hKey">Klucz HKEY, aby otworzyć z <see cref="T:Microsoft.Win32.RegistryHive" /> wyliczenia.</param>
        <param name="machineName">Komputer zdalny.</param>
        <param name="view">Widok rejestru do użycia.</param>
        <summary>Zostanie otwarty nowy klucz rejestru, który reprezentuje żądany klucz na komputerze zdalnym z określonego widoku.</summary>
        <returns>Klucz rejestru żądanej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rejestru komputera lokalnego jest otwarty, jeśli `machineName` jest <xref:System.String.Empty?displayProperty=nameWithType>. Żądany klucza musi być kluczem głównym na komputerze zdalnym i jest identyfikowany przez odpowiednie <xref:Microsoft.Win32.RegistryHive> wartość.  
  
 Aby klucz, aby można zdalnie serwerem a klientem maszyny musi być uruchomiona usługa Rejestr zdalny i ma włączoną administrację zdalną.  
  
 W 64-bitowych wersjach systemu Windows części rejestru są przechowywane osobno dla aplikacji 32-bitowych i 64-bitowych. Brak widoku 32-bitowej aplikacji 32-bitowych i 64-bitowych widoku dla aplikacji 64-bitowych. Jeśli `view` jest <xref:Microsoft.Win32.RegistryView.Registry64> , ale komputer zdalny jest uruchomiona 32-bitowym systemie operacyjnym, będzie używać klucza zwróconego <xref:Microsoft.Win32.RegistryView.Registry32> widoku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hKey" /> lub <paramref name="view" /> jest nieprawidłowy.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="machineName" /> Nie znaleziono.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="machineName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do wykonania tej operacji.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera określony podkluczu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa lub ścieżka podklucza otwierać z uprawnieniami tylko do odczytu.</param>
        <summary>Pobiera podklucz jako tylko do odczytu.</summary>
        <returns>Podklucz żądanie, lub <see langword="null" /> Jeśli działanie nie powiodło się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed jego można modyfikować za pomocą innych metod i właściwości, należy otworzyć klucza. Aby zmodyfikować klucz, należy otworzyć go z przeciążenia <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodę, która pozwala na określenie dostęp do zapisu, takich jak <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29> przeciążenia lub <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29> przeciążenia.  
  
 Jeśli określona podklucz nie można znaleźć, następnie `null` jest zwracany.  
  
 Aby można było używać <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metody, musi mieć wystąpienia <xref:Microsoft.Win32.RegistryKey>. Aby pobrać wystąpienia <xref:Microsoft.Win32.RegistryKey>, użyj statycznych członków <xref:Microsoft.Win32.Registry> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy klucz testu i używa <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metody go otworzyć, prezentacja zarówno przeciążenia metody.  
  
 [!code-cpp[RegistryKey.OpenSubKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CPP/opensubkey.cpp#1)]
 [!code-csharp[RegistryKey.OpenSubKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CS/opensubkey.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey/VB/opensubkey.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" /></exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zamknięciu (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do odczytu klucza rejestru.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Możliwość odczytu wskazanego klucza rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, permissionCheck As RegistryKeyPermissionCheck) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, permissionCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa lub ścieżka podklucza, który ma zostać utworzony lub otwarty.</param>
        <param name="permissionCheck">Jedna z wartości wyliczenia, która określa, czy klucz jest otwarty w celu odczytu lub odczytu i zapisu.</param>
        <summary>Pobiera dostępu podklucz określony dla odczytu/zapisu lub odczytu.</summary>
        <returns>Podklucz żądanie, lub <see langword="null" /> Jeśli działanie nie powiodło się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zamiast zgłaszać wyjątek, ta metoda zwraca `null` Jeśli żądany klucz nie istnieje.  
  
 Jeśli `permissionCheck` jest <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>, klucz został otwarty do odczytu i zapisu; Jeśli `permissionCheck` jest <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> lub <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>, klucz został otwarty do odczytu, chyba że klucza nadrzędnego została otwarta z <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>.  
  
 Aby można było używać <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metody, musi mieć wystąpienia <xref:Microsoft.Win32.RegistryKey> klasy. Aby uzyskać wystąpienia <xref:Microsoft.Win32.RegistryKey>, użyj jednej z statyczne elementy członkowskie <xref:Microsoft.Win32.Registry> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy podklucz zawierający pary klucz wartość 100 i zamyka go. Przykład otwiera podklucz z <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default>, rejestruje czas przyjmuje odczytać wszystkie wartości i zamyka go. Przykład otwiera podklucz z <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree> i rejestruje czas potrzebny do odczytu wszystkich wartości. Na koniec przykładzie oblicza i Wyświetla procent poprawy.  
  
 [!code-csharp[RegistryKey.OpenSubKey_PermCheck#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey_PermCheck/cs/source.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey_PermCheck#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey_PermCheck/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="permissionCheck" /> zawiera nieprawidłową wartość.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zamknięciu (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do odczytu klucza rejestru.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Możliwość odczytu wskazanego klucza rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, bool writable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, bool writable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, writable As Boolean) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, bool writable);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * bool -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, writable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="writable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa lub ścieżka go otworzyć.</param>
        <param name="writable">Ustaw <see langword="true" /> Aby uzyskać dostęp do zapisu do klucza.</param>
        <summary>Pobiera określony podklucz i określa, czy ma zostać zastosowany do klucza dostępu do zapisu.</summary>
        <returns>Podklucz żądanie, lub <see langword="null" /> Jeśli działanie nie powiodło się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli żądany klucz nie istnieje, ta metoda zwraca `null` zamiast generowania wyjątku.  
  
 Jeśli `writable` jest `true`, klucz zostanie otwarty do odczytu i zapisu, w przeciwnym razie klucz zostanie otwarty jako tylko do odczytu.  
  
 Aby można było używać <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metody, musi mieć wystąpienia <xref:Microsoft.Win32.RegistryKey> metody. Aby uzyskać wystąpienia <xref:Microsoft.Win32.RegistryKey>, użyj jednej z statyczne elementy członkowskie <xref:Microsoft.Win32.Registry> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy klucz testu i używa <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metody go otworzyć, prezentacja zarówno przeciążenia metody.  
  
 [!code-cpp[RegistryKey.OpenSubKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CPP/opensubkey.cpp#1)]
 [!code-csharp[RegistryKey.OpenSubKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CS/opensubkey.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey/VB/opensubkey.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zamknięciu (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do uzyskania dostępu do klucza rejestru w określonym trybie.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Możliwość odczytu wskazanego klucza rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, System.Security.AccessControl.RegistryRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype System.Security.AccessControl.RegistryRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, rights As RegistryRights) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, System::Security::AccessControl::RegistryRights rights);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * System.Security.AccessControl.RegistryRights -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.RegistryRights" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa lub ścieżka podklucza, który ma zostać utworzony lub otwarty.</param>
        <param name="rights">Prawa do klucza rejestru.</param>
        <summary>Pobiera podklucz o określonej nazwie i.  Dostępne w programie .NET Framework 4.6</summary>
        <returns>Podklucz żądanie, lub <see langword="null" /> Jeśli działanie nie powiodło się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed jego można modyfikować za pomocą innych metod i właściwości, należy otworzyć klucza. Aby zmodyfikować klucz, należy otworzyć go z przeciążenia <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metodę, która służy do określania dostępu do zapisu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zamknięciu (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do uzyskania dostępu do klucza rejestru w określonym trybie.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistryRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype System.Security.AccessControl.RegistryRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, permissionCheck As RegistryKeyPermissionCheck, rights As RegistryRights) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, System::Security::AccessControl::RegistryRights rights);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * System.Security.AccessControl.RegistryRights -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, permissionCheck, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
        <Parameter Name="rights" Type="System.Security.AccessControl.RegistryRights" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa lub ścieżka podklucza, który ma zostać utworzony lub otwarty.</param>
        <param name="permissionCheck">Jedna z wartości wyliczenia, która określa, czy klucz jest otwarty w celu odczytu lub odczytu i zapisu.</param>
        <param name="rights">Bitowe połączenie wartości wyliczenia określający wymaganymi dostępu.</param>
        <summary>Pobiera dostępu podklucza określonego do odczytu lub odczytu/zapisu, żądanie praw dostępu do określonej.</summary>
        <returns>Podklucz żądanie, lub <see langword="null" /> Jeśli działanie nie powiodło się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zamiast zgłaszać wyjątek, ta metoda zwraca `null` Jeśli żądany klucz nie istnieje.  
  
 Jeśli `permissionCheck` jest <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>, klucz został otwarty do odczytu i zapisu; Jeśli `permissionCheck` jest <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> lub <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>, klucz został otwarty do odczytu, chyba że klucza nadrzędnego została otwarta z <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>.  
  
 Dostępu podany dla `permissionCheck` ma pierwszeństwo przed dostępu podany dla `rights`. Na przykład jeśli określisz <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> dla `permissionCheck` i <xref:System.Security.AccessControl.RegistryRights.WriteKey?displayProperty=nameWithType> dla `rights`, próba zapisu do podklucza zgłasza wyjątek.  
  
 Aby można było używać <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> metody, musi mieć wystąpienia <xref:Microsoft.Win32.RegistryKey> klasy. Aby uzyskać wystąpienia <xref:Microsoft.Win32.RegistryKey>, użyj jednej z statyczne elementy członkowskie <xref:Microsoft.Win32.Registry> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="permissionCheck" /> zawiera nieprawidłową wartość.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zamknięciu (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.Security.SecurityException">
          <paramref name="rights" /> zawiera nieprawidłowe wartości praw.  - lub - użytkownik nie ma żądanych uprawnień.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Możliwość odczytu wskazanego klucza rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.RegistrySecurity registrySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.RegistrySecurity -&gt; unit" Usage="registryKey.SetAccessControl registrySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
      </Parameters>
      <Docs>
        <param name="registrySecurity">Kontrolę dostępu do bieżącego podrzędnego.</param>
        <summary>Stosuje Windows kontrolę dostępu do istniejącego klucza rejestru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Do modyfikowania uprawnień dla klucza rejestru, użyj <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A> metodę, aby uzyskać <xref:System.Security.AccessControl.RegistrySecurity> obiekt reprezentujący istniejących zabezpieczenia kontroli dostępu do systemu Windows, modyfikowanie, który <xref:System.Security.AccessControl.RegistrySecurity> obiekt, a następnie użyj <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A> metody aktualizacji zabezpieczeń klucz.  
  
> [!CAUTION]
>  <xref:System.Security.AccessControl.RegistrySecurity> Określony dla obiekt `registrySecurity` zastępuje istniejące zabezpieczeń dla klucza rejestru. Aby dodać uprawnienia dla nowego użytkownika, należy użyć <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A> metody można uzyskać dostępu do istniejących kontroli zabezpieczeń, a następnie zmodyfikować go.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy klucz testu. Bieżący użytkownik może <xref:System.Security.AccessControl.RegistryRights.ReadKey> i <xref:System.Security.AccessControl.RegistryRights.Delete> prawa ale odmowa <xref:System.Security.AccessControl.RegistryRights.ChangePermissions> i <xref:System.Security.AccessControl.RegistryRights.WriteKey> praw. Kolejne podejmuje próbę manipulowania klucza pomyślnie lub niepowodzeniem w zależności od tych uprawnień.  
  
 Przed usunięciem klucz wstrzymuje kod. Możesz przełączyć się do edytora rejestru i sprawdź, czy te same prawa dostępu do zastosowania po klucz jest dostępny za pomocą Edytora rejestru. (Ta działa najlepiej, jeśli używasz **RunAs** z poziomu wiersza polecenia, aby uruchomić Edytor rejestru i przykładowy kod jako użytkownik lokalny bez uprawnień administratora. Edytor rejestru zawsze umożliwia administratorowi zmienić uprawnienia, nawet jeśli odmówiono określonego administratora tych praw. Jeśli zdefiniowano lokalnym użytkownika o nazwie TestUser, polecenie `runas /user:TestUser cmd` powoduje otwarcie okna poleceń, w którym można uruchomić Edytora rejestru, a następnie przykładowy kod.)  
  
 [!code-cpp[RegistrySecurity101#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistrySecurity101/cpp/source.cpp#1)]
 [!code-csharp[RegistrySecurity101#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistrySecurity101/CS/source.cs#1)]
 [!code-vb[RegistrySecurity101#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistrySecurity101/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Bieżący <see cref="T:Microsoft.Win32.RegistryKey" /> obiekt reprezentuje klucz z kontrolę dostępu, a obiekt wywołujący nie ma <see cref="F:System.Security.AccessControl.RegistryRights.ChangePermissions" /> praw.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="registrySecurity" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia wartość pary nazwa/wartość w kluczu rejestru. W zależności od przeciążenia, typ danych rejestru zależy od typu przechowywanych danych lub z określonej <see cref="T:Microsoft.Win32.RegistryValueKind" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * obj -&gt; unit" Usage="registryKey.SetValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa wartości do przechowywania.</param>
        <param name="value">Dane, które mają być przechowywane.</param>
        <summary>Ustawia para określona nazwa/wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ wiele wartości mogą być przechowywane w każdym klucz rejestru, należy użyć `name` parametr, aby określić określonej wartości, które chcesz ustawić.  
  
> [!NOTE]
>  Klucz rejestru może mieć jedną wartość, która nie jest skojarzona z żadną nazwą. Gdy ta nienazwana wartość jest wyświetlana w Edytorze rejestru, zamiast nazwy pojawia się ciąg „(Domyślna)”. Ustawienie wartości nienazwanych, określ `null` lub ciąg pusty ("") dla `name`.  
  
 Aby ustawić wartości klucza, należy otworzyć klucza z prawem do zapisu. Po klucz został otwarty z prawem do zapisu, można zmienić pary nazwa/wartość w tym kluczu.  
  
 Jeśli określony `name` nie istnieje w kluczu jest utworzona i skojarzona wartość jest równa `value`.  
  
 To przeciążenie metody <xref:Microsoft.Win32.RegistryKey.SetValue%2A> przechowuje 64-bitowych liczb całkowitych jako ciągi (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>). Do przechowywania 64-bitowych liczb jako <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> wartości, użyj <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> przeciążenia, które określa <xref:Microsoft.Win32.RegistryValueKind>.  
  
 To przeciążenie metody <xref:Microsoft.Win32.RegistryKey.SetValue%2A> przechowuje wszystkie wartości ciągu jako <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>, nawet jeśli zawierają one rozwijania odwołań do zmiennych środowiskowych. Można zapisać wartości ciągu jako rozwijania ciągów (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), użyj <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> przeciążenia, które określa <xref:Microsoft.Win32.RegistryValueKind>.  
  
 Typy liczbowe innych niż 32-bitowych liczb całkowitych są przechowywane jako ciągi przez przeciążenie tej metody. Wyliczenie elementy są przechowywane jako ciągi zawierające nazwy elementu.  
  
> [!CAUTION]
>  Nie ujawniaj <xref:Microsoft.Win32.RegistryKey> obiektów w taki sposób, że złośliwy program można utworzyć tysiące znaczenia podkluczy lub par klucz/wartość. Na przykład nie wolno pozwalać obiektom wywołującym na wprowadzanie umownych kluczy ani wartości.  
  
> [!NOTE]
>  Windows 98 i Windows Millennium Edition rejestr nie jest Unicode, a nie wszystkie znaki Unicode są prawidłowe dla wszystkich stron kodowych. Znak Unicode, który jest nieprawidłowy dla bieżącej strony kodowej zastępuje najlepsze dopasowanie. Nie wyjątek.  
  
   
  
## Examples  
 Poniższy kod przedstawia przykład sposobu <xref:Microsoft.Win32.RegistryKey.SetValue%2A> metody Określa typ danych rejestru, gdy ustawia wartości. Przykład tworzy klucza testowego i dodaje wartości różnych typów danych w kluczu. W przykładzie następnie odczytuje pary nazwa/wartość i wyświetla je w konsoli przy użyciu <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> metodę, aby wyświetlić odpowiednie typy danych rejestru.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> jest nieobsługiwany typ danych.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zawierający określona wartość jest zamknięty (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest tylko do odczytu i nie można zapisać do, na przykład klucz nie został otwarty z prawem do zapisu.  - lub - <see cref="T:Microsoft.Win32.RegistryKey" /> obiekt reprezentuje węzeł poziomu głównego i systemem operacyjnym jest Windows Millennium Edition i Windows 98.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do tworzenia lub modyfikowania kluczy rejestru.</exception>
        <exception cref="T:System.IO.IOException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Obiekt reprezentuje węzeł poziomu głównego i systemem operacyjnym jest system Windows 2000, Windows XP lub Windows Server 2003.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Aby zmodyfikować określony klucz rejestru, jeśli istnieje, lub można utworzyć klucza rejestru, jeśli jeszcze nie istnieje. Skojarzone wyliczenia: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string name, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(string name, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (name As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ name, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="registryKey.SetValue (name, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa wartości do zapisania.</param>
        <param name="value">Dane, które mają być przechowywane.</param>
        <param name="valueKind">Typ danych rejestru do użycia podczas zapisywania danych.</param>
        <summary>Ustawia wartość pary nazwa/wartość w kluczu rejestru za pomocą rejestru określonego typu danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ wiele wartości mogą być przechowywane w każdym klucz rejestru, należy użyć `name` parametr, aby określić określonej wartości, które chcesz ustawić.  
  
> [!NOTE]
>  Klucz rejestru może mieć jedną wartość, która nie jest skojarzona z żadną nazwą. Gdy ta nienazwana wartość jest wyświetlana w Edytorze rejestru, zamiast nazwy pojawia się ciąg „(Domyślna)”. Ustawienie wartości nienazwanych, określ `null` lub ciąg pusty ("") dla `name`.  
  
 Aby ustawić wartości klucza, należy otworzyć klucza z prawem do zapisu. Po klucz został otwarty z prawem do zapisu, można zmienić pary nazwa/wartość w tym kluczu.  
  
 Jeśli określony `name` nie istnieje w kluczu jest utworzona i skojarzona wartość jest równa `value`.  
  
> [!NOTE]
>  Określanie typu danych rejestru <xref:Microsoft.Win32.RegistryValueKind.Unknown> jest taka sama jak przy użyciu <xref:Microsoft.Win32.RegistryKey.SetValue%2A> przeciążenia.  
  
 Jeśli typ określony `value` nie odpowiada określonym `valueKind`, i danych nie może być przekonwertowany, <xref:System.ArgumentException> jest generowany. Na przykład można przechowywać <xref:System.Int64?displayProperty=nameWithType> jako <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>, ale tylko wtedy, gdy jego wartość jest mniejsza niż maksymalna wartość <xref:System.Int32?displayProperty=nameWithType>. Nie można zapisać wartość jednego ciągu jako <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Jeśli opakowanego wartości są przekazywane <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> lub <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>, konwersja odbywa się przy użyciu Niezmienna kultura.  
  
> [!CAUTION]
>  Nie ujawniaj <xref:Microsoft.Win32.RegistryKey> obiektów w taki sposób, że złośliwy program można utworzyć tysiące znaczenia podkluczy lub par klucz/wartość. Na przykład nie wolno pozwalać obiektom wywołującym na wprowadzanie umownych kluczy ani wartości.  
  
> [!NOTE]
>  Windows 98 i Windows Millennium Edition rejestr nie jest Unicode, a nie wszystkie znaki Unicode są prawidłowe dla wszystkich stron kodowych. Znak Unicode, który jest nieprawidłowy dla bieżącej strony kodowej zastępuje najlepsze dopasowanie. Nie wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy klucz testu i używa <xref:Microsoft.Win32.RegistryKey.SetValue%2A> metody do przechowywania kilku wartości określenie typu danych rejestru dla każdej wartości. W przykładzie następnie odczytuje pary nazwa/wartość i wyświetla je w konsoli przy użyciu <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> metodę, aby wyświetlić odpowiednie typy danych rejestru.  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Typ <paramref name="value" /> niezgodny typ danych rejestru określony przez <paramref name="valueKind" />, w związku z tym danych nie można przekonwertować poprawnie.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zawierający określona wartość jest zamknięty (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest tylko do odczytu i nie można zapisać do, na przykład klucz nie został otwarty z prawem do zapisu.  - lub - <see cref="T:Microsoft.Win32.RegistryKey" /> obiekt reprezentuje węzeł poziomu głównego i systemem operacyjnym jest Windows Millennium Edition i Windows 98.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do tworzenia lub modyfikowania kluczy rejestru.</exception>
        <exception cref="T:System.IO.IOException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Obiekt reprezentuje węzeł poziomu głównego i systemem operacyjnym jest system Windows 2000, Windows XP lub Windows Server 2003.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Aby zmodyfikować określony klucz rejestru, jeśli istnieje, lub można utworzyć klucza rejestru, jeśli jeszcze nie istnieje. Skojarzone wyliczenia: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Możliwość dostępu do wskazanego klucza rejestru, jeśli jest to klucz zdalny. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
      </Docs>
    </Member>
    <Member MemberName="SubKeyCount">
      <MemberSignature Language="C#" Value="public int SubKeyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubKeyCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubKeyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubKeyCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SubKeyCount : int" Usage="Microsoft.Win32.RegistryKey.SubKeyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę podkluczy bieżącego klucza.</summary>
        <value>Liczba podkluczy bieżącego klucza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie nie rekursywnie liczba nazw. Zwraca tylko liczbę nazw na podstawowym poziomie, z którego została wywołana.  
  
   
  
## Examples  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:Microsoft.Win32.RegistryKey> klasy.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do odczytu dla klucza.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd systemowy, na przykład bieżący klucz został usunięty.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Możliwość odczytu wskazanego klucza rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="registryKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera reprezentację ciągu tego klucza.</summary>
        <returns>Ciąg reprezentujący klucza. Jeśli określony klucz jest nieprawidłowy (nie można odnaleźć) następnie <see langword="null" /> jest zwracany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana zawiera ścieżkę rejestru określony klucz i wartość szesnastkową dla klucza. Ścieżka rejestru obejmują bezwzględną katalogu głównego z określonym kluczem, zawsze rozpoczyna się od jednej podstawowej klucze rejestru, na przykład HKEY_LOCAL_MACHINE.  
  
   
  
## Examples  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:Microsoft.Win32.RegistryKey> klasy.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Uzyskiwany jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <altmember cref="P:Microsoft.Win32.RegistryKey.Name" />
      </Docs>
    </Member>
    <Member MemberName="ValueCount">
      <MemberSignature Language="C#" Value="public int ValueCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValueCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.ValueCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ValueCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueCount : int" Usage="Microsoft.Win32.RegistryKey.ValueCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę wartości klucza.</summary>
        <value>Liczba par nazwa/wartość w kluczu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy klucz rejestru ma wartość domyślną, która nie jest skojarzona z żadną nazwą. To nienazwane wartość można ustawić za pomocą <xref:Microsoft.Win32.RegistryKey.SetValue%2A> — metoda i określając albo `null` lub ciąg pusty ("") dla `name`. Jeśli nigdy nie została ustawiona wartość domyślna, jej nie wpływa łączna liczba zwróconych przez <xref:Microsoft.Win32.RegistryKey.ValueCount%2A> właściwości; po jego ustawieniu, jednak on jest zawsze traktowanych.  
  
   
  
## Examples  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:Microsoft.Win32.RegistryKey> klasy.  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma uprawnienia do odczytu dla klucza.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest modyfikowany w zakresie jest zamknięta (zamkniętego klucze będą niedostępne).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Użytkownik nie posiada niezbędnych praw wobec rejestru.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd systemowy, na przykład bieżący klucz został usunięty.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Możliwość odczytu wskazanego klucza rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryView View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Win32.RegistryView View" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.View" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property View As RegistryView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryView View { Microsoft::Win32::RegistryView get(); };" />
      <MemberSignature Language="F#" Value="member this.View : Microsoft.Win32.RegistryView" Usage="Microsoft.Win32.RegistryKey.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera widok, który został użyty do utworzenia klucza rejestru.</summary>
        <value>Widok, który został użyty do utworzenia klucza rejestru.  - lub - <see cref="F:Microsoft.Win32.RegistryView.Default" />, jeśli użyto nie widoku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W 64-bitowych wersjach systemu Windows części rejestru są przechowywane osobno dla aplikacji 32-bitowych i 64-bitowych. Brak widoku 32-bitowej aplikacji 32-bitowych i 64-bitowych widoku dla aplikacji 64-bitowych.  
  
 Zakłada się, że widok jest zawsze odpowiada do rzeczywistego widoku <xref:Microsoft.Win32.RegistryKey>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>