<Type Name="IntranetZoneCredentialPolicy" FullName="Microsoft.Win32.IntranetZoneCredentialPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da8a5819dd16b37cf2fb675fad075c1f7367ec25" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69314361" /></Metadata><TypeSignature Language="C#" Value="public class IntranetZoneCredentialPolicy : System.Net.ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntranetZoneCredentialPolicy extends System.Object implements class System.Net.ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class IntranetZoneCredentialPolicy&#xA;Implements ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntranetZoneCredentialPolicy : System::Net::ICredentialPolicy" />
  <TypeSignature Language="F#" Value="type IntranetZoneCredentialPolicy = class&#xA;    interface ICredentialPolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.ICredentialPolicy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje zasady poświadczeń, które mają być używane dla żądań zasobów, które są <see cref="T:System.Net.WebRequest" /> wykonywane przy użyciu i ich klas pochodnych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te zasady umożliwiają wysyłanie poświadczeń tylko wtedy, gdy żądany zasób znajduje się w tej samej domenie co klient, który zgłosił żądanie. W przypadku wielu aplikacji to optymalne zasady, ponieważ uniemożliwiają one wysyłanie poświadczeń sieciowych z żądaniami dotyczącymi zasobów, które nie znajdują się w intranecie.  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy>zasady są wywoływane tylko wtedy, <xref:System.Net.WebRequest> gdy <xref:System.Net.WebProxy> lub skojarzone z żądaniem mają poświadczenia, które nie `null`są. Ustawienie tych zasad nie ma wpływu na żądania, które nie określają poświadczeń.  
  
 Użyj właściwości, aby <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> ustawić zasady. <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> Program obsługujący uwierzytelnianie dla żądania <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> wywoła metodę przed przeprowadzeniem uwierzytelniania. <xref:System.Net.IAuthenticationModule> Jeśli żądany zasób znajduje się w innej domenie niż klient, <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> Metoda zwraca `false`, a uwierzytelnianie nie jest wykonywane.  
  
 Ta zasada ma wpływ na wszystkie <xref:System.Net.WebRequest> wystąpienia z poświadczeniami o wartości innej niż null w bieżącej domenie aplikacji. Nie można zastąpić zasad w poszczególnych żądaniach.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Tworzenie wystąpienia <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> i używanie go do ustawiania zasad poświadczeń dla domeny aplikacji.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntranetZoneCredentialPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntranetZoneCredentialPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.Win32.IntranetZoneCredentialPolicy" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje używają tego konstruktora do tworzenia obiektów, których można użyć do ustawienia <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje Tworzenie wystąpienia tej klasy.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authModule);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool&#xA;override this.ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool" Usage="intranetZoneCredentialPolicy.ShouldSendCredential (challengeUri, request, credential, authModule)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri"><see cref="T:System.Uri" /> To spowoduje odebranie żądania.</param>
        <param name="request"><see cref="T:System.Net.WebRequest" /> Reprezentuje żądany zasób.</param>
        <param name="credential">, Który zostanie wysłany z żądaniem, jeśli ta metoda zwróci wartość <see langword="true" />. <see cref="T:System.Net.NetworkCredential" /></param>
        <param name="authModule">, <see cref="T:System.Net.IAuthenticationModule" /> Który będzie przeprowadzać uwierzytelnianie, jeśli wymagane jest uwierzytelnianie.</param>
        <summary>Zwraca wartość wskazującą <see cref="T:System.Net.WebRequest" /> ,czypoświadczeniaklientasąwysyłanezżądaniemdlazasobu,któryzostał<see cref="T:System.Boolean" /> utworzony przy użyciu.</summary>
        <returns><see langword="true" />Jeśli żądany zasób znajduje się w tej samej domenie co klient żądający żądania; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacje nie wywołuj tej metody bezpośrednio; jest on wywoływany przez <xref:System.Net.IAuthenticationModule> , który jest odpowiedzialny za wykonywanie uwierzytelniania na serwerze. Jeśli ta metoda <xref:System.Net.IAuthenticationModule> zostanie `false`zwrócona, program nie będzie uwierzytelniał klienta na serwerze.  
  
 Ta metoda jest wywoływana tylko w przypadku żądań, które określają poświadczenia lub <xref:System.Net.WebProxy> używają obiektu, który określa poświadczenia.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> , jak zezwolić na wysyłanie poświadczeń dla żądań, które korzystają z protokołu HTTPS (Secure Hypertext Transfer Protocol) z uwierzytelnianiem podstawowym. Przy użyciu protokołu HTTPS i uwierzytelniania podstawowego hasło użytkownika jest szyfrowane przed wysłaniem przez sieć.  
  
 [!code-cpp[NclCredPolicy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#4)]
 [!code-csharp[NclCredPolicy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
