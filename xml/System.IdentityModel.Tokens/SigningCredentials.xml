<Type Name="SigningCredentials" FullName="System.IdentityModel.Tokens.SigningCredentials">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e89377cf0e3852816df956faf3b38e593ab5972" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69279178" /></Metadata><TypeSignature Language="C#" Value="public class SigningCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SigningCredentials extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SigningCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Class SigningCredentials" />
  <TypeSignature Language="C++ CLI" Value="public ref class SigningCredentials" />
  <TypeSignature Language="F#" Value="type SigningCredentials = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e411c-101">Reprezentuje algorytmy klucza kryptograficznego i zabezpieczeń, które są używane do generowania podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-101">Represents the cryptographic key and security algorithms that are used to generate a digital signature.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e411c-102">Użyj klasy <xref:System.IdentityModel.Tokens.SigningCredentials> , aby określić klucz podpisywania, identyfikator klucza podpisywania i algorytmy zabezpieczeń, które są używane przez program WCF do generowania podpisu cyfrowego <xref:System.IdentityModel.Tokens.SamlAssertion>dla.</span><span class="sxs-lookup"><span data-stu-id="e411c-102">Use the <xref:System.IdentityModel.Tokens.SigningCredentials> class to specify the signing key, signing key identifier, and security algorithms that are used by WCF to generate the digital signature for a <xref:System.IdentityModel.Tokens.SamlAssertion>.</span></span> <span data-ttu-id="e411c-103">Aby ustawić szczegóły podpisu cyfrowego, należy ustawić <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> Właściwość <xref:System.IdentityModel.Tokens.SamlAssertion> klasy.</span><span class="sxs-lookup"><span data-stu-id="e411c-103">To set the digital signature details, set the <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> property of the <xref:System.IdentityModel.Tokens.SamlAssertion> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e411c-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e411c-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signingKey As SecurityKey, signatureAlgorithm As String, digestAlgorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SigningCredentials(System::IdentityModel::Tokens::SecurityKey ^ signingKey, System::String ^ signatureAlgorithm, System::String ^ digestAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SigningCredentials : System.IdentityModel.Tokens.SecurityKey * string * string -&gt; System.IdentityModel.Tokens.SigningCredentials" Usage="new System.IdentityModel.Tokens.SigningCredentials (signingKey, signatureAlgorithm, digestAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signingKey" Type="System.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signingKey"><span data-ttu-id="e411c-105">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> , który zawiera klucz kryptograficzny używany do generowania podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-105">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</span></span></param>
        <param name="signatureAlgorithm"><span data-ttu-id="e411c-106">Identyfikator URI, który reprezentuje algorytm kryptograficzny używany do generowania podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-106">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</span></span></param>
        <param name="digestAlgorithm"><span data-ttu-id="e411c-107">Identyfikator URI, który reprezentuje algorytm kryptograficzny używany do obliczania skrótu dla części komunikatu protokołu SOAP, który ma być podpisany cyfrowo.</span><span class="sxs-lookup"><span data-stu-id="e411c-107">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span></span></param>
        <summary><span data-ttu-id="e411c-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e411c-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e411c-109">Użyj klasy, aby `signatureAlgorithm` określić parametry i `digestAlgorithm`. <xref:System.IdentityModel.Tokens.SecurityAlgorithms></span><span class="sxs-lookup"><span data-stu-id="e411c-109">Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters.</span></span> <span data-ttu-id="e411c-110"><xref:System.IdentityModel.Tokens.SecurityAlgorithms> Klasa zawiera zestaw statycznych, stałych ciągów, które reprezentują algorytmy kryptograficzne.</span><span class="sxs-lookup"><span data-stu-id="e411c-110">The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static, constant strings that represent cryptographic algorithms.</span></span> <span data-ttu-id="e411c-111">Elementy członkowskie, które mają `Signature` sufiks mogą służyć do `signatureAlgorithm` określania parametru i elementy członkowskie, które mają `Digest` sufiks mogą służyć do określania `digestAlgorithm` parametru.</span><span class="sxs-lookup"><span data-stu-id="e411c-111">The members that have a `Signature` suffix can be used to specify the `signatureAlgorithm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, class System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signingKey As SecurityKey, signatureAlgorithm As String, digestAlgorithm As String, signingKeyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SigningCredentials(System::IdentityModel::Tokens::SecurityKey ^ signingKey, System::String ^ signatureAlgorithm, System::String ^ digestAlgorithm, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ signingKeyIdentifier);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SigningCredentials : System.IdentityModel.Tokens.SecurityKey * string * string * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.IdentityModel.Tokens.SigningCredentials" Usage="new System.IdentityModel.Tokens.SigningCredentials (signingKey, signatureAlgorithm, digestAlgorithm, signingKeyIdentifier)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signingKey" Type="System.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
        <Parameter Name="signingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="signingKey"><span data-ttu-id="e411c-112">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> , który zawiera klucz kryptograficzny używany do generowania podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-112">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</span></span></param>
        <param name="signatureAlgorithm"><span data-ttu-id="e411c-113">Identyfikator URI, który reprezentuje algorytm kryptograficzny używany do generowania podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-113">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</span></span></param>
        <param name="digestAlgorithm"><span data-ttu-id="e411c-114">Identyfikator URI, który reprezentuje algorytm kryptograficzny używany do obliczania skrótu dla części komunikatu protokołu SOAP, który ma być podpisany cyfrowo.</span><span class="sxs-lookup"><span data-stu-id="e411c-114">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span></span></param>
        <param name="signingKeyIdentifier"><span data-ttu-id="e411c-115">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> określa identyfikator, który reprezentuje klucz, który jest używany do tworzenia podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-115">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that specifies the identifier that represents the key that is used to create a digital signature.</span></span></param>
        <summary><span data-ttu-id="e411c-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e411c-116">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e411c-117">Użyj klasy, aby `signatureAlgorithm` określić parametry i `digestAlgorithm`. <xref:System.IdentityModel.Tokens.SecurityAlgorithms></span><span class="sxs-lookup"><span data-stu-id="e411c-117">Use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the `signatureAlgorithm` and `digestAlgorithm` parameters.</span></span> <span data-ttu-id="e411c-118"><xref:System.IdentityModel.Tokens.SecurityAlgorithms> Klasa zawiera zestaw statycznych ciągów stałych, które reprezentują algorytmy kryptograficzne.</span><span class="sxs-lookup"><span data-stu-id="e411c-118">The <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class contains a set of static constant strings that represent cryptographic algorithms.</span></span> <span data-ttu-id="e411c-119">Elementy członkowskie, które mają `Signature` sufiks mogą służyć do `signatureAlgorithm` określania parametru i elementy członkowskie, które mają `Digest` sufiks mogą służyć do określania `digestAlgorithm` parametru.</span><span class="sxs-lookup"><span data-stu-id="e411c-119">The members that have a `Signature` suffix can be used to specify the `signatureAlgorithm` parameter and the members that have a `Digest` suffix can be used to specify the `digestAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DigestAlgorithm">
      <MemberSignature Language="C#" Value="public string DigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigestAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DigestAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DigestAlgorithm : string" Usage="System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e411c-120">Pobiera algorytm kryptograficzny używany do obliczania skrótu dla części komunikatu protokołu SOAP, który ma być podpisany cyfrowo.</span><span class="sxs-lookup"><span data-stu-id="e411c-120">Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span></span></summary>
        <value><span data-ttu-id="e411c-121">Identyfikator URI, który reprezentuje algorytm kryptograficzny używany do obliczania skrótu dla części komunikatu protokołu SOAP, który ma być podpisany cyfrowo.</span><span class="sxs-lookup"><span data-stu-id="e411c-121">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e411c-122">Aby ustawić <xref:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm%2A> właściwość, należy użyć jednego z konstruktorów `digestAlgorithm` przyjmujących parametr.</span><span class="sxs-lookup"><span data-stu-id="e411c-122">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm%2A> property, use one of the constructors that take a `digestAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : string" Usage="System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e411c-123">Pobiera algorytm kryptograficzny używany do generowania podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-123">Gets the cryptographic algorithm that is used to generate the digital signature.</span></span></summary>
        <value><span data-ttu-id="e411c-124">Identyfikator URI, który reprezentuje algorytm kryptograficzny używany do generowania podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-124">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e411c-125">Aby ustawić <xref:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm%2A> właściwość, należy użyć jednego z konstruktorów `signatureAlgorithm` przyjmujących parametr.</span><span class="sxs-lookup"><span data-stu-id="e411c-125">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm%2A> property, use one of the constructors that take a `signatureAlgorithm` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKey SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningKey As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKey ^ SigningKey { System::IdentityModel::Tokens::SecurityKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SigningKey : System.IdentityModel.Tokens.SecurityKey" Usage="System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e411c-126">Pobiera klucz kryptograficzny używany do generowania podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-126">Gets the cryptographic key that is used to generate the digital signature.</span></span></summary>
        <value><span data-ttu-id="e411c-127">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> , który zawiera klucz kryptograficzny używany do generowania podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-127">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e411c-128">Aby ustawić <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKey%2A> właściwość, należy użyć konstruktora, który `signingKey` przyjmuje parametr.</span><span class="sxs-lookup"><span data-stu-id="e411c-128">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKey%2A> property, use a constructor that takes a `signingKey` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningKeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ SigningKeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SigningKeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e411c-129">Pobiera identyfikator reprezentujący klucz, który jest używany do tworzenia podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-129">Gets the identifier that represents the key that is used to create a digital signature.</span></span></summary>
        <value><span data-ttu-id="e411c-130">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> określa identyfikator, który reprezentuje klucz, który jest używany do tworzenia podpisu cyfrowego.</span><span class="sxs-lookup"><span data-stu-id="e411c-130">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that specifies the identifier that represents the key that is used to create a digital signature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e411c-131">Aby ustawić <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier%2A> właściwość, należy użyć konstruktora, który `signingKeyIdentifier` przyjmuje parametr.</span><span class="sxs-lookup"><span data-stu-id="e411c-131">To set the <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier%2A> property, use the constructor that takes a `signingKeyIdentifier` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
