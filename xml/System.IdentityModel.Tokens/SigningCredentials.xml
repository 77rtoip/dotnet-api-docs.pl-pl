<Type Name="SigningCredentials" FullName="System.IdentityModel.Tokens.SigningCredentials">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6f751b03d3ef9f01ea8d5eb14d8fa1bf0da62e0" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32692332" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SigningCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SigningCredentials extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SigningCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Class SigningCredentials" />
  <TypeSignature Language="C++ CLI" Value="public ref class SigningCredentials" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje klucz i zabezpieczeń algorytmy kryptograficzne używane do generowania podpisu cyfrowego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.IdentityModel.Tokens.SigningCredentials> klasy do określania klucza podpisywania, identyfikator klucza podpisywania i algorytmów zabezpieczeń, które są używane przez usługi WCF do generowania podpisu cyfrowego dla <xref:System.IdentityModel.Tokens.SamlAssertion>. Szczegóły podpisu cyfrowego ustawia <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> właściwość <xref:System.IdentityModel.Tokens.SamlAssertion> klasy.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signingKey As SecurityKey, signatureAlgorithm As String, digestAlgorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SigningCredentials(System::IdentityModel::Tokens::SecurityKey ^ signingKey, System::String ^ signatureAlgorithm, System::String ^ digestAlgorithm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signingKey" Type="System.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signingKey">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> zawierający klucz kryptograficzny używany do generowania podpisu cyfrowego.</param>
        <param name="signatureAlgorithm">Identyfikator URI, który reprezentuje algorytm kryptograficzny, który służy do generowania podpisu cyfrowego.</param>
        <param name="digestAlgorithm">Identyfikator URI, który reprezentuje algorytm kryptograficzny, który jest używany do obliczania skrótu dla części komunikatu protokołu SOAP, który ma być podpisane cyfrowo.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.IdentityModel.Tokens.SecurityAlgorithms> klasę, aby określić `signatureAlgorithm` i `digestAlgorithm` parametrów. <xref:System.IdentityModel.Tokens.SecurityAlgorithms> Klasa zawiera zestaw statycznych, stałych ciągów, które reprezentują algorytmów kryptograficznych. Elementy członkowskie, które mają `Signature` sufiks może służyć do określenia `signatureAlgoritm` parametrów i elementów członkowskich, które mają `Digest` sufiks może służyć do określenia `digestAlgorithm` parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, class System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signingKey As SecurityKey, signatureAlgorithm As String, digestAlgorithm As String, signingKeyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SigningCredentials(System::IdentityModel::Tokens::SecurityKey ^ signingKey, System::String ^ signatureAlgorithm, System::String ^ digestAlgorithm, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ signingKeyIdentifier);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signingKey" Type="System.IdentityModel.Tokens.SecurityKey" />
        <Parameter Name="signatureAlgorithm" Type="System.String" />
        <Parameter Name="digestAlgorithm" Type="System.String" />
        <Parameter Name="signingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="signingKey">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> zawierający klucz kryptograficzny używany do generowania podpisu cyfrowego.</param>
        <param name="signatureAlgorithm">Identyfikator URI, który reprezentuje algorytm kryptograficzny, który służy do generowania podpisu cyfrowego.</param>
        <param name="digestAlgorithm">Identyfikator URI, który reprezentuje algorytm kryptograficzny, który jest używany do obliczania skrótu dla części komunikatu protokołu SOAP, który ma być podpisane cyfrowo.</param>
        <param name="signingKeyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> , który określa identyfikator, który reprezentuje klucz używany do tworzenia podpisu cyfrowego.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.IdentityModel.Tokens.SecurityAlgorithms> klasę, aby określić `signatureAlgorithm` i `digestAlgorithm` parametrów. <xref:System.IdentityModel.Tokens.SecurityAlgorithms> Klasa zawiera zbiór statycznych stałej ciągów, które reprezentują algorytmów kryptograficznych. Elementy członkowskie, które mają `Signature` sufiks może służyć do określenia `signatureAlgoritm` parametrów i elementów członkowskich, które mają `Digest` sufiks może służyć do określenia `digestAlgorithm` parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DigestAlgorithm">
      <MemberSignature Language="C#" Value="public string DigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigestAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DigestAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera algorytm kryptograficzny, który jest używany do obliczania skrótu dla części komunikatu protokołu SOAP, który ma być podpisane cyfrowo.</summary>
        <value>Identyfikator URI, który reprezentuje algorytm kryptograficzny, który jest używany do obliczania skrótu dla części komunikatu protokołu SOAP, który ma być podpisane cyfrowo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawić <xref:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm%2A> właściwość, użyj jednego z konstruktorów przyjmujących `digestAlgorithm` parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera algorytm kryptograficzny, który służy do generowania podpisu cyfrowego.</summary>
        <value>Identyfikator URI, który reprezentuje algorytm kryptograficzny, który służy do generowania podpisu cyfrowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawić <xref:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm%2A> właściwość, użyj jednego z konstruktorów przyjmujących `signatureAlgorithm` parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKey SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningKey As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKey ^ SigningKey { System::IdentityModel::Tokens::SecurityKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera klucz kryptograficzny używany do generowania podpisu cyfrowego.</summary>
        <value>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> zawierający klucz kryptograficzny używany do generowania podpisu cyfrowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawić <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKey%2A> właściwość, użyj Konstruktora przyjmującego `signingKey` parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningKeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ SigningKeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator, który reprezentuje klucz używany do tworzenia podpisu cyfrowego.</summary>
        <value>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> , który określa identyfikator, który reprezentuje klucz używany do tworzenia podpisu cyfrowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ustawić <xref:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier%2A> właściwość, użyj konstruktora, który przyjmuje `signingKeyIdentifier` parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>