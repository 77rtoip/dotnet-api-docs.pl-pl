<Type Name="SecurityToken" FullName="System.IdentityModel.Tokens.SecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="327accb4c305cecb389e3391c5dfd852fac4aed4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69279615" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityToken abstract" />
  <TypeSignature Language="F#" Value="type SecurityToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje klasę bazową służącą do implementowania wszystkich tokenów zabezpieczających.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tokenu zabezpieczającego, aby podać poświadczenia uwierzytelniania lub chronić komunikat.  
  
 Token zabezpieczający może służyć do udostępniania poświadczeń uwierzytelniania, materiału klucza kryptograficznego lub, w przypadku tokenu zabezpieczającego wystawionego przez usługę tokenu zabezpieczającego (STS), kolekcji oświadczeń dotyczących podmiotu. Wszystkie tokeny zabezpieczające pochodne od <xref:System.IdentityModel.Tokens.SecurityToken> klasy.  
  
 Począwszy od platformy .NET 4,5, program Windows Identity Foundation (WIF) został w pełni zintegrowany z .NET Framework i klasy udostępniane przez WIF są preferowaną metodą obsługi tokenów zabezpieczających w kodzie. W WIF tokeny zabezpieczające są serializowane i deserializowane do i z ich reprezentacji XML i są weryfikowane przy użyciu klas <xref:System.IdentityModel.Tokens.SecurityTokenHandler> pochodnych z klasy bazowej. Sprawdzanie poprawności tokenu nie tylko gwarantuje, że token jest prawidłowy, ale również zwraca <xref:System.Security.Claims.ClaimsIdentity> wystąpienie z tokenu, którego można użyć w celu podejmowania decyzji dotyczących uwierzytelniania i autoryzacji. Jest konstruowany przez implementację <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metody obsługi tokenów z oświadczeń zawartych w tokenie oraz z oświadczeń, które są wewnętrzne względem samego typu tokenu. <xref:System.Security.Claims.ClaimsIdentity>  
  
 WIF jest dostarczana z obsługą następujących typów tokenów zabezpieczających:  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Reprezentuje token zabezpieczający oparty na potwierdzeniu SAML 2,0. Ten typ tokenu jest zazwyczaj wystawiany przez usługę tokenu zabezpieczającego w odpowiedzi na żądanie tokenu zabezpieczającego WS-Trust lub WS-Federation (RST).  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Reprezentuje token zabezpieczający oparty na potwierdzeniu SAML 1,1. Ten typ tokenu jest zazwyczaj wystawiany przez usługę tokenu zabezpieczającego w odpowiedzi na żądanie tokenu zabezpieczającego WS-Trust lub WS-Federation (RST).  
  
-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>i <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Reprezentuje token zabezpieczający oparty na biletu protokołu Kerberos, który jest odbierany lub wysyłany w komunikacie protokołu SOAP  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>: Reprezentuje token zabezpieczający oparty na kluczu utworzonym przy użyciu algorytmu RSA.  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>: Reprezentuje token zabezpieczający zawierający informacje o sesji.  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Reprezentuje token zabezpieczający oparty na nazwie użytkownika i haśle.  
  
-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Reprezentuje token zabezpieczający oparty na tożsamości konta użytkownika lub domeny systemu Windows.  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityToken>: Reprezentuje token zabezpieczający oparty na certyfikacie X. 509.  
  
-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Reprezentuje token zabezpieczający oparty na certyfikacie X. 509, który jest mapowany na konto użytkownika domeny systemu Windows lub komputera lokalnego.  
  
 Dwie inne klasy <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> tokenów zabezpieczających <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>i mogą być używane do obsługi ogólnych przypadków.  
  
 Ogólnie mówiąc, tokeny zabezpieczające dzielą się na trzy główne kategorie:  
  
-   Tokeny, które zawierają lub odwołują się do materiału klucza kryptograficznego. Na przykład <xref:System.IdentityModel.Tokens.RsaSecurityToken> typy i <xref:System.IdentityModel.Tokens.X509SecurityToken> są często używane do tego celu.  
  
-   Tokeny reprezentujące poświadczenia dla użytkowników, którzy zostali już uwierzytelnieni. Na przykład <xref:System.IdentityModel.Tokens.UserNameSecurityToken> <xref:System.IdentityModel.Tokens.WindowsSecurityToken>,, i, w przypadku użytkownika uwierzytelnionego <xref:System.IdentityModel.Tokens.X509SecurityToken> przy użyciu certyfikatu, typy.  
  
-   Tokeny wystawiane przez usługę tokenu zabezpieczającego (STS) w odpowiedzi na żądanie tokenu zabezpieczającego przy użyciu protokołu WS-Trust lub usługi WS-Federation. Są one zazwyczaj zwracane w `wst:RequestSecurityTokenResponse` fragmencie kodu XML. Typy <xref:System.IdentityModel.Tokens.Saml2SecurityToken> i<xref:System.IdentityModel.Tokens.SamlSecurityToken> są najczęściej używane do reprezentowania tych tokenów.  
  
 Specjalny typ <xref:System.IdentityModel.Tokens.SessionSecurityToken>tokenu, zawiera informacje niezbędne do odtworzenia podmiotu zabezpieczeń w przypadku korzystania z sesji w scenariuszach aktywnych lub pasywnych.  
  
 Aby dodać funkcjonalność do istniejących typów tokenów, można dziedziczyć z określonego typu i skojarzonego z nim programu obsługi tokenów, aby obsługiwał wszelkie nowe elementy dodawane do tokenu. Aby dodać obsługę nowych typów tokenów, można utworzyć bezpośrednio z <xref:System.IdentityModel.Tokens.SecurityToken> klasy. Po wykonaniu tej czynności należy również utworzyć klasę programu obsługi tokenów, wyprowadzając ją <xref:System.IdentityModel.Tokens.SecurityTokenHandler> z klasy. W zależności od sposobu użycia tokenu może być również konieczne utworzenie niestandardowego programu rozpoznawania tokenów przez wytworzenie z <xref:System.IdentityModel.Tokens.IssuerTokenResolver> klasy, a także co najmniej jednego typu klauzuli niestandardowego identyfikatora klucza przez wyprowadzanie <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> z klasy.  
  
   
  
## Examples  
 Przykłady kodu, które są używane w <xref:System.IdentityModel.Tokens.SecurityToken> tematach, są pobierane `Custom Token` z przykładu. Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT). Zawiera implementację `SimpleWebToken` klasy `SimpleWebTokenHandler` i klasy, a także inne klasy, które obsługują tokeny SWT. Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i informacje o tym, gdzie je pobrać, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md). Poniższy kod przedstawia implementację `SimpleWebToken` klasy. Ta Klasa rozszerza <xref:System.IdentityModel.Tokens.SecurityToken>.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Należy zastąpić <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" />właściwości, <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />, <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />i. <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />Metody <see cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />, <see cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" /> ,<see cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />i obsługują<see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> wszystkie identyfikatory kluczy typu. Należy zastąpić te metody, aby obsługiwać inne typy identyfikatorów kluczy w klasie pochodnej.</para></block>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
    <altmember cref="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
    <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Wywoływane przez konstruktory w klasach pochodnych, <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> aby zainicjować klasę.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual bool CanCreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CanCreateKeyIdentifierClause : unit -&gt; bool (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CanCreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> określa identyfikator klucza do utworzenia.</typeparam>
        <summary>Pobiera wartość wskazującą, czy ten token zabezpieczający może utworzyć określony identyfikator klucza.</summary>
        <returns><see langword="true" />gdy <paramref name="T" /> jest typu <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />; w przeciwnym razie <see langword="false" />,.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> , aby określić, czy token zabezpieczający może utworzyć określony identyfikator klucza. Aby utworzyć identyfikator klucza, <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> Wywołaj metodę.  
  
 Implementacja domyślna obsługuje klauzule identyfikatora Key typu <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause virtual T CreateKeyIdentifierClause();" />
      <MemberSignature Language="F#" Value="abstract member CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)&#xA;override this.CreateKeyIdentifierClause : unit -&gt; 'T (requires 'T :&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" Usage="securityToken.CreateKeyIdentifierClause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> określa identyfikator klucza do utworzenia.</typeparam>
        <summary>Tworzy określoną klauzulę identyfikatora klucza.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> Jest to klauzula identyfikatora klucza dla tokenu zabezpieczającego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> , aby określić, czy token zabezpieczający może utworzyć określony identyfikator klucza. Aby utworzyć identyfikator klucza, <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> Wywołaj metodę.  
  
 Implementacja domyślna obsługuje klauzule identyfikatora Key typu <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. Jeśli nie można utworzyć klauzuli identyfikatora klucza <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> typu <xref:System.NotSupportedException> , jest zgłaszany.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator tokenu zabezpieczającego.</summary>
        <value>Unikatowy identyfikator tokenu zabezpieczającego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj gdy token zabezpieczający jest serializowany do kodu XML, `Id` atrybut dla tokenu zabezpieczeń jest ustawiony na wartość <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> właściwości.  
  
   
  
## Examples  
 Przykłady kodu, które są używane w <xref:System.IdentityModel.Tokens.SecurityToken> tematach, są pobierane `Custom Token` z przykładu. Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT). Zawiera implementację `SimpleWebToken` klasy `SimpleWebTokenHandler` i klasy, a także inne klasy, które obsługują tokeny SWT. Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i informacje o tym, gdzie je pobrać, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md). Poniższy kod przedstawia przesłonięcie <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> właściwości.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Należy zastąpić <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> właściwość.</para></block>
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.MatchesKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityToken.MatchesKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> Do porównania z tym wystąpieniem.</param>
        <param name="skiClause"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> Do porównania z tym wystąpieniem.</param>
        <summary>Zwraca wartość wskazującą, czy identyfikator klucza dla tego wystąpienia można rozpoznać do określonego identyfikatora klucza.</summary>
        <returns><see langword="true" />Jeśli <paramref name="keyIdentifierClause" /> <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> jest i ma taki sam unikatowy identyfikator jak właściwość; w przeciwnym razie <see langword="false" />. <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacja domyślna obsługuje klauzule identyfikatora klucza typu<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveKeyIdentifierClause (skiClause As SecurityKeyIdentifierClause) As SecurityKey" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ skiClause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey&#xA;override this.ResolveKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityToken.ResolveKeyIdentifierClause skiClause" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skiClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> , aby uzyskać klucz dla.</param>
        <param name="skiClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> , aby uzyskać klucz dla.</param>
        <summary>Pobiera klucz dla określonej klauzuli identyfikatora klucza.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityKey" /> Reprezentujący klucz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje, <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> aby najpierw określić, czy określona klauzula identyfikatora klucza jest taka sama jak to wystąpienie. <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A>  
  
 Domyślna <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> implementacja zwraca pierwszy element kolekcji, jeśli kolekcja nie jest pusta i jeśli <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> zwraca `true`; w przeciwnym razie zwraca wartość `null`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia <see cref="T:System.IdentityModel.Tokens.SecurityToken" />z i <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> implementowania metody i <paramref name="keyIdentifierClause" /> nie można jej rozpoznać, <see langword="null" />Return. Nie należy zgłaszać wyjątku z <see cref="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" /> metody.</para></block>
        <altmember cref="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <altmember cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera klucze kryptograficzne skojarzone z tokenem zabezpieczającym.</summary>
        <value><see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> Typu<see cref="T:System.IdentityModel.Tokens.SecurityKey" /> zawierającego zestaw kluczy skojarzonych z tokenem zabezpieczającym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> Użyj właściwości, aby ustawić klucze kryptograficzne dla tego tokenu zabezpieczającego w celu ochrony tokenów lub wiadomości protokołu SOAP. Klucze mogą być używane, między innymi, do cyfrowego podpisywania lub szyfrowania tokenów lub komunikatów SOAP.  
  
   
  
## Examples  
 Przykłady kodu, które są używane w <xref:System.IdentityModel.Tokens.SecurityToken> tematach, są pobierane `Custom Token` z przykładu. Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT). Zawiera implementację `SimpleWebToken` klasy `SimpleWebTokenHandler` i klasy, a także inne klasy, które obsługują tokeny SWT. Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i informacje o tym, gdzie je pobrać, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md). Poniższy kod przedstawia przesłonięcie <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> właściwości.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Należy zastąpić <see cref="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" /> właściwość.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pierwszą chwilę w czasie, w którym token zabezpieczający jest prawidłowy.</summary>
        <value><see cref="T:System.DateTime" /> Reprezentuje chwilę w czasie, w którym token zabezpieczający jest pierwszy ważny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> <xref:System.IdentityModel.Tokens.SecurityToken> i, aby określić czas, w którym token jest prawidłowy. <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> Właściwości <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> i<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> reprezentują pierwsze i ostatnie chwilę w czasie, w którym token zabezpieczający jest prawidłowy.  
  
   
  
## Examples  
 Przykłady kodu, które są używane w <xref:System.IdentityModel.Tokens.SecurityToken> tematach, są pobierane `Custom Token` z przykładu. Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT). Zawiera implementację `SimpleWebToken` klasy `SimpleWebTokenHandler` i klasy, a także inne klasy, które obsługują tokeny SWT. Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i informacje o tym, gdzie je pobrać, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md). Poniższy kod przedstawia przesłonięcie <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> właściwości.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Należy zastąpić <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> właściwość.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public abstract DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ostatnią chwilę w czasie, w którym token zabezpieczający jest prawidłowy.</summary>
        <value><see cref="T:System.DateTime" /> Reprezentuje ostatnią chwilę w czasie, w którym token zabezpieczający jest prawidłowy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> <xref:System.IdentityModel.Tokens.SecurityToken> i, aby określić czas, w którym token jest prawidłowy. <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> Właściwości <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> i<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> reprezentują pierwsze i ostatnie chwilę w czasie, w którym token zabezpieczający jest prawidłowy.  
  
   
  
## Examples  
 Przykłady kodu, które są używane w <xref:System.IdentityModel.Tokens.SecurityToken> tematach, są pobierane `Custom Token` z przykładu. Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT). Zawiera implementację `SimpleWebToken` klasy `SimpleWebTokenHandler` i klasy, a także inne klasy, które obsługują tokeny SWT. Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i informacje o tym, gdzie je pobrać, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md). Poniższy kod przedstawia przesłonięcie <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> właściwości.  
  
 [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  
[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  
[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  
[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Należy zastąpić <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> właściwość.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
