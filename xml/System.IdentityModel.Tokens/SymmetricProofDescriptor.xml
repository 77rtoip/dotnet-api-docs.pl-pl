<Type Name="SymmetricProofDescriptor" FullName="System.IdentityModel.Tokens.SymmetricProofDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1c59de58aca5132f1ac6c5f1170b1301d120e78" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36480062" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SymmetricProofDescriptor : System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymmetricProofDescriptor extends System.IdentityModel.Tokens.ProofDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Class SymmetricProofDescriptor&#xA;Inherits ProofDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricProofDescriptor : System::IdentityModel::Tokens::ProofDescriptor" />
  <TypeSignature Language="F#" Value="type SymmetricProofDescriptor = class&#xA;    inherit ProofDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.ProofDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="772bf-101">Ta klasa może służyć do wystawiania token na podstawie klucza symetrycznego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="772bf-101">This class can be used for issuing the symmetric key based token.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="772bf-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-102">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor targetWrappingCredentials" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="772bf-103">
            <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> Do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-103">The <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="772bf-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> klasy z określonymi poświadczeniami szyfrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-104">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified encrypting credentials.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="772bf-105">Użyć tego konstruktora, jeśli STS do używania określonego <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span><span class="sxs-lookup"><span data-stu-id="772bf-105">Use this constructor if you want the STS to use the specified <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (byte[] key, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte(), targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(cli::array &lt;System::Byte&gt; ^ key, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : byte[] * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (key, targetWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="772bf-106">Klucz symetryczny używany wewnątrz wystawionego tokenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-106">The symmetric key that is used inside the issued token.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="772bf-107">Klucz szyfrowania poświadczeń dla jednostki uzależnionej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-107">The key encrypting credentials for the relying party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="772bf-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> klasy z określonego materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-108">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with the specified key material.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="772bf-109">Ten konstruktor należy użyć, jeśli usługa tokenu Zabezpieczającego do używania określonych bajtów klucza.</span><span class="sxs-lookup"><span data-stu-id="772bf-109">Use this constructor if you want the STS to use the specified key bytes.</span></span> <span data-ttu-id="772bf-110">Dzieje się tak, gdy klient wysyła entropii i usługi STS będzie użyć jako klucza wystawionego tokenu.</span><span class="sxs-lookup"><span data-stu-id="772bf-110">This happens when client sends the entropy, and the STS would just use that as the key for the issued token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="772bf-111">
            <paramref name="key" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-111">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="772bf-112">Rozmiar klucza symetrycznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-112">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="772bf-113">Klucz szyfrowania poświadczeń dla obiektu docelowego żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-113">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="772bf-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> klasy przy użyciu automatycznego generowania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-114">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="772bf-115">Ten konstruktor należy użyć, jeśli usługa tokenu Zabezpieczającego do automatycznego generowania klucza za pomocą generatora liczb losowych, a następnie wysłać je w tokenie potwierdzającym jako sekretu binarnego.</span><span class="sxs-lookup"><span data-stu-id="772bf-115">Use this constructor if you want the STS to auto-generate the key using a random number generator and send it in the proof token as a binary secret.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="772bf-116">Rozmiar klucza symetrycznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-116">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="772bf-117">Klucz szyfrowania poświadczeń dla obiektu docelowego żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-117">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="772bf-118">Klucz szyfrowania poświadczeń dla obiekt żądający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-118">The key encrypting credentials for the requestor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="772bf-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> klasy przy użyciu automatycznego generowania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-119">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class with an auto-generated key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="772bf-120">Ten konstruktor należy użyć, jeśli usługa tokenu Zabezpieczającego do automatycznego generowania klucza, a następnie wysłać je w tokenie potwierdzającym jako zaszyfrowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="772bf-120">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="772bf-121">Za pomocą tego konstruktora może być objętych przypadków:</span><span class="sxs-lookup"><span data-stu-id="772bf-121">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="772bf-122">Klient wysyła entropii, ale serwer odrzuca go.</span><span class="sxs-lookup"><span data-stu-id="772bf-122">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="772bf-123">Klient nie wysyła entropii, więc entropii serwera jest używany.</span><span class="sxs-lookup"><span data-stu-id="772bf-123">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="772bf-124">
            <paramref name="keySizeInBits" /> jest mniejsza lub równa zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-124">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * byte[] -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, sourceEntropy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="772bf-125">Rozmiar klucza symetrycznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-125">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="772bf-126">Klucz szyfrowania poświadczeń dla obiektu docelowego żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-126">The key encrypting credentials for the target of the request.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="772bf-127">Poświadczenia szyfrowania używany do szyfrowania entropii lub token potwierdzenia obiektu żądającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-127">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span>
          </span>
        </param>
        <param name="sourceEntropy">
          <span data-ttu-id="772bf-128">Entropii obiektu żądającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-128">The requestor's entropy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="772bf-129">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> klasy na potrzeby wysyłania łączyć entropii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-129">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="772bf-130">Użyj tego konstruktora, jeśli chcesz wysłać Scalonej entropii.</span><span class="sxs-lookup"><span data-stu-id="772bf-130">Use this constructor if you want to send a combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="772bf-131">
            <paramref name="sourceEntropy" /> jest <see langword="null" /> albo być pustą tablicą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-131">
              <paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="772bf-132">
            <paramref name="keySize" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-132">
              <paramref name="keySize" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, System::String ^ encryptWith);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * string -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, encryptWith)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="772bf-133">Rozmiar klucza symetrycznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-133">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="772bf-134">Klucz szyfrowania poświadczeń dla jednostki uzależnionej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-134">The key encrypting credentials for the relying party.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="772bf-135">Klucz szyfrowania poświadczeń dla obiekt żądający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-135">The key encrypting credentials for the requestor.</span>
          </span>
        </param>
        <param name="encryptWith">
          <span data-ttu-id="772bf-136">Algorytm (URI) określona w <see langword="&lt;EncryptWith&gt;" /> element RST.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-136">The algorithm (URI) specified in the <see langword="&lt;EncryptWith&gt;" /> element of the RST.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="772bf-137">Ten konstruktor umożliwia ma STS autogenerate klucza, a następnie wyślij ją w tokenie potwierdzającym jako zaszyfrowanego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-137">Use this constructor to have the STS autogenerate a key and send it in the proof token as encrypted key.</span>
          </span>
          <span data-ttu-id="772bf-138">Dwa przypadki są objęte usługą 1 tutaj.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-138">Two cases are covered here 1.</span>
          </span>
          <span data-ttu-id="772bf-139">Klient wysyła entropii, ale serwer odrzuca 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-139">client sends the entropy, but server rejects it 2.</span>
          </span>
          <span data-ttu-id="772bf-140">klienta nie wysyłanie entropii, więc wystarczy użyć entropii serwera</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-140">client did not send a entropy, so just use server's entropy</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="772bf-141">Jeśli `encryptWith` jest algorytm 3DES, klucz jest gwarantowana nie mają słaby klucza DES.</span><span class="sxs-lookup"><span data-stu-id="772bf-141">If `encryptWith` is a DES algorithm, the key is guaranteed not to be a weak DES key.</span></span>  
  
 <span data-ttu-id="772bf-142">Ten konstruktor należy użyć, jeśli usługa tokenu Zabezpieczającego do automatycznego generowania klucza, a następnie wysłać je w tokenie potwierdzającym jako zaszyfrowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="772bf-142">Use this constructor if you want the STS to auto-generate the key and send it in the proof token as encrypted key.</span></span> <span data-ttu-id="772bf-143">Za pomocą tego konstruktora może być objętych przypadków:</span><span class="sxs-lookup"><span data-stu-id="772bf-143">Two cases can be covered by using this constructor:</span></span>  
  
1.  <span data-ttu-id="772bf-144">Klient wysyła entropii, ale serwer odrzuca go.</span><span class="sxs-lookup"><span data-stu-id="772bf-144">The client sends the entropy, but the server rejects it.</span></span>  
  
2.  <span data-ttu-id="772bf-145">Klient nie wysyła entropii, więc entropii serwera jest używany.</span><span class="sxs-lookup"><span data-stu-id="772bf-145">The client does not send the entropy, so the server's entropy is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="772bf-146">
            <paramref name="keySizeInBits" /> jest mniejsza lub równa zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-146">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymmetricProofDescriptor (int keySizeInBits, System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, byte[] sourceEntropy, string encryptWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keySizeInBits, class System.IdentityModel.Tokens.EncryptingCredentials targetWrappingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials requestorWrappingCredentials, unsigned int8[] sourceEntropy, string encryptWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keySizeInBits As Integer, targetWrappingCredentials As EncryptingCredentials, requestorWrappingCredentials As EncryptingCredentials, sourceEntropy As Byte(), encryptWith As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymmetricProofDescriptor(int keySizeInBits, System::IdentityModel::Tokens::EncryptingCredentials ^ targetWrappingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ requestorWrappingCredentials, cli::array &lt;System::Byte&gt; ^ sourceEntropy, System::String ^ encryptWith);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SymmetricProofDescriptor : int * System.IdentityModel.Tokens.EncryptingCredentials * System.IdentityModel.Tokens.EncryptingCredentials * byte[] * string -&gt; System.IdentityModel.Tokens.SymmetricProofDescriptor" Usage="new System.IdentityModel.Tokens.SymmetricProofDescriptor (keySizeInBits, targetWrappingCredentials, requestorWrappingCredentials, sourceEntropy, encryptWith)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="targetWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="requestorWrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="sourceEntropy" Type="System.Byte[]" />
        <Parameter Name="encryptWith" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keySizeInBits">
          <span data-ttu-id="772bf-147">Rozmiar klucza symetrycznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-147">The size of the symmetric key.</span>
          </span>
        </param>
        <param name="targetWrappingCredentials">
          <span data-ttu-id="772bf-148">Szyfrowania poświadczeń dla jednostki uzależnionej używany do szyfrowania klucza we właściwości identyfikatora SecurityKeyIdentifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-148">The encrypting credentials for the relying party used to encrypt the key in the SecurityKeyIdentifier property.</span>
          </span>
        </param>
        <param name="requestorWrappingCredentials">
          <span data-ttu-id="772bf-149">Poświadczenia szyfrowania używany do szyfrowania entropii lub token potwierdzenia obiektu żądającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-149">The encrypting credentials for the requestor used to encrypt the entropy or the proof token.</span>
          </span>
        </param>
        <param name="sourceEntropy">
          <span data-ttu-id="772bf-150">Entropii obiektu żądającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-150">The requestor's entropy.</span>
          </span>
        </param>
        <param name="encryptWith">
          <span data-ttu-id="772bf-151">Identyfikator URI algorytmu służące do szyfrowania klucza potwierdzającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-151">The URI of the algorithm to use to encrypt the proof key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="772bf-152">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> klasy na potrzeby wysyłania łączyć entropii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-152">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" /> class to use for sending combined entropy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="772bf-153">Ten konstruktor umożliwia wysłanie Scalonej entropii.</span><span class="sxs-lookup"><span data-stu-id="772bf-153">Use this constructor to send combined entropy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="772bf-154">
            <paramref name="keySizeInBits" /> jest mniejsza lub równa zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-154">
              <paramref name="keySizeInBits" /> is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="772bf-155">
            <paramref name="sourceEntropy" /> jest <see langword="null" /> albo być pustą tablicą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-155">
              <paramref name="sourceEntropy" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTo">
      <MemberSignature Language="C#" Value="public override void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyTo(class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ApplyTo (response As RequestSecurityTokenResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyTo(System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ response);" />
      <MemberSignature Language="F#" Value="override this.ApplyTo : System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse -&gt; unit" Usage="symmetricProofDescriptor.ApplyTo response" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />
      </Parameters>
      <Docs>
        <param name="response">
          <span data-ttu-id="772bf-156">Odpowiedź RSTR, do którego należy zastosować potwierdzającego deskryptora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-156">The RSTR to which to apply the proof descriptor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="772bf-157">Modyfikuje określony odpowiedź RSTR zgodnie z ustawieniami w tym potwierdzającego deskryptora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-157">Modifies the specified RSTR based on the settings in this proof descriptor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="772bf-158">Ustawia odpowiednie artefaktów, takich jak żądany token potwierdzenia w komunikacie RSTR oparte na zawartość jest widoczna wystąpienia potwierdzającego deskryptora.</span><span class="sxs-lookup"><span data-stu-id="772bf-158">Sets the appropriate artifacts, such as the requested proof token, inside the RSTR based on what is inside the proof descriptor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="772bf-159">
            <paramref name="response" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-159">
              <paramref name="response" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyBytes">
      <MemberSignature Language="C#" Value="public byte[] GetKeyBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetKeyBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKeyBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetKeyBytes();" />
      <MemberSignature Language="F#" Value="member this.GetKeyBytes : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetKeyBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="772bf-160">Pobiera materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-160">Gets the key material.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="772bf-161">Tablica bajtów, który zawiera materiału klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-161">A byte array that contains the key material.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetSourceEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetSourceEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetSourceEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetSourceEntropy();" />
      <MemberSignature Language="F#" Value="member this.GetSourceEntropy : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetSourceEntropy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="772bf-162">Pobiera Źródło entropii w zwykłym bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-162">Gets the source entropy in plain bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="772bf-163">Tablica bajtów, która zawiera źródło entropii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-163">A byte array that contains the source entropy.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetEntropy">
      <MemberSignature Language="C#" Value="protected byte[] GetTargetEntropy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] GetTargetEntropy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTargetEntropy () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Byte&gt; ^ GetTargetEntropy();" />
      <MemberSignature Language="F#" Value="member this.GetTargetEntropy : unit -&gt; byte[]" Usage="symmetricProofDescriptor.GetTargetEntropy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="772bf-164">Pobiera entropii docelowego w zwykłym bajtów</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-164">Gets the target entropy in plain bytes</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="772bf-165">Tablica bajtów zawiera entropii docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-165">A byte array that contains the target entropy.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyIdentifier">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier KeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ KeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="772bf-166">Pobiera identyfikator klucza, który może być używany w wystawionego tokenu, aby zdefiniować klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-166">Gets the key identifier that can be used inside the issued token to define the key.</span>
          </span>
          <span data-ttu-id="772bf-167">Zazwyczaj jest to sekretu binarnego lub zaszyfrowany klucz;</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-167">It is usually the binary secret or the encrypted key;</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="772bf-168">Identyfikator klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-168">The key identifier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestorEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials RequestorEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RequestorEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ RequestorEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestorEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="772bf-169">Pobiera obiektu żądającego szyfrowania poświadczeń, które mogą być używane do szyfrowania żądany token potwierdzenia lub entropii w odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-169">Gets the requestor's encrypting credentials, which may be used to encrypt the requested proof token or the entropy in the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="772bf-170">Obiektu żądającego szyfrowania poświadczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-170">The requestor’s encrypting credentials.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials TargetEncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property TargetEncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ TargetEncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="772bf-171">Pobiera uzależnionej szyfrowania poświadczeń, które mogą być używane do szyfrowania zabezpieczeń żądanego tokenu w odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-171">Gets the relying party encrypting credentials, which may be used to encrypt the requested security token in the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="772bf-172">Uzależnionej szyfrowania poświadczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="772bf-172">The relying party encrypting credentials.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>