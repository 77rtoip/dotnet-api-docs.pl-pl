<Type Name="SecurityTokenHandler" FullName="System.IdentityModel.Tokens.SecurityTokenHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db6ee2647211996474244058d82b42c4ff2a279b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69279432" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenHandler : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenHandler extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenHandler&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenHandler abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type SecurityTokenHandler = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6d97c-101">Abstrakcyjna klasa bazowa dla programów obsługi tokenów zabezpieczających.</span><span class="sxs-lookup"><span data-stu-id="6d97c-101">The abstract base class for security token handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-102"><xref:System.IdentityModel.Tokens.SecurityTokenHandler> Klasa jest klasą bazową, z której pochodzą wszystkie programy obsługi tokenów zabezpieczających.</span><span class="sxs-lookup"><span data-stu-id="6d97c-102">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class is the base class from which all security token handlers derive.</span></span> <span data-ttu-id="6d97c-103">Program obsługi tokenów zabezpieczających jest odpowiedzialny za:</span><span class="sxs-lookup"><span data-stu-id="6d97c-103">A security token handler is responsible for:</span></span>  
  
-   <span data-ttu-id="6d97c-104">Sprawdzanie poprawności tokenów<xref:System.IdentityModel.Tokens.SecurityToken>zabezpieczeń () typu, który jest przeznaczony do przetwarzania i pakowania oświadczeń zawartych w tokenie <xref:System.Security.Claims.ClaimsIdentity> do obiektu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-104">Validating security tokens (<xref:System.IdentityModel.Tokens.SecurityToken>) of the type it is designed to process and packaging the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity> object.</span></span>  
  
-   <span data-ttu-id="6d97c-105">Serializacja i deserializacja tokenów zabezpieczających typu, który jest przeznaczony do przetworzenia.</span><span class="sxs-lookup"><span data-stu-id="6d97c-105">Serializing and deserializing security tokens of the type it is designed to process.</span></span>  
  
-   <span data-ttu-id="6d97c-106">Serializacja i deserializacja klauzul identyfikatora klucza (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>), które odnoszą się do tokenów typu, jest przeznaczony do przetworzenia do i z `<wsse:SecurityTokenReference>` elementów.</span><span class="sxs-lookup"><span data-stu-id="6d97c-106">Serializing and deserializing key identifier clauses (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that refer to tokens of the type it is designed to process to and from `<wsse:SecurityTokenReference>` elements.</span></span>  
  
-   <span data-ttu-id="6d97c-107">Tworzenie tokenów zabezpieczających <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> na podstawie obiektu, który został <xref:System.IdentityModel.SecurityTokenService> przesłany przez implementacje klasy.</span><span class="sxs-lookup"><span data-stu-id="6d97c-107">Creating security tokens from a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> object passed by implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
-   <span data-ttu-id="6d97c-108">Tworzenie klauzul identyfikatora klucza z tokenu zabezpieczającego dla implementacji <xref:System.IdentityModel.SecurityTokenService> klasy.</span><span class="sxs-lookup"><span data-stu-id="6d97c-108">Creating key identifier clauses from a security token for implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="6d97c-109">Platforma Windows Identity Foundation (WIF) dostarcza następujące programy obsługi tokenów zabezpieczających:</span><span class="sxs-lookup"><span data-stu-id="6d97c-109">Windows Identity Foundation (WIF) ships the following security token handlers out of the box:</span></span>  
  
-   <xref:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.KerberosSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.RsaSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.Saml2SecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler>  
  
-   <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler>  
  
 <span data-ttu-id="6d97c-110">Większość z tych klas uwidacznia dodatkowe elementy członkowskie, które implementują funkcje specyficzne dla przetwarzania tokenów, dla których Klasa jest zaprojektowana.</span><span class="sxs-lookup"><span data-stu-id="6d97c-110">Most of these classes expose additional members that implement functionality that is specific to the processing of the tokens for which the class is designed.</span></span> <span data-ttu-id="6d97c-111">W wielu przypadkach lepszym rozwiązaniem może być pochodzenie z jednej z tych klas zamiast bezpośrednio z <xref:System.IdentityModel.Tokens.SecurityTokenHandler> klasy.</span><span class="sxs-lookup"><span data-stu-id="6d97c-111">In many cases it may be better to derive from one of these classes rather than directly from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class.</span></span>  
  
 <span data-ttu-id="6d97c-112">Program obsługi tokenów zabezpieczających można dodać lub usunąć z kolekcji obsługi tokenów, określając [ &lt;Dodaj&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)lub [ &lt;Wyczyść&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elementy w elemencie [&gt; SecurityTokenHandler w pliku konfiguracji. &lt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</span><span class="sxs-lookup"><span data-stu-id="6d97c-112">A security token handler can be added or removed from  a token handler collection by specifying the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md), [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md), or [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/clear.md) elements under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element in a configuration file.</span></span> <span data-ttu-id="6d97c-113">Do obiektu, który zawiera ustawienia konfiguracji dla kolekcji programu obsługi, można uzyskać dostęp <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> za pośrednictwem właściwości i kolekcji obsługi, do której jest członkiem programu obsługi tokenów, <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> można uzyskać dostęp z właściwości. <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration></span><span class="sxs-lookup"><span data-stu-id="6d97c-113">The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> object that contains the configuration settings for the handler collection can be accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property and the handler collection that the token handler is a member of can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection%2A> property.</span></span> <span data-ttu-id="6d97c-114">Można zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> metodę, aby przetwarzać wszelkie niestandardowe elementy konfiguracji, które zajmie program obsługi.</span><span class="sxs-lookup"><span data-stu-id="6d97c-114">You can override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method to process any custom configuration elements that your handler takes.</span></span>  
  
 <span data-ttu-id="6d97c-115"><xref:System.IdentityModel.Tokens.SecurityTokenHandler> Klasa uwidacznia kilka innych właściwości i metod.</span><span class="sxs-lookup"><span data-stu-id="6d97c-115">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class exposes several other properties and methods.</span></span> <span data-ttu-id="6d97c-116">W zależności od funkcji wybranych do zaimplementowania można zastąpić niektóre lub wszystkie te elementy.</span><span class="sxs-lookup"><span data-stu-id="6d97c-116">Depending on the functionality that you choose to implement, you may override some or all of these members.</span></span>  
  
 <span data-ttu-id="6d97c-117">Należy zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> Właściwość <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> i metodę, aby zapewnić infrastrukturę WIF z informacjami o typie tokenu zabezpieczającego, który ma być przetwarzany przez klasę.</span><span class="sxs-lookup"><span data-stu-id="6d97c-117">You must override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to provide the WIF infrastructure with information about the type of security token that your class is designed to process.</span></span>  
  
 <span data-ttu-id="6d97c-118">Funkcje walidacji, serializacji i deserializacji są udostępniane za pomocą właściwości lub metod, które wskazują, czy program obsługi może wykonać konkretną funkcję w połączeniu z metodą lub metodami, które implementują funkcjonalność.</span><span class="sxs-lookup"><span data-stu-id="6d97c-118">Validation, serialization, and deserialization functionality is exposed through properties or methods that indicate whether the handler can perform a specific function combined with the method or methods that implement the functionality.</span></span> <span data-ttu-id="6d97c-119">Poniższa lista par właściwości lub metod, które wskazują funkcjonalność z metodami, które implementują tę funkcjonalność:</span><span class="sxs-lookup"><span data-stu-id="6d97c-119">The following list pairs the properties or methods that indicate functionality with the methods that implement that functionality:</span></span>  
  
-   <span data-ttu-id="6d97c-120"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> Właściwość<xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> i Metoda: Sprawdza poprawność tokenu i pakietów oświadczeń zawartych w tokenie do <xref:System.Security.Claims.ClaimsIdentity>.</span><span class="sxs-lookup"><span data-stu-id="6d97c-120">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property and  the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method: Validates a token and packages the claims contained in the token into a <xref:System.Security.Claims.ClaimsIdentity>.</span></span>  
  
-   <span data-ttu-id="6d97c-121"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> Właściwość<xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> i metody: Serializacja tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-121">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods: Token serialization.</span></span>  
  
-   <span data-ttu-id="6d97c-122"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> Metody<xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> i metody: Deserializacja tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-122">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> methods and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> methods: Token deserialization.</span></span>  
  
-   <span data-ttu-id="6d97c-123"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> Metoda<xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> i Metoda: Deserializacja klauzul identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="6d97c-123">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method: Deserializing key identifier clauses.</span></span>  
  
-   <span data-ttu-id="6d97c-124"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> Metoda<xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> i Metoda: Serializowanie klauzul identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="6d97c-124">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method: Serializing key identifier clauses.</span></span>  
  
 <span data-ttu-id="6d97c-125">Metody i są wywoływane z <xref:System.IdentityModel.SecurityTokenService> potoku w implementacjach klasy. <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A></span><span class="sxs-lookup"><span data-stu-id="6d97c-125">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> and the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> methods are called from the pipeline in implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="6d97c-126"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> Metoda jest wywoływana przez infrastrukturę WIF w celu określenia, czy określony token został już odebrany.</span><span class="sxs-lookup"><span data-stu-id="6d97c-126">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is called by the WIF infrastructure to determine whether the specified token has already been received.</span></span> <span data-ttu-id="6d97c-127">Domyślnie ta metoda zwraca `false`, co oznacza, że token nie został jeszcze odebrany.</span><span class="sxs-lookup"><span data-stu-id="6d97c-127">By default this method returns `false`, which indicates that the token has not already been received.</span></span> <span data-ttu-id="6d97c-128">Można zastąpić metodę i zapewnić logikę w celu wykrycia powtarzających się tokenów.</span><span class="sxs-lookup"><span data-stu-id="6d97c-128">You can override the method and provide logic to detect replayed tokens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d97c-129">Przykłady kodu we wszystkich <xref:System.IdentityModel.Tokens.SecurityTokenHandler> tematach są pobierane `Custom Token` z przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-129">The code examples in all of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="6d97c-130">Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="6d97c-130">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="6d97c-131">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-131">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="6d97c-132">W poniższym kodzie XML pokazano, jak dodać program obsługi tokenów SWT do kolekcji obsługi tokenów.</span><span class="sxs-lookup"><span data-stu-id="6d97c-132">The following XML shows how to add the SWT token handler to the token handlers collection.</span></span>  
  
```xml  
<system.identityModel>  
  <identityConfiguration saveBootstrapContext="true">  
    <issuerTokenResolver type="SimpleWebToken.CustomIssuerTokenResolver, SimpleWebToken">  
      <AddAudienceKeyPair  symmetricKey="wAVkldQiFypTQ+kdNdGWCYCHRcee8XmXxOvgmak8vSY=" audience="http://localhost:19851/" />  
    </issuerTokenResolver>  
    <issuerNameRegistry type="RelyingParty.TrustedIssuerNameRegistry, RelyingParty"/>  
    <audienceUris>  
      <add value="http://localhost:19851/"/>  
    </audienceUris>  
    <securityTokenHandlers>  
      <add type="SimpleWebToken.SimpleWebTokenHandler, SimpleWebToken" />  
    </securityTokenHandlers>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d97c-133">Wywoływana z konstruktorów w klasach pochodnych w <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> celu zainicjowania klasy.</span><span class="sxs-lookup"><span data-stu-id="6d97c-133">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool&#xA;override this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="securityTokenHandler.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6d97c-134">Czytnik XML umieszczony w elemencie początkowym.</span><span class="sxs-lookup"><span data-stu-id="6d97c-134">An XML reader positioned at the start element.</span></span> <span data-ttu-id="6d97c-135">Czytnik nie powinien być zaawansowany przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="6d97c-135">The reader should not be advanced by this method.</span></span></param>
        <summary><span data-ttu-id="6d97c-136">Zwraca wartość wskazującą, czy element XML, do którego odwołuje się określony obiekt odczytujący XML, to klauzula identyfikatora klucza, którą można deserializować przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-136">Returns a value that indicates whether the XML element referred to by the specified XML reader is a key identifier clause that can be deserialized by this instance.</span></span></summary>
        <returns><span data-ttu-id="6d97c-137"><see langword="true" />Jeśli metoda może odczytać element; <see langword="false" />w przeciwnym razie. <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /></span><span class="sxs-lookup"><span data-stu-id="6d97c-137"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d97c-138">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d97c-138">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-139">Domyślną implementację zwraca `false` , aby wskazać, że nie można odczytać klauzuli identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="6d97c-139">The default implementation returns `false` to indicate that the key identifier clause cannot be read.</span></span>  
  
 <span data-ttu-id="6d97c-140">Klasa pochodna sprawdza element, do którego odwołuje się czytnik, aby określić, czy wystąpienie może deserializować klauzulę identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="6d97c-140">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a key identifier clause.</span></span> <span data-ttu-id="6d97c-141">Jest to zazwyczaj realizowane przez wywołanie <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> metody z odpowiednimi określonymi ciągami elementów i przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="6d97c-141">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A?displayProperty=nameWithType> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="6d97c-142">W przypadku przesłonięcia <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>należy również <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> zastąpić metodę, aby zapewnić logikę do deserializacji klauzuli identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="6d97c-142">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause%2A> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d97c-143">Zwraca wartość wskazującą, czy określony token może być deserializowany jako token typu przetworzonego przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-143">Returns a value that indicates whether the specified token can be deserialized as a token of the type processed by this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (tokenString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::String ^ tokenString);" />
      <MemberSignature Language="F#" Value="abstract member CanReadToken : string -&gt; bool&#xA;override this.CanReadToken : string -&gt; bool" Usage="securityTokenHandler.CanReadToken tokenString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString"><span data-ttu-id="6d97c-144">Ciąg tokenu, który ma zostać odczytany.</span><span class="sxs-lookup"><span data-stu-id="6d97c-144">The token string to read.</span></span></param>
        <summary><span data-ttu-id="6d97c-145">Zwraca wartość wskazującą, czy określony ciąg może być deserializowany jako token typu przetworzonego przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-145">Returns a value that indicates whether the specified string can be deserialized as a token of the type processed by this instance.</span></span></summary>
        <returns><span data-ttu-id="6d97c-146"><see langword="true" />Jeśli metoda może odczytać element; <see langword="false" />w przeciwnym razie. <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /></span><span class="sxs-lookup"><span data-stu-id="6d97c-146"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d97c-147">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d97c-147">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-148">Domyślna implementacja zawsze zwraca wartość `false`.</span><span class="sxs-lookup"><span data-stu-id="6d97c-148">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="6d97c-149">Jeśli zastąpisz tę metodę, należy również zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> metodę, aby zapewnić logikę do deserializacji tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-149">If you override this method, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public virtual bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadToken : System.Xml.XmlReader -&gt; bool&#xA;override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="securityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6d97c-150">Czytnik XML umieszczony w elemencie początkowym.</span><span class="sxs-lookup"><span data-stu-id="6d97c-150">An XML reader positioned at a start element.</span></span> <span data-ttu-id="6d97c-151">Czytnik nie powinien być zaawansowany przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="6d97c-151">The reader should not be advanced by this method.</span></span></param>
        <summary><span data-ttu-id="6d97c-152">Zwraca wartość wskazującą, czy element XML, do którego odwołuje się określony czytnik XML, może być odczytywany jako token typu przetworzonego przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-152">Returns a value that indicates whether the XML element referenced by the specified XML reader can be read as a token of the type processed by this instance.</span></span></summary>
        <returns><span data-ttu-id="6d97c-153"><see langword="true" />Jeśli metoda może odczytać element; <see langword="false" />w przeciwnym razie. <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /></span><span class="sxs-lookup"><span data-stu-id="6d97c-153"><see langword="true" /> if the <see cref="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" /> method can read the element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d97c-154">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d97c-154">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-155">Domyślna implementacja zawsze zwraca wartość `false`.</span><span class="sxs-lookup"><span data-stu-id="6d97c-155">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="6d97c-156">Klasa pochodna sprawdza element, do którego odwołuje się czytnik, aby określić, czy wystąpienie może deserializować token zabezpieczający.</span><span class="sxs-lookup"><span data-stu-id="6d97c-156">A derived class checks the element that the reader is referring to in order to determine whether the instance can deserialize a security token.</span></span> <span data-ttu-id="6d97c-157">Jest to zazwyczaj realizowane przez wywołanie <xref:System.Xml.XmlReader.IsStartElement%2A> metody z odpowiednimi określonymi ciągami elementów i przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="6d97c-157">This is typically accomplished through a call to the <xref:System.Xml.XmlReader.IsStartElement%2A> method with the appropriate element and namespace strings specified.</span></span> <span data-ttu-id="6d97c-158">W przypadku przesłonięcia <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>należy również <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> zastąpić metodę lub <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> metodę, aby zapewnić logikę do deserializacji klauzuli identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="6d97c-158">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method or the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method to provide the logic to deserialize the key identifier clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d97c-159">Poniższy kod przedstawia sposób przesłania <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> metody w celu ustalenia, czy token może być odczytywany przez program obsługi.</span><span class="sxs-lookup"><span data-stu-id="6d97c-159">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A> method to determine whether a token can be read by a handler.</span></span> <span data-ttu-id="6d97c-160">Kod jest pobierany z `Custom Token` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-160">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="6d97c-161">Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="6d97c-161">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="6d97c-162">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-162">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public virtual bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d97c-163">Pobiera wartość wskazującą, czy program obsługi obsługuje walidację tokenów zabezpieczających.</span><span class="sxs-lookup"><span data-stu-id="6d97c-163">Gets a value that indicates whether the handler supports validation of security tokens.</span></span></summary>
        <value><span data-ttu-id="6d97c-164"><see langword="true" />Jeśli klasa może sprawdzać poprawność tokenów zabezpieczających; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="6d97c-164"><see langword="true" /> if the class is capable of validating security tokens; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d97c-165">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d97c-165">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-166">Aby zaimplementować walidację w klasie pochodnej, Przesłoń tę właściwość w `true` celu zwrócenia i <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> zastąpienia metody w celu zaimplementowania logiki walidacji.</span><span class="sxs-lookup"><span data-stu-id="6d97c-166">To implement validation in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method to implement the validation logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d97c-167">Poniższy kod pokazuje, jak zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> właściwość, aby wskazać, że obsługa niestandardowa może weryfikować tokeny.</span><span class="sxs-lookup"><span data-stu-id="6d97c-167">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken%2A> property to indicate that a custom handler can validate tokens.</span></span> <span data-ttu-id="6d97c-168">Kod jest pobierany z `Custom Token` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-168">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="6d97c-169">Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="6d97c-169">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="6d97c-170">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-170">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool&#xA;override this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenHandler.CanWriteKeyIdentifierClause securityKeyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="6d97c-171">Klauzula identyfikatora klucza do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="6d97c-171">The key identifier clause to be checked.</span></span></param>
        <summary><span data-ttu-id="6d97c-172">Zwraca wartość wskazującą, czy określona klauzula identyfikatora klucza może być serializowana przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-172">Returns a value that indicates whether the specified key identifier clause can be serialized by this instance.</span></span></summary>
        <returns><span data-ttu-id="6d97c-173"><see langword="true" />Jeśli klauzula identyfikatora klucza może być serializowana; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="6d97c-173"><see langword="true" /> if the key identifier clause can be serialized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d97c-174">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d97c-174">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-175">Domyślna implementacja zawsze zwraca wartość `false`.</span><span class="sxs-lookup"><span data-stu-id="6d97c-175">The default implementation always returns `false`.</span></span>  
  
 <span data-ttu-id="6d97c-176">W przypadku przesłonięcia <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>należy również <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> zastąpić metodę, aby zapewnić logikę do serializacji klauzuli identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="6d97c-176">If you override <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A>, you must also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause%2A> method to provide the logic to serialize the key identifier clause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d97c-177">Pobiera wartość wskazującą, czy program obsługi może serializować tokeny zabezpieczające.</span><span class="sxs-lookup"><span data-stu-id="6d97c-177">Gets a value that indicates whether the handler can serialize security tokens.</span></span></summary>
        <value><span data-ttu-id="6d97c-178"><see langword="true" />Jeśli klasa jest w stanie serializacji tokenów; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-178"><see langword="true" /> if the class is capable of serializing tokens; otherwise <see langword="false" />.</span></span> <span data-ttu-id="6d97c-179">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6d97c-179">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-180">Aby zaimplementować serializację w klasie pochodnej, Przesłoń tę właściwość w celu `true` zwrócenia i <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> zastąpienia metod w celu zaimplementowania logiki serializacji.</span><span class="sxs-lookup"><span data-stu-id="6d97c-180">To implement serialization in a derived class, override this property to return `true` and override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> methods to implement the serialization logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d97c-181">Poniższy kod pokazuje, jak zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> właściwość, aby wskazać, że obsługa niestandardowa może serializować tokeny.</span><span class="sxs-lookup"><span data-stu-id="6d97c-181">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property to indicate that a custom handler can serialize tokens.</span></span> <span data-ttu-id="6d97c-182">Kod jest pobierany z `Custom Token` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-182">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="6d97c-183">Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="6d97c-183">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="6d97c-184">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-184">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Configuration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberSignature Language="VB.NET" Value="Public Property Configuration As SecurityTokenHandlerConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ Configuration { System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenHandlerConfiguration ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Configuration : System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration with get, set" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d97c-185">Pobiera lub ustawia <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> obiekt, który zapewnia konfigurację dla bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6d97c-185">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /> object that provides configuration for the current instance.</span></span></summary>
        <value><span data-ttu-id="6d97c-186">Obiekt konfiguracji dla bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6d97c-186">The configuration object for the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-187">Właściwość jest zazwyczaj ustawiana przez infrastrukturę konfiguracji [ &lt;z elementu securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) w pliku konfiguracji podczas uruchamiania aplikacji. <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A></span><span class="sxs-lookup"><span data-stu-id="6d97c-187">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property is typically set by the configuration infrastructure from the [&lt;securityTokenHandlerConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) element in the configuration file during application start up.</span></span>  
  
 <span data-ttu-id="6d97c-188">W klasach pochodnych <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> właściwość służy do uzyskiwania dostępu do ustawień konfiguracji. na przykład <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> można uzyskać dostęp do rejestru nazwy wystawcy <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> , który ma być używany w metodzie, z właściwości obiektu konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="6d97c-188">In derived classes, you use the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property to access configuration settings; for example, the issuer name registry to use in the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method can be accessed from the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> property of the configuration object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingCollection">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenHandlerCollection ContainingCollection" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainingCollection As SecurityTokenHandlerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ ContainingCollection { System::IdentityModel::Tokens::SecurityTokenHandlerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainingCollection : System.IdentityModel.Tokens.SecurityTokenHandlerCollection" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandlerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d97c-189">Pobiera kolekcję obsługi tokenów zawierającą bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-189">Gets the token handler collection that contains the current instance.</span></span></summary>
        <value><span data-ttu-id="6d97c-190">Kolekcja obsługi tokenów, która zawiera bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-190">The token handler collection that contains the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-191">Po dodaniu programu obsługi tokenów do <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> wystąpienia ta właściwość jest ustawiana automatycznie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-191">When the token handler is added to a <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> instance, this property is automatically set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenReference">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference(class System.IdentityModel.Tokens.SecurityToken token, bool attached) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenReference (token As SecurityToken, attached As Boolean) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ CreateSecurityTokenReference(System::IdentityModel::Tokens::SecurityToken ^ token, bool attached);" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenReference : System.IdentityModel.Tokens.SecurityToken * bool -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause&#xA;override this.CreateSecurityTokenReference : System.IdentityModel.Tokens.SecurityToken * bool -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenHandler.CreateSecurityTokenReference (token, attached)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="attached" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="6d97c-192">Token, dla którego ma zostać utworzone odwołanie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-192">The token for which the reference is to be created.</span></span></param>
        <param name="attached"><span data-ttu-id="6d97c-193"><see langword="true" />Jeśli dołączone odwołanie powinno zostać utworzone; <see langword="false" /> Jeśli nie dołączono odwołania, należy je utworzyć.</span><span class="sxs-lookup"><span data-stu-id="6d97c-193"><see langword="true" /> if an attached reference should be created; <see langword="false" /> if an unattached reference should be created.</span></span></param>
        <summary><span data-ttu-id="6d97c-194">Gdy jest zastępowany w klasie pochodnej, program tworzy odwołanie do tokenu zabezpieczającego dla tokenów przetworzonych przez tę klasę.</span><span class="sxs-lookup"><span data-stu-id="6d97c-194">When overridden in a derived class, creates the security token reference for tokens processed by that class.</span></span> <span data-ttu-id="6d97c-195">Ta metoda jest zazwyczaj wywoływana przez usługę tokenu zabezpieczającego (STS).</span><span class="sxs-lookup"><span data-stu-id="6d97c-195">This method is typically called by a security token service (STS).</span></span></summary>
        <returns><span data-ttu-id="6d97c-196">Klauzula identyfikatora klucza odwołująca się do określonego tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-196">A key identifier clause that references the specified token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-197">Domyślnie ta metoda zgłasza <xref:System.NotImplementedException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6d97c-197">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="6d97c-198">Klasy pochodne przesłaniają tę metodę w celu zwrócenia klauzuli identyfikatora klucza<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>(), której można użyć do `<wsse:SecurityTokenReference>` utworzenia elementu dla określonego tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-198">Derived classes override this method to return a key identifier clause (<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>) that can be used to create a `<wsse:SecurityTokenReference>` element for the specified token.</span></span>  
  
 <span data-ttu-id="6d97c-199">Wywoływane z implementacji <xref:System.IdentityModel.SecurityTokenService> klasy.</span><span class="sxs-lookup"><span data-stu-id="6d97c-199">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 <span data-ttu-id="6d97c-200"><xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> Zazwyczaj nie trzeba używać innych niż podczas tworzenia niestandardowej usługi tokenów zabezpieczających.</span><span class="sxs-lookup"><span data-stu-id="6d97c-200">Typically, a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="6d97c-201">Gdy usługa tokenu zabezpieczającego zwraca token zabezpieczający, wystawiony token zabezpieczający zawiera odwołania do dołączonych i niedołączonych tokenów zabezpieczających.</span><span class="sxs-lookup"><span data-stu-id="6d97c-201">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="6d97c-202">Dołączone odwołania odnoszą się do tokenów zabezpieczających, które znajdują się w nagłówku zabezpieczeń komunikatu protokołu SOAP, a niedołączone odwołania do tokenów zabezpieczających, które nie znajdują się w nagłówku zabezpieczeń komunikatu protokołu SOAP.</span><span class="sxs-lookup"><span data-stu-id="6d97c-202">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="6d97c-203">Te odwołania zwykle potwierdzają autentyczność wystawionego tokenu zabezpieczającego.</span><span class="sxs-lookup"><span data-stu-id="6d97c-203">These references typically affirm the authenticity of the issued security token.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d97c-204">Poniższy kod pokazuje, jak zastąpić metodę, <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> aby utworzyć klauzulę identyfikatora klucza z określonego tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-204">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference%2A> method to create a key identifier clause from the specified token.</span></span> <span data-ttu-id="6d97c-205">Kod jest pobierany z `Custom Token` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-205">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="6d97c-206">Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="6d97c-206">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="6d97c-207">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-207">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.CreateToken tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor"><span data-ttu-id="6d97c-208">Deskryptor tokenu zabezpieczającego, z którego ma zostać utworzony token.</span><span class="sxs-lookup"><span data-stu-id="6d97c-208">The security token descriptor from which the token is to be created.</span></span> <span data-ttu-id="6d97c-209">Właściwości deskryptora tokenu są ustawiane przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="6d97c-209">Properties of the token descriptor are set before this method is called.</span></span></param>
        <summary><span data-ttu-id="6d97c-210">Gdy jest zastępowany w klasie pochodnej, tworzy token zabezpieczający przy użyciu określonego deskryptora tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-210">When overridden in a derived class, creates a security token using the specified token descriptor.</span></span> <span data-ttu-id="6d97c-211">Ta metoda jest wywoływana przez usługę tokenu zabezpieczającego (STS).</span><span class="sxs-lookup"><span data-stu-id="6d97c-211">This method is called by a security token service (STS).</span></span></summary>
        <returns><span data-ttu-id="6d97c-212">Token zabezpieczający, który jest zgodny z właściwościami deskryptora tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-212">A security token that matches the properties of the token descriptor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-213">Domyślnie ta metoda zgłasza <xref:System.NotImplementedException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6d97c-213">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="6d97c-214">Wywoływane z implementacji <xref:System.IdentityModel.SecurityTokenService> klasy.</span><span class="sxs-lookup"><span data-stu-id="6d97c-214">Called from implementations of the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d97c-215">Poniższy kod pokazuje, <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> jak zastąpić metodę, aby utworzyć i zwrócić token z deskryptora tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-215">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken%2A> method to create and return a token from a token descriptor.</span></span> <span data-ttu-id="6d97c-216">Kod jest pobierany z `Custom Token` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-216">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="6d97c-217">Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="6d97c-217">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="6d97c-218">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-218">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplayedToken">
      <MemberSignature Language="C#" Value="protected virtual void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DetectReplayedToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DetectReplayedToken (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DetectReplayedToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member DetectReplayedToken : System.IdentityModel.Tokens.SecurityToken -&gt; unit&#xA;override this.DetectReplayedToken : System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.DetectReplayedToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="6d97c-219">Token, który ma zostać wyszukany.</span><span class="sxs-lookup"><span data-stu-id="6d97c-219">The token to check for replay.</span></span></param>
        <summary><span data-ttu-id="6d97c-220">Gdy jest zastępowany w klasie pochodnej, zgłasza wyjątek, jeśli określony token zostanie wykryty jako odtwarzany.</span><span class="sxs-lookup"><span data-stu-id="6d97c-220">When overridden in a derived class, throws an exception if the specified token is detected as being replayed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-221">Domyślna implementacja nie robi nic.</span><span class="sxs-lookup"><span data-stu-id="6d97c-221">The default implementation does nothing.</span></span>  
  
 <span data-ttu-id="6d97c-222">Klasy pochodne powinny zgłosić <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> , czy token został już użyty.</span><span class="sxs-lookup"><span data-stu-id="6d97c-222">Derived classes should throw a <xref:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException> if the token has already been used.</span></span>  
  
 <span data-ttu-id="6d97c-223">Windows Identity Foundation (WIF) udostępnia <xref:System.IdentityModel.Tokens.TokenReplayCache> klasę, z której mogą być wyprowadzane pamięci podręczne powtarzania [ &lt;i element konfiguracji tokenReplayCache&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) , którego można użyć do skonfigurowania pamięci podręcznej odtwarzania używanej przez token programy obsługi w aplikacji; jednak dokładna implementacja <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> metody jest do projektanta klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="6d97c-223">Windows Identity Foundation (WIF) provides the <xref:System.IdentityModel.Tokens.TokenReplayCache> class from which replay caches may be derived and the [&lt;tokenReplayCache&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/tokenreplaycache.md) configuration element, which can be used to configure the replay cache used by token handlers in an application; however, the exact implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken%2A> method is up to the designer of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public abstract string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="securityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d97c-224">Gdy jest zastępowany w klasie pochodnej, zwraca zestaw identyfikatorów URI, które są używane w żądaniach do identyfikowania tokenu typu przetworzonego przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="6d97c-224">When overridden in a derived class, returns the set of URIs that are used in requests to identify a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="6d97c-225">Zestaw identyfikatorów URI, które identyfikują typ tokenu obsługiwanego przez tę procedurę obsługi.</span><span class="sxs-lookup"><span data-stu-id="6d97c-225">The set of URIs that identify the token type that this handler supports.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-226">Token przetworzony przez bieżące wystąpienie jest dostępny <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> za pomocą właściwości. <xref:System.Type></span><span class="sxs-lookup"><span data-stu-id="6d97c-226">The <xref:System.Type> of the token processed by the current instance is accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property.</span></span> <span data-ttu-id="6d97c-227"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> Metoda zwraca zestaw akceptowalnych identyfikatorów, które mogą być używane w komunikatach w celu odwoływania się do typu tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-227">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method returns the set of acceptable identifiers that can be used in messages to refer to the token type.</span></span> <span data-ttu-id="6d97c-228">Na przykład wartość identyfikatora URI używana w `<wst:TokenType>` elemencie `<wst:RequestSecurityToken>` pod elementem do żądania określonego rodzaju <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> tokenu (reprezentowane przez właściwość w modelu obiektu).</span><span class="sxs-lookup"><span data-stu-id="6d97c-228">For example, the URI value used in the `<wst:TokenType>` element under the `<wst:RequestSecurityToken>` element to request a specific kind of token (represented by the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType%2A?displayProperty=nameWithType> property in the object model).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d97c-229">Poniższy kod przedstawia sposób przesłania <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> metody w celu zwrócenia identyfikatorów typu tokenu dla niestandardowego tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-229">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers%2A> method to return the token type identifiers for a custom token.</span></span> <span data-ttu-id="6d97c-230">Kod jest pobierany z `Custom Token` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-230">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="6d97c-231">Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="6d97c-231">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="6d97c-232">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-232">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#17](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#17)]  
[!code-csharp[WifRcCustomToken#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="securityTokenHandler.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="6d97c-233">Elementy konfiguracji XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-233">The configuration XML elements.</span></span> <span data-ttu-id="6d97c-234">Każdy węzeł na liście jest typu <see cref="T:System.Xml.XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="6d97c-234">Each node in the list is of type <see cref="T:System.Xml.XmlElement" />.</span></span></param>
        <summary><span data-ttu-id="6d97c-235">Gdy jest zastępowany w klasie pochodnej, ładuje konfigurację niestandardową z pliku XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-235">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-236"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> Metoda jest wywoływana przez infrastrukturę konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="6d97c-236">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration%2A> method is called by the configuration infrastructure.</span></span> <span data-ttu-id="6d97c-237">Gdy ta metoda jest wywoływana, `nodelist` będzie zawierać elementy podrzędne najwyższego poziomu programu [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) obsługi tokenów z pliku konfiguracyjnego.</span><span class="sxs-lookup"><span data-stu-id="6d97c-237">When this method is called, the `nodelist` will contain the top-level child elements of the token handler's [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element from the configuration file.</span></span> <span data-ttu-id="6d97c-238">Każdy z nich może z kolei zawierać atrybuty lub elementy podrzędne w zależności od schematu konfiguracji zdefiniowanego dla klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="6d97c-238">Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</span></span>  
  
 <span data-ttu-id="6d97c-239">Domyślna implementacja zgłasza <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="6d97c-239">The default implementation throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="6d97c-240">Zastąp tę metodę w klasie pochodnej, aby włączyć inicjalizację programu obsługi tokenów zabezpieczających z pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="6d97c-240">Override this method in your derived class to enable initialization of your security token handler from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause&#xA;override this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenHandler.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6d97c-241">Czytnik XML umieszczony w elemencie początkowym XML do deserializacji w klauzuli identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="6d97c-241">An XML reader positioned at the start element of the XML to be deserialized into the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="6d97c-242">Gdy jest zastępowany w klasie pochodnej, deserializacji XML, do którego odwołuje się określony czytnik XML, do klauzuli identyfikatora klucza, która odwołuje się do tokenu przetworzonego przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="6d97c-242">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a key identifier clause that references a token processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="6d97c-243">Klauzula identyfikatora klucza, która została odszeregowana z kodu XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-243">The key identifier clause that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-244">Domyślnie ta metoda zgłasza <xref:System.NotImplementedException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6d97c-244">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="6d97c-245">Zastąp tę metodę, aby zapewnić logikę do deserializacji klauzuli identyfikatora klucza z pliku XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-245">Override this method to provide the logic to deserialize a key identifier clause from XML.</span></span> <span data-ttu-id="6d97c-246">Jeśli zastąpisz tę metodę, należy również zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="6d97c-246">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d97c-247">Gdy jest zastępowany w klasie pochodnej, deserializacji określonego XML do tokenu typu przetworzonego przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="6d97c-247">When overridden in a derived class, deserializes the specified XML to a token of the type processed by the derived class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(string tokenString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (tokenString As String) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::String ^ tokenString);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : string -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : string -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken tokenString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tokenString"><span data-ttu-id="6d97c-248">Ciąg do deserializacji.</span><span class="sxs-lookup"><span data-stu-id="6d97c-248">The string to be deserialized.</span></span></param>
        <summary><span data-ttu-id="6d97c-249">Gdy jest zastępowany w klasie pochodnej, deserializacji określonego ciągu do tokenu typu przetworzonego przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="6d97c-249">When overridden in a derived class, deserializes the specified string to a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="6d97c-250">Token zabezpieczający, który został odszeregowany od określonego ciągu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-250">The security token that was deserialized from the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="6d97c-251">Domyślnie ta metoda zgłasza <xref:System.NotImplementedException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6d97c-251">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="6d97c-252">Zastąp tę metodę, aby zapewnić funkcję, która może deserializować token zabezpieczający z ciągu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-252">Override this method to provide functionality that can deserialize a security token from a string.</span></span> <span data-ttu-id="6d97c-253">W przypadku przesłonięcia tej metody należy również zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="6d97c-253">If you override, this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6d97c-254">Czytnik XML został umieszczony w elemencie początkowym tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-254">An XML reader positioned at the start element of the token.</span></span></param>
        <summary><span data-ttu-id="6d97c-255">Gdy jest zastępowany w klasie pochodnej, deserializacji XML, do którego odwołuje się określony czytnik XML, do tokenu typu przetworzonego przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="6d97c-255">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="6d97c-256">Token zabezpieczający, który został odszeregowany z pliku XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-256">The security token that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="6d97c-257">Domyślnie ta metoda zgłasza <xref:System.NotImplementedException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6d97c-257">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="6d97c-258">Zastąp tę metodę, aby zapewnić logikę deserializacji tokenu zabezpieczającego z pliku XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-258">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="6d97c-259">Jeśli zastąpisz tę metodę, należy również zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="6d97c-259">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6d97c-260">Zazwyczaj w klasach pochodnych, jeśli metoda nie może zdeserializować tokenu z odwołania XML, wygeneruje <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="6d97c-260">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d97c-261">Poniższy kod przedstawia sposób przesłania <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> metody odczytu niestandardowego tokenu z określonego czytnika XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-261">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A> method to read a custom token from the specified XML reader.</span></span> <span data-ttu-id="6d97c-262">Kod jest pobierany z `Custom Token` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-262">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="6d97c-263">Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="6d97c-263">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="6d97c-264">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-264">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#7)]  
[!code-csharp[WifRcCustomToken#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#8)]  
[!code-csharp[WifRcCustomToken#14](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenHandler.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6d97c-265">Czytnik XML został umieszczony w elemencie początkowym tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-265">An XML reader positioned at the start element of the token.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="6d97c-266">Program rozpoznawania tokenów, który zawiera tokeny poza pasmem i pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="6d97c-266">A token resolver that contains out-of-band and cached tokens.</span></span></param>
        <summary><span data-ttu-id="6d97c-267">Gdy jest zastępowany w klasie pochodnej, deserializacji XML, do którego odwołuje się określony czytnik XML, do tokenu typu przetworzonego przez klasę pochodną przy użyciu określonego mechanizmu rozwiązywania konfliktów tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-267">When overridden in a derived class, deserializes the XML referenced by the specified XML reader to a token of the type processed by the derived class by using the specified token resolver.</span></span></summary>
        <returns><span data-ttu-id="6d97c-268">Token zabezpieczający, który został odszeregowany z pliku XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-268">The security token that was deserialized from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="6d97c-269">Domyślna implementacja ignoruje `tokenResolver` parametr i deleguje wywołanie <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="6d97c-269">The default implementation ignores the `tokenResolver` parameter and delegates the call to the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6d97c-270">Zastąp tę metodę, aby zapewnić logikę deserializacji tokenu zabezpieczającego z pliku XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-270">Override this method to provide the logic to deserialize a security token from XML.</span></span> <span data-ttu-id="6d97c-271">Jeśli zastąpisz tę metodę, należy również zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="6d97c-271">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="6d97c-272">Zazwyczaj w klasach pochodnych, jeśli metoda nie może zdeserializować tokenu z odwołania XML, wygeneruje <xref:System.Xml.XmlException>.</span><span class="sxs-lookup"><span data-stu-id="6d97c-272">Typically, in derived classes, if the method cannot deserialize the token from the referenced XML, it throws an <xref:System.Xml.XmlException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public abstract Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d97c-273">Gdy jest zastępowany w klasie pochodnej, pobiera typ tokenu zabezpieczającego, który jest przetwarzany przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-273">When overridden in a derived class, gets the type of the security token that is processed by this instance.</span></span></summary>
        <value><span data-ttu-id="6d97c-274">Typ tokenu zabezpieczającego, który jest przetwarzany przez to wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-274">The type of the security token that is processed by this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-275">Należy zastąpić tę właściwość w klasach pochodnych i zwrócić <xref:System.Type> token zabezpieczający (<xref:System.IdentityModel.Tokens.SecurityToken>), który jest przetwarzany przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="6d97c-275">You must override this property in derived classes and return the <xref:System.Type> of the security token (<xref:System.IdentityModel.Tokens.SecurityToken>) that is processed by the derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d97c-276">Poniższy kod pokazuje, jak zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> właściwość w celu <xref:System.Type> zwrócenia tokenów zabezpieczających, które są przetwarzane przez niestandardową procedurę obsługi.</span><span class="sxs-lookup"><span data-stu-id="6d97c-276">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType%2A> property to return the <xref:System.Type> of the security tokens that are processed by a custom handler.</span></span> <span data-ttu-id="6d97c-277">Kod jest pobierany z `Custom Token` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-277">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="6d97c-278">Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="6d97c-278">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="6d97c-279">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-279">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#18](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationFailure">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationFailure (System.IdentityModel.Tokens.SecurityToken token, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationFailure(class System.IdentityModel.Tokens.SecurityToken token, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationFailure (token As SecurityToken, errorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationFailure(System::IdentityModel::Tokens::SecurityToken ^ token, System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="member this.TraceTokenValidationFailure : System.IdentityModel.Tokens.SecurityToken * string -&gt; unit" Usage="securityTokenHandler.TraceTokenValidationFailure (token, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="6d97c-280">Token zabezpieczający, który jest sprawdzany.</span><span class="sxs-lookup"><span data-stu-id="6d97c-280">The security token that is being validated.</span></span></param>
        <param name="errorMessage"><span data-ttu-id="6d97c-281">Komunikat do zapisu w śladzie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-281">The message to write to the trace.</span></span></param>
        <summary><span data-ttu-id="6d97c-282">Śledzi zdarzenie błędu podczas walidacji tokenów zabezpieczających, gdy śledzenie jest włączone.</span><span class="sxs-lookup"><span data-stu-id="6d97c-282">Traces the failure event during the validation of security tokens when tracing is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-283">Ta metoda powinna być wywoływana z metody <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> , gdy Walidacja tokenu kończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="6d97c-283">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method when validation of the token fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTokenValidationSuccess">
      <MemberSignature Language="C#" Value="protected void TraceTokenValidationSuccess (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TraceTokenValidationSuccess(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TraceTokenValidationSuccess (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TraceTokenValidationSuccess(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.TraceTokenValidationSuccess : System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.TraceTokenValidationSuccess token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="6d97c-284">Token, który został sprawdzony.</span><span class="sxs-lookup"><span data-stu-id="6d97c-284">The token that was validated.</span></span></param>
        <summary><span data-ttu-id="6d97c-285">Śledzi pomyślne sprawdzenie poprawności zdarzenia tokenów zabezpieczających po włączeniu śledzenia.</span><span class="sxs-lookup"><span data-stu-id="6d97c-285">Traces the successful validation of security tokens event when tracing is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-286">Ta metoda powinna być wywoływana z <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metody po pomyślnym sprawdzeniu tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-286">This method should be called from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method after the token has been successfully validated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;&#xA;override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="securityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="6d97c-287">Token do zweryfikowania.</span><span class="sxs-lookup"><span data-stu-id="6d97c-287">The token to validate.</span></span></param>
        <summary><span data-ttu-id="6d97c-288">Gdy jest zastępowany w klasie pochodnej, sprawdza poprawność określonego tokenu zabezpieczającego.</span><span class="sxs-lookup"><span data-stu-id="6d97c-288">When overridden in a derived class, validates the specified security token.</span></span> <span data-ttu-id="6d97c-289">Token musi być typu przetworzonego przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="6d97c-289">The token must be of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="6d97c-290">Tożsamości zawarte w tokenie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-290">The identities contained in the token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-291">Domyślnie ta metoda zgłasza <xref:System.NotImplementedException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6d97c-291">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="6d97c-292"><xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> Metoda jest wywoływana przez infrastrukturę w celu weryfikacji i wyodrębnienia oświadczeń z deserializowanego tokenu zabezpieczającego.</span><span class="sxs-lookup"><span data-stu-id="6d97c-292">The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method is called by the infrastructure to validate and extract the claims from the deserialized security token.</span></span> <span data-ttu-id="6d97c-293">Te oświadczenia są zwracane w kolekcji <xref:System.Security.Claims.ClaimsIdentity> obiektów zwracanych przez metodę.</span><span class="sxs-lookup"><span data-stu-id="6d97c-293">These claims are returned in the collection of <xref:System.Security.Claims.ClaimsIdentity> objects returned by the method.</span></span> <span data-ttu-id="6d97c-294">W typowym przypadku ta kolekcja będzie zawierać jedną tożsamość.</span><span class="sxs-lookup"><span data-stu-id="6d97c-294">In the typical case, this collection will contain a single identity.</span></span>  
  
 <span data-ttu-id="6d97c-295">W klasach pochodnych Walidacja zazwyczaj obejmuje sprawdzenie, czy zamierzone odbiorcy określone w tokenie odnoszą się do <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> identyfikatorów URI odbiorców określonych we właściwości obiektu konfiguracji programu obsługi <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> tokenu określonego we właściwości.</span><span class="sxs-lookup"><span data-stu-id="6d97c-295">In derived classes, validation typically includes validating the intended audience specified in the token against the audience URIs specified in the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction%2A?displayProperty=nameWithType> property of the token handler configuration object specified on the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="6d97c-296">Te identyfikatory URI są zazwyczaj ustawiane w pliku konfiguracji w [ &lt;ramach&gt; elementu audienceUris](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) .</span><span class="sxs-lookup"><span data-stu-id="6d97c-296">These URIs are typically set in the configuration file under the [&lt;audienceUris&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/audienceuris.md) element.</span></span> <span data-ttu-id="6d97c-297">Jeśli nie można zweryfikować odbiorców, <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> należy zgłaszać wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6d97c-297">If the audience cannot be validated, an <xref:System.IdentityModel.Tokens.AudienceUriValidationFailedException> exception should be thrown.</span></span>  
  
 <span data-ttu-id="6d97c-298">Podczas przetwarzania tokenu wystawcy jest zazwyczaj weryfikowany przez przekazanie tokenu wystawcy do jednej <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> z metod <xref:System.IdentityModel.Tokens.IssuerNameRegistry> na obiekcie skonfigurowanym <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> dla programu obsługi za pomocą właściwości.</span><span class="sxs-lookup"><span data-stu-id="6d97c-298">When processing the token, the issuer is typically validated by passing the issuer token to one of the <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> methods on the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> object that is configured for the handler through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property.</span></span> <span data-ttu-id="6d97c-299">Rejestr nazwy wystawcy jest zazwyczaj konfigurowany za [ &lt;pomocą&gt; elementu issuerNameRegistry](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) w pliku konfiguracyjnym.</span><span class="sxs-lookup"><span data-stu-id="6d97c-299">The issuer name registry is typically configured through the [&lt;issuerNameRegistry&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element in the configuration file.</span></span> <span data-ttu-id="6d97c-300"><xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> Zwraca nazwę wystawcy.</span><span class="sxs-lookup"><span data-stu-id="6d97c-300">The <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns the name of the issuer.</span></span> <span data-ttu-id="6d97c-301">Ta nazwa powinna być używana do ustawiania <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> właściwości w oświadczeniach zawartych w tokenie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-301">This name should be used to set the <xref:System.Security.Claims.Claim.Issuer%2A?displayProperty=nameWithType> property in claims contained in the token.</span></span> <span data-ttu-id="6d97c-302">Jeśli rejestr nazwy wystawcy nie zawiera wpisu dla tokenu wystawcy, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> zwraca `null`wartość.</span><span class="sxs-lookup"><span data-stu-id="6d97c-302">If the issuer name registry does not contain an entry for the issuer token, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> returns `null`.</span></span> <span data-ttu-id="6d97c-303">W tym przypadku <xref:System.IdentityModel.Tokens.SecurityTokenException> jest to zwykle zgłaszane w klasach pochodnych, ale to zachowanie jest do projektanta klasy.</span><span class="sxs-lookup"><span data-stu-id="6d97c-303">In this case a <xref:System.IdentityModel.Tokens.SecurityTokenException> is typically thrown in derived classes, but this behavior is up to the designer of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d97c-304">Poniższy kod przedstawia zastąpienie <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metody obsługi tokenów zabezpieczających, która przetwarza proste tokeny sieci Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="6d97c-304">The following code shows an override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method for a security token handler that processes simple web tokens (SWT).</span></span> <span data-ttu-id="6d97c-305">Kod jest pobierany z `CustomToken` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-305">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="6d97c-306">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-306">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#9](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#9)]  
  
 <span data-ttu-id="6d97c-307">Poniższy kod ilustruje `CreateClaims` metodę, która jest wywoływana z przesłonięcia <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metody w poprzednim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-307">The following code shows `CreateClaims` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the previous example.</span></span> <span data-ttu-id="6d97c-308">Ta metoda zwraca <xref:System.Security.Claims.ClaimsIdentity> obiekt, który jest tworzony na podstawie oświadczeń w tokenie.</span><span class="sxs-lookup"><span data-stu-id="6d97c-308">This method returns a <xref:System.Security.Claims.ClaimsIdentity> object that is created from the claims in the token.</span></span> <span data-ttu-id="6d97c-309">Kod jest pobierany z `CustomToken` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-309">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="6d97c-310">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-310">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#15](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#15)]  
  
 <span data-ttu-id="6d97c-311">Poniższy kod ilustruje `ValidateSignature` metodę, która jest wywoływana z przesłonięcia <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metody w prostym obsłudze tokenów sieci Web.</span><span class="sxs-lookup"><span data-stu-id="6d97c-311">The following code shows `ValidateSignature` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="6d97c-312">Ta metoda sprawdza poprawność podpisu tokenu przy użyciu skonfigurowanego <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span><span class="sxs-lookup"><span data-stu-id="6d97c-312">This method validates the signature on the token by using the configured <xref:System.IdentityModel.Tokens.IssuerTokenResolver>.</span></span> <span data-ttu-id="6d97c-313">Kod jest pobierany z `CustomToken` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-313">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="6d97c-314">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-314">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#12](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#12)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 <span data-ttu-id="6d97c-315">Poniższy kod ilustruje `ValidateAudience` metodę, która jest wywoływana z przesłonięcia <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> metody w prostym obsłudze tokenów sieci Web.</span><span class="sxs-lookup"><span data-stu-id="6d97c-315">The following code shows `ValidateAudience` method that is invoked from the override of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method in the simple web token handler.</span></span> <span data-ttu-id="6d97c-316">Ta metoda sprawdza poprawność odbiorców zawartych w tokenie względem identyfikatorów URI odbiorców, które zostały określone w konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="6d97c-316">This method validates the audience contained in the token against the audience URIs that were specified in configuration.</span></span> <span data-ttu-id="6d97c-317">Kod jest pobierany z `CustomToken` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-317">The code is taken from the `CustomToken` sample.</span></span> <span data-ttu-id="6d97c-318">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-318">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#13](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public virtual void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit&#xA;override this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenHandler.WriteKeyIdentifierClause (writer, securityKeyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6d97c-319">Modułu zapisujący XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-319">The XML writer.</span></span></param>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="6d97c-320">Klauzula identyfikatora klucza do serializacji.</span><span class="sxs-lookup"><span data-stu-id="6d97c-320">The key identifier clause to serialize.</span></span></param>
        <summary><span data-ttu-id="6d97c-321">Gdy jest zastępowany w klasie pochodnej, serializować określoną klauzulę identyfikatora klucza do formatu XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-321">When overridden in a derived class, serializes the specified key identifier clause to XML.</span></span> <span data-ttu-id="6d97c-322">Klauzula identyfikatora klucza musi być typu obsługiwanego przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="6d97c-322">The key identifier clause must be of the type supported by the derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-323">Domyślnie ta metoda zgłasza <xref:System.NotImplementedException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6d97c-323">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="6d97c-324">Zastąp tę metodę, aby zapewnić logikę serializacji klauzuli identyfikatora klucza do formatu XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-324">Override this method to provide the logic to serialize a key identifier clause to XML.</span></span> <span data-ttu-id="6d97c-325">Jeśli zastąpisz tę metodę, należy również zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="6d97c-325">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d97c-326">Gdy jest zastępowany w klasie pochodnej, serializować określony token zabezpieczający.</span><span class="sxs-lookup"><span data-stu-id="6d97c-326">When overridden in a derived class, serializes the specified security token.</span></span> <span data-ttu-id="6d97c-327">Token musi być typu przetworzonego przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="6d97c-327">The token must be of the type processed by the derived class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual string WriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string WriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (token As SecurityToken) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ WriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; string&#xA;override this.WriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="securityTokenHandler.WriteToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="6d97c-328">Token do serializacji.</span><span class="sxs-lookup"><span data-stu-id="6d97c-328">The token to serialize.</span></span></param>
        <summary><span data-ttu-id="6d97c-329">Gdy jest zastępowany w klasie pochodnej, serializować określony token zabezpieczający do ciągu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-329">When overridden in a derived class, serializes the specified security token to a string.</span></span> <span data-ttu-id="6d97c-330">Token musi być typu przetworzonego przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="6d97c-330">The token must be of the type processed by the derived class.</span></span></summary>
        <returns><span data-ttu-id="6d97c-331">Serializowany token.</span><span class="sxs-lookup"><span data-stu-id="6d97c-331">The serialized token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-332">Domyślnie ta metoda zgłasza <xref:System.NotImplementedException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6d97c-332">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="6d97c-333">Zastąp tę metodę, aby zapewnić logikę serializacji tokenu zabezpieczającego do formatu XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-333">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="6d97c-334">Jeśli zastąpisz tę metodę, należy również zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="6d97c-334">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit&#xA;override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6d97c-335">Modułu zapisujący XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-335">The XML writer.</span></span></param>
        <param name="token"><span data-ttu-id="6d97c-336">Token do serializacji.</span><span class="sxs-lookup"><span data-stu-id="6d97c-336">The token to serialize.</span></span></param>
        <summary><span data-ttu-id="6d97c-337">Gdy jest zastępowany w klasie pochodnej, serializacji określonego tokenu zabezpieczającego do formatu XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-337">When overridden in a derived class, serializes the specified security token to XML.</span></span> <span data-ttu-id="6d97c-338">Token musi być typu przetworzonego przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="6d97c-338">The token must be of the type processed by the derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d97c-339">Domyślnie ta metoda zgłasza <xref:System.NotImplementedException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6d97c-339">By default this method throws a <xref:System.NotImplementedException> exception.</span></span>  
  
 <span data-ttu-id="6d97c-340">Zastąp tę metodę, aby zapewnić logikę serializacji tokenu zabezpieczającego do formatu XML.</span><span class="sxs-lookup"><span data-stu-id="6d97c-340">Override this method to provide the logic to serialize a security token to XML.</span></span> <span data-ttu-id="6d97c-341">Jeśli zastąpisz tę metodę, należy również zastąpić <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="6d97c-341">If you override this method, you should also override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d97c-342">Poniższy kod pokazuje, <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> jak zastąpić metodę w celu serializacji niestandardowego tokenu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-342">The following code shows how to override the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken%2A> method to serialize a custom token.</span></span> <span data-ttu-id="6d97c-343">Kod jest pobierany z `Custom Token` przykładu.</span><span class="sxs-lookup"><span data-stu-id="6d97c-343">The code is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="6d97c-344">Ten przykład zawiera klasy niestandardowe, które umożliwiają przetwarzanie prostych tokenów sieci Web (SWT).</span><span class="sxs-lookup"><span data-stu-id="6d97c-344">This sample provides custom classes that enable processing of Simple Web Tokens (SWT).</span></span> <span data-ttu-id="6d97c-345">Aby uzyskać informacje na temat tego przykładu i innych przykładów dostępnych dla WIF i miejsca ich pobrania, zobacz [przykładowy indeks kodu WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="6d97c-345">For information about this sample and other samples available for WIF and where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 [!code-csharp[WifRcCustomToken#10](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#10)]  
[!code-csharp[WifRcCustomToken#11](~/samples/snippets/csharp/VS_Snippets_Misc/wifrccustomtoken/cs/simplewebtoken/simplewebtokenhandler.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
