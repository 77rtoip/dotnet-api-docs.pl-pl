<Type Name="EncryptedKeyEncryptingCredentials" FullName="System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d965b51c6d607eafb8fe95f90fcb538e4984a051" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36481197" /></Metadata><TypeSignature Language="C#" Value="public class EncryptedKeyEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedKeyEncryptingCredentials extends System.IdentityModel.Tokens.EncryptingCredentials" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedKeyEncryptingCredentials&#xA;Inherits EncryptingCredentials" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedKeyEncryptingCredentials : System::IdentityModel::Tokens::EncryptingCredentials" />
  <TypeSignature Language="F#" Value="type EncryptedKeyEncryptingCredentials = class&#xA;    inherit EncryptingCredentials" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.EncryptingCredentials</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="acb02-101">Reprezentuje zaszyfrowany klucz szyfrowania poświadczeń.</span><span class="sxs-lookup"><span data-stu-id="acb02-101">Represents the encrypted key encrypting credentials.</span></span> <span data-ttu-id="acb02-102">Te zwykle są używane jako dane szyfrowania poświadczeń do zaszyfrowania elementów, takich jak tokeny.</span><span class="sxs-lookup"><span data-stu-id="acb02-102">These are usually used as data encrypting credentials to encrypt things like tokens.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="acb02-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="acb02-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyEncryptingCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyEncryptingCredentials(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" Usage="new System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="acb02-104">Certyfikat używany do szyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="acb02-104">The certificate used to encrypt the key.</span></span></param>
        <summary><span data-ttu-id="acb02-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> klasy oparte na określonego certyfikatu X.509.</span><span class="sxs-lookup"><span data-stu-id="acb02-105">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> class based on the specified X.509 certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acb02-106">Jeśli poświadczenie zawijania jest certyfikat X.509 i chcesz użyć domyślnej zawijania algorytmu i algorytm szyfrowania, które wynoszą odpowiednio RSA OAEP i AES256, należy użyć tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="acb02-106">Use this constructor if the wrapping credential is an X.509 certificate and you want to use the default wrapping algorithm and encryption algorithm, which are RSA-OAEP and AES256 respectively.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyEncryptingCredentials (System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials, int keySizeInBits, string encryptionAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials, int32 keySizeInBits, string encryptionAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (wrappingCredentials As EncryptingCredentials, keySizeInBits As Integer, encryptionAlgorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyEncryptingCredentials(System::IdentityModel::Tokens::EncryptingCredentials ^ wrappingCredentials, int keySizeInBits, System::String ^ encryptionAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials * int * string -&gt; System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" Usage="new System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials (wrappingCredentials, keySizeInBits, encryptionAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="wrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="wrappingCredentials"><span data-ttu-id="acb02-107">Klucz zawijania poświadczenia używane do szyfrowania klucza sesji.</span><span class="sxs-lookup"><span data-stu-id="acb02-107">The key wrapping credentials used to encrypt the session key.</span></span></param>
        <param name="keySizeInBits"><span data-ttu-id="acb02-108">Rozmiar klucza dla klucza sesji opakowana.</span><span class="sxs-lookup"><span data-stu-id="acb02-108">The key size of the wrapped session key.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="acb02-109">Identyfikator URI, który reprezentuje algorytm szyfrowania, gdy jest używany klucz sesji.</span><span class="sxs-lookup"><span data-stu-id="acb02-109">A URI that represents the encryption algorithm when the session key is used.</span></span> <span data-ttu-id="acb02-110">Powinna to być algorytmu klucza symetrycznego.</span><span class="sxs-lookup"><span data-stu-id="acb02-110">This should be a symmetric key algorithm.</span></span></param>
        <summary><span data-ttu-id="acb02-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> na podstawie klasy <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> obiektu, rozmiar klucza i algorytm szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="acb02-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> class based on the specified <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> object, key size, and encryption algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acb02-112">Użyj tego konstruktora, jeśli masz już <xref:System.IdentityModel.Tokens.EncryptingCredentials> obiektu i chcesz używać go jako poświadczenie zawijania.</span><span class="sxs-lookup"><span data-stu-id="acb02-112">Use this constructor if you already have an <xref:System.IdentityModel.Tokens.EncryptingCredentials> object and you want to use it as a wrapping credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="acb02-113"><paramref name="wrappingCredentials" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="acb02-113"><paramref name="wrappingCredentials" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyEncryptingCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string keyWrappingAlgorithm, int keySizeInBits, string encryptionAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, string keyWrappingAlgorithm, int32 keySizeInBits, string encryptionAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2, keyWrappingAlgorithm As String, keySizeInBits As Integer, encryptionAlgorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyEncryptingCredentials(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, System::String ^ keyWrappingAlgorithm, int keySizeInBits, System::String ^ encryptionAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 * string * int * string -&gt; System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" Usage="new System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials (certificate, keyWrappingAlgorithm, keySizeInBits, encryptionAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="keyWrappingAlgorithm" Type="System.String" />
        <Parameter Name="keySizeInBits" Type="System.Int32" />
        <Parameter Name="encryptionAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="acb02-114">Certyfikat używany do szyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="acb02-114">The certificate used to encrypt the key.</span></span></param>
        <param name="keyWrappingAlgorithm"><span data-ttu-id="acb02-115">Identyfikator URI, który reprezentuje algorytm zawijanie kluczy.</span><span class="sxs-lookup"><span data-stu-id="acb02-115">A URI that represents the key wrapping algorithm.</span></span> <span data-ttu-id="acb02-116">Powinna to być algorytmu asymetrycznego.</span><span class="sxs-lookup"><span data-stu-id="acb02-116">This should be an asymmetric algorithm.</span></span></param>
        <param name="keySizeInBits"><span data-ttu-id="acb02-117">Rozmiar klucza dla klucza sesji opakowana.</span><span class="sxs-lookup"><span data-stu-id="acb02-117">The key size of the wrapped session key.</span></span></param>
        <param name="encryptionAlgorithm"><span data-ttu-id="acb02-118">Identyfikator URI, który reprezentuje algorytm szyfrowania, gdy jest używany klucz sesji.</span><span class="sxs-lookup"><span data-stu-id="acb02-118">A URI that represents the encryption algorithm when the session key is used.</span></span> <span data-ttu-id="acb02-119">Powinna to być algorytmu klucza symetrycznego.</span><span class="sxs-lookup"><span data-stu-id="acb02-119">This should be a symmetric key algorithm.</span></span></param>
        <summary><span data-ttu-id="acb02-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> klasy oparte na określony certyfikat X.509, zawijanie algorytmu, rozmiar klucza i algorytm szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="acb02-120">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" /> class based on the specified X.509 certificate, wrapping algorithm, key size, and encryption algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acb02-121">Jeśli poświadczenie zawijania jest certyfikat X.509, a chcesz podać własne Algorytm zawijania i algorytm szyfrowania, należy użyć tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="acb02-121">Use this constructor if the wrapping credential is an X.509 certificate and you want to supply your own wrapping algorithm and encryption algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrappingCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.EncryptingCredentials WrappingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials WrappingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrappingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ WrappingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WrappingCredentials : System.IdentityModel.Tokens.EncryptingCredentials" Usage="System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="acb02-122">Pobiera klucz zawijania poświadczenia używane do szyfrowania klucza sesji; na przykład <see cref="T:System.IdentityModel.Tokens.X509EncryptingCredentials" />.</span><span class="sxs-lookup"><span data-stu-id="acb02-122">Gets the key wrapping credentials used to encrypt the session key; for example, <see cref="T:System.IdentityModel.Tokens.X509EncryptingCredentials" />.</span></span></summary>
        <value><span data-ttu-id="acb02-123"><see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> Reprezentujący poświadczenia używane do szyfrowania klucza sesji.</span><span class="sxs-lookup"><span data-stu-id="acb02-123">An <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> that represents the credentials used to encrypt the session key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>