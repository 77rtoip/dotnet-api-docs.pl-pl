<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityKeyIdentifierClause.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72f3a5c32eef1b5b8f33c9ffdc67a8d423b6a36dfa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3a5c32eef1b5b8f33c9ffdc67a8d423b6a36dfa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>Represents an abstract base class for a key identifier clause.</source>
          <target state="translated">Reprezentuje abstrakcyjna klasa podstawowa dla klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>Typically, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">Zazwyczaj <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph> nie trzeba używać, inne niż podczas tworzenia usługi tokenu zabezpieczeń niestandardowych.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">Po powrocie z usługi tokenu zabezpieczającego tokenu zabezpieczającego tokenu zabezpieczeń zawiera odwołania do tokenów zabezpieczających dołączona i odłączyć.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</source>
          <target state="translated">Dołączone odwołania dotyczą tokeny zabezpieczające, które są zawarte w nagłówku zabezpieczeń wiadomości SOAP i niedołączonych odwołań odwołuje się tokeny zabezpieczające, które nie są uwzględniane w nagłówku zabezpieczeń wiadomości protokołu SOAP.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">Te odwołania potwierdzają zwykle autentyczności token zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
          <source>The key identifier clause type.</source>
          <target state="translated">Typ klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> property.</source>
          <target state="translated">Ustawia wartość <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> class using the specified key identifier clause type.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> przy użyciu określonego identyfikatora klucza typu klauzuli.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
          <source>When this security key identifier is serialized into XML, the <ph id="ph1">`clauseType`</ph> parameter is serialized as the <ph id="ph2">`ValueType`</ph> attribute of the <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> element.</source>
          <target state="translated">Podczas tego identyfikatora klucza zabezpieczeń jest serializowany w formacie XML, <ph id="ph1">`clauseType`</ph> parametru jest szeregowana jako <ph id="ph2">`ValueType`</ph> atrybutu <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The key identifier clause type.</source>
          <target state="translated">Typ klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> property.</source>
          <target state="translated">Ustawia wartość <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> class using the specified key identifier clause type, nonce, and the derived key length.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> przy użyciu określonego identyfikatora klucza typu klauzuli, identyfikator jednorazowy i długość klucza pochodnego.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
          <source>Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</source>
          <target state="translated">Windows Communication Foundation (WCF) nie obsługuje tworzenia domniemanych identyfikatorów klucza pochodnego.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
          <source>However, WCF processes incoming SOAP messages that contain implied key identifier.</source>
          <target state="translated">Jednak WCF przetwarza przychodzące wiadomości SOAP, które zawierają domniemanych identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <source>Gets a value that indicates whether a key can be created.</source>
          <target state="translated">Pobiera wartość wskazującą, czy można utworzyć klucza.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a key can be created; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli klucz może zostać utworzony; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <source>When a key can be created using the parameters passed into a constructor, override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A&gt;</ph> method to return <ph id="ph2">`true`</ph> and implement the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt;</ph> method.</source>
          <target state="translated">Po klucz można tworzyć przy użyciu parametrów przekazany do konstruktora, Zastąp <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A&gt;</ph> metodę, aby zwrócić <ph id="ph2">`true`</ph> i wdrożenie <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType">
          <source>Gets the key identifier clause type.</source>
          <target state="translated">Pobiera typ klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType">
          <source>The key identifier clause type.</source>
          <target state="translated">Typ klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
          <source>Creates a key based on the parameters passed into the constructor.</source>
          <target state="translated">Tworzy klucz na podstawie parametrów przekazany do konstruktora.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKey" /&gt;</ph> that contains the created key.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKey" /&gt;</ph> zawierający utworzony klucz.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
          <source>When a key can be created using the parameters passed into a constructor, override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A&gt;</ph> method to return <ph id="ph2">`true`</ph> and implement the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt;</ph> method.</source>
          <target state="translated">Po klucz można tworzyć przy użyciu parametrów przekazany do konstruktora, Zastąp <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A&gt;</ph> metodę, aby zwrócić <ph id="ph2">`true`</ph> i wdrożenie <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
          <source>Gets the size of the derived key.</source>
          <target state="translated">Pobiera rozmiar klucza pochodnego.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
          <source>The size of the derived key.</source>
          <target state="translated">Rozmiar klucza pochodnego.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
          <source>Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</source>
          <target state="translated">Windows Communication Foundation (WCF) nie obsługuje tworzenia domniemanych identyfikatorów klucza pochodnego.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
          <source>However, WCF processes incoming SOAP messages that contain implied key identifier.</source>
          <target state="translated">Jednak WCF przetwarza przychodzące wiadomości SOAP, które zawierają domniemanych identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
          <source>Gets the nonce that was used to generate the derived key.</source>
          <target state="translated">Pobiera identyfikator jednorazowy, który został użyty do generowania klucza pochodnego.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the nonce that was used to generate the derived key.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> zawierający identyfikator jednorazowy, który został użyty do generowania klucza pochodnego.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
          <source>Windows Communication Foundation (WCF) does not support the creation of implied derived key identifiers.</source>
          <target state="translated">Windows Communication Foundation (WCF) nie obsługuje tworzenia domniemanych identyfikatorów klucza pochodnego.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
          <source>However, WCF processes incoming SOAP messages that contain implied key identifier.</source>
          <target state="translated">Jednak WCF przetwarza przychodzące wiadomości SOAP, które zawierają domniemanych identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id">
          <source>Gets or sets the key identifier clause ID.</source>
          <target state="translated">Pobiera lub ustawia identyfikator klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id">
          <source>The key identifier clause ID.</source>
          <target state="translated">Identyfikator klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id">
          <source>When this security key identifier is serialized into XML, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id%2A&gt;</ph> property is serialized as the <ph id="ph2">`Id`</ph> attribute of the <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> element.</source>
          <target state="translated">Podczas tego identyfikatora klucza zabezpieczeń jest serializowany w formacie XML, <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id%2A&gt;</ph> właściwości jest szeregowana jako <ph id="ph2">`Id`</ph> atrybutu <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id">
          <source>If the property is <ph id="ph1">`null`</ph>, an <ph id="ph2">`Id`</ph> attribute is not included in the <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> element.</source>
          <target state="translated">Jeśli właściwość jest <ph id="ph1">`null`</ph>, <ph id="ph2">`Id`</ph> atrybut nie jest uwzględniany w <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</source>
          <target state="translated">Zwraca wartość wskazującą, czy identyfikator klucza dla tego wystąpienia jest odpowiednikiem klauzuli określonego identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="keyIdentifierClause" /&gt;</ph> is the same instance as the current instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="keyIdentifierClause" /&gt;</ph> jest tym samym wystąpieniem, jak bieżące wystąpienie; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="keyIdentifierClause" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyIdentifierClause" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>