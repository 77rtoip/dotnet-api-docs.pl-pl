<Type Name="EncryptedSecurityTokenHandler" FullName="System.IdentityModel.Tokens.EncryptedSecurityTokenHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c95f184d600a0426ef9dd6c0b6b1dd5121d90e6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69281812" /></Metadata><TypeSignature Language="C#" Value="public class EncryptedSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <TypeSignature Language="F#" Value="type EncryptedSecurityTokenHandler = class&#xA;    inherit SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Program obsługi tokenów dla zaszyfrowanych tokenów zabezpieczających. Obsługuje tokeny typu <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program obsługi tokenów, który serializować i deserializacji <xref:System.IdentityModel.Tokens.EncryptedSecurityToken> obiekty z `<xenc:EncryptedData>` elementów i <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> obiektów z `<xenc:EncryptedKey>` elementów, zgodnie z definicją w [składni i specyfikacji przetwarzania szyfrowania XML](https://www.w3.org/TR/xmlenc-core1/).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="encryptedSecurityTokenHandler.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Czytnik XML umieszczony w elemencie początkowym. Czytnik nie powinien być zaawansowany.</param>
        <summary>Zwraca wartość wskazującą, czy bieżący element <see langword="&lt;xenc:EncryptedKey&gt;" /> XML wskazuje element, który można deserializować <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> do obiektu przez to wystąpienie.</summary>
        <returns><see langword="true" />Jeśli czytnik XML znajduje się w <see langword="&lt;xenc:EncryptedKey&gt;" /> elemencie, zgodnie z definicją w sekcji 3.5.1 <see href="https://www.w3.org/TR/xmlenc-core1/">składnia i przetwarzanie kodu XML szyfrowania</see>; w przeciwnym <see langword="false" />razie.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="encryptedSecurityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Czytnik został umieszczony w tokenie zabezpieczającym<see langword="&lt;xenc:EncryptedData&gt;" /> (element).</param>
        <summary>Zwraca wartość wskazującą, czy czytnik <see langword="&lt;xenc:EncryptedData&gt;" /> wskazuje element.</summary>
        <returns><see langword="true" />Jeśli czytnik jest umieszczony w <see langword="&lt;xenc:EncryptedData&gt;" /> elemencie; w przeciwnym razie,. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie przenosi czytnika, gdy zwraca `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy program obsługi udostępnia funkcje serializacji dla tokenów.</summary>
        <value><see langword="true" />Jeśli program obsługi może serializować tokeny; w przeciwnym razie. <see langword="false" /> Zawsze <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="override this.GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="encryptedSecurityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera identyfikatory URI identyfikatora typu dla tokenów obsłużonych przez bieżące wystąpienie.</summary>
        <returns>Domyślnie zwraca tablicę z pojedynczym <see langword="null" /> ciągiem, ponieważ nie ma określonego identyfikatora typu tokenu, który jest skojarzony <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> z typem.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfoSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfoSerializer As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::SecurityTokenSerializer ^ KeyInfoSerializer { System::IdentityModel::Selectors::SecurityTokenSerializer ^ get(); void set(System::IdentityModel::Selectors::SecurityTokenSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfoSerializer : System.IdentityModel.Selectors.SecurityTokenSerializer with get, set" Usage="System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> , który będzie używany do serializacji i deserializacji identyfikatorów kluczy <see langword="&lt;xenc:EncryptedData&gt;" /> z elementu.</summary>
        <value>Serializator tokenu, który będzie używany do odczytywania i zapisywania kluczy identyfikatorów kluczy.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Podjęto próbę ustawienia właściwości <see langword="null" /> .</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="encryptedSecurityTokenHandler.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Czytnik XML umieszczony w <see langword="&lt;xenc:EncryptedKey&gt;" /> elemencie zgodnie z definicją w <see href="https://www.w3.org/TR/xmlenc-core1/">składni i przetwarzaniu szyfrowania XML</see>; w <see langword="false" />przeciwnym razie.</param>
        <summary><see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> Odczytuje dane ze strumienia XML.</summary>
        <returns>Klauzula identyfikatora klucza typu <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="reader" />nie jest umieszczony w <see langword="&lt;xenc:EncryptedKey&gt;" /> elemencie.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="encryptedSecurityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Czytelnik, z którego ma zostać odczytany token.</param>
        <summary>Odczytuje zaszyfrowany token zabezpieczający.</summary>
        <returns>Token zabezpieczający typu <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nie skonfigurowano programu rozpoznawania tokenów usługi. (Właściwość lub właściwość konfiguracji programu obsługi tokenów, do których się odwołuje, to <see langword="null" />. <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver" /> <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> Do uzyskania kluczy odszyfrowywania wymagany jest program rozpoznawania tokenów usługi.  
  
—lub— 
Odwołanie za pomocą <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> właściwościnie<see cref="T:System.IdentityModel.Tokens.SecurityToken" />może znaleźć elementu, który może odczytać odszyfrowany kod XML i zwrócić. <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" /> <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" /></exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> Nie znaleziono w kodzie XML wskazywanym przez czytelnika.  
  
—lub— 
<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> Nie<see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />jest.</exception>
        <exception cref="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException">Nie można rozpoznać <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> znalezionegowkodzieXMLprzezskonfigurowanyprogramrozpoznawaniatokenów<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> usługi do.</exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ tokenu obsługiwanego przez bieżące wystąpienie.</summary>
        <value>Typ tokenu obsługiwanego przez bieżące wystąpienie. Wartość domyślna to <see langword="typeof" />. <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="encryptedSecurityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">Składnik zapisywania XML, w którym ma zostać zapisany zaszyfrowany token.</param>
        <param name="token">Zaszyfrowany token zabezpieczający musi być wystąpieniem <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />.</param>
        <summary>Zapisuje zaszyfrowany token zabezpieczający przy użyciu składnika zapisywania XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="token" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="token" />nie można przypisać do <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />elementu.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> Właściwość jest<see langword="null" />. Ta właściwość jest wymagana do uzyskiwania kluczy szyfrowania.  
  
—lub— 
Kolekcja obsługi tokenów zwrócona przez <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" /> właściwość nie mogła znaleźć elementu <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> , który może <see cref="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Token" /> zapisać <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> zwrócone przez właściwość.</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">Właściwości nie można przypisać <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />do elementu. <see cref="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey" /></exception>
      </Docs>
    </Member>
  </Members>
</Type>
