<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BinaryKeyIdentifierClause.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5077ad9248b00f830dd8fe64439cbed0d7ade35e9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">077ad9248b00f830dd8fe64439cbed0d7ade35e9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Represents a base class for key identifier clauses that are based upon binary data.</source>
          <target state="translated">Reprezentuje klasę podstawową dla klauzuli identyfikatora klucza, które są oparte na danych binarnych.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Typically, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">Zazwyczaj <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause&gt;</ph> nie trzeba używać, inne niż podczas tworzenia usługi tokenu zabezpieczeń niestandardowych.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">Po powrocie z usługi tokenu zabezpieczającego tokenu zabezpieczającego tokenu zabezpieczeń zawiera odwołania do tokenów zabezpieczających dołączona i odłączyć.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message.</source>
          <target state="translated">Dołączone odwołania dotyczą tokeny zabezpieczające, które są zawarte w nagłówku zabezpieczeń wiadomości SOAP i niedołączonych odwołań są tokeny zabezpieczające, które nie są uwzględniane w nagłówku zabezpieczeń wiadomości protokołu SOAP.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">Te odwołania potwierdzają zwykle autentyczności token zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>The key identifier clause type.</source>
          <target state="translated">Typ klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> property.</source>
          <target state="translated">Ustawia wartość <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> zawierający dane binarne, który reprezentuje identyfikator klucza.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to clone the array passed into the <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept> parameter; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> klonowanie tablicy przekazany <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept> parametru; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> przy użyciu określonego identyfikatora klucza typu klauzuli, dane binarne i wartość, która wskazuje, czy dane binarne muszą być sklonować.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> ma zerową długość.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>The key identifier clause type.</source>
          <target state="translated">Typ klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> property.</source>
          <target state="translated">Ustawia wartość <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> zawierający dane binarne, który reprezentuje identyfikator klucza.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the binary data that is returned by the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method.</source>
          <target state="translated">Ustawia dane binarne, który jest zwracany przez <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to clone the array passed into the <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept> parameter; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> klonowanie tablicy przekazany <bpt id="p1">&lt;c&gt;</bpt>identificationData<ept id="p1">&lt;/c&gt;</ept> parametru; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the nonce that was used to create a derived key.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> zawierający identyfikator jednorazowy, który został użyty do utworzenia klucza pochodnego.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the value that is returned by the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /&gt;</ph> method.</source>
          <target state="translated">Ustawia wartość, która jest zwracana w wyniku <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>The size of the derived key.</source>
          <target state="translated">Rozmiar klucza pochodnego.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /&gt;</ph> property.</source>
          <target state="translated">Ustawia wartość <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> przy użyciu określonego identyfikatora klucza typu klauzuli, dane binarne, wartość wskazującą, czy dane binarne muszą sklonowany, identyfikatora jednorazowego i długość klucza.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>When the <ph id="ph1">`derivationNonce`</ph> and <ph id="ph2">`derivationLength`</ph> parameters are specified, the implied derived key is used instead of the direct security key of the token.</source>
          <target state="translated">Gdy <ph id="ph1">`derivationNonce`</ph> i <ph id="ph2">`derivationLength`</ph> zostały podane parametry, dorozumianych klucza pochodnego jest używany zamiast klucza zabezpieczeń bezpośredniego tokenu.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source>Regardless of the value passed into the <ph id="ph1">`cloneBuffer`</ph> parameter, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the <ph id="ph3">`identificationData`</ph> parameter.</source>
          <target state="translated">Niezależnie od wartości przekazywane do <ph id="ph1">`cloneBuffer`</ph> parametru <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> metody zawsze zwróci klon tablicy przekazany <ph id="ph3">`identificationData`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identificationData" /&gt;</ph> ma zerową długość.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
          <source>Gets the binary data that represents the key identifier.</source>
          <target state="translated">Pobiera dane binarne, który reprezentuje identyfikator klucza.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> zawierający dane binarne, który reprezentuje identyfikator klucza.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
          <source>Regardless of the value passed into the constructor's <ph id="ph1">`cloneBuffer`</ph> parameter, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the constructor's <ph id="ph3">`identificationData`</ph> parameter.</source>
          <target state="translated">Niezależnie od wartości przekazany do konstruktora <ph id="ph1">`cloneBuffer`</ph> parametru <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> metody zawsze zwróci klon tablicy przekazany do konstruktora <ph id="ph3">`identificationData`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>Gets the binary data that represents the key identifier.</source>
          <target state="translated">Pobiera dane binarne, który reprezentuje identyfikator klucza.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the binary data that represents the key identifier.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> zawierający dane binarne, który reprezentuje identyfikator klucza.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>The array returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A&gt;</ph> method is a clone of the constructor's <ph id="ph2">`identificationData`</ph> parameter when the value passed into the <ph id="ph3">`cloneBuffer`</ph> is <ph id="ph4">`true`</ph>; otherwise it is same array.</source>
          <target state="translated">Tablica zwrócona przez <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A&gt;</ph> metoda jest Sklonowanie konstruktora <ph id="ph2">`identificationData`</ph> parametru, gdy wartość przekazywana do <ph id="ph3">`cloneBuffer`</ph> jest <ph id="ph4">`true`</ph>; w przeciwnym razie jest tej samej tablicy.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the constructor's <ph id="ph2">`identificationData`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> Metody zawsze zwróci klon tablicy przekazany do konstruktora <ph id="ph2">`identificationData`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
          <source>Returns a value that indicates whether the key identifier for this instance matches the specified object.</source>
          <target state="translated">Zwraca wartość wskazującą, czy określony obiekt jest zgodny identyfikatora klucza dla tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> to compare to.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> do porównania.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
          <source>Returns a value that indicates whether the binary data for the current instance matches the specified binary data.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dane binarne dla bieżącego wystąpienia odpowiada określonym danych binarnych.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="data" /&gt;</ph> is equivalent to the binary data returned by the <ph id="ph3">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="data" /&gt;</ph> jest odpowiednikiem dane binarne zwrócony przez <ph id="ph3">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> metody; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> to compare to.</source>
          <target state="translated">Tablica <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> do porównania.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source>The index in the array at which the comparison starts.</source>
          <target state="translated">Indeks w tablicy, w którym rozpoczyna się porównania.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source>Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dane binarne dla bieżącego wystąpienia jest odpowiednikiem określone dane binarne od wskazanego przesunięcia.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary data in the <ph id="ph2">&lt;paramref name="data" /&gt;</ph> parameter starting at the index specified in the <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> parameter is equivalent to the binary data returned by the <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method (starting at index zero); otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli dane binarne w <ph id="ph2">&lt;paramref name="data" /&gt;</ph> parametr w indeksie określone w <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> parametru jest odpowiednikiem dane binarne zwrócony przez <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> — metoda (rozpoczyna się od zera indeks); w przeciwnym razie <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</source>
          <target state="translated">Zwraca wartość wskazującą, czy identyfikator klucza dla tego wystąpienia jest odpowiednikiem klauzuli określonego identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="clause" /&gt;</ph> is of type <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> and the binary data returned by the <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> method is identical for the <ph id="ph5">&lt;paramref name="clause" /&gt;</ph> parameter and the current instance; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="clause" /&gt;</ph> jest typu <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /&gt;</ph> i danych binarnych zwrócony przez <ph id="ph4">&lt;see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /&gt;</ph> metody jest taka sama dla <ph id="ph5">&lt;paramref name="clause" /&gt;</ph> parametr i bieżącego wystąpienia; w przeciwnym razie <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>