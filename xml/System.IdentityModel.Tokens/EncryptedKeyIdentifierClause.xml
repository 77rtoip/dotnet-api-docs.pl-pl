<Type Name="EncryptedKeyIdentifierClause" FullName="System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
  <TypeSignature Language="C#" Value="public sealed class EncryptedKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncryptedKeyIdentifierClause extends System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncryptedKeyIdentifierClause&#xA;Inherits BinaryKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedKeyIdentifierClause sealed : System::IdentityModel::Tokens::BinaryKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.BinaryKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7c24b-101">Reprezentuje klauzuli identyfikatora klucza, który identyfikuje zaszyfrowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-101">Represents a key identifier clause that identifies an encrypted key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c24b-102">Zazwyczaj <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> nie trzeba używać, inne niż podczas tworzenia usługi tokenu zabezpieczeń niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="7c24b-102">Typically, the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="7c24b-103">Po powrocie z usługi tokenu zabezpieczającego tokenu zabezpieczającego tokenu zabezpieczeń zawiera odwołania do tokenów zabezpieczających dołączona i odłączyć.</span><span class="sxs-lookup"><span data-stu-id="7c24b-103">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="7c24b-104">Dołączone odwołania dotyczą tokeny zabezpieczające, które są zawarte w nagłówku zabezpieczeń wiadomości SOAP i niedołączonych odwołań są tokeny zabezpieczające, które nie są uwzględniane w nagłówku zabezpieczeń wiadomości protokołu SOAP.</span><span class="sxs-lookup"><span data-stu-id="7c24b-104">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="7c24b-105">Te odwołania potwierdzają zwykle autentyczności token zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="7c24b-105">These references typically affirm the authenticity of the issued security token.</span></span> <span data-ttu-id="7c24b-106">Użyj <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> klasę, aby odwołać zaszyfrowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-106">Use the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> class to reference an encrypted key.</span></span> <span data-ttu-id="7c24b-107"><xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> Metoda zwraca zaszyfrowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-107">The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method returns the encrypted key.</span></span>  
  
 <span data-ttu-id="7c24b-108">Usługi WCF akceptuje opakowana kluczy, które są poprawnie sformułowane względem formatu danych przesyłanych w sieci.</span><span class="sxs-lookup"><span data-stu-id="7c24b-108">WCF accepts wrapped keys that are well formed with respect to the wire format.</span></span> <span data-ttu-id="7c24b-109">Algorytm zawijania klucza podane przesyłania i akceptowany jest używany.</span><span class="sxs-lookup"><span data-stu-id="7c24b-109">The key wrap algorithm specified on the wire is accepted and used.</span></span> <span data-ttu-id="7c24b-110">Nie został zweryfikowany jako zgodny z <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> określony przez punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="7c24b-110">It is not verified to be compatible with the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> specified by the endpoint.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c24b-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7c24b-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="encryptionMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="7c24b-112">Tablica <see cref="T:System.Byte" /> zawiera klucz, który jest zaszyfrowany.</span><span class="sxs-lookup"><span data-stu-id="7c24b-112">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span></span> <span data-ttu-id="7c24b-113">Ustawia wartość, która jest zwracana z <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7c24b-113">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span></span></param>
        <param name="encryptionMethod"><span data-ttu-id="7c24b-114">Algorytm kryptograficzny, który jest używany do szyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-114">The cryptographic algorithm that is used to encrypt the key.</span></span> <span data-ttu-id="7c24b-115">Ustawia wartość <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7c24b-115">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span></span></param>
        <summary><span data-ttu-id="7c24b-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> przy użyciu określonego klucza zaszyfrowanego i algorytm kryptograficzny używany do szyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-116">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c24b-117">Użyj stałej statycznej ciągów w <xref:System.IdentityModel.Tokens.SecurityAlgorithms> Aby określić algorytm kryptograficzny `encryptionMethod` parametru.</span><span class="sxs-lookup"><span data-stu-id="7c24b-117">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c24b-118"><paramref name="encryptionMethod" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c24b-118"><paramref name="encryptionMethod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7c24b-119">—lub—</span><span class="sxs-lookup"><span data-stu-id="7c24b-119">-or-</span></span>  
  
 <span data-ttu-id="7c24b-120"><paramref name="encryptedKey" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c24b-120"><paramref name="encryptedKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c24b-121"><paramref name="encryptedKey" /> ma zerową długość.</span><span class="sxs-lookup"><span data-stu-id="7c24b-121"><paramref name="encryptedKey" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="7c24b-122">Tablica <see cref="T:System.Byte" /> zawiera klucz, który jest zaszyfrowany.</span><span class="sxs-lookup"><span data-stu-id="7c24b-122">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span></span> <span data-ttu-id="7c24b-123">Ustawia wartość, która jest zwracana z <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7c24b-123">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span></span></param>
        <param name="encryptionMethod"><span data-ttu-id="7c24b-124">Algorytm kryptograficzny, który jest używany do szyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-124">The cryptographic algorithm that is used to encrypt the key.</span></span> <span data-ttu-id="7c24b-125">Ustawia wartość <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7c24b-125">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span></span></param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <summary><span data-ttu-id="7c24b-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> przy użyciu określonego klucza jest szyfrowane, algorytm kryptograficzny używany do szyfrowania klucza i identyfikatorem klucza dla klucza szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="7c24b-126">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c24b-127">Użyj stałej statycznej ciągów w <xref:System.IdentityModel.Tokens.SecurityAlgorithms> Aby określić algorytm kryptograficzny `encryptionMethod` parametru.</span><span class="sxs-lookup"><span data-stu-id="7c24b-127">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c24b-128"><paramref name="encryptionMethod" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c24b-128"><paramref name="encryptionMethod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7c24b-129">—lub—</span><span class="sxs-lookup"><span data-stu-id="7c24b-129">-or-</span></span>  
  
 <span data-ttu-id="7c24b-130"><paramref name="encryptedKey" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c24b-130"><paramref name="encryptedKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c24b-131"><paramref name="encryptedKey" /> ma zerową długość.</span><span class="sxs-lookup"><span data-stu-id="7c24b-131"><paramref name="encryptedKey" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier, System::String ^ carriedKeyName);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier, carriedKeyName As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier, System::String ^ carriedKeyName);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="carriedKeyName" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="7c24b-132">Tablica <see cref="T:System.Byte" /> zawiera klucz, który jest zaszyfrowany.</span><span class="sxs-lookup"><span data-stu-id="7c24b-132">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span></span> <span data-ttu-id="7c24b-133">Ustawia wartość, która jest zwracana z <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7c24b-133">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span></span></param>
        <param name="encryptionMethod"><span data-ttu-id="7c24b-134">Algorytm kryptograficzny, który jest używany do szyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-134">The cryptographic algorithm that is used to encrypt the key.</span></span> <span data-ttu-id="7c24b-135">Ustawia wartość <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7c24b-135">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span></span></param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="carriedKeyName"><span data-ttu-id="7c24b-136">Czytelny dla użytkownika nazwę, która jest skojarzona z kluczem określonym w <c>encryptedKey</c> parametru.</span><span class="sxs-lookup"><span data-stu-id="7c24b-136">A user-readable name that is associated with the key specified in the <c>encryptedKey</c> parameter.</span></span> <span data-ttu-id="7c24b-137">Ustawia wartość <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7c24b-137">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</span></span></param>
        <summary><span data-ttu-id="7c24b-138">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> przy użyciu określonego klucza jest szyfrowane, algorytm kryptograficzny używany do szyfrowania klucza, identyfikatorem klucza dla klucza szyfrowania i nazwę użytkownika do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7c24b-138">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c24b-139">Użyj stałej statycznej ciągów w <xref:System.IdentityModel.Tokens.SecurityAlgorithms> Aby określić algorytm kryptograficzny `encryptionMethod` parametru.</span><span class="sxs-lookup"><span data-stu-id="7c24b-139">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c24b-140"><paramref name="encryptionMethod" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c24b-140"><paramref name="encryptionMethod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7c24b-141">—lub—</span><span class="sxs-lookup"><span data-stu-id="7c24b-141">-or-</span></span>  
  
 <span data-ttu-id="7c24b-142"><paramref name="encryptedKey" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c24b-142"><paramref name="encryptedKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c24b-143"><paramref name="encryptedKey" /> ma zerową długość.</span><span class="sxs-lookup"><span data-stu-id="7c24b-143"><paramref name="encryptedKey" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier, System::String ^ carriedKeyName, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier, carriedKeyName As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier, System::String ^ carriedKeyName, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="carriedKeyName" Type="System.String" Index="3" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" Index="4" />
        <Parameter Name="derivationLength" Type="System.Int32" Index="5" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="7c24b-144">Tablica <see cref="T:System.Byte" /> zawiera klucz, który jest zaszyfrowany.</span><span class="sxs-lookup"><span data-stu-id="7c24b-144">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span></span> <span data-ttu-id="7c24b-145">Ustawia wartość, która jest zwracana z <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7c24b-145">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span></span></param>
        <param name="encryptionMethod"><span data-ttu-id="7c24b-146">Algorytm kryptograficzny, który jest używany do szyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-146">The cryptographic algorithm that is used to encrypt the key.</span></span> <span data-ttu-id="7c24b-147">Ustawia wartość <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7c24b-147">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span></span></param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="carriedKeyName"><span data-ttu-id="7c24b-148">Czytelny dla użytkownika nazwę, która jest skojarzona z kluczem określonym w <c>encryptedKey</c> parametru.</span><span class="sxs-lookup"><span data-stu-id="7c24b-148">A user-readable name that is associated with the key specified in the <c>encryptedKey</c> parameter.</span></span> <span data-ttu-id="7c24b-149">Ustawia wartość <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7c24b-149">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</span></span></param>
        <param name="derivationNonce"><span data-ttu-id="7c24b-150">Tablica <see cref="T:System.Byte" /> zawierający identyfikator jednorazowy, który został użyty do utworzenia klucza pochodnego.</span><span class="sxs-lookup"><span data-stu-id="7c24b-150">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</span></span> <span data-ttu-id="7c24b-151">Ustawia wartość, która jest zwracana w wyniku <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7c24b-151">Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</span></span></param>
        <param name="derivationLength"><span data-ttu-id="7c24b-152">Rozmiar klucza pochodnego.</span><span class="sxs-lookup"><span data-stu-id="7c24b-152">The size of the derived key.</span></span> <span data-ttu-id="7c24b-153">Ustawia wartość <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7c24b-153">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</span></span></param>
        <summary><span data-ttu-id="7c24b-154">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> przy użyciu określonego klucza jest szyfrowane, algorytm kryptograficzny używany do szyfrowania klucza, identyfikatorem klucza dla klucza i nazwy użytkownika do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7c24b-154">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c24b-155">Gdy `derivationNonce` i `derivationLength` zostały podane parametry, dorozumianych klucza pochodnego jest używany zamiast klucza zabezpieczeń bezpośredniego tokenu.</span><span class="sxs-lookup"><span data-stu-id="7c24b-155">When the `derivationNonce` and `derivationLength` parameters are specified the implied derived key is used instead of the direct security key of the token.</span></span>  
  
 <span data-ttu-id="7c24b-156">Użyj stałej statycznej ciągów w <xref:System.IdentityModel.Tokens.SecurityAlgorithms> Aby określić algorytm kryptograficzny `encryptionMethod` parametru.</span><span class="sxs-lookup"><span data-stu-id="7c24b-156">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c24b-157"><paramref name="encryptionMethod" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c24b-157"><paramref name="encryptionMethod" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7c24b-158">—lub—</span><span class="sxs-lookup"><span data-stu-id="7c24b-158">-or-</span></span>  
  
 <span data-ttu-id="7c24b-159"><paramref name="encryptedKey" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c24b-159"><paramref name="encryptedKey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c24b-160"><paramref name="encryptedKey" /> ma zerową długość.</span><span class="sxs-lookup"><span data-stu-id="7c24b-160"><paramref name="encryptedKey" /> is zero length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CarriedKeyName">
      <MemberSignature Language="C#" Value="public string CarriedKeyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CarriedKeyName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CarriedKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CarriedKeyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c24b-161">Pobiera nazwę użytkownika do odczytu, która jest skojarzony z zaszyfrowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-161">Gets a user-readable name that is associated with the encrypted key.</span></span></summary>
        <value><span data-ttu-id="7c24b-162">Czytelny dla użytkownika nazwa, która jest skojarzona z zaszyfrowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-162">A user-readable name that is associated with the encrypted key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c24b-163">Gdy <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> właściwości jest serializowany w formacie XML, znajduje się w <`CarriedKeyName`> elementu.</span><span class="sxs-lookup"><span data-stu-id="7c24b-163">When the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> property is serialized into XML, it is placed in the <`CarriedKeyName`> element.</span></span> <span data-ttu-id="7c24b-164">Dla zaszyfrowanych kluczy <`CarriedKeyName`> element jest opcjonalny element, który kojarzy nazwę użytkownika do odczytu o wartości klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-164">For encrypted keys, the <`CarriedKeyName`> element is an optional element that associates a user-readable name with a key value.</span></span> <span data-ttu-id="7c24b-165">Ta nazwa może następnie służyć do odwołania klucza przy użyciu <`KeyName`> w elemencie <`KeyInfo`> elementu.</span><span class="sxs-lookup"><span data-stu-id="7c24b-165">This name can then be used to reference the key using the <`KeyName`> element within the <`KeyInfo`> element.</span></span> <span data-ttu-id="7c24b-166">Taki sam <`CarriedKeyName`> Wartość elementu, w odróżnieniu od wartości Identyfikatora może wystąpić wiele razy w ramach pojedynczego dokumentu.</span><span class="sxs-lookup"><span data-stu-id="7c24b-166">The same <`CarriedKeyName`> element value, unlike an ID value, can occur multiple times within a single document.</span></span> <span data-ttu-id="7c24b-167">Wartość klucza musi być taka sama we wszystkich <`EncryptedKey`> elementy zidentyfikowane o takim samym <`CarriedKeyName`> Nazwa w dokumencie XML.</span><span class="sxs-lookup"><span data-stu-id="7c24b-167">The value of the key must be the same in all <`EncryptedKey`> elements identified with the same <`CarriedKeyName`> name within an XML document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptingKeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ EncryptingKeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c24b-168">Pobiera identyfikator klucza dla klucza szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="7c24b-168">Gets a key identifier for the encrypting key.</span></span></summary>
        <value><span data-ttu-id="7c24b-169">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> reprezentujący identyfikator klucza dla klucza szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="7c24b-169">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the encrypting key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public string EncryptionMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c24b-170">Pobiera algorytm kryptograficzny, który jest używany do szyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-170">Gets the cryptographic algorithm that is used to encrypt the key.</span></span></summary>
        <value><span data-ttu-id="7c24b-171">Algorytm kryptograficzny, który jest używany do szyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-171">The cryptographic algorithm that is used to encrypt the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c24b-172">Zazwyczaj wartość <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> właściwości jest jednym z statycznych ciągów stałej w <xref:System.IdentityModel.Tokens.SecurityAlgorithms> klasy.</span><span class="sxs-lookup"><span data-stu-id="7c24b-172">Typically, the value of the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> property is one of the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptedKey">
      <MemberSignature Language="C#" Value="public byte[] GetEncryptedKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetEncryptedKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncryptedKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetEncryptedKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c24b-173">Pobiera zaszyfrowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-173">Gets the encrypted key.</span></span></summary>
        <returns><span data-ttu-id="7c24b-174">Tablica <see cref="T:System.Byte" /> zawiera zaszyfrowany klucz.</span><span class="sxs-lookup"><span data-stu-id="7c24b-174">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c24b-175">Tablica, która jest zwracana w wyniku <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> metoda jest Sklonowanie zaszyfrowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-175">The array that is returned by the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method is a clone of the encrypted key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c24b-176">Zwraca wartość wskazującą, czy identyfikator klucza dla tego wystąpienia jest odpowiednikiem określonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="7c24b-176">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (clause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">To be added.</param>
        <param name="clause">To be added.</param>
        <summary><span data-ttu-id="7c24b-177">Zwraca wartość wskazującą, czy identyfikator klucza dla tego wystąpienia jest odpowiednikiem klauzuli określonego identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-177">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</span></span></summary>
        <returns>
          <span data-ttu-id="7c24b-178"><see langword="true" /> Jeśli <paramref name="keyIdentifierClause" /> jest typu <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> i ma takie same zaszyfrowany klucz, metody szyfrowania i czytelna dla użytkownika nazwa jak bieżące wystąpienie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7c24b-178"><see langword="true" /> if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c24b-179"><paramref name="keyIdentifierClause" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c24b-179"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
        <altmember cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
        <altmember cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] encryptedKey, string encryptionMethod, string carriedKeyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] encryptedKey, string encryptionMethod, string carriedKeyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (encryptedKey As Byte(), encryptionMethod As String, carriedKeyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::String ^ carriedKeyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="encryptionMethod" Type="System.String" />
        <Parameter Name="carriedKeyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedKey"><span data-ttu-id="7c24b-180">Tablica <see cref="T:System.Byte" /> zawiera klucz, który jest zaszyfrowany.</span><span class="sxs-lookup"><span data-stu-id="7c24b-180">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span></span></param>
        <param name="encryptionMethod"><span data-ttu-id="7c24b-181">Algorytm kryptograficzny, który jest używany do szyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-181">The cryptographic algorithm that is used to encrypt the key.</span></span></param>
        <param name="carriedKeyName"><span data-ttu-id="7c24b-182">Czytelny dla użytkownika nazwa, która jest skojarzona z zaszyfrowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-182">A user-readable name that is associated with the encrypted key.</span></span></param>
        <summary><span data-ttu-id="7c24b-183">Zwraca wartość wskazującą, czy identyfikator klucza dla tego wystąpienia jest odpowiednikiem określony zaszyfrowany klucz, metody szyfrowania i nazwę użytkownika do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7c24b-183">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.</span></span></summary>
        <returns>
          <span data-ttu-id="7c24b-184"><see langword="true" /> Jeśli <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> i <paramref name="carriedKeyName" /> parametry mają takie same wartości zwracanych przez <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> — metoda i <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> i <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> właściwości, odpowiednio; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7c24b-184"><see langword="true" /> if the <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> and <paramref name="carriedKeyName" /> parameters have the same values returned by the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> properties, respectively; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c24b-185">Zwraca ciąg, który reprezentuje bieżący obiekt.</span><span class="sxs-lookup"><span data-stu-id="7c24b-185">Returns a string that represents the current object.</span></span></summary>
        <returns><span data-ttu-id="7c24b-186">Bieżący obiekt.</span><span class="sxs-lookup"><span data-stu-id="7c24b-186">The current object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c24b-187"><xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> Metoda zwraca ciąg, który zawiera zaszyfrowany klucz i algorytm kryptograficzny, który jest używany do szyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="7c24b-187">The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>