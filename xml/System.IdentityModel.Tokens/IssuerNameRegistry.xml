<Type Name="IssuerNameRegistry" FullName="System.IdentityModel.Tokens.IssuerNameRegistry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99ef3ede8c606349e7d5c5cc670ec0c65f58a76d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30455187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IssuerNameRegistry extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IssuerNameRegistry&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuerNameRegistry abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Abstrakcyjna klasa podstawowa dla rejestru nazwy dostawcy. Rejestru nazwy dostawcy jest używany do kojarzenia nazwy skrótu do materiałów kryptograficznych, potrzebnego do weryfikowania podpisów tokenów utworzonego przez odpowiednie wystawcy. Rejestru nazwy dostawcy przechowuje listę wystawców, które są zaufane przez aplikację jednostki uzależnionej strony (RP).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rejestru nazwy dostawcy jest używany do kojarzenia nazwy skrótu do materiałów kryptograficznych potrzebne do weryfikowania podpisów tokenów utworzonego przez odpowiednie wystawcy. Ta nazwa jest następnie używana do ustawienia <xref:System.Security.Claims.Claim.Issuer%2A> lub <xref:System.Security.Claims.Claim.OriginalIssuer%2A> właściwości oświadczenia. Metody ujawnione przez <xref:System.IdentityModel.Tokens.IssuerNameRegistry> klasy są wywoływane z potoku przez programu obsługi tokenów zabezpieczających przetwarzanego tokenu. Tokeny podpisane przez materiał, który nie jest mapowany przez rejestru nazwy dostawcy zostaną odrzucone jako niezaufany. Nazwa zwrócony przez rejestr Nazwa wystawcy powinna być unikatowa w kontekście aplikacji planu odzyskiwania.  
  
 W kodzie, można określić rejestru nazwy dostawcy do użycia przez ustawienie <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> właściwości. W pliku konfiguracji można określić rejestru nazwy wystawcy, określając [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) pod [ &lt;securityTokenHandlerConfiguration &gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) elementu.  
  
 Windows Identity Foundation (WIF) dostarcza implementację tego <xref:System.IdentityModel.Tokens.IssuerNameRegistry> klasy fabrycznej: <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> klasy. Korzystając z tej implementacji listy zaufanych wystawców można określić w pliku konfiguracyjnym aplikacji planu odzyskiwania w obszarze [ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element, który jest elementem podrzędnym `<issuerNameRegistry>`elementu po <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>.class odwołuje się do tego elementu `type` atrybutu. W obszarze `<trustedIssuers>` elementu, każda nazwa wystawcy jest mapowany na certyfikatu X.509, który powinien być używany do zweryfikowania jego podpisu.  
  
 Aby utworzyć rejestru nazwy niestandardowego wystawcy, konieczne jest przesłonięcie <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> metody. Ta metoda zwraca Nazwa wystawcy tokenu zabezpieczającego określony. Opcjonalnie można zastąpić <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> metodę w celu zapewnienia mechanizm podpowiedzi podczas pobierania nazwy wystawcy i <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> metodę, jeśli chcesz podać tokeny Nazwa wystawcy dla systemu Windows, który różni się od <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>. Zastąpienie <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> metodę umożliwiającą włączenie z rejestru nazwy dostawcy do zainicjowania z pliku konfiguracji.  
  
   
  
## Examples  
 Poniższy kod przedstawia implementację <xref:System.IdentityModel.Tokens.IssuerNameRegistry> klasy, która akceptuje tylko wystawców, które korzystają z certyfikatów z podmiotem "CN = localhost".  
  
> [!WARNING]
>  Następujący kod jest tylko w celach ilustracyjnych. Sprawdzania poprawności certyfikatów na podstawie nazwy podmiotu nie jest dobrym rozwiązaniem. Nie można używać tego kodu jest w środowisku produkcyjnym.  
  
 [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  
  
 Poniżej przedstawiono XML niezbędnych do skonfigurowania aplikacji z rejestru nazwy zaufanych wystawców.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <issuerNameRegistry type="System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp" />  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIssuerName">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca nazwę wystawcy tokenu zabezpieczającego określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywoływana z potoku przetwarzania przez programu obsługi tokenów zabezpieczających przetwarzanego tokenu. Metoda powinna zwracać unikatową nazwę wystawcy w kontekście aplikacji planu odzyskiwania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">Token zabezpieczający, której nazwa wystawcy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca nazwę wystawcy tokenu zabezpieczającego określony.</summary>
        <returns>Nazwa wystawcy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacje powinny zwrócić niezerowy i niepusty ciąg do identyfikowania rozpoznanym wystawcy lub pusty ciąg, aby zidentyfikować nierozpoznanego wystawcy.  
  
 Metoda wywoływana z potoku przetwarzania przez programu obsługi tokenów zabezpieczających przetwarzanego tokenu. Metoda powinna zwracać unikatową nazwę wystawcy w kontekście aplikacji planu odzyskiwania.  
  
   
  
## Examples  
 Poniższy kod przedstawia <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> metodę rejestru nazwy dostawcy. Pełny przykład znajduje się w <xref:System.IdentityModel.Tokens.IssuerNameRegistry> temat klasy.  
  
> [!WARNING]
>  Następujący kod jest tylko w celach ilustracyjnych. Sprawdzania poprawności certyfikatów na podstawie nazwy podmiotu nie jest dobrym rozwiązaniem. Nie można używać tego kodu jest w środowisku produkcyjnym.  
  
 [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken, System::String ^ requestedIssuerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="requestedIssuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken">Token zabezpieczający, której nazwa wystawcy.</param>
        <param name="requestedIssuerName">Nazwa wystawcy, które należy uwzględnić w żądaniu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca nazwę wystawcy tokenu zabezpieczającego określony. Nazwa określonego wystawcę można uznać przy określaniu Nazwa wystawcy do zwrócenia.</summary>
        <returns>Nazwa wystawcy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja ignoruje `requestedIssuerName` parametru i po prostu wywołania <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> metody.  
  
 Metoda wywoływana z potoku przetwarzania przez programu obsługi tokenów zabezpieczających przetwarzanego tokenu. Metoda powinna zwracać unikatową nazwę wystawcy w kontekście aplikacji planu odzyskiwania.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowsIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetWindowsIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWindowsIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWindowsIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWindowsIssuerName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca domyślną nazwę wystawcy do zastosowania w przypadku oświadczeń systemu Windows.</summary>
        <returns>Nazwa wystawcy oświadczeń systemu Windows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja zwraca <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.  
  
 Metoda wywoływana z potoku przetwarzania przez programu obsługi tokenów zabezpieczających przetwarzanego tokenu. Metoda powinna zwracać unikatową nazwę wystawcy w kontekście aplikacji planu odzyskiwania.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">Elementy XML konfiguracji. Każdy węzeł na liście jest typu <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, ładuje niestandardowej konfiguracji z pliku XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> Metoda jest wywoływana przez infrastrukturę konfiguracji. Gdy ta metoda jest wywoływana, `nodelist` będzie zawierać elementy podrzędne najwyższego poziomu [ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) elementu z pliku konfiguracji. Każdy z tych z kolei może zawierać, atrybuty i elementy podrzędne w zależności od schematu konfiguracji zdefiniowanej dla klasy pochodnej.  
  
 Domyślna implementacja zwraca <xref:System.NotImplementedException>. Zastępuje tę metodę w klasie pochodnej, aby umożliwić inicjowanie z rejestru nazwy dostawcy z pliku konfiguracji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>