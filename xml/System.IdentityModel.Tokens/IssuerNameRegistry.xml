<Type Name="IssuerNameRegistry" FullName="System.IdentityModel.Tokens.IssuerNameRegistry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65a0bf0b90e5e9241ee97581d3e2f5917939d093" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69281643" /></Metadata><TypeSignature Language="C#" Value="public abstract class IssuerNameRegistry : System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IssuerNameRegistry extends System.Object implements class System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IssuerNameRegistry&#xA;Implements ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class IssuerNameRegistry abstract : System::IdentityModel::Configuration::ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type IssuerNameRegistry = class&#xA;    interface ICustomIdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Configuration.ICustomIdentityConfiguration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Abstrakcyjna klasa bazowa dla rejestru nazwy wystawcy. Rejestr nazw wystawcy służy do kojarzenia nazwy z materiałem kryptograficznym, który jest niezbędny do zweryfikowania podpisów tokenów wytworzonych przez odpowiedniego wystawcy. Nazwa wystawcy Rejestr zawiera listę wystawców, które są zaufane przez aplikację jednostki uzależnionej (RP).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rejestr nazw wystawcy służy do kojarzenia nazwy z materiałami kryptograficznymi, które są konieczne do zweryfikowania podpisów tokenów wytworzonych przez odpowiedniego wystawcy. Ta nazwa jest następnie używana do ustawiania <xref:System.Security.Claims.Claim.Issuer%2A> <xref:System.Security.Claims.Claim.OriginalIssuer%2A> lub właściwości żądania. Metody uwidocznione przez <xref:System.IdentityModel.Tokens.IssuerNameRegistry> klasę są wywoływane z potoku przez program obsługi tokenów zabezpieczających, który przetwarza token. Tokeny podpisane przez materiał, które nie są mapowane przez rejestr nazw wystawcy, są odrzucane jako niezaufane. Nazwa zwrócona przez rejestr nazwy wystawcy powinna być unikatowa w kontekście aplikacji RP.  
  
 W kodzie można określić rejestr nazwy wystawcy, który ma być używany przez <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry%2A?displayProperty=nameWithType> ustawienie właściwości. W pliku konfiguracyjnym rejestr nazwy wystawcy może być określony przez określenie [ &lt;elementu issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) w [ &lt;elemencie securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) .  
  
 Windows Identity Foundation (WIF) zawiera implementację <xref:System.IdentityModel.Tokens.IssuerNameRegistry> klasy z Box <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> : Klasa. W przypadku korzystania z tej implementacji można określić listę zaufanych wystawców w pliku konfiguracji aplikacji RP w ramach `<issuerNameRegistry>` [ &lt;elementu trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) , który jest elementem podrzędnym elementu, gdy . Klasa jest przywoływana w `type` atrybucie tego elementu. <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> `<trustedIssuers>` Pod elementem każda nazwa wystawcy jest mapowana na certyfikat X. 509, który powinien zostać użyty do zweryfikowania podpisu.  
  
 Aby utworzyć niestandardową nazwę wystawcy rejestru, należy <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> zastąpić metodę. Ta metoda zwraca nazwę wystawcy dla określonego tokenu zabezpieczającego. Opcjonalnie można zastąpić metodę, <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%2CSystem.String%29?displayProperty=nameWithType> aby zapewnić mechanizm podpowiedzi podczas pobierania nazw wystawców <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName%2A> i metody, jeśli chcesz podać nazwę wystawcy dla tokenów systemu Windows, które różnią się <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>od. Zastąp <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> metodę, aby umożliwić zainicjowanie rejestru Nazwa wystawcy z pliku konfiguracji.  
  
   
  
## Examples  
 Poniższy kod przedstawia implementację <xref:System.IdentityModel.Tokens.IssuerNameRegistry> klasy, która akceptuje tylko wystawcy używające certyfikatów z podmiotem "CN = localhost".  
  
> [!WARNING]
>  Poniższy kod służy wyłącznie do celów informacyjnych. Sprawdzanie poprawności certyfikatów na podstawie nazwy podmiotu nie jest dobrym sposobem. Tego kodu nie należy używać w środowisku produkcyjnym.  
  
 [!code-csharp[WifIssuerNameRegistry#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#1)]  
  
 Poniżej przedstawiono kod XML, który jest niezbędny do skonfigurowania aplikacji z rejestrem zaufanej nazwy wystawcy.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <issuerNameRegistry type="System.IdentityModel.Samples.TrustedIssuerNameRegistry, MyApp" />  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
    <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
    <related type="Article" href="https://msdn.microsoft.com/library/58b39d12-c953-40c4-88af-d7eb3343ca28">&lt;issuerNameRegistry&gt;</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIssuerName">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca nazwę wystawcy dla określonego tokenu zabezpieczającego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływana z potoku przetwarzania przez program obsługi tokenów zabezpieczających, który przetwarza token. Metoda powinna zwracać unikatową nazwę wystawcy w kontekście aplikacji RP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public abstract string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="issuerNameRegistry.GetIssuerName securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">Token zabezpieczający, dla którego ma zostać zwrócona nazwa wystawcy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca nazwę wystawcy określonego tokenu zabezpieczającego.</summary>
        <returns>Nazwa wystawcy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacje powinny zwracać niezerową i niepusty ciąg w celu zidentyfikowania rozpoznanego wystawcy lub ciągu o wartości null w celu zidentyfikowania nierozpoznanego wystawcy.  
  
 Wywoływana z potoku przetwarzania przez program obsługi tokenów zabezpieczających, który przetwarza token. Metoda powinna zwracać unikatową nazwę wystawcy w kontekście aplikacji RP.  
  
   
  
## Examples  
 Poniższy kod przedstawia <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%2A> metodę dla rejestru Nazwa wystawcy. Pełny przykład znajduje się w <xref:System.IdentityModel.Tokens.IssuerNameRegistry> temacie Omówienie klas.  
  
> [!WARNING]
>  Poniższy kod służy wyłącznie do celów informacyjnych. Sprawdzanie poprawności certyfikatów na podstawie nazwy podmiotu nie jest dobrym sposobem. Tego kodu nie należy używać w środowisku produkcyjnym.  
  
 [!code-csharp[WifIssuerNameRegistry#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifissuernameregistry/cs/mvcwepapp/trustedissuernameregistry.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken, string requestedIssuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken, System::String ^ requestedIssuerName);" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string&#xA;override this.GetIssuerName : System.IdentityModel.Tokens.SecurityToken * string -&gt; string" Usage="issuerNameRegistry.GetIssuerName (securityToken, requestedIssuerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="requestedIssuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityToken">Token zabezpieczający, dla którego ma zostać zwrócona nazwa wystawcy.</param>
        <param name="requestedIssuerName">Nazwa wystawcy do uwzględnienia w żądaniu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca nazwę wystawcy określonego tokenu zabezpieczającego. Określona nazwa wystawcy może zostać uznana za określenie nazwy wystawcy, która ma zostać zwrócona.</summary>
        <returns>Nazwa wystawcy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja ignoruje `requestedIssuerName` parametr i po prostu <xref:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> wywołuje metodę.  
  
 Wywoływana z potoku przetwarzania przez program obsługi tokenów zabezpieczających, który przetwarza token. Metoda powinna zwracać unikatową nazwę wystawcy w kontekście aplikacji RP.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowsIssuerName">
      <MemberSignature Language="C#" Value="public virtual string GetWindowsIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWindowsIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWindowsIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWindowsIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetWindowsIssuerName : unit -&gt; string&#xA;override this.GetWindowsIssuerName : unit -&gt; string" Usage="issuerNameRegistry.GetWindowsIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca domyślną nazwę wystawcy, która ma być używana dla oświadczeń systemu Windows.</summary>
        <returns>Domyślna nazwa wystawcy dla oświadczeń systemu Windows.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja zwraca <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.  
  
 Wywoływana z potoku przetwarzania przez program obsługi tokenów zabezpieczających, który przetwarza token. Metoda powinna zwracać unikatową nazwę wystawcy w kontekście aplikacji RP.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="issuerNameRegistry.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist">Elementy konfiguracji XML. Każdy węzeł na liście jest typu <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, ładuje konfigurację niestandardową z pliku XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration%2A> Metoda jest wywoływana przez infrastrukturę konfiguracji. Gdy ta metoda jest wywoływana, `nodelist` będzie zawierać elementy [ &lt;podrzędne najwyższego poziomu elementu issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) z pliku konfiguracyjnego. Każdy z nich może z kolei zawierać atrybuty lub elementy podrzędne w zależności od schematu konfiguracji zdefiniowanego dla klasy pochodnej.  
  
 Domyślna implementacja zgłasza <xref:System.NotImplementedException>. Zastąp tę metodę w klasie pochodnej, aby włączyć inicjalizację rejestru Nazwa wystawcy z pliku konfiguracji.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/58b39d12-c953-40c4-88af-d7eb3343ca28">&lt;issuerNameRegistry&gt;</related>
      </Docs>
    </Member>
  </Members>
</Type>
