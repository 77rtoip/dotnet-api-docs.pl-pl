<Type Name="SecurityKeyElement" FullName="System.IdentityModel.Tokens.SecurityKeyElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="efaf58d7013682dd8fc2caf75d974d5f33c72d76" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36556700" /></Metadata><TypeSignature Language="C#" Value="public class SecurityKeyElement : System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityKeyElement extends System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyElement" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityKeyElement&#xA;Inherits SecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityKeyElement : System::IdentityModel::Tokens::SecurityKey" />
  <TypeSignature Language="F#" Value="type SecurityKeyElement = class&#xA;    inherit SecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d1632-101">Udostępnia rozpoznawanie opóźnione kluczy zabezpieczeń rozwiązując <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> lub <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> tylko, gdy są potrzebne funkcje kryptograficzne.</span><span class="sxs-lookup"><span data-stu-id="d1632-101">Provides delayed resolution of security keys by resolving the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> or <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> only when cryptographic functions are needed.</span></span> <span data-ttu-id="d1632-102">Dzięki temu identyfikatora klucza klauzuli lub klucz identyfikator, który nigdy nie jest używany przez aplikację, aby być serializowane i deserialzied włączać i wyłączać protokół sieciowy bez problemów.</span><span class="sxs-lookup"><span data-stu-id="d1632-102">This allows a key identifier clause or key identifier that is never used by an application to be serialized and deserialzied on and off the wire without issues.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1632-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d1632-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityKeyElement (System.IdentityModel.Tokens.SecurityKeyIdentifier securityKeyIdentifier, System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKeyIdentifier securityKeyIdentifier, class System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityKeyElement(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ securityKeyIdentifier, System::IdentityModel::Selectors::SecurityTokenResolver ^ securityTokenResolver);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SecurityKeyElement : System.IdentityModel.Tokens.SecurityKeyIdentifier * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityKeyElement" Usage="new System.IdentityModel.Tokens.SecurityKeyElement (securityKeyIdentifier, securityTokenResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="securityTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifier"><span data-ttu-id="d1632-104">Identyfikator klucza, który reprezentuje <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span><span class="sxs-lookup"><span data-stu-id="d1632-104">A key identifier that represents a <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span></span></param>
        <param name="securityTokenResolver"><span data-ttu-id="d1632-105">Program rozpoznawania tokenów, który może być rozpoznany <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span><span class="sxs-lookup"><span data-stu-id="d1632-105">A token resolver that can be resolved to a <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span></span></param>
        <summary><span data-ttu-id="d1632-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> klasy z określonego identyfikatora klucza.</span><span class="sxs-lookup"><span data-stu-id="d1632-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> class from the specified key identifier.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1632-107"><paramref name="securityKeyIdentifier" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1632-107"><paramref name="securityKeyIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityKeyElement (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause, System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause, class System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityKeyElement(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ securityKeyIdentifierClause, System::IdentityModel::Selectors::SecurityTokenResolver ^ securityTokenResolver);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SecurityKeyElement : System.IdentityModel.Tokens.SecurityKeyIdentifierClause * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityKeyElement" Usage="new System.IdentityModel.Tokens.SecurityKeyElement (securityKeyIdentifierClause, securityTokenResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityKeyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="securityTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="securityKeyIdentifierClause"><span data-ttu-id="d1632-108">Klauzuli identyfikatora klucza, który reprezentuje <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span><span class="sxs-lookup"><span data-stu-id="d1632-108">A key identifier clause that represents a <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span></span></param>
        <param name="securityTokenResolver"><span data-ttu-id="d1632-109">Program rozpoznawania tokenów, który może być rozpoznany <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span><span class="sxs-lookup"><span data-stu-id="d1632-109">A token resolver that can be resolved to a <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</span></span></param>
        <summary><span data-ttu-id="d1632-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> klasy z klauzuli identyfikatora klucza określonego.</span><span class="sxs-lookup"><span data-stu-id="d1632-110">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyElement" /> class from the specified key identifier clause.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1632-111"><paramref name="securityKeyIdentifierClause" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1632-111"><paramref name="securityKeyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public override byte[] DecryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.DecryptKey : string * byte[] -&gt; byte[]" Usage="securityKeyElement.DecryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="d1632-112">Algorytm, który ma być używany do odszyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="d1632-112">The algorithm to use to decrypt the key.</span></span></param>
        <param name="keyData"><span data-ttu-id="d1632-113">Tablica, która zawiera zaszyfrowany klucz.</span><span class="sxs-lookup"><span data-stu-id="d1632-113">An array that contains the encrypted key.</span></span></param>
        <summary><span data-ttu-id="d1632-114">Odszyfrowuje określonego klucza przy użyciu określonego algorytmu.</span><span class="sxs-lookup"><span data-stu-id="d1632-114">Decrypts the specified key by using the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="d1632-115">Tablica, która zawiera odszyfrowany klucz.</span><span class="sxs-lookup"><span data-stu-id="d1632-115">An array that contains the decrypted key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public override byte[] EncryptKey (string algorithm, byte[] keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptKey(string algorithm, unsigned int8[] keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptKey (algorithm As String, keyData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ keyData);" />
      <MemberSignature Language="F#" Value="override this.EncryptKey : string * byte[] -&gt; byte[]" Usage="securityKeyElement.EncryptKey (algorithm, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keyData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="d1632-116">Algorytm, który ma być używany do odszyfrowania klucza.</span><span class="sxs-lookup"><span data-stu-id="d1632-116">The algorithm to use to decrypt the key.</span></span></param>
        <param name="keyData"><span data-ttu-id="d1632-117">Tablica, która zawiera klucz szyfrowania.</span><span class="sxs-lookup"><span data-stu-id="d1632-117">An array that contains the key to encrypt.</span></span></param>
        <summary><span data-ttu-id="d1632-118">Szyfruje określonego klucza przy użyciu określonego algorytmu.</span><span class="sxs-lookup"><span data-stu-id="d1632-118">Encrypts the specified key by using the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="d1632-119">Tablica, która zawiera zaszyfrowany klucz.</span><span class="sxs-lookup"><span data-stu-id="d1632-119">An array that contains the encrypted key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsAsymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAsymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAsymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsAsymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsAsymmetricAlgorithm : string -&gt; bool" Usage="securityKeyElement.IsAsymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="d1632-120">Algorytm do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="d1632-120">The algorithm to check.</span></span></param>
        <summary><span data-ttu-id="d1632-121">Zwraca wartość wskazującą, czy określony algorytm jest asymetrycznego.</span><span class="sxs-lookup"><span data-stu-id="d1632-121">Returns a value that indicates whether the specified algorithm is asymmetric.</span></span></summary>
        <returns><span data-ttu-id="d1632-122"><see langword="true" /> Jeśli algorytm zostanie przetworzony przez środowisko uruchomieniowe jako asymetrycznego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1632-122"><see langword="true" /> if the algorithm will be processed by the runtime as asymmetric; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSupportedAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSupportedAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSupportedAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSupportedAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSupportedAlgorithm : string -&gt; bool" Usage="securityKeyElement.IsSupportedAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="d1632-123">Algorytm do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="d1632-123">The algorithm to check.</span></span></param>
        <summary><span data-ttu-id="d1632-124">Zwraca wartość wskazującą, czy określony algorytm jest obsługiwany przez ten klucz.</span><span class="sxs-lookup"><span data-stu-id="d1632-124">Returns a value that indicates whether the specified algorithm is supported by this key.</span></span></summary>
        <returns><span data-ttu-id="d1632-125"><see langword="true" /> Jeśli algorytm jest obsługiwany przez ten klucz; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1632-125"><see langword="true" /> if the algorithm is supported by this key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public override bool IsSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSymmetricAlgorithm (algorithm As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="override this.IsSymmetricAlgorithm : string -&gt; bool" Usage="securityKeyElement.IsSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="d1632-126">Algorytm do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="d1632-126">The algorithm to check.</span></span></param>
        <summary><span data-ttu-id="d1632-127">Zwraca wartość wskazującą, czy określony algorytm jest symetryczne.</span><span class="sxs-lookup"><span data-stu-id="d1632-127">Returns a value that indicates whether the specified algorithm is symmetric.</span></span></summary>
        <returns><span data-ttu-id="d1632-128"><see langword="true" /> Jeśli algorytm zostanie przetworzony przez środowisko uruchomieniowe jako symetrycznego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1632-128"><see langword="true" /> if the algorithm will be processed by the runtime as symmetric; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SecurityKeyElement.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.IdentityModel.Tokens.SecurityKeyElement.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1632-129">Pobiera rozmiar klucza w bitach.</span><span class="sxs-lookup"><span data-stu-id="d1632-129">Gets the key size, in bits.</span></span></summary>
        <value><span data-ttu-id="d1632-130">Rozmiar klucza w bitach.</span><span class="sxs-lookup"><span data-stu-id="d1632-130">The key size, in bits.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>