<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="X509DataSecurityKeyIdentifierClauseSerializer.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac564424b2050a095e64d5602575f0b7eff12eb7273.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64424b2050a095e64d5602575f0b7eff12eb7273</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer">
          <source>Represents a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" /&gt;</ph> that can process X.509 certificate reference types.</source>
          <target state="translated">Reprezentuje <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" /&gt;</ph> który może przetwarzać typy odwołań certyfikatu X.509.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>An XML reader positioned at the start element of the key identifier clause.</source>
          <target state="translated">Czytnik XML znajduje się w elementu początkowego klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the specified reader is positioned at an <ph id="ph1">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Zwraca wartość wskazującą, czy podany czytnik znajduje się w <ph id="ph1">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is referring to an <ph id="ph2">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli czytnik odwołuje się do <ph id="ph2">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> elementu; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The key identifier clause to check.</source>
          <target state="translated">W klauzuli identyfikatora klucza do sprawdzenia.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.</source>
          <target state="translated">Zwraca wartość wskazującą, czy klauzuli określonego identyfikatora klucza może być serializowany przez ten program obsługi.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key identifier clause is supported by this handler; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli w klauzuli identyfikatora klucza jest obsługiwany przez ten program obsługi; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The supported key identifier clause types are:</source>
          <target state="translated">Typy klauzuli identyfikatora klucza obsługiwane są:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>An XML reader positioned at the start element of the key identifier clause to read.</source>
          <target state="translated">Czytnik XML znajduje się w elementu początkowego klauzuli identyfikatora klucza do odczytu.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>Deserializes a key identifier clause from XML by using the specified XML reader.</source>
          <target state="translated">Deserializuje klauzuli identyfikatora klucza z pliku XML przy użyciu określonego modułu odczytującego XML.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>The key identifier clause that was deserialized from the XML or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if a key identifier clause could not be read.</source>
          <target state="translated">Klauzuli identyfikatora klucza, który został zdeserializowany z pliku XML lub <ph id="ph1">&lt;see langword="null" /&gt;</ph> , jeśli nie można odczytać klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause%2A&gt;</ph> method reads <ph id="ph2">`&lt;ds:X509IssuerSerial&gt;`</ph>, <ph id="ph3">`&lt;ds:X509SKI&gt;`</ph>, and <ph id="ph4">`&lt;ds:X509Certificate&gt;`</ph> elements and returns the first one found as a <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause&gt;</ph>, a <ph id="ph6">&lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&gt;</ph>, or a <ph id="ph7">&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause%2A&gt;</ph> Metoda odczytuje <ph id="ph2">`&lt;ds:X509IssuerSerial&gt;`</ph>, <ph id="ph3">`&lt;ds:X509SKI&gt;`</ph>, i <ph id="ph4">`&lt;ds:X509Certificate&gt;`</ph> elementów i zwraca pierwszy znaleziono <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause&gt;</ph>, <ph id="ph6">&lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&gt;</ph>, lub <ph id="ph7">&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>If one of these elements is not found under the <ph id="ph1">`&lt;ds:X509Data&gt;`</ph> element, the method returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Jeśli jeden z tych elementów nie zostanie znaleziony w obszarze <ph id="ph1">`&lt;ds:X509Data&gt;`</ph> elementu, metoda zwraca <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is not positioned at a <ph id="ph2">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> nie znajduje się w <ph id="ph2">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>(The <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" /&gt;</ph> method returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.)</source>
          <target state="translated">( <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" /&gt;</ph> Metoda zwraca <ph id="ph2">&lt;see langword="false" /&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The XML writer to use to serialize the key identifier clause.</source>
          <target state="translated">Edytora XML do użycia w celu serializacji klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The key identifier clause to serialize.</source>
          <target state="translated">W klauzuli identyfikatora klucza do serializacji.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Serializes the specified key identifier clause.</source>
          <target state="translated">Serializuje klauzuli określonego identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The supported key identifier clause types are:</source>
          <target state="translated">Typy klauzuli identyfikatora klucza obsługiwane są:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> is not a supported clause type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> nie jest typem obsługiwanych klauzuli.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>