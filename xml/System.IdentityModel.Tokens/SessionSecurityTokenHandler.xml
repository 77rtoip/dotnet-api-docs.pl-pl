<Type Name="SessionSecurityTokenHandler" FullName="System.IdentityModel.Tokens.SessionSecurityTokenHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="698670494d510916b922e88a119093c8c15bf740" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36480118" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenHandler extends System.IdentityModel.Tokens.SecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenHandler&#xA;Inherits SecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenHandler : System::IdentityModel::Tokens::SecurityTokenHandler" />
  <TypeSignature Language="F#" Value="type SessionSecurityTokenHandler = class&#xA;    inherit SecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="20cb7-101">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> która przetwarza tokenów zabezpieczeń tego typu <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="20cb7-101">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that processes security tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-102"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Klasy serializuje deserializuje i weryfikuje tokeny sesji.</span><span class="sxs-lookup"><span data-stu-id="20cb7-102">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes, deserializes, and validates session tokens.</span></span> <span data-ttu-id="20cb7-103">Tokeny sesji to tokeny typu <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span><span class="sxs-lookup"><span data-stu-id="20cb7-103">Session tokens are tokens of type <xref:System.IdentityModel.Tokens.SessionSecurityToken>.</span></span> <span data-ttu-id="20cb7-104"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Klasy serializuje tokenów do i z formatu pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="20cb7-104">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes the tokens to and from cookie format.</span></span> <span data-ttu-id="20cb7-105">Domyślnie klasa wykonuje serializację tokenów do zabezpieczenia WS konwersacji Feb2005 lub zabezpieczenia WS konwersacji 1.3 `<wsc:SecurityContextToken>` elementów.</span><span class="sxs-lookup"><span data-stu-id="20cb7-105">By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` elements.</span></span> <span data-ttu-id="20cb7-106">Tokeny sesji są używane przez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) i <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) do przechowywania informacji o sesji, jest to głównie <xref:System.Security.Claims.ClaimsPrincipal> skojarzone z uwierzytelnionego użytkownika i czasem rozpoczęcia i wygaśnięcia sesji.</span><span class="sxs-lookup"><span data-stu-id="20cb7-106">Session tokens are used by the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> (WSFAM) and the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) to store information about a session, this is primarily the <xref:System.Security.Claims.ClaimsPrincipal> associated with the authenticated user and the session start and expiration times.</span></span>  
  
 <span data-ttu-id="20cb7-107">W scenariuszach pasywnym <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> wywoła <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) z potoku uwierzytelniania, aby utworzyć token sesji z <xref:System.Security.Claims.ClaimsPrincipal> reprezentujący uwierzytelnionego użytkownika.</span><span class="sxs-lookup"><span data-stu-id="20cb7-107">In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user.</span></span> <span data-ttu-id="20cb7-108">SAM używa skonfigurowanych <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> do utworzenia tokenu i do wykonywania serializacji go do pliku cookie (i do deserializacji tokenu z plików cookie na kolejne żądania).</span><span class="sxs-lookup"><span data-stu-id="20cb7-108">The SAM uses its configured <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</span></span> <span data-ttu-id="20cb7-109">SAM używa wystąpienia skonfigurowanych <xref:System.IdentityModel.Services.CookieHandler> klasy do zapisania pliku cookie z powrotem do odpowiedzi HTTP.</span><span class="sxs-lookup"><span data-stu-id="20cb7-109">The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response.</span></span> <span data-ttu-id="20cb7-110">Ten plik cookie jest zwracana do klienta, a kolejne żądania klienta może powodować pliku cookie, zamiast wprowadzać rund do dostawcy tożsamości, aby ponownie uzyskać tokenu zabezpieczającego.</span><span class="sxs-lookup"><span data-stu-id="20cb7-110">This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</span></span> <span data-ttu-id="20cb7-111">Aby uzyskać więcej informacji o sposób działania sesji przy użyciu programu WIF, zobacz [Zarządzanie sesjami programu WIF](~/docs/framework/security/wif-session-management.md).</span><span class="sxs-lookup"><span data-stu-id="20cb7-111">For more information about how sessions operate with WIF, see [WIF Session Management](~/docs/framework/security/wif-session-management.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20cb7-112">\<SecurityTokenHandlers > element konfiguracji, może służyć do określania <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> która ponosi odpowiedzialność za zabezpieczania sesji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20cb7-112">The \<securityTokenHandlers> configuration element can be used to specify a <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has the responsibility for securing the application’s sessions.</span></span> <span data-ttu-id="20cb7-113">Deweloperzy należy zachować ostrożność podczas zmiany tego ustawienia konfiguracji zgodnie z nieprawidłowej konfiguracji systemu, może spowodować naruszenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20cb7-113">Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</span></span> <span data-ttu-id="20cb7-114">Na przykład określenie pochodnej HYPERLINK "http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx" \t "_blank" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> i przekazanie pustą kolekcję przekształcenia (CookieTransform) do podstawowej, spowodują tożsamości użytkowników są szeregowane w pliku cookie, który nie został zabezpieczony.</span><span class="sxs-lookup"><span data-stu-id="20cb7-114">For example, specifying a derived  HYPERLINK "http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx" \t "_blank" <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</span></span> <span data-ttu-id="20cb7-115">To umożliwia osobie atakującej zmodyfikuj tożsamości i w związku z tym Zmień uprawnienia dostępu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-115">This could allow an attacker to modify the identity and therefore change access privileges.</span></span>  
  
 <span data-ttu-id="20cb7-116">Jeśli tokenu sesji jest w trybie odwołań, oznacza to, jego <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> właściwość `true`"," sesja programu obsługi tokenów serializuje tylko właściwości tokenu sesji, które są potrzebne, aby ponownie wygenerować klucz w <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span><span class="sxs-lookup"><span data-stu-id="20cb7-116">If the session token is in reference mode, that is, its <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span> <span data-ttu-id="20cb7-117">W przypadku domyślnej <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> klasa jest używana do reprezentowania kluczy pamięci podręcznej, a następnie zapisuje programu obsługi tokenów <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> i <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> właściwości tokenu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-117">In the default case, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class is used to represent cache keys, and the token handler writes the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> properties of the token.</span></span> <span data-ttu-id="20cb7-118">Jeśli tokenu sesji nie w trybie odwołań, oznacza to, <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> właściwość `false`, następnie oprócz właściwości, o których wspomniano wcześniej, program obsługi wywołuje <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metody w tablicy typu byte uzyskany z tokenu i magazynów wartość wynikową w również pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="20cb7-118">If the session token is not in reference mode, that is, the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, then, in addition to the properties mentioned previously, the handler invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</span></span> <span data-ttu-id="20cb7-119">Aby uzyskać więcej szczegółów na temat sposobu token jest serializowana, zobacz <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="20cb7-119">For more details about how the token is serialized, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="20cb7-120"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> Właściwości pobiera listę przekształceń, które są stosowane do sesji tokenu w <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20cb7-120">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property gets the list of transforms that are applied to the session token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span> <span data-ttu-id="20cb7-121">Wszystkie przekształcenia pochodzić od <xref:System.IdentityModel.CookieTransform> klasy.</span><span class="sxs-lookup"><span data-stu-id="20cb7-121">All transforms derive from the <xref:System.IdentityModel.CookieTransform> class.</span></span> <span data-ttu-id="20cb7-122">W przypadku domyślnej <xref:System.IdentityModel.DeflateCookieTransform> i <xref:System.IdentityModel.ProtectedDataCookieTransform> są stosowane.</span><span class="sxs-lookup"><span data-stu-id="20cb7-122">In the default case the <xref:System.IdentityModel.DeflateCookieTransform> and the <xref:System.IdentityModel.ProtectedDataCookieTransform> are applied.</span></span> <span data-ttu-id="20cb7-123"><xref:System.IdentityModel.ProtectedDataCookieTransform> Używa interfejsu API ochrony danych (DPAPI), aby chronić materiał pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="20cb7-123">The <xref:System.IdentityModel.ProtectedDataCookieTransform> uses the Data Protection API (DPAPI) to protect the cookie material.</span></span> <span data-ttu-id="20cb7-124">DPAPI używa klucza, która jest specyficzne dla komputera, na którym jest uruchomiony w algorytmy jego ochrony.</span><span class="sxs-lookup"><span data-stu-id="20cb7-124">DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</span></span> <span data-ttu-id="20cb7-125">Z tego powodu programu obsługi tokenów sesji domyślny nie jest używany w scenariuszach z farmami internetowymi, ponieważ w takich scenariuszach tokenów zapisywane na jednym komputerze może być konieczne do odczytu na innym komputerze.</span><span class="sxs-lookup"><span data-stu-id="20cb7-125">For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</span></span> <span data-ttu-id="20cb7-126">Aby obejść ten problem, można użyć wielu strategii.</span><span class="sxs-lookup"><span data-stu-id="20cb7-126">You can use many strategies to circumvent this issue.</span></span> <span data-ttu-id="20cb7-127">Możesz na przykład:</span><span class="sxs-lookup"><span data-stu-id="20cb7-127">For example, you can:</span></span>  
  
-   <span data-ttu-id="20cb7-128">Zastąp domyślną <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> z <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span><span class="sxs-lookup"><span data-stu-id="20cb7-128">Replace the default <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> with the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler>.</span></span> <span data-ttu-id="20cb7-129"><xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> Pozwala na określenie klucze podpisywania i szyfrowania w ramach platformy ASP.NET `<machineKey>` elementu w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="20cb7-129">The <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> enables you to specify signing and encryption keys under the ASP.NET `<machineKey>` element in the configuration file.</span></span>  
  
-   <span data-ttu-id="20cb7-130">Zapewnia funkcję obsługi <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> zdarzenia w pliku global.asax.cs i Zastąp sesji domyślny token obsługi z wystąpieniem <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> zawierający listę przekształceń, które obejmuje <xref:System.IdentityModel.RsaSignatureCookieTransform> i <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span><span class="sxs-lookup"><span data-stu-id="20cb7-130">Provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event in the global.asax.cs file and replace the default session token handler with an instance of <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that has a list of transforms that includes the <xref:System.IdentityModel.RsaSignatureCookieTransform> and the <xref:System.IdentityModel.RsaEncryptionCookieTransform>.</span></span> <span data-ttu-id="20cb7-131">Za pomocą jednego z konstruktorów, które przyjmuje listę przekształceń można utworzyć nowego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="20cb7-131">You can create the new instance by invoking one of the constructors that takes a list of transforms.</span></span>  
  
-   <span data-ttu-id="20cb7-132">Pochodzi niestandardowe przekształcenia z <xref:System.IdentityModel.CookieTransform> klasy bazowej i użyj powyższej metody, aby uwzględnić go na liście przekształceń, które mają być stosowane.</span><span class="sxs-lookup"><span data-stu-id="20cb7-132">Derive a custom transform from the <xref:System.IdentityModel.CookieTransform> base class and use the method above to include it in the list of transforms to be applied.</span></span>  
  
-   <span data-ttu-id="20cb7-133">Pochodzi z programu obsługi tokenów niestandardowych z <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> i zaimplementować własny mechanizm.</span><span class="sxs-lookup"><span data-stu-id="20cb7-133">Derive a custom token handler from <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> and implement your own mechanism.</span></span>  
  
 <span data-ttu-id="20cb7-134">Aby uzyskać więcej informacji o korzystaniu z sesji w scenariuszach z farmami internetowymi, zobacz [programu WIF i farmy serwerów sieci Web](~/docs/framework/security/wif-and-web-farms.md).</span><span class="sxs-lookup"><span data-stu-id="20cb7-134">For more information about using sessions in Web farm scenarios, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).</span></span>  
  
 <span data-ttu-id="20cb7-135"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> Znajduje się w domyślnej kolekcji programu obsługi tokenów; jednak można zastąpić go niestandardową sesję programu obsługi tokenów, określając pierwszy [ &lt;Usuń&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) pod [ &lt;securityTokenHandlers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element, aby usunąć domyślny program obsługi z kolekcji, a następnie dodając, przy użyciu niestandardowych programu obsługi tokenów [ &lt;Dodaj&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) elementu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-135">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md) element under the [&lt;securityTokenHandlers&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md) element to remove the default handler from the collection and then adding your custom token handler using the [&lt;add&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md) element.</span></span> <span data-ttu-id="20cb7-136">Domyślnie, można określić domyślny okres istnienia tokenu, umieszczając [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) pod `<add>` elementu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-136">By default, you can specify the default token lifetime by including the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element under the `<add>` element.</span></span> <span data-ttu-id="20cb7-137">Można zaprojektować niestandardowy programu obsługi tokenów do wykonania niestandardowej konfiguracji elementów w obszarze `<add>` elementu przez zastąpienie <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> metodę, aby zapewnić logikę do ich przetworzenia.</span><span class="sxs-lookup"><span data-stu-id="20cb7-137">You can design a custom token handler to take custom configuration elements under the `<add>` element by overriding the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method to provide the logic to process them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20cb7-138">Następujący kody XML pokazuje jak zastąpić domyślny sesji programu obsługi tokenów zabezpieczających w kolekcji programu obsługi tokenów wystąpienie <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> klasy w konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="20cb7-138">The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler> class in configuration.</span></span>  
  
```xml  
<securityTokenHandlers>  
  <remove type="System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
  <add type="System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />  
</securityTokenHandlers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />
    <altmember cref="T:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.CookieTransform" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-139">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-139">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-140">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> klasę, która korzysta z domyślnego pliku cookie przekształceń i okres istnienia tokenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-140">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the default cookie transforms and token lifetime.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-141"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> i <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> właściwości są inicjowane na wartość <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> i <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span><span class="sxs-lookup"><span data-stu-id="20cb7-141">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> properties are initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityTokenHandler : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityTokenHandler" Usage="new System.IdentityModel.Tokens.SessionSecurityTokenHandler transforms" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="20cb7-142">Przekształcenia do zastosowania podczas kodowania lub dekodowania pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-142">The transforms to apply when encoding or decoding the cookie.</span>
          </span>
          <span data-ttu-id="20cb7-143">Zestawy <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-143">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-144">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> przekształca klasę, która korzysta z określonego pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-144">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-145"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> Właściwość jest inicjowana do <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span><span class="sxs-lookup"><span data-stu-id="20cb7-145">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-146">
            <paramref name="transforms" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-146">
              <paramref name="transforms" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenHandler (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; transforms, valuetype System.TimeSpan tokenLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transforms As ReadOnlyCollection(Of CookieTransform), tokenLifetime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenHandler(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms, TimeSpan tokenLifetime);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityTokenHandler : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; * TimeSpan -&gt; System.IdentityModel.Tokens.SessionSecurityTokenHandler" Usage="new System.IdentityModel.Tokens.SessionSecurityTokenHandler (transforms, tokenLifetime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" />
        <Parameter Name="tokenLifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="20cb7-147">Przekształcenia do zastosowania podczas kodowania lub dekodowania pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-147">The transforms to apply when encoding or decoding the cookie.</span>
          </span>
          <span data-ttu-id="20cb7-148">Zestawy <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-148">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property.</span>
          </span>
        </param>
        <param name="tokenLifetime">
          <span data-ttu-id="20cb7-149">Domyślny okres istnienia dla tokenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-149">The default lifetime for a token.</span>
          </span>
          <span data-ttu-id="20cb7-150">Zestawy <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-150">Sets the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-151">Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> klasę, która korzysta z określonego cookie przekształceń i okres istnienia tokenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-151">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /> class that uses the specified cookie transforms and token lifetime.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-152">
            <paramref name="transforms" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-152">
              <paramref name="transforms" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20cb7-153">
            <paramref name="tokenLifetime" /> jest mniejsze niż lub równe <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-153">
              <paramref name="tokenLifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyTransforms">
      <MemberSignature Language="C#" Value="protected virtual byte[] ApplyTransforms (byte[] cookie, bool outbound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] ApplyTransforms(unsigned int8[] cookie, bool outbound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ApplyTransforms (cookie As Byte(), outbound As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ApplyTransforms(cli::array &lt;System::Byte&gt; ^ cookie, bool outbound);" />
      <MemberSignature Language="F#" Value="abstract member ApplyTransforms : byte[] * bool -&gt; byte[]&#xA;override this.ApplyTransforms : byte[] * bool -&gt; byte[]" Usage="sessionSecurityTokenHandler.ApplyTransforms (cookie, outbound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
        <Parameter Name="outbound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="20cb7-154">Plik cookie zostanie przekształcony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-154">The cookie that will be transformed.</span>
          </span>
        </param>
        <param name="outbound">
          <span data-ttu-id="20cb7-155">
            <see langword="true" /> Jeśli plik cookie powinien być kodowany; <see langword="false" /> Jeśli plik cookie powinien zostać zdekodowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-155">
              <see langword="true" /> if the cookie should be encoded; <see langword="false" /> if the cookie should be decoded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-156">Stosuje przekształcenia określony przez <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> właściwość kodowania lub dekodowania określony plik cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-156">Applies the transforms specified by the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property to either encode or decode the specified cookie.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20cb7-157">Plik cookie zakodowanym lub zdekodowanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-157">The encoded or decoded cookie.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-158">Podczas kodowania pliku cookie transformacje są stosowane w kolejności, w jakiej występują w <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20cb7-158">When encoding a cookie transforms are applied in the order in which they appear in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="20cb7-159">Dekodowanie pliku cookie, są stosowane w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="20cb7-159">When decoding a cookie, they are applied in the reverse order.</span></span>  
  
 <span data-ttu-id="20cb7-160">Wywoływane z <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> i <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> metody służące do kodowania i dekodowania materiał pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="20cb7-160">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to encode and decode the cookie material.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20cb7-161">
            <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> Właściwość <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-161">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public override bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="sessionSecurityTokenHandler.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="20cb7-162">
            <see cref="T:System.Xml.XmlReader" /> Za pośrednictwem przychodzącego <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-162">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
          <span data-ttu-id="20cb7-163">Czytnik powinien znajdować się na <see langword="&lt;wsc:SecurityContextToken&gt;" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-163">The reader should be positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-164">Zwraca wartość wskazującą, czy czytnik jest umieszczony w <see langword="&lt;wsc:SecurityContextToken&gt;" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-164">Returns a value that indicates whether the reader is positioned at a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20cb7-165">
            <see langword="true" /> Jeśli czytnik wskazuje <see langword="&lt;wsc:SecurityContextToken&gt;" /> elementu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-165">
              <see langword="true" /> if the reader points to a <see langword="&lt;wsc:SecurityContextToken&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-166">
            <paramref name="reader" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-166">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-167">Pobiera wartość wskazującą, czy ten program obsługi wspiera walidacji tokenów tego typu <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-167">Gets a value that indicates whether this handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20cb7-168">
            <see langword="true" /> Jeśli program obsługi wspiera walidacji tokenów tego typu <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-168">
              <see langword="true" /> if the handler supports validation of tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="20cb7-169">Zawsze <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-169">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public override bool CanWriteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWriteToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWriteToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWriteToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : bool" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-170">Pobiera wartość wskazującą, czy ten program obsługi może zapisywać tokenów tego typu <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-170">Gets a value that indicates whether this handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20cb7-171">
            <see langword="true" /> Jeśli program obsługi może zapisywać tokenów tego typu <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-171">
              <see langword="true" /> if the handler can write tokens of type <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="20cb7-172">Zawsze <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-172">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieElementName">
      <MemberSignature Language="C#" Value="public virtual string CookieElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieElementName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieElementName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieElementName : string" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-173">Pobiera nazwę elementu pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-173">Gets the name for the cookie element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20cb7-174">Nazwa elementu pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-174">The name for the cookie element.</span>
          </span>
          <span data-ttu-id="20cb7-175">Domyślna nazwa elementu jest "Plików Cookie".</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-175">The default element name is "Cookie".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-176">Ta właściwość jest używana w <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> i <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> metod umożliwiających ustalenie elementu w ramach której zakodowany token materiał powinien zapisu lub odczytu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-176">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CookieNamespace">
      <MemberSignature Language="C#" Value="public virtual string CookieNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookieNamespace" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CookieNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CookieNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieNamespace : string" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-177">Pobiera obszar nazw dla elementu pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-177">Gets the namespace for the cookie element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20cb7-178">Przestrzeń nazw dla elementu pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-178">The namespace for the cookie element.</span>
          </span>
          <span data-ttu-id="20cb7-179">Domyślny obszar nazw jest "http://schemas.microsoft.com/ws/2006/05/security".</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-179">The default namespace is "http://schemas.microsoft.com/ws/2006/05/security".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-180">Ta właściwość jest używana w <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> i <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> metod umożliwiających ustalenie, przestrzeń nazw elementu w ramach której zakodowany token materiał powinien zapisu lub odczytu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-180">This property is used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A> methods to determine the namespace of the element under which the encoded token material should be written or read.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <altmember cref="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSessionSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken (System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SessionSecurityToken CreateSessionSecurityToken(class System.Security.Claims.ClaimsPrincipal principal, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.DateTime validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionSecurityToken (principal As ClaimsPrincipal, context As String, endpointId As String, validFrom As DateTime, validTo As DateTime) As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SessionSecurityToken ^ CreateSessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ context, System::String ^ endpointId, DateTime validFrom, DateTime validTo);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * DateTime * DateTime -&gt; System.IdentityModel.Tokens.SessionSecurityToken&#xA;override this.CreateSessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * DateTime * DateTime -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="sessionSecurityTokenHandler.CreateSessionSecurityToken (principal, context, endpointId, validFrom, validTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="validTo" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="20cb7-181">Podmiot zabezpieczeń oświadczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-181">The claims principal.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="20cb7-182">Parametry kontekstu zdefiniowane przez obiekt wywołujący.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-182">A caller-defined context string.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="20cb7-183">Identyfikator punktu końcowego, do których token ma zakres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-183">The identifier of the endpoint to which the token is scoped.</span>
          </span>
        </param>
        <param name="validFrom">
          <span data-ttu-id="20cb7-184">Czas błyskawiczne jaką token staje się nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-184">The time instant at which the token becomes valid.</span>
          </span>
        </param>
        <param name="validTo">
          <span data-ttu-id="20cb7-185">Czas błyskawiczne po upływie którego token nie jest już prawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-185">The time instant after which the token is no longer valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-186">Tworzy <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> na podstawie zakresu główną i godzina określone oświadczenia w którym token jest prawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-186">Creates a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> based on the specified claims principal and time range during which the token is valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20cb7-187">Token zabezpieczający sesji, który został utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-187">The session security token that was created.</span>
          </span>
          <span data-ttu-id="20cb7-188">Właściwości w tokenie nowej sesji są ustawione zgodnie z określonymi parametrami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-188">The properties on the new session token are set according to the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-189">
            <paramref name="principal" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-189">
              <paramref name="principal" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20cb7-190">
            <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> Właściwość <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-190">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken CreateToken(class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateToken (tokenDescriptor As SecurityTokenDescriptor) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ CreateToken(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="override this.CreateToken : System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.CreateToken tokenDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="tokenDescriptor">
          <span data-ttu-id="20cb7-191">Deskryptor token służący do utworzenia tokenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-191">The token descriptor from which to create the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-192">Tworzy token zabezpieczający, oparte na określonego deskryptora tokenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-192">Creates a security token based on the specified token descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20cb7-193">Token zabezpieczający, który został utworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-193">The security token that was created.</span>
          </span>
          <span data-ttu-id="20cb7-194">To wystąpienie <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-194">This will be an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-195">Tworzy i zwraca token zabezpieczający sesji przy użyciu następujących właściwości w deskryptorze tokenu: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, i <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20cb7-195">Creates and returns a session security token by using the following properties in the token descriptor: <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType>, and <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="20cb7-196">Jeśli <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> zostaje ustalona `true` w konfiguracji programu obsługi tokenów, określony przez <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> właściwości kontekstu ładowania początkowego jest tworzony z <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> właściwość i jest zapisywany w tokenu sesji.</span><span class="sxs-lookup"><span data-stu-id="20cb7-196">If the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType> property is set `true` on the token handler configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, the bootstrap context is created from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType> property and is saved in the session token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-197">
            <paramref name="tokenDescriptor" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-197">
              <paramref name="tokenDescriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20cb7-198">
            <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> Właściwość <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-198">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCookieTransforms">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; DefaultCookieTransforms" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultCookieTransforms As ReadOnlyCollection(Of CookieTransform) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ DefaultCookieTransforms;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultCookieTransforms : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-199">A odczytu kolekcji, który zawiera listę przekształceń domyślne mają być stosowane do plików cookie, <see cref="T:System.IdentityModel.DeflateCookieTransform" /> i <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-199">A read only collection that contains the list of default transforms to be applied to cookies, the <see cref="T:System.IdentityModel.DeflateCookieTransform" /> and the <see cref="T:System.IdentityModel.ProtectedDataCookieTransform" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLifetime">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultLifetime" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultLifetime As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan DefaultLifetime;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultLifetime : TimeSpan" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-200">Stała, która określa domyślny okres istnienia plików cookie, 10 godzin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-200">A constant that specifies the default lifetime for cookies, ten hours.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultTokenLifetime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan DefaultTokenLifetime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenLifetime : TimeSpan" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-201">Pobiera domyślny okres istnienia tokenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-201">Gets the default token lifetime.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20cb7-202">Domyślny okres istnienia tokenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-202">The default token lifetime.</span>
          </span>
          <span data-ttu-id="20cb7-203">Zawsze <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-203">Always <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenTypeIdentifiers">
      <MemberSignature Language="C#" Value="public override string[] GetTokenTypeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetTokenTypeIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTokenTypeIdentifiers () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetTokenTypeIdentifiers();" />
      <MemberSignature Language="F#" Value="override this.GetTokenTypeIdentifiers : unit -&gt; string[]" Usage="sessionSecurityTokenHandler.GetTokenTypeIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-204">Pobiera typ tokenu identyfikatorów URI dla typy tokenów, które mogą być przetwarzane przez ten program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-204">Gets the token type URIs for the token types that can be processed by this handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20cb7-205">Typ tokenu identyfikator URI typy tokenów, które mogą być przetwarzane przez ten program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-205">The token type identifier URIs for token types that can be processed by this handler.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-206">Następujący typ identyfikatory URI są obsługiwane: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation","http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", a "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".</span><span class="sxs-lookup"><span data-stu-id="20cb7-206">The following type URIs are supported: "http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct", and "http://schemas.xmlsoap.org/ws/2005/02/sc/sct".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfigElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfigElements As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfigElements);" />
      <MemberSignature Language="F#" Value="override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="sessionSecurityTokenHandler.LoadCustomConfiguration customConfigElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfigElements" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfigElements">
          <span data-ttu-id="20cb7-207">Elementy konfiguracji niestandardowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-207">The custom configuration elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-208">Konfiguracja niestandardowa obciążeń z pliku XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-208">Loads custom configuration from XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-209">Wywoływane przez konfiguracji infrastruktury w celu zainicjowania <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="20cb7-209">Called by the configuration infrastructure to initialize the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> instance.</span></span> <span data-ttu-id="20cb7-210">Inicjuje <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> właściwość `lifetime` atrybutu [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) elementu w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="20cb7-210">Initializes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property from the `lifetime` attribute of the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-211">
            <paramref name="customConfigElements" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-211">
              <paramref name="customConfigElements" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20cb7-212">Konfiguracja określona przez <paramref name="customConfigElements" /> jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-212">The configuration specified by <paramref name="customConfigElements" /> is not valid.</span>
          </span>
          <span data-ttu-id="20cb7-213">Na przykład, nie zawiera <see langword="&lt;sessionTokenRequirement&gt;" /> elementu zawiera więcej niż jeden <see langword="&lt;sessionTokenRequirement&gt;" /> element, prawidłowy <see cref="T:System.TimeSpan" /> nie można odczytać wartości z <see langword="lifetime" /> atrybut, lub <see langword="lifetime" /> atrybut określa wartość, która jest mniejsza niż <see cref="F:System.TimeSpan.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-213">For example, it does not contain a <see langword="&lt;sessionTokenRequirement&gt;" /> element, it contains more than one <see langword="&lt;sessionTokenRequirement&gt;" /> element, a valid <see cref="T:System.TimeSpan" /> value cannot be read from the <see langword="lifetime" /> attribute, or the <see langword="lifetime" /> attribute specifies a value that is less than <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-214">Odczytuje <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-214">Reads a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-215">Domyślna implementacja deserializuje token z Feb2005 zabezpieczenia WS konwersacji lub zabezpieczenia WS konwersacji 1.3 `<wsc:SecurityContextToken>` elementu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-215">The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="20cb7-216">
            <see cref="T:System.Xml.XmlReader" /> Za pośrednictwem przychodzącego <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-216">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-217">Odczytuje <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> przy użyciu określonego odczytującego XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-217">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20cb7-218">Token zabezpieczający sesji, które zostały odczytane wystąpienie <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-218">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-219">Czytnik musi być umieszczony w Feb2005 zabezpieczenia WS konwersacji lub 1.3 zabezpieczenia WS konwersacji `<wsc:SecurityContextToken>` elementu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-219">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="20cb7-220">Domyślna implementacja wywołuje <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> metody przy użyciu tokenu domyślny mechanizm rozpoznawania.</span><span class="sxs-lookup"><span data-stu-id="20cb7-220">The default implementation invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method using a default token resolver.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-221">
            <paramref name="reader" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-221">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="20cb7-222">Czytnik jest umieszczony w <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> lub <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> nie można go odczytać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-222">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken ReadToken (byte[] token, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(unsigned int8[] token, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToken (token As Byte(), tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ ReadToken(cli::array &lt;System::Byte&gt; ^ token, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : byte[] * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken (token, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Byte[]" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="20cb7-223">Strumień bajtów, które zawiera token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-223">The stream of bytes that contains the token.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="20cb7-224">Program rozpoznawania tokenów do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-224">The token resolver to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-225">Odczytuje <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> ze strumienia bajtów przy użyciu określonego program rozpoznawania tokenów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-225">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> from a stream of bytes by using the specified token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20cb7-226">
            <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> , Została odczytana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-226">The <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> that was read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-227">Domyślna implementacja tworzy <xref:System.Xml.XmlDictionaryReader> za pośrednictwem tokenu i wywołuje <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="20cb7-227">The default implementation creates an <xref:System.Xml.XmlDictionaryReader> over the token and invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="override this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="sessionSecurityTokenHandler.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="20cb7-228">
            <see cref="T:System.Xml.XmlReader" /> Za pośrednictwem przychodzącego <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-228">The <see cref="T:System.Xml.XmlReader" /> over the incoming <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span>
          </span>
        </param>
        <param name="tokenResolver">
          <span data-ttu-id="20cb7-229">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> który może używany do rozpoznawania <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-229">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that can used to resolve the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-230">Odczytuje <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> przy użyciu określonego XML tokenu i odczytywania rozpoznawania nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-230">Reads the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> using the specified XML reader and token resolver.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20cb7-231">Token zabezpieczający sesji, które zostały odczytane wystąpienie <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-231">The session security token that was read, an instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-232">Czytnik musi być umieszczony w Feb2005 zabezpieczenia WS konwersacji lub 1.3 zabezpieczenia WS konwersacji `<wsc:SecurityContextToken>` elementu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-232">The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 <span data-ttu-id="20cb7-233">Jeśli token materiał są buforowane, jest odczytu z pamięci podręcznej tokenu, który jest wystąpieniem elementu <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> klasy.</span><span class="sxs-lookup"><span data-stu-id="20cb7-233">If the token material is cached, it is read from the token cache, which is an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> class.</span></span> <span data-ttu-id="20cb7-234">W przeciwnym razie materiał tokenu są odczytywane z elementem podrzędnym `<wsc:SecurityContextToken>` element, który jest określony przez <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> i <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> właściwości i <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metoda jest wywoływana w celu zdekodowania pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="20cb7-234">Otherwise, the token material is read from the child element of the `<wsc:SecurityContextToken>` element that is specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties and the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method is invoked to decode the cookie.</span></span>  
  
 <span data-ttu-id="20cb7-235">Aby uzyskać więcej informacji na temat sposobu tokenów sesji są szeregowane w `<SecurityContextToken` elementu, zobacz <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="20cb7-235">For more information about how session tokens are serialized into a `<SecurityContextToken` element, see the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-236">
            <paramref name="reader" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-236">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20cb7-237">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-237">-or-</span>
          </span>
          <span data-ttu-id="20cb7-238">
            <paramref name="tokenResolver" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-238">
              <paramref name="tokenResolver" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="20cb7-239">Czytnik jest umieszczony w <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> lub <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> nie można go odczytać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-239">The reader is not positioned at a <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> or the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> cannot be read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTransforms">
      <MemberSignature Language="C#" Value="protected void SetTransforms (System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt; transforms);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTransforms(class System.Collections.Generic.IEnumerable`1&lt;class System.IdentityModel.CookieTransform&gt; transforms) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTransforms (transforms As IEnumerable(Of CookieTransform))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTransforms(System::Collections::Generic::IEnumerable&lt;System::IdentityModel::CookieTransform ^&gt; ^ transforms);" />
      <MemberSignature Language="F#" Value="member this.SetTransforms : seq&lt;System.IdentityModel.CookieTransform&gt; -&gt; unit" Usage="sessionSecurityTokenHandler.SetTransforms transforms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transforms" Type="System.Collections.Generic.IEnumerable&lt;System.IdentityModel.CookieTransform&gt;" />
      </Parameters>
      <Docs>
        <param name="transforms">
          <span data-ttu-id="20cb7-240">Przekształcenia do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-240">The transforms to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-241">Ustawia przekształceń, które będą stosowane do plików cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-241">Sets the transforms that will be applied to cookies.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-242">Ustawia listę przekształceń zwrócony przez <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20cb7-242">Sets the list of transforms returned by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A> property.</span></span> <span data-ttu-id="20cb7-243">Przekształcenia będą stosowane w kolejności, w jakiej są wyświetlane na liście podczas kodowania pliku cookie, a także w odwrotnej kolejności podczas dekodowania pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="20cb7-243">Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="20cb7-244">Jeśli `transforms` parametr jest `null`, zostanie zgłoszony wyjątek z <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metody, gdy jest wywoływana w celu kodowania i dekodowania pliku cookie.</span><span class="sxs-lookup"><span data-stu-id="20cb7-244">If the `transforms` parameter is `null`, an exception will be thrown from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method when it is called to encode or decode the cookie.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenLifetime">
      <MemberSignature Language="C#" Value="public virtual TimeSpan TokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan TokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-245">Pobiera lub ustawia okres istnienia tokenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-245">Gets or sets the token lifetime.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20cb7-246">Okres istnienia tokenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-246">The token lifetime.</span>
          </span>
          <span data-ttu-id="20cb7-247">Wartość domyślna to <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-247">The default is <see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-248">Domyślnie jeśli [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element jest określony w pliku konfiguracyjnym <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> właściwość jest inicjowana na wartość `lifetime` atrybutu według <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20cb7-248">By default, if the [&lt;sessionTokenRequirement&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) element is specified in the configuration file, the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> property is initialized to the value of the `lifetime` attribute by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20cb7-249">Podjęto próbę ustawienia przedział czasu, która jest mniejsza niż lub równa zero występuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-249">An attempt to set a time span that is less than or equal to zero occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public override Type TokenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TokenType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ TokenType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TokenType : Type" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-250">Pobiera typ tokeny, których ten program obsługi przetwarza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-250">Gets the type of the tokens that this handler processes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20cb7-251">
            <see cref="T:System.Type" /> z <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-251">The <see cref="T:System.Type" /> of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transforms">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt; Transforms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.CookieTransform&gt; Transforms" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transforms As ReadOnlyCollection(Of CookieTransform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ Transforms { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::CookieTransform ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transforms : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.CookieTransform&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-252">Pobiera przekształcenia, które zostaną zastosowane do pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-252">Gets the transforms that will be applied to the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20cb7-253">Lista przekształceń, które zostaną zastosowane do pliku cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-253">The list of transforms that will be applied to the cookie.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-254">Transformacje są stosowane w <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20cb7-254">The transforms are applied in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSession">
      <MemberSignature Language="C#" Value="protected virtual void ValidateSession (System.IdentityModel.Tokens.SessionSecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateSession(class System.IdentityModel.Tokens.SessionSecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateSession (securityToken As SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateSession(System::IdentityModel::Tokens::SessionSecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="abstract member ValidateSession : System.IdentityModel.Tokens.SessionSecurityToken -&gt; unit&#xA;override this.ValidateSession : System.IdentityModel.Tokens.SessionSecurityToken -&gt; unit" Usage="sessionSecurityTokenHandler.ValidateSession securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">
          <span data-ttu-id="20cb7-255">Token, który ma być sprawdzany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-255">The token to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-256">Określa, czy sesja skojarzone z określonym tokenem jest nadal ważny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-256">Determines whether the session associated with the specified token is still valid.</span>
          </span>
          <span data-ttu-id="20cb7-257">Ważność jest określany przez sprawdzenie <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> i <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> właściwości określony token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-257">Validity is determined by checking the <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> and <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> properties of the specified token.</span>
          </span>
          <span data-ttu-id="20cb7-258">Wyjątek jest generowany, jeśli sesja nie jest już prawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-258">An exception is thrown if the session is no longer valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-259">Token nie jest prawidłową jeśli jego <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> właściwość jest ustawiona na wartość, która występuje w dalszej części niż <xref:System.DateTime.UtcNow%2A>, lub, jeśli jego <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> właściwość jest ustawiona na wartość, która występuje wcześniej niż <xref:System.DateTime.UtcNow%2A>.</span><span class="sxs-lookup"><span data-stu-id="20cb7-259">The token is not valid if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property is set to a value that occurs later than <xref:System.DateTime.UtcNow%2A>, or if its <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property is set to a value that occurs earlier than <xref:System.DateTime.UtcNow%2A>.</span></span>  
  
 <span data-ttu-id="20cb7-260">Wywoływane z <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> metod, aby sprawdzić sesji.</span><span class="sxs-lookup"><span data-stu-id="20cb7-260">Called from the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A> methods to validate the session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-261">
            <paramref name="securityToken" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-261">
              <paramref name="securityToken" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20cb7-262">
            <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> Właściwość <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-262">The <see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException">
          <span data-ttu-id="20cb7-263">
            <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> Właściwość tokenu jest późniejsza niż <see cref="P:System.DateTime.UtcNow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-263">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /> property of the token is later than <see cref="P:System.DateTime.UtcNow" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenExpiredException">
          <span data-ttu-id="20cb7-264">
            <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> Właściwość tokenu jest starsza niż <see cref="P:System.DateTime.UtcNow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-264">The <see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /> property of the token is earlier than <see cref="P:System.DateTime.UtcNow" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-265">Sprawdza poprawność tokenu i zwraca jego oświadczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-265">Validates a token and returns its claims.</span>
          </span>
        </summary>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="sessionSecurityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="20cb7-266">Token, który ma zostać zweryfikowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-266">The token to be validated.</span>
          </span>
          <span data-ttu-id="20cb7-267">Musi być możliwy do przypisania z <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-267">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-268">Weryfikuje określony token i zwraca jego oświadczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-268">Validates the specified token and returns its claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20cb7-269">Tożsamości, które są zawarte w tokenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-269">The identities that are contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-270">Wywołuje <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> metodę weryfikacji tokenu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-270">Invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A> method to validate the token.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-271">
            <paramref name="token" />
            <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-271">
              <paramref name="token" />
              <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20cb7-272">
            <paramref name="token" /> nie jest możliwy do przypisania z <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-272">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SessionSecurityToken token, string endpointId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ValidateToken (token As SessionSecurityToken, endpointId As String) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SessionSecurityToken ^ token, System::String ^ endpointId);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SessionSecurityToken * string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="sessionSecurityTokenHandler.ValidateToken (token, endpointId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="endpointId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="20cb7-273">Token, który ma zostać zweryfikowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-273">The token to be validated.</span>
          </span>
          <span data-ttu-id="20cb7-274">Musi być możliwy do przypisania z <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-274">Must be assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="20cb7-275">Identyfikator punktu końcowego, do których token ma zakres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-275">The identifier of the endpoint to which the token is scoped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-276">Sprawdza poprawność tokenu określonej sesji i zwraca jego oświadczeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-276">Validates the specified session token and returns its claims.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20cb7-277">Tożsamości, które są zawarte w tokenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-277">The identities that are contained in the token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-278">Przeprowadza kontrolę w celu upewnienia się, że określony token znajduje się w zakresie identyfikator określonego punktu końcowego, a jeśli tak jest, wywołuje <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> metody; w przeciwnym razie zgłasza <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span><span class="sxs-lookup"><span data-stu-id="20cb7-278">Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method; otherwise, throws a <xref:System.IdentityModel.Tokens.SecurityTokenException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="20cb7-279">Tokeny sesji, które mają <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> właściwość, która jest `null` lub puste są traktowane jako zakres globalny.</span><span class="sxs-lookup"><span data-stu-id="20cb7-279">Session tokens that have an <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property that is `null` or empty are considered to be globally scoped.</span></span> <span data-ttu-id="20cb7-280">Stwarza to potencjalne zagrożenie.</span><span class="sxs-lookup"><span data-stu-id="20cb7-280">This presents a potential security risk.</span></span> <span data-ttu-id="20cb7-281">Z tego powodu należy upewnić się, <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> właściwość jest ustawiona w tokenów sesji.</span><span class="sxs-lookup"><span data-stu-id="20cb7-281">For this reason you should make sure that the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is set in your session tokens.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-282">
            <paramref name="token" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-282">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20cb7-283">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-283">-or-</span>
          </span>
          <span data-ttu-id="20cb7-284">
            <paramref name="endpointId" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-284">
              <paramref name="endpointId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20cb7-285">
            <paramref name="token" /> nie jest możliwy do przypisania z <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-285">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
          <span data-ttu-id="20cb7-286">
            <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> Właściwość określony token nie jest <see langword="null" /> lub pusta i jej wartość jest inna niż określona przez <paramref name="endpointId" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-286">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> property of the specified token is not <see langword="null" /> or empty and its value is different than that specified by the <paramref name="endpointId" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20cb7-287">Serializuje token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-287">Serializes a token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-288">Domyślna implementacja serializuje token do zabezpieczenia WS konwersacji Feb2005 lub zabezpieczenia WS konwersacji 1.3 `<wsc:SecurityContextToken>` elementu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-288">The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public virtual byte[] WriteToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] WriteToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteToken (sessionToken As SessionSecurityToken) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ WriteToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.IdentityModel.Tokens.SessionSecurityToken -&gt; byte[]" Usage="sessionSecurityTokenHandler.WriteToken sessionToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken">
          <span data-ttu-id="20cb7-289">Token do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-289">The token to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-290">Serializuje określony token do tablicy typu byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-290">Serializes the specified token into a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20cb7-291">Tablica bajtów zakodowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-291">An encoded byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-292">Serializuje określony token, tworząc i składnika zapisywania XML za pośrednictwem <xref:System.IO.MemoryStream> i wywoływanie <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="20cb7-292">Serializes the specified token by creating and XML writer over a <xref:System.IO.MemoryStream> and invoking the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="20cb7-293">Zobacz, które przeciążają, aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="20cb7-293">See that overload for more details.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-294">
            <paramref name="sessiontoken" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-294">
              <paramref name="sessiontoken" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="sessionSecurityTokenHandler.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="20cb7-295">Modułu zapisujący XML za pomocą którego można serializować tokenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-295">The XML writer with which to serialize the token.</span>
          </span>
        </param>
        <param name="token">
          <span data-ttu-id="20cb7-296">Token do zserializowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-296">The token to serialize.</span>
          </span>
          <span data-ttu-id="20cb7-297">Wystąpienie <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-297">An instance of <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20cb7-298">Serializuje określony token przy użyciu określonego składnika zapisywania XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-298">Serializes the specified token by using the specified XML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20cb7-299">Domyślna implementacja serializuje określony token jako Feb2005 zabezpieczenia WS konwersacji lub zabezpieczenia WS konwersacji 1.3 `<wsc:SecurityContextToken>` elementu, w zależności od wartości <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20cb7-299">The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 `<wsc:SecurityContextToken>` element, depending on the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="20cb7-300"><xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> Właściwość jest serializowana jako `Id` atrybutu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-300">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType> property is serialized as the `Id` attribute.</span></span> <span data-ttu-id="20cb7-301"><xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> Właściwość jest serializowana jako `<Identifier>` elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="20cb7-301">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> property is serialized as the `<Identifier>` child element.</span></span> <span data-ttu-id="20cb7-302">W przeciwnym razie `null` <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> właściwość jest serializowana jako `<Instance>` elementu.</span><span class="sxs-lookup"><span data-stu-id="20cb7-302">If not `null` the <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> property is serialized as an `<Instance>` element.</span></span> <span data-ttu-id="20cb7-303">Na koniec Jeśli <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> właściwość jest `false`, całego token jest serializowany do tablicy binarny, który jest przekazywany do <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> metody do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="20cb7-303">Finally, if the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `false`, the entire token is serialized into binary array which is passed to the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A> method to be encoded.</span></span> <span data-ttu-id="20cb7-304">Zakodowany token zostaje następnie zapisany jako wartość zakodowane w formacie base64 do elementu i przestrzeń nazw określona przez <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> i <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20cb7-304">The encoded token is then written as a base64 encoded value to the element and namespace specified by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A> properties.</span></span> <span data-ttu-id="20cb7-305">Jeśli <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> właściwość `true`, token nie jest serializowana.</span><span class="sxs-lookup"><span data-stu-id="20cb7-305">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> property is `true`, the token is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20cb7-306">
            <paramref name="writer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-306">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20cb7-307">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-307">-or-</span>
          </span>
          <span data-ttu-id="20cb7-308">
            <paramref name="token" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-308">
              <paramref name="token" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20cb7-309">
            <paramref name="token" /> nie jest możliwy do przypisania z <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-309">
              <paramref name="token" /> is not assignable from <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" />.</span>
          </span>
          <span data-ttu-id="20cb7-310">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-310">-or-</span>
          </span>
          <span data-ttu-id="20cb7-311">
            <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> Tokenu nie określa wersji zabezpieczenia WS konwersacji, która nie jest obsługiwana przez program obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20cb7-311">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</span>
          </span>
        </exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
      </Docs>
    </Member>
  </Members>
</Type>