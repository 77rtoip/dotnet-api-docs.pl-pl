<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SessionSecurityTokenHandler.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c115a52489fd77750e537edfe5b3127ffc36e982.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c115a52489fd77750e537edfe5b3127ffc36e982</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph> that processes security tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /&gt;</ph> która przetwarza tokeny zabezpieczające typu <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class serializes, deserializes, and validates session tokens.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> Klasy serializuje deserializuje i weryfikuje tokeny sesji.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Session tokens are tokens of type <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>.</source>
          <target state="translated">Tokeny sesji są tokenami typu <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> class serializes the tokens to and from cookie format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> Klasy serializuje tokenów do i z formatu pliku cookie.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>By default, the class serializes tokens into WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elements.</source>
          <target state="translated">Domyślnie klasa serializuje tokenów do zabezpieczenia WS konwersacji Feb2005 lub zabezpieczenia WS konwersacji 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elementów.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Session tokens are used by the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> (WSFAM) and the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) to store information about a session, this is primarily the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> associated with the authenticated user and the session start and expiration times.</source>
          <target state="translated">Tokeny sesji są używane przez <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> (WSFAM) i <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) do przechowywania informacji o sesji, to przede wszystkim <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> skojarzone z uwierzytelnionego użytkownika i czasem rozpoczęcia i wygaśnięcia sesji.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In passive scenarios, the <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> calls into the <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) from the authentication pipeline to create a session token from the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> that represents the authenticated user.</source>
          <target state="translated">W scenariuszach pasywnym <ph id="ph1">&lt;xref:System.IdentityModel.Services.WSFederationAuthenticationModule&gt;</ph> wywołano <ph id="ph2">&lt;xref:System.IdentityModel.Services.SessionAuthenticationModule&gt;</ph> (SAM) z potoku uwierzytelniania do utworzenia tokenu sesji z <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> reprezentujący uwierzytelnionego użytkownika.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The SAM uses its configured <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</source>
          <target state="translated">SAM używa skonfigurowanych <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> do utworzenia tokenu i do serializacji go w pliku cookie (i do deserializacji tokenu z plików cookie na kolejne żądania).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The SAM uses an instance of its configured <ph id="ph1">&lt;xref:System.IdentityModel.Services.CookieHandler&gt;</ph> class to write the cookie back to the HTTP Response.</source>
          <target state="translated">SAM używa wystąpienia skonfigurowanych <ph id="ph1">&lt;xref:System.IdentityModel.Services.CookieHandler&gt;</ph> klasy zapisania pliku cookie do odpowiedzi HTTP.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</source>
          <target state="translated">Ten plik cookie jest następnie zwracany do klienta, a kolejne żądania klienta może ona powodować plik cookie zamiast wprowadzania podróż dostawcy tożsamości, aby ponownie uzyskać token zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more information about how sessions operate with WIF, see <bpt id="p1">[</bpt>WIF Session Management<ept id="p1">](~/docs/framework/security/wif-session-management.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji o sposób działania sesji z WIF, zobacz <bpt id="p1">[</bpt>WIF sesji zarządzania<ept id="p1">](~/docs/framework/security/wif-session-management.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">\&lt;</ph>securityTokenHandlers&gt; configuration element can be used to specify a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that has the responsibility for securing the application’s sessions.</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>SecurityTokenHandlers &gt; element konfiguracji może służyć do określenia <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> mający odpowiedzialność za zabezpieczanie sesji aplikacji.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Developers should use caution when changing this configuration setting, as a misconfigured system could result in application compromise.</source>
          <target state="translated">Deweloperzy należy zachować ostrożność podczas zmiana tego ustawienia konfiguracji, ponieważ niepoprawnie skonfigurowany system może spowodować naruszenie aplikacji.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For example, specifying a derived  HYPERLINK "<ph id="ph1">http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx</ph>" \t "_blank" <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> and passing an empty Transforms (CookieTransform) collection to the base, would result in the users identity being serialized into a cookie that was not protected.</source>
          <target state="translated">Na przykład określenie pochodnej HYPERLINK "<ph id="ph1">http://msdn.microsoft.com/library/hh193426%28v=vs.110%29.aspx</ph>" \t "_blank" <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> i przekazywanie pustą kolekcję transformacje (CookieTransform) z podstawową, spowodowałoby serializowana w pliku cookie, który nie był chroniony tożsamości użytkowników.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>This could allow an attacker to modify the identity and therefore change access privileges.</source>
          <target state="translated">Umożliwia to osobie atakującej zmodyfikować tożsamości i w związku z tym Zmień uprawnienia dostępu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>If the session token is in reference mode, that is, its <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`true`</ph>, the session token handler only serializes properties of the session token that are needed to regenerate its key in the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>.</source>
          <target state="translated">Jeśli tokenu sesji jest w trybie odniesienia, czyli jego <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> właściwość jest <ph id="ph2">`true`</ph>, sesja programu obsługi tokenów serializuje tylko właściwości tokenu sesji, które są potrzebne, można ponownie wygenerować klucza jej w <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In the default case, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&gt;</ph> class is used to represent cache keys, and the token handler writes the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> properties of the token.</source>
          <target state="translated">W przypadku domyślnej <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&gt;</ph> klasa jest używana do reprezentowania kluczy pamięci podręcznej i zapisuje programu obsługi tokenów <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> właściwości tokenu.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>If the session token is not in reference mode, that is, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, then, in addition to the properties mentioned previously, the handler invokes the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method on a byte array serialized from the token and stores the resulting value in the cookie as well.</source>
          <target state="translated">Jeśli token sesji nie ma Tryb odwołania, oznacza to, <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> właściwość jest <ph id="ph2">`false`</ph>, następnie, oprócz właściwości wspomniano powyżej, program obsługi wywołuje <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metody na tablicę bajtów uzyskany token i magazynów wartość wynikową w również plik cookie.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more details about how the token is serialized, see the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat jak token jest serializowany zobacz <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property gets the list of transforms that are applied to the session token in the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> Właściwości pobiera listę przekształceń, które są stosowane do sesji jako tokenu w <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>All transforms derive from the <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> class.</source>
          <target state="translated">Wszystkie transformacje pochodzi od <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>In the default case the <ph id="ph1">&lt;xref:System.IdentityModel.DeflateCookieTransform&gt;</ph> and the <ph id="ph2">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> are applied.</source>
          <target state="translated">W przypadku domyślnej <ph id="ph1">&lt;xref:System.IdentityModel.DeflateCookieTransform&gt;</ph> i <ph id="ph2">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> są stosowane.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> uses the Data Protection API (DPAPI) to protect the cookie material.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.ProtectedDataCookieTransform&gt;</ph> Używa interfejsu API ochrony danych (DPAPI) do ochrony materiałów pliku cookie.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>DPAPI uses a key that is specific to the computer on which it is running in its protection algorithms.</source>
          <target state="translated">DPAPI używa specyficzne dla komputera, na którym jest uruchomiony w jego algorytmy ochrony klucza.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For this reason, the default session token handler is not usable in Web farm scenarios because, in such scenarios, tokens written on one computer may need to be read on another computer.</source>
          <target state="translated">Z tego powodu programu obsługi tokenów sesji domyślny nie jest używany w scenariuszach kolektywu serwerów sieci Web, ponieważ w takich scenariuszach tokeny zapisywane na jednym komputerze może być konieczne można odczytać na innym komputerze.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can use many strategies to circumvent this issue.</source>
          <target state="translated">Aby obejść ten problem, można użyć wiele strategii.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For example, you can:</source>
          <target state="translated">Możesz na przykład:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Replace the default <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> with the <ph id="ph2">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>.</source>
          <target state="translated">Zastąp wartość domyślna <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> z <ph id="ph2">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> enables you to specify signing and encryption keys under the ASP.NET <ph id="ph2">`&lt;machineKey&gt;`</ph> element in the configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> Umożliwia określenie klucze podpisywania i szyfrowania, w obszarze ASP.NET <ph id="ph2">`&lt;machineKey&gt;`</ph> w pliku konfiguracji.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Provide a handler for the <ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph> event in the global.asax.cs file and replace the default session token handler with an instance of <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> that has a list of transforms that includes the <ph id="ph3">&lt;xref:System.IdentityModel.RsaSignatureCookieTransform&gt;</ph> and the <ph id="ph4">&lt;xref:System.IdentityModel.RsaEncryptionCookieTransform&gt;</ph>.</source>
          <target state="translated">Podaj obsługi dla <ph id="ph1">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType&gt;</ph> zdarzenia w pliku global.asax.cs i Zamień sesji domyślny token obsługi przy użyciu wystąpienia <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> mający lista przekształceń obejmuje <ph id="ph3">&lt;xref:System.IdentityModel.RsaSignatureCookieTransform&gt;</ph> i <ph id="ph4">&lt;xref:System.IdentityModel.RsaEncryptionCookieTransform&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can create the new instance by invoking one of the constructors that takes a list of transforms.</source>
          <target state="translated">Nowe wystąpienie można utworzyć za pomocą jednego z konstruktorów, która przyjmuje listę przekształceń.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Derive a custom transform from the <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> base class and use the method above to include it in the list of transforms to be applied.</source>
          <target state="translated">Pochodzi przekształcenie niestandardowe z <ph id="ph1">&lt;xref:System.IdentityModel.CookieTransform&gt;</ph> klasa podstawowa i dołącz ją na liście transformacje mają być stosowane przy użyciu metody powyżej.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Derive a custom token handler from <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> and implement your own mechanism.</source>
          <target state="translated">Pochodzi niestandardowego programu obsługi tokenów z <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> i wdrożyć własny mechanizm.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>For more information about using sessions in Web farm scenarios, see <bpt id="p1">[</bpt>WIF and Web Farms<ept id="p1">](~/docs/framework/security/wif-and-web-farms.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji o używaniu sesji w scenariuszach kolektywu serwerów sieci Web, zobacz <bpt id="p1">[</bpt>WIF i farmy serwerów sieci Web<ept id="p1">](~/docs/framework/security/wif-and-web-farms.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> is included in the default token handler collection; however, you can replace it with a custom session token handler by first specifying a <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>remove<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept> element under the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>securityTokenHandlers<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept> element to remove the default handler from the collection and then adding your custom token handler using the <bpt id="p3">[</bpt><ph id="ph6">&amp;lt;</ph>add<ph id="ph7">&amp;gt;</ph><ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept> element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> Znajduje się w domyślnej kolekcji programu obsługi tokenów; jednak można zastąpić go niestandardową sesję programu obsługi tokenów określając najpierw <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>Usuń<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/remove.md)</ept> pod <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>securityTokenHandlers<ph id="ph5">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlers.md)</ept> elementu do usunięcia z kolekcji, a następnie dodanie przy użyciu programu obsługi tokenów niestandardowych domyślny program obsługi <bpt id="p3">[</bpt> <ph id="ph6">&amp;lt;</ph>Dodaj<ph id="ph7">&amp;gt;</ph> <ept id="p3">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/add.md)</ept> elementu.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>By default, you can specify the default token lifetime by including the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element under the <ph id="ph3">`&lt;add&gt;`</ph> element.</source>
          <target state="translated">Domyślnie można określić domyślny okres istnienia tokenu, umieszczając w niej <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> elementu w obszarze <ph id="ph3">`&lt;add&gt;`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>You can design a custom token handler to take custom configuration elements under the <ph id="ph1">`&lt;add&gt;`</ph> element by overriding the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method to provide the logic to process them.</source>
          <target state="translated">Można zaprojektować programu obsługi tokenów niestandardowych podjęcie elementy konfiguracji niestandardowej w obszarze <ph id="ph1">`&lt;add&gt;`</ph> elementu przez zastąpienie <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> metodę w celu zapewnienia logikę do ich przetworzenia.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The following XML shows how to replace the default session security token handler in a token handler collection with an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> class in configuration.</source>
          <target state="translated">Następujący kod XML pokazano, jak zastąpić domyślny sesji programu obsługi tokenów zabezpieczających w kolekcji programu obsługi tokenów wystąpienia <ph id="ph1">&lt;xref:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler&gt;</ph> klasy w konfiguracji.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the default cookie transforms and token lifetime.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> klasy, która korzysta z domyślnego pliku cookie transformacji i okres ważności tokenu.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> properties are initialized to <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph> and <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> właściwości są inicjowane na <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph> i <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>The transforms to apply when encoding or decoding the cookie.</source>
          <target state="translated">Przekształcenia do zastosowania podczas kodowania lub dekodowania pliku cookie.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property.</source>
          <target state="translated">Ustawia <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the specified cookie transforms.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> przekształca klasy, która korzysta z określonego pliku cookie.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> Właściwość jest inicjowana na <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
          <source><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>The transforms to apply when encoding or decoding the cookie.</source>
          <target state="translated">Przekształcenia do zastosowania podczas kodowania lub dekodowania pliku cookie.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property.</source>
          <target state="translated">Ustawia <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>The default lifetime for a token.</source>
          <target state="translated">Domyślny okres istnienia dla tokenu.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /&gt;</ph> property.</source>
          <target state="translated">Ustawia <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> class that uses the specified cookie transforms and token lifetime.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" /&gt;</ph> klasy, która korzysta z określonego pliku cookie transformacji i okres istnienia tokenu.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transforms" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="tokenLifetime" /&gt;</ph> is less than or equal to <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenLifetime" /&gt;</ph> jest mniejsze niż lub równe <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The cookie that will be transformed.</source>
          <target state="translated">Plik cookie zostanie on przekształcony.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cookie should be encoded; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the cookie should be decoded.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli plik cookie powinien być kodowany; <ph id="ph2">&lt;see langword="false" /&gt;</ph> Jeśli plik cookie powinien zostać zdekodowane.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>Applies the transforms specified by the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property to either encode or decode the specified cookie.</source>
          <target state="translated">Stosuje przekształcenia, określonego przez <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> właściwości do kodowania lub dekodowania określonego pliku cookie.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The encoded or decoded cookie.</source>
          <target state="translated">Zakodowany lub dekodowane pliku cookie.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>When encoding a cookie transforms are applied in the order in which they appear in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property.</source>
          <target state="translated">Jeśli kodowanie pliku cookie przekształca są stosowane w kolejności, w jakiej występują w <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>When decoding a cookie, they are applied in the reverse order.</source>
          <target state="translated">Podczas dekodowania pliku cookie, są one stosowane w odwrotnej kolejności.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to encode and decode the cookie material.</source>
          <target state="translated">Wywoływana z <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> metody do kodowania i dekodowania materiałów pliku cookie.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" /&gt;</ph> Jest właściwość <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> Za pośrednictwem przychodzącego <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>The reader should be positioned at a <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Czytnik powinien znajdować się na <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the reader is positioned at a <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Zwraca wartość wskazującą, czy czytnik znajduje się w <ph id="ph1">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> elementu.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader points to a <ph id="ph2">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli czytnik wskazuje <ph id="ph2">&lt;see langword="&amp;lt;wsc:SecurityContextToken&amp;gt;" /&gt;</ph> elementu; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source>Gets a value that indicates whether this handler supports validation of tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Pobiera wartość wskazującą, czy ten program obsługi wspiera sprawdzania poprawności tokenów typu <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler supports validation of tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli program obsługi wspiera sprawdzania poprawności tokenów typu <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Zawsze <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source>Gets a value that indicates whether this handler can write tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Pobiera wartość wskazującą, czy ten program obsługi może zapisywać tokeny typu <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler can write tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli program obsługi może zapisywać tokeny typu <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Zawsze <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>Gets the name for the cookie element.</source>
          <target state="translated">Pobiera nazwę elementu pliku cookie.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>The name for the cookie element.</source>
          <target state="translated">Nazwa elementu pliku cookie.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>The default element name is "Cookie".</source>
          <target state="translated">Domyślna nazwa elementu to "Plik Cookie".</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
          <source>This property is used in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to determine the element under which the encoded token material should be written or read.</source>
          <target state="translated">Ta właściwość jest używana w <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> metod umożliwiających ustalenie elementu, pod którym zakodowany token materiałów powinien zapisu lub odczytu.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>Gets the namespace for the cookie element.</source>
          <target state="translated">Pobiera obszar nazw dla elementu pliku cookie.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>The namespace for the cookie element.</source>
          <target state="translated">Przestrzeń nazw dla elementu pliku cookie.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>The default namespace is "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/security</ph>".</source>
          <target state="translated">Rozpoznano domyślnej przestrzeni nazw "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/security</ph>".</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
          <source>This property is used in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> methods to determine the namespace of the element under which the encoded token material should be written or read.</source>
          <target state="translated">Ta właściwość jest używana w <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%2A&gt;</ph> metod umożliwiających ustalenie, przestrzeń nazw elementu, pod którym zakodowany token materiałów powinien zapisu lub odczytu.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The claims principal.</source>
          <target state="translated">Podmiot zabezpieczeń oświadczeń.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>A caller-defined context string.</source>
          <target state="translated">Ciąg kontekstu zdefiniowane przez obiekt wywołujący.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The identifier of the endpoint to which the token is scoped.</source>
          <target state="translated">Identyfikator punktu końcowego, do których token ma zakres.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The time instant at which the token becomes valid.</source>
          <target state="translated">Czas błyskawicznych jaką token zaczyna obowiązywać.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The time instant after which the token is no longer valid.</source>
          <target state="translated">Czas błyskawicznych po którym token nie jest już prawidłowy.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> based on the specified claims principal and time range during which the token is valid.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> na podstawie zakresu główna i czasu określone oświadczenia w którym token jest prawidłowy.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The session security token that was created.</source>
          <target state="translated">Token zabezpieczający sesji, który został utworzony.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The properties on the new session token are set according to the specified parameters.</source>
          <target state="translated">Właściwości w tokenie nowej sesji są ustawione zgodnie z określonymi parametrami.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source><ph id="ph1">&lt;paramref name="principal" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="principal" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> Jest właściwość <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The token descriptor from which to create the token.</source>
          <target state="translated">Deskryptor tokenu z których można utworzyć tokenu.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates a security token based on the specified token descriptor.</source>
          <target state="translated">Tworzy token zabezpieczeń oparte na określony token deskryptora.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The security token that was created.</source>
          <target state="translated">Token zabezpieczający, który został utworzony.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>This will be an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Są to wystąpienie <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>Creates and returns a session security token by using the following properties in the token descriptor: <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Tworzy i zwraca tokenu zabezpieczającego sesji przy użyciu następujących właściwości w deskryptorze tokenu: <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A?displayProperty=nameWithType&gt;</ph>, i <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>If the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType&gt;</ph> property is set <ph id="ph2">`true`</ph> on the token handler configuration specified by the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> property, the bootstrap context is created from the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType&gt;</ph> property and is saved in the session token.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext%2A?displayProperty=nameWithType&gt;</ph> ustawiono właściwość <ph id="ph2">`true`</ph> w konfiguracji programu obsługi tokenów określony przez <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A&gt;</ph> właściwości kontekstu ładowania początkowego jest tworzona na podstawie <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token%2A?displayProperty=nameWithType&gt;</ph> właściwości i jest zapisywany w tokenu sesji.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenDescriptor" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> Jest właściwość <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms">
          <source>A read only collection that contains the list of default transforms to be applied to cookies, the <ph id="ph1">&lt;see cref="T:System.IdentityModel.DeflateCookieTransform" /&gt;</ph> and the <ph id="ph2">&lt;see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /&gt;</ph>.</source>
          <target state="translated">A odczytać tylko kolekcji, który zawiera listę przekształceń domyślna ma być stosowany do plików cookie, <ph id="ph1">&lt;see cref="T:System.IdentityModel.DeflateCookieTransform" /&gt;</ph> i <ph id="ph2">&lt;see cref="T:System.IdentityModel.ProtectedDataCookieTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime">
          <source>A constant that specifies the default lifetime for cookies, ten hours.</source>
          <target state="translated">Stała, który określa domyślny czas istnienia plików cookie, dziesięć godzin.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>Gets the default token lifetime.</source>
          <target state="translated">Pobiera domyślny okres istnienia tokenu.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>The default token lifetime.</source>
          <target state="translated">Domyślny okres istnienia tokenu.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
          <source>Always <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</source>
          <target state="translated">Zawsze <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>Gets the token type URIs for the token types that can be processed by this handler.</source>
          <target state="translated">Pobiera typ tokenu identyfikatorów URI dla typów tokenów, które mogą być przetwarzane przez ten program obsługi.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The token type identifier URIs for token types that can be processed by this handler.</source>
          <target state="translated">Identyfikator typu tokenu identyfikatorów URI dla typów tokenów, które mogą być przetwarzane przez ten program obsługi.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The following type URIs are supported: "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation</ph>", "<ph id="ph2">http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct</ph>", and "<ph id="ph3">http://schemas.xmlsoap.org/ws/2005/02/sc/sct</ph>".</source>
          <target state="translated">Następujący typ identyfikatory URI są obsługiwane: "<ph id="ph1">http://schemas.microsoft.com/ws/2006/05/servicemodel/tokens/SecureConversation</ph>","<ph id="ph2">http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/sct</ph>", a "<ph id="ph3">http://schemas.xmlsoap.org/ws/2005/02/sc/sct</ph>".</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration elements.</source>
          <target state="translated">Elementy konfiguracji niestandardowej.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Loads custom configuration from XML.</source>
          <target state="translated">Konfiguracja niestandardowa obciążeń z pliku XML.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Called by the configuration infrastructure to initialize the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> instance.</source>
          <target state="translated">Wywoływane przez infrastrukturę konfiguracji zainicjować <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Initializes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property from the <ph id="ph2">`lifetime`</ph> attribute of the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element in the configuration file.</source>
          <target state="translated">Inicjuje <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> właściwość z <ph id="ph2">`lifetime`</ph> atrybutu <bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>sessionTokenRequirement<ph id="ph4">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> w pliku konfiguracji.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The configuration specified by <ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is not valid.</source>
          <target state="translated">Konfiguracja określona przez <ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>For example, it does not contain a <ph id="ph1">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> element, it contains more than one <ph id="ph2">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> element, a valid <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> value cannot be read from the <ph id="ph4">&lt;see langword="lifetime" /&gt;</ph> attribute, or the <ph id="ph5">&lt;see langword="lifetime" /&gt;</ph> attribute specifies a value that is less than <ph id="ph6">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</source>
          <target state="translated">Na przykład nie zawiera <ph id="ph1">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> elementu, zawiera więcej niż jeden <ph id="ph2">&lt;see langword="&amp;lt;sessionTokenRequirement&amp;gt;" /&gt;</ph> element, prawidłowy <ph id="ph3">&lt;see cref="T:System.TimeSpan" /&gt;</ph> nie można odczytać wartości z <ph id="ph4">&lt;see langword="lifetime" /&gt;</ph> atrybutu, lub <ph id="ph5">&lt;see langword="lifetime" /&gt;</ph> atrybut określa wartość, która jest mniejsza niż <ph id="ph6">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Reads a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Odczytuje <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The default implementation deserializes the token from either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">Domyślna implementacja deserializuje token zabezpieczenia WS konwersacji Feb2005 lub zabezpieczenia WS konwersacji 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> Za pośrednictwem przychodzącego <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> using the specified XML reader.</source>
          <target state="translated">Odczytuje <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> przy użyciu określonego modułu odczytującego XML.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The session security token that was read, an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Token zabezpieczający sesji odczytano wystąpienia <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">Czytnik musi być umieszczony na zabezpieczenia WS konwersacji Feb2005 lub zabezpieczenia WS konwersacji 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The default implementation invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> method using a default token resolver.</source>
          <target state="translated">Domyślna implementacja wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> metodę przy użyciu tokenu domyślny program rozpoznawania nazw.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The reader is not positioned at a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> or the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> cannot be read.</source>
          <target state="translated">Czytnik nie znajduje się w <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> lub <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> nie można odczytać.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The stream of bytes that contains the token.</source>
          <target state="translated">Strumień bajtów, który zawiera token.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The token resolver to use.</source>
          <target state="translated">Token mechanizm rozpoznawania do użycia.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> from a stream of bytes by using the specified token resolver.</source>
          <target state="translated">Odczytuje <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> ze strumienia bajtów przy użyciu określonego program rozpoznawania nazw tokenów.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> that was read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> Który została odczytana.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The default implementation creates an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> over the token and invokes the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Domyślna implementacja tworzy <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> za pośrednictwem tokenu i wywołuje <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> over the incoming <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> Za pośrednictwem przychodzącego <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> that can used to resolve the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph> tego mogą być używane do rozpoznawania <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Reads the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> using the specified XML reader and token resolver.</source>
          <target state="translated">Odczytuje <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> przy użyciu określonego XML tokenu i odczytywania program rozpoznawania nazw.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The session security token that was read, an instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Token zabezpieczający sesji odczytano wystąpienia <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The reader must be positioned at either a WS-Secure Conversation Feb2005 or a WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">Czytnik musi być umieszczony na zabezpieczenia WS konwersacji Feb2005 lub zabezpieczenia WS konwersacji 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>If the token material is cached, it is read from the token cache, which is an instance of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph> class.</source>
          <target state="translated">Jeśli token materiałów są buforowane, jest odczytu z pamięci podręcznej tokenu, który jest wystąpieniem programu <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenCache&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Otherwise, the token material is read from the child element of the <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element that is specified by the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> properties and the <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method is invoked to decode the cookie.</source>
          <target state="translated">W przeciwnym razie wartość tokenu materiałów są odczytywane z elementem podrzędnym <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element, który jest określony przez <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> właściwości i <ph id="ph4">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metoda jest wywoływana w celu zdekodowania pliku cookie.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>For more information about how session tokens are serialized into a <ph id="ph1">`&lt;SecurityContextToken`</ph> element, see the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat sposobu tokeny sesji są serializowane w <ph id="ph1">`&lt;SecurityContextToken`</ph> elementu, zobacz <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="tokenResolver" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenResolver" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The reader is not positioned at a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> or the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> cannot be read.</source>
          <target state="translated">Czytnik nie znajduje się w <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> lub <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph> nie można odczytać.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>The transforms to use.</source>
          <target state="translated">Przekształcenia do użycia.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Sets the transforms that will be applied to cookies.</source>
          <target state="translated">Ustawia przekształcenia, które będą stosowane do plików cookie.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Sets the list of transforms returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> property.</source>
          <target state="translated">Ustawia listę przekształceń zwrócony przez <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>Transforms will be applied in the order in which they appear in the list when encoding a cookie and in the reverse order when decoding a cookie.</source>
          <target state="translated">Transformacje będą stosowane w kolejności, w jakiej występują na liście podczas kodowania pliku cookie i w odwrotnej kolejności podczas dekodowania pliku cookie.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
          <source>If the <ph id="ph1">`transforms`</ph> parameter is <ph id="ph2">`null`</ph>, an exception will be thrown from the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method when it is called to encode or decode the cookie.</source>
          <target state="translated">Jeśli <ph id="ph1">`transforms`</ph> parametr jest <ph id="ph2">`null`</ph>, zostanie wygenerowany wyjątek z <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metody wywołanego do kodowania i dekodowania pliku cookie.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>Gets or sets the token lifetime.</source>
          <target state="translated">Pobiera lub ustawia okres istnienia tokenu.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>The token lifetime.</source>
          <target state="translated">Okres istnienia tokenu.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see cref="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>By default, if the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> element is specified in the configuration file, the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> property is initialized to the value of the <ph id="ph4">`lifetime`</ph> attribute by the <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">Domyślnie jeśli <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>sessionTokenRequirement<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)</ept> w pliku konfiguracyjnym określono element <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A&gt;</ph> właściwości jest ustawiana na wartość <ph id="ph4">`lifetime`</ph> atrybutu według <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
          <source>An attempt to set a time span that is less than or equal to zero occurs.</source>
          <target state="translated">Występuje, próba ustawienia przedział czasu, która jest mniejsza niż lub równa zero.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType">
          <source>Gets the type of the tokens that this handler processes.</source>
          <target state="translated">Pobiera typ tokeny, których ten program obsługi przetwarza.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>Gets the transforms that will be applied to the cookie.</source>
          <target state="translated">Pobiera przekształcenia, które zostaną zastosowane do pliku cookie.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>The list of transforms that will be applied to the cookie.</source>
          <target state="translated">Lista transformacji zastosowanych do pliku cookie.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
          <source>The transforms are applied in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method.</source>
          <target state="translated">Są używane w <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to be checked.</source>
          <target state="translated">Token, który ma być sprawdzany.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Determines whether the session associated with the specified token is still valid.</source>
          <target state="translated">Określa, czy sesji skojarzonego z określonym tokenem jest nadal ważny.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Validity is determined by checking the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> properties of the specified token.</source>
          <target state="translated">Ważność jest określany przez sprawdzenie <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> i <ph id="ph2">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> właściwości określony token.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>An exception is thrown if the session is no longer valid.</source>
          <target state="translated">Jest zwracany wyjątek, jeśli sesja nie jest już prawidłowy.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token is not valid if its <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> property is set to a value that occurs later than <ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>, or if its <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> property is set to a value that occurs earlier than <ph id="ph4">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>.</source>
          <target state="translated">Token nie jest prawidłową jeśli jego <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A&gt;</ph> właściwości ustawiono wartość, która występuje później niż <ph id="ph2">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>, lub, jeśli jego <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A&gt;</ph> właściwości ustawiono wartość, która występuje wcześniej niż <ph id="ph4">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Called from the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A&gt;</ph> methods to validate the session.</source>
          <target state="translated">Wywoływana z <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%2A&gt;</ph> metod, aby sprawdzić sesji.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="securityToken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityToken" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> Jest właściwość <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> property of the token is later than <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" /&gt;</ph> Właściwości tokenu jest nowsza niż <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> property of the token is earlier than <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" /&gt;</ph> Właściwości tokenu jest starsza niż <ph id="ph2">&lt;see cref="P:System.DateTime.UtcNow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Validates a token and returns its claims.</source>
          <target state="translated">Sprawdza poprawność tokenu i zwraca jego oświadczeń.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to be validated.</source>
          <target state="translated">Token, który ma zostać zweryfikowana.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Must be assignable from <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Musi istnieć możliwość przypisania z <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Validates the specified token and returns its claims.</source>
          <target state="translated">Weryfikuje określony token i zwraca jego oświadczeń.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The identities that are contained in the token.</source>
          <target state="translated">Tożsamości, które są zawarte w tokenie.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A&gt;</ph> method to validate the token.</source>
          <target state="translated">Wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession%2A&gt;</ph> metodę weryfikacji tokenu.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> Nie można przypisać elementu z <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The token to be validated.</source>
          <target state="translated">Token, który ma zostać zweryfikowana.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Must be assignable from <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Musi istnieć możliwość przypisania z <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The identifier of the endpoint to which the token is scoped.</source>
          <target state="translated">Identyfikator punktu końcowego, do których token ma zakres.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Validates the specified session token and returns its claims.</source>
          <target state="translated">Sprawdza poprawność tokenu sesji i zwraca jego oświadczeń.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The identities that are contained in the token.</source>
          <target state="translated">Tożsamości, które są zawarte w tokenie.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Performs a check to make sure that the specified token is scoped for the specified endpoint ID and, if so, invokes the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method; otherwise, throws a <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph>.</source>
          <target state="translated">Sprawdza, aby upewnić się, że określony token znajduje się w zakresie identyfikator określony punkt końcowy, a jeśli tak jest, wywołuje <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> metody; w przeciwnym razie zwraca <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityTokenException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>Session tokens that have an <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> property that is <ph id="ph2">`null`</ph> or empty are considered to be globally scoped.</source>
          <target state="translated">Tokeny sesji, które mają <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> właściwość, która jest <ph id="ph2">`null`</ph> lub puste są traktowane jako zasięg globalny.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>This presents a potential security risk.</source>
          <target state="translated">Stanowi to potencjalne zagrożenie dla bezpieczeństwa.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>For this reason you should make sure that the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> property is set in your session tokens.</source>
          <target state="translated">Z tego powodu należy upewnij się, że <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A&gt;</ph> właściwość jest ustawiona w tokenów sesji.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="endpointId" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endpointId" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> Nie można przypisać elementu z <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /&gt;</ph> property of the specified token is not <ph id="ph2">&lt;see langword="null" /&gt;</ph> or empty and its value is different than that specified by the <ph id="ph3">&lt;paramref name="endpointId" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /&gt;</ph> Właściwość określony token nie jest <ph id="ph2">&lt;see langword="null" /&gt;</ph> lub pusta i jej wartość jest inna niż podana przez <ph id="ph3">&lt;paramref name="endpointId" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>Serializes a token.</source>
          <target state="translated">Serializuje token.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
          <source>The default implementation serializes the token into either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element.</source>
          <target state="translated">Domyślna implementacja serializuje token do zabezpieczenia WS konwersacji Feb2005 lub zabezpieczenia WS konwersacji 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>The token to write.</source>
          <target state="translated">Token do zapisania.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Serializes the specified token into a byte array.</source>
          <target state="translated">Serializuje określony token do tablicy typu byte.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>An encoded byte array.</source>
          <target state="translated">Tablica bajtów zakodowany.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>Serializes the specified token by creating and XML writer over a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> and invoking the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Serializuje określony token, tworząc i składnika zapisywania XML za pośrednictwem <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> i wywoływanie <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source>See that overload for more details.</source>
          <target state="translated">Zobacz tego przeciążenia, aby uzyskać więcej informacji.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
          <source><ph id="ph1">&lt;paramref name="sessiontoken" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sessiontoken" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The XML writer with which to serialize the token.</source>
          <target state="translated">Edytora XML, z którą ma zostać serializacji tokenu.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to serialize.</source>
          <target state="translated">Token do zserializowania.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated">Wystąpienie <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Serializes the specified token by using the specified XML writer.</source>
          <target state="translated">Serializuje określony token przy użyciu określonego składnika zapisywania XML.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The default implementation serializes the specified token as either a WS-Secure Conversation Feb2005 or WS-Secure Conversation 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element, depending on the value of the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Domyślna implementacja serializuje określony token jako zabezpieczenia WS konwersacji Feb2005 lub zabezpieczenia WS konwersacji 1.3 <ph id="ph1">`&lt;wsc:SecurityContextToken&gt;`</ph> element, w zależności od wartości <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion%2A?displayProperty=nameWithType&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType&gt;</ph> property is serialized as the <ph id="ph2">`Id`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A?displayProperty=nameWithType&gt;</ph> Właściwości jest szeregowana jako <ph id="ph2">`Id`</ph> atrybutu.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> property is serialized as the <ph id="ph2">`&lt;Identifier&gt;`</ph> child element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType&gt;</ph> Właściwości jest szeregowana jako <ph id="ph2">`&lt;Identifier&gt;`</ph> element podrzędny.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>If not <ph id="ph1">`null`</ph> the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> property is serialized as an <ph id="ph3">`&lt;Instance&gt;`</ph> element.</source>
          <target state="translated">Jeśli nie <ph id="ph1">`null`</ph> <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType&gt;</ph> właściwości jest szeregowana jako <ph id="ph3">`&lt;Instance&gt;`</ph> elementu.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Finally, if the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`false`</ph>, the entire token is serialized into binary array which is passed to the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> method to be encoded.</source>
          <target state="translated">Ponadto jeśli <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> właściwość jest <ph id="ph2">`false`</ph>, cały token jest serializowany w tablicy binarny, który jest przekazywany do <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms%2A&gt;</ph> metody mają być kodowane.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The encoded token is then written as a base64 encoded value to the element and namespace specified by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> properties.</source>
          <target state="translated">Zakodowany token następnie są zapisywane jako wartość kodowany w standardzie base64 do elementu i przestrzeń nazw określona przez <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>If the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`true`</ph>, the token is not serialized.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType&gt;</ph> właściwość jest <ph id="ph2">`true`</ph>, token nie jest serializowany.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> Nie można przypisać elementu z <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /&gt;</ph> of the token specifies a version of WS-Secure Conversation that is not supported by the handler.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" /&gt;</ph> Tokenu Określa wersję zabezpieczenia WS konwersacji, która nie jest obsługiwana przez program obsługi.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>