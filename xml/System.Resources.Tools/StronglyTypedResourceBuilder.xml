<Type Name="StronglyTypedResourceBuilder" FullName="System.Resources.Tools.StronglyTypedResourceBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8c0f60588168ba2ca37bd1927706f957d6bf332" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69276086" /></Metadata><TypeSignature Language="C#" Value="public static class StronglyTypedResourceBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StronglyTypedResourceBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Resources.Tools.StronglyTypedResourceBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class StronglyTypedResourceBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class StronglyTypedResourceBuilder abstract sealed" />
  <TypeSignature Language="F#" Value="type StronglyTypedResourceBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia obsługę zasobów o jednoznacznie określonym typie. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj zasoby oddzielą kod z zawartości w aplikacji. Tworzenie i używanie tych zasobów ułatwia opracowywanie aplikacji lokalizowalnych. W .NET Framework zasoby są zwykle używane przy użyciu <xref:System.Resources.ResourceManager> klasy, która zawiera metody zapewniające dostęp do zasobów specyficznych dla kultury w czasie wykonywania. Aby uzyskać więcej informacji na temat tworzenia i zużywania zasobów, zobacz [zasoby w aplikacjach klasycznych](https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890).  
  
 Obsługa zasobów o jednoznacznie określonym typie to funkcja czasu kompilacji, która hermetyzuje dostęp do zasobów przez utworzenie klas, które zawierają zestaw statycznych właściwości tylko do odczytu (`get`). Zapewnia to alternatywny sposób użycia zasobów zamiast wywoływania <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> metod i. <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType>  
  
 Podstawowe funkcje obsługi zasobów o jednoznacznie określonym typie są udostępniane przez <xref:System.Resources.Tools.StronglyTypedResourceBuilder> klasę (a także `/str` opcję wiersza polecenia w [Resgen. exe (Generator plików zasobów)](~/docs/framework/tools/resgen-exe-resource-file-generator.md)). Wyjście <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A> metody jest klasą zawierającą jednoznacznie wpisane właściwości, które pasują do zasobów, do których odwołuje się parametr wejściowy. Ta klasa zapewnia dostęp tylko do odczytu do zasobów, które są dostępne w przetworzonym pliku.  
  
   
  
## Examples  
 Poniższy przykład generuje klasę o nazwie `DemoResources` , która jest zapisywana w C# lub Visual Basic (w zależności od kodu źródłowego przykładu). Ta klasa znajduje się w `DemoApp` przestrzeni nazw i ma właściwości, które zwracają mapę bitową logo i nazwę aplikacji. Przykład wywołuje `CreateResourceFile` metodę, aby utworzyć wymagany plik. resw i wymaga, aby plik mapy bitowej o nazwie logo. bmp znajdował się w bieżącym katalogu tego przykładu. W przykładzie kodu jest użyty następujący plik zasobów o nazwie Demonstracja. resx:  
  
 [!code-csharp[System.Resources.Tools.StronglyTypedResourceBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/cs/example1.cs#1)]
 [!code-vb[System.Resources.Tools.StronglyTypedResourceBuilder.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/vb/example1.vb#1)]  
  
 Kod aplikacji może następnie użyć klasy w następujący sposób:  
  
 [!code-csharp[System.Resources.Tools.StronglyTypedResourceBuilder.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/cs/demoresources.cs#2)]
 [!code-vb[System.Resources.Tools.StronglyTypedResourceBuilder.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/vb/demoresources.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Generuje plik klasy, który zawiera właściwości o jednoznacznie określonym typie, które pasują do zasobów, które są określone w parametrze wejściowym.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(class System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resourceList As IDictionary, baseName As String, generatedCodeNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::Collections::IDictionary ^ resourceList, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.IDictionary * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resourceList, baseName, generatedCodeNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceList" Type="System.Collections.IDictionary" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceList">Kolekcja <see cref="T:System.Collections.IDictionary" /> , w której każda para klucz/wartość wpisu słownika to nazwa zasobu i wartość zasobu.</param>
        <param name="baseName">Nazwa klasy do wygenerowania.</param>
        <param name="generatedCodeNamespace">Przestrzeń nazw klasy do wygenerowania.</param>
        <param name="codeProvider"><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> Klasa, która dostarcza język, w którym zostanie wygenerowana Klasa.</param>
        <param name="internalClass"><see langword="true" />Aby wygenerować klasę wewnętrzną; <see langword="false" /> aby wygenerować klasę publiczną.</param>
        <param name="unmatchable">Tablica zawierająca nazwy zasobów, dla których nie można wygenerować właściwości. Zazwyczaj nie można wygenerować właściwości, ponieważ nazwa zasobu nie jest prawidłowym identyfikatorem.</param>
        <summary>Generuje plik klasy, który zawiera właściwości o jednoznacznie określonym typie, które pasują do zasobów, do których odwołuje się określona kolekcja.</summary>
        <returns><see cref="T:System.CodeDom.CodeCompileUnit" /> Kontener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody w celu wygenerowania klasy, która zapewnia silnie wpisaną otokę tylko do odczytu, aby uzyskać dostęp do zasobów, które `resourceList` są zawarte w parametrze. <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A>  
  
 <xref:System.Resources.Tools.StronglyTypedResourceBuilder> Klasa ignoruje wszelkie nazwy zasobów zaczynające się od znaków "$" lub "> >". Nazwy zasobów "Culture" i "ResourceManager" są nieprawidłowe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="resourceList" />, <paramref name="basename" />, lub <paramref name="codeProvider" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Nazwa węzła zasobu nie jest zgodna z jego kluczem w <paramref name="resourceList" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (string resxFile, string baseName, string generatedCodeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(string resxFile, string baseName, string generatedCodeNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resxFile As String, baseName As String, generatedCodeNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::String ^ resxFile, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resxFile, baseName, generatedCodeNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resxFile" Type="System.String" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resxFile">Nazwa pliku resx używanego jako dane wejściowe.</param>
        <param name="baseName">Nazwa klasy do wygenerowania.</param>
        <param name="generatedCodeNamespace">Przestrzeń nazw klasy do wygenerowania.</param>
        <param name="codeProvider"><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> Klasa, która dostarcza język, w którym zostanie wygenerowana Klasa.</param>
        <param name="internalClass"><see langword="true" />Aby wygenerować klasę wewnętrzną; <see langword="false" /> aby wygenerować klasę publiczną.</param>
        <param name="unmatchable"><see cref="T:System.String" /> Tablica zawierająca nazwy zasobów, dla których nie można wygenerować właściwości. Zazwyczaj nie można wygenerować właściwości, ponieważ nazwa zasobu nie jest prawidłowym identyfikatorem.</param>
        <summary>Generuje plik klasy, który zawiera właściwości o jednoznacznie określonym typie, które pasują do zasobów w określonym pliku resx.</summary>
        <returns><see cref="T:System.CodeDom.CodeCompileUnit" /> Kontener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby wygenerować klasę, która zapewnia silnie wpisaną dostęp tylko do odczytu do zasobów zawartych `resxFile` w parametrze. <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A>  
  
 <xref:System.Resources.Tools.StronglyTypedResourceBuilder> Klasa ignoruje wszelkie nazwy zasobów zaczynające się od znaków "$" lub "> >". Nazwy zasobów "Culture" i "ResourceManager" są nieprawidłowe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="basename" />lub <paramref name="codeProvider" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, string resourcesNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(class System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, string resourcesNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resourceList As IDictionary, baseName As String, generatedCodeNamespace As String, resourcesNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::Collections::IDictionary ^ resourceList, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::String ^ resourcesNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.IDictionary * string * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resourceList, baseName, generatedCodeNamespace, resourcesNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceList" Type="System.Collections.IDictionary" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="resourcesNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceList">Kolekcja <see cref="T:System.Collections.IDictionary" /> , w której każda para klucz/wartość wpisu słownika to nazwa zasobu i wartość zasobu.</param>
        <param name="baseName">Nazwa klasy do wygenerowania.</param>
        <param name="generatedCodeNamespace">Przestrzeń nazw klasy do wygenerowania.</param>
        <param name="resourcesNamespace">Przestrzeń nazw zasobu do wygenerowania.</param>
        <param name="codeProvider"><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> Obiekt, który dostarcza język, w którym zostanie wygenerowana Klasa.</param>
        <param name="internalClass"><see langword="true" />Aby wygenerować klasę wewnętrzną; <see langword="false" /> aby wygenerować klasę publiczną.</param>
        <param name="unmatchable"><see cref="T:System.String" /> Tablica zawierająca nazwy zasobów, dla których nie można wygenerować właściwości. Zazwyczaj nie można wygenerować właściwości, ponieważ nazwa zasobu nie jest prawidłowym identyfikatorem.</param>
        <summary>Generuje plik klasy, który zawiera właściwości o jednoznacznie określonym typie, które pasują do zasobów, do których odwołuje się określona kolekcja.</summary>
        <returns><see cref="T:System.CodeDom.CodeCompileUnit" /> Kontener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie umożliwia użycie `resourcesNamespace` parametru w celu określenia przestrzeni nazw dla wygenerowanych zasobów. W takim przypadku wygenerowany kod pojawia się w następujący sposób:  
  
```  
System.Resources.ResourceManager rm = new System.Resources.ResourceManager("<resourceNamespace>.<baseName>",typeof(baseName).Assembly);  
```  
  
 W większości przypadków nie trzeba wywoływać tej metody z kodu aplikacji.  
  
 <xref:System.Resources.Tools.StronglyTypedResourceBuilder> Klasa ignoruje wszelkie nazwy zasobów zaczynające się od znaków "$" lub "> >". Nazwy zasobów "Culture" i "ResourceManager" są nieprawidłowe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="resourceList" />, <paramref name="basename" />, lub <paramref name="codeProvider" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Nazwa węzła zasobu nie jest zgodna z jego kluczem w <paramref name="resourceList" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (string resxFile, string baseName, string generatedCodeNamespace, string resourcesNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(string resxFile, string baseName, string generatedCodeNamespace, string resourcesNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resxFile As String, baseName As String, generatedCodeNamespace As String, resourcesNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::String ^ resxFile, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::String ^ resourcesNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resxFile, baseName, generatedCodeNamespace, resourcesNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resxFile" Type="System.String" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="resourcesNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resxFile">Nazwa pliku resx używanego jako dane wejściowe.</param>
        <param name="baseName">Nazwa klasy do wygenerowania.</param>
        <param name="generatedCodeNamespace">Przestrzeń nazw klasy do wygenerowania.</param>
        <param name="resourcesNamespace">Przestrzeń nazw zasobu do wygenerowania.</param>
        <param name="codeProvider"><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> Klasa, która dostarcza język, w którym zostanie wygenerowana Klasa.</param>
        <param name="internalClass"><see langword="true" />Aby wygenerować klasę wewnętrzną; <see langword="false" /> aby wygenerować klasę publiczną.</param>
        <param name="unmatchable"><see cref="T:System.String" /> Tablica zawierająca nazwy zasobów, dla których nie można wygenerować właściwości. Zazwyczaj nie można wygenerować właściwości, ponieważ nazwa zasobu nie jest prawidłowym identyfikatorem.</param>
        <summary>Generuje plik klasy, który zawiera właściwości o jednoznacznie określonym typie, które pasują do zasobów w określonym pliku resx.</summary>
        <returns><see cref="T:System.CodeDom.CodeCompileUnit" /> Kontener.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby wygenerować klasę, która zapewnia silnie wpisaną dostęp tylko do odczytu do zasobów zawartych `resxFile` w parametrze. <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A>  
  
 <xref:System.Resources.Tools.StronglyTypedResourceBuilder> Klasa ignoruje wszelkie nazwy zasobów zaczynające się od znaków "$" lub "> >". Nazwy zasobów "Culture" i "ResourceManager" są nieprawidłowe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="basename" />lub <paramref name="codeProvider" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyResourceName">
      <MemberSignature Language="C#" Value="public static string VerifyResourceName (string key, System.CodeDom.Compiler.CodeDomProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyResourceName(string key, class System.CodeDom.Compiler.CodeDomProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyResourceName (key As String, provider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyResourceName(System::String ^ key, System::CodeDom::Compiler::CodeDomProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member VerifyResourceName : string * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName (key, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="provider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="key">Ciąg do zweryfikowania i, w razie potrzeby, przekonwertuj na prawidłową nazwę zasobu.</param>
        <param name="provider"><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> Obiekt, który określa język docelowy do użycia.</param>
        <summary>Generuje prawidłowy ciąg zasobu w oparciu o określony ciąg wejściowy i dostawcę kodu.</summary>
        <returns>Prawidłowa nazwa zasobu pochodnego od <paramref name="key" /> parametru. Wszystkie nieprawidłowe tokeny są zastępowane znakiem podkreślenia (_) lub <see langword="null" /> Jeśli ciąg pochodny nadal zawiera nieprawidłowe znaki zgodnie z językiem określonym <paramref name="provider" /> przez parametr.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `key` Jeśli parametr jest prawidłowym ciągiem znaków, ten ciąg jest zwracany. Jeśli parametr jest nieprawidłowym ciągiem lub ciągiem zawierającym nieprawidłowe znaki <xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A> , metoda próbuje wygenerować `key` prawidłowy ciąg na podstawie parametrów i `provider`. `key` Jeśli można wygenerować prawidłowy ciąg, ten ciąg jest zwracany; w przeciwnym razie jest zwracany. `null`  
  
 `key` Jeśli parametr jest pustym ciągiem (""), zwracany jest ciąg, który składa się z pojedynczego znaku podkreślenia (_). Jeśli parametr nie jest pustym ciągiem <xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A> , Metoda porównuje każdy znak w ciągu z zestawem nieprawidłowych tokenów na podstawie języka określonego przez `provider` parametr. `key` Dowolny nieprawidłowy znak w ciągu jest zastępowany znakiem podkreślenia. Znaki, które zostaną zastąpione podkreśleniem, są następujące:  
  
 "" (spacja), U + 00A0 (miejsce niepowodujące podziału), "." (kropka), "," (przecinek), ";" (średnik), "&#124;", "~", "@", "#", "%", "^", "&", "*", "+", "-", "/",\\"",\<"", ">", "?", "[", "]", "(", ")", "{", "}", "" "(cudzysłów)," "" (apostrof), ":" i "!".  
  
> [!NOTE]
>  Zasoby o jednoznacznie określonym typie nie zezwalają na używanie słów kluczowych języka ( `if`takich `for`jak, itd.) jako nazw kluczy zasobów. Jednak wzorzec <xref:System.CodeDom> projektowy umożliwia korzystanie z słów kluczowych języka przez prefiks słowa kluczowego z znakiem podkreślenia. Metoda wywołuje metodę, <xref:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier%2A> aby wymusić ten projekt. <xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A> Na przykład, jeśli używasz nazwy zasobu, która jest taka sama jak słowo kluczowe języka, takie jak `for`, nazwa jest wyświetlana w postaci `_for` klasy wygenerowanej silnie określonego typu zasobów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" />lub <paramref name="provider" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
