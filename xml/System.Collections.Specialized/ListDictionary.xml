<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ListDictionary.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac523c2e1a062c542dcec2f01cef58c885f0f0732b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23c2e1a062c542dcec2f01cef58c885f0f0732b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Implements <ph id="ph1">&lt;see langword="IDictionary" /&gt;</ph> using a singly linked list.</source>
          <target state="translated">Implementuje <ph id="ph1">&lt;see langword="IDictionary" /&gt;</ph> przy użyciu pojedynczo połączonej listy.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Recommended for collections that typically include fewer than 10 items.</source>
          <target state="translated">Zalecane dla kolekcji, które zwykle zawierają mniej niż 10 elementów.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>This is a simple implementation of <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> using a singly linked list.</source>
          <target state="translated">Jest to prosty implementacja <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> przy użyciu pojedynczo połączonej listy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>It is smaller and faster than a <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> if the number of elements is 10 or less.</source>
          <target state="translated">Jest mniejsze i szybsze niż <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> przypadku 10 lub mniejszej liczby elementów.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>This should not be used if performance is important for large numbers of elements.</source>
          <target state="translated">To nie należy używać, gdy wydajność jest ważne w przypadku dużej liczby elementów.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Items in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> are not in any guaranteed order; code should not depend on the current order.</source>
          <target state="translated">Elementy w <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> nie ma żadnego gwarantowane kolejności; kod nie powinien zależą od bieżącego zamówienia.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> is implemented for fast keyed retrieval; the actual internal order of items is implementation-dependent and could change in future versions of the product.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> Jest zaimplementowany dla pobierania z kluczem fast; rzeczywista wewnętrzna kolejność elementów jest zależne od implementacji i może ulec zmianie w przyszłych wersjach produktu.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Members, such as <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Remove%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph> are O(<ph id="ph5">`n`</ph>) operations, where <ph id="ph6">`n`</ph> is <ph id="ph7">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">Elementy członkowskie, takie jak <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Remove%2A&gt;</ph>, i <ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph> są O (<ph id="ph5">`n`</ph>) operacje, których <ph id="ph6">`n`</ph> jest <ph id="ph7">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can.</source>
          <target state="translated">Klucz nie może być <ph id="ph1">`null`</ph>, ale wartość można.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Instrukcji języka C# (<ph id="ph2">`for each`</ph> w języku Visual Basic) zwraca obiekt typu elementów w kolekcji.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">Ponieważ każdy element <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> parę klucz/wartość jest typu elementu nie jest typu klucza lub typ wartości.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</source>
          <target state="translated">Zamiast tego jest typ elementu <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>For example:</source>
          <target state="translated">Na przykład:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Instrukcja jest otokę moduł wyliczający, który zezwala tylko odczyt z bez zapisywania do kolekcji.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>The following code example demonstrates several of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie kodu pokazano kilka właściwości i metod <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Publiczne statyczne (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>This implementation does not provide a synchronized (thread safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>, but derived classes can create their own synchronized versions of the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> using the <ph id="ph3">&lt;see cref="P:System.Collections.Specialized.ListDictionary.SyncRoot" /&gt;</ph> property.</source>
          <target state="translated">Ta implementacja nie zapewnia zsynchronizowany otoki (wielowątkowość) dla <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>, ale klas pochodnych można tworzyć własne zsynchronizowane wersje <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> przy użyciu <ph id="ph3">&lt;see cref="P:System.Collections.Specialized.ListDictionary.SyncRoot" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.ListDictionary">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.ListDictionary">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>Creates an empty <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> using the default comparer.</source>
          <target state="translated">Tworzy pustą <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> przy użyciu domyślna funkcja porównująca.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">Moduł porównujący Określa, czy dwa klucze są takie same.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> must be unique.</source>
          <target state="translated">Każdy klucz w <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> muszą być unikatowe.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>The default comparer is the key's implementation of <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Implementacja klucza jest domyślna funkcja porównująca <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ten konstruktor jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor">
          <source>The following code example demonstrates several of the properties and methods of <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie kodu pokazano kilka właściwości i metod <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> to use to determine whether two keys are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> Do użycia w celu ustalenia, czy dwa klucze są takie same.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the default comparer, which is each key's implementation of <ph id="ph2">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> Aby użyć modułu porównującego domyślna, czyli wdrożenia każdego klucza <ph id="ph2">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>Creates an empty <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> using the specified comparer.</source>
          <target state="translated">Tworzy pustą <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> przy użyciu określona funkcja porównująca.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">Moduł porównujący Określa, czy dwa klucze są takie same.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> must be unique.</source>
          <target state="translated">Każdy klucz w <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> muszą być unikatowe.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The default comparer is the key's implementation of <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Implementacja klucza jest domyślna funkcja porównująca <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>The custom comparer enables such scenarios as doing lookups with case-insensitive strings.</source>
          <target state="translated">Niestandardowa funkcja porównująca umożliwia takich scenariuszy jako podczas wyszukiwania z ciągami bez uwzględniania wielkości liter.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ten konstruktor jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The key of the entry to add.</source>
          <target state="translated">Klucz wpisu do dodania.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The value of the entry to add.</source>
          <target state="translated">Wartość wpisu do dodania.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>Adds an entry with the specified key and value into the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Dodaje wpis o określonym kluczu i wartości do <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>An object that has no correlation between its state and its hash code value should typically not be used as the key.</source>
          <target state="translated">Zazwyczaj obiekt, który ma korelacja stanu i jego wartość kodu skrótu nie zostać użyta jako klucz.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>For example, String objects are better than StringBuilder objects for use as keys.</source>
          <target state="translated">Na przykład ciąg obiekty są lepszym rozwiązaniem niż obiekty StringBuilder do użycia jako klucze.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">Można również użyć <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> właściwości, aby dodać nowe elementy za pomocą ustawienia wartości klucza, który nie istnieje w <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, na przykład <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Jednak jeśli określony klucz już istnieje w <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, ustawienie <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> stara wartość jest zastąpienie właściwości.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Z kolei <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph> — metoda nie modyfikuje istniejące elementy.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>The following code example adds to and removes elements from a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Poniższy przykładowy kod dodaje i usuwa elementy z <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
          <source>An entry with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Wpis z tym samym kluczem już istnieje w <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source>Removes all entries from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Usuwa wszystkie wpisy z <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph> jest ustawiany na zero, a ponadto są również zwalniane odwołania do innych obiektów z elementów kolekcji.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Clear">
          <source>The following code example adds to and removes elements from a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Poniższy przykładowy kod dodaje i usuwa elementy z <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Klucz do zlokalizowania w <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> contains a specific key.</source>
          <target state="translated">Określa, czy <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> zawiera określony klucz.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> contains an entry with the specified key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> zawiera wpis z określonym kluczem, a w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`key`</ph> to determine whether <ph id="ph4">`item`</ph> exists.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda używa obiektów kolekcji <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metod <ph id="ph3">`key`</ph> ustalenie, czy <ph id="ph4">`item`</ph> istnieje.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> metody <ph id="ph3">`item`</ph> parametrów dla obiektów w kolekcji.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source>The following code example searches for an element in a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Poniższy kod przykładowe wyszukiwania dla elementu w <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> objects copied from <ph id="ph3">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Jednowymiarowa <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> czyli miejsce docelowe <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> obiektów kopiowanych ze <ph id="ph3">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> Musi mieć indeksowania liczony od zera.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Liczony od zera indeks w <bpt id="p1">&lt;c&gt;</bpt>tablicy<ept id="p1">&lt;/c&gt;</ept> od rozpoczyna się kopiowanie które.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> entries to a one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> instance at the specified index.</source>
          <target state="translated">Kopie <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> wpisy na jednowymiarowe <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> wystąpienia pod określonym indeksem.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The elements are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Elementy są kopiowane do <ph id="ph1">&lt;xref:System.Array&gt;</ph> w tej samej kolejności, w której moduł wyliczający iteruje <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>To copy only the keys in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, use <ph id="ph2">`ListDictionary.Keys.CopyTo`</ph>.</source>
          <target state="translated">Aby skopiować tylko klucze w <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, użyj <ph id="ph2">`ListDictionary.Keys.CopyTo`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>To copy only the values in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, use <ph id="ph2">`ListDictionary.Values.CopyTo`</ph>.</source>
          <target state="translated">Aby skopiować tylko wartości w <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, użyj <ph id="ph2">`ListDictionary.Values.CopyTo`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The following code example copies the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> to an array.</source>
          <target state="translated">Poniższy przykładowy kod kopiuje elementy <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> do tablicy.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest wielowymiarowy.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Liczba elementów w źródle <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> jest większa niż dostępne miejsce od <ph id="ph2">&lt;paramref name="index" /&gt;</ph> do końca tablicy docelowej <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Typ źródła <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> nie można automatycznie rzutować na typ docelowy <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>Gets the number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Pobiera liczbę par klucz/wartość zawartych w <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>The number of key/value pairs contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Liczba par klucz/wartość zawartych w <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Count">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu wylicza elementy <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> który iteruje <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> Dla <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Instrukcji języka C# (<ph id="ph2">`for each`</ph> w języku Visual Basic) ukrywa złożoność wyliczenia.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">W związku z tym przy użyciu <ph id="ph1">`foreach`</ph> jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> również wprowadzono moduł wyliczający wróć do tej pozycji.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">W tym miejscu <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">W związku z tym należy wywołać <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zwraca ten sam obiekt do momentu <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> Ustawia <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> do następnego elementu.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwraca <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwracają również <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Jeśli przez ostatnie wywołanie <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwrócił <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Aby ustawić <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> aby pierwszym elementem kolekcji ponownie, należy wywołać <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> następuje <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu wylicza elementy <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Pobiera wartość wskazującą czy <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> ma stały rozmiar.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Ta właściwość zawsze zwraca <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsFixedSize%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implementuje <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsFixedSize%2A&gt;</ph> właściwości, ponieważ jest to wymagane przez <ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">W kolekcji o stałym rozmiarze po jej utworzeniu nie można dodawać ani usuwać elementów, jednak można modyfikować istniejące elementy.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Kolekcja o stałym rozmiarze jest po prostu kolekcji z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym zmian w źródłowej kolekcji, włączając Dodawanie lub usuwanie elementów z kolekcji o stałym rozmiarze odzwierciedla te zmiany.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated">Pobiera wartość wskazującą czy <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> jest tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Ta właściwość zawsze zwraca <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsReadOnly%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implementuje <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsReadOnly%2A&gt;</ph> właściwości, ponieważ jest to wymagane przez <ph id="ph3">&lt;xref:System.Collections.IDictionary?displayProperty=nameWithType&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Pobiera wartość wskazującą czy <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph> jest synchronizowane (wielowątkowość).</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Ta właściwość zawsze zwraca <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsSynchronized%2A&gt;</ph> property because it is required by the <ph id="ph3">&lt;xref:System.Collections.ICollection?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> implementuje <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.IsSynchronized%2A&gt;</ph> właściwości, ponieważ jest to wymagane przez <ph id="ph3">&lt;xref:System.Collections.ICollection?displayProperty=nameWithType&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Derived classes can provide a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Klasy pochodne zapewniają zsynchronizowanej wersji <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> przy użyciu <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The key whose value to get or set.</source>
          <target state="translated">Klucz wartości, których można pobrać lub ustawić.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">Pobiera lub ustawia wartość skojarzoną z określonym kluczem.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The value associated with the specified key.</source>
          <target state="translated">Wartość skojarzona z określonym kluczem.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>If the specified key is not found, attempting to get it returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>, and attempting to set it creates a new entry using the specified key.</source>
          <target state="translated">Jeśli określony klucz nie zostanie znaleziony, próby pobrania jej zwraca <ph id="ph1">&lt;see langword="null" /&gt;</ph>, a próba skonfigurowania go tworzy nowy wpis przy użyciu określonego klucza.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: <ph id="ph1">`myCollection[key]`</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>; for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">Można również użyć <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> właściwości, aby dodać nowe elementy za pomocą ustawienia wartości klucza, który nie istnieje w <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, na przykład <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">Jednak jeśli określony klucz już istnieje w <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, ustawienie <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> stara wartość jest zastąpienie właściwości.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">Z kolei <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Add%2A&gt;</ph> — metoda nie modyfikuje istniejące elementy.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can.</source>
          <target state="translated">Klucz nie może być <ph id="ph1">`null`</ph>, ale wartość można.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the <ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph> method to determine if the key exists in the list.</source>
          <target state="translated">Aby odróżnić <ph id="ph1">`null`</ph> który jest zwracany, ponieważ nie odnaleziono określonego klucza i <ph id="ph2">`null`</ph> który jest zwracany, ponieważ wartość określony klucz jest <ph id="ph3">`null`</ph>, użyj <ph id="ph4">&lt;xref:System.Collections.Specialized.ListDictionary.Contains%2A&gt;</ph> metodę, aby określić, czy klucz znajduje się na liście.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">Używa języka C# do definiowania indeksatory zamiast implementacja słowa kluczowego <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Implementuje Visual Basic <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.Item%2A&gt;</ph> jako domyślna właściwość, która zapewnia te same funkcje indeksowania.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu wylicza elementy <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> zawierającą klucze ze słownika <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> Zawierającą klucze ze słownika <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Values%2A&gt;</ph> method.</source>
          <target state="translated">Wartości w <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> jest nieokreślony, ale takiej samej kolejności jak skojarzone wartości w <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> zwrócony przez <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Values%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Zwrócona <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> nie jest statyczna kopia; zamiast tego <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> odwołuje się do kluczy w oryginalnym <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">W związku z tym zmiany <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> kontynuować zostaną odzwierciedlone w <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Keys">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu wylicza elementy <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>The key of the entry to remove.</source>
          <target state="translated">Klucz wpisu do usunięcia.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>Removes the entry with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Usuwa wpis z określonym kluczem z <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> remains unchanged.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> nie zawiera element z określonym kluczem <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">Nie wyjątek.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source>The following code example adds to and removes elements from a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Poniższy przykładowy kod dodaje i usuwa elementy z <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Pobiera obiekt, który może służyć do synchronizujący dostęp do <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Obiekt, który może służyć do synchronizujący dostęp do <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Klasy pochodne zapewniają własne zsynchronizowanej wersji <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> przy użyciu <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Synchronizowanie kodu musi wykonywać operacje <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> z <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>, nie są bezpośrednio w <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object.</source>
          <target state="translated">W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A&gt;</ph> podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> który iteruje <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> Dla <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Instrukcji języka C# (<ph id="ph2">`for each`</ph> w języku Visual Basic) ukrywa złożoność wyliczenia.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">W związku z tym przy użyciu <ph id="ph1">`foreach`</ph> jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> również wprowadzono moduł wyliczający wróć do tej pozycji.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">At to pozycja, wywoływania <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">W związku z tym należy wywołać <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zwraca ten sam obiekt do momentu <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> Ustawia <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> do następnego elementu.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwraca <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwracają również <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">Jeśli przez ostatnie wywołanie <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwrócił <ph id="ph2">`false`</ph>, wywoływania <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Aby ustawić <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> aby pierwszym elementem kolekcji ponownie, należy wywołać <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> następuje <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> lub <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> zgłasza <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">Jeśli kolekcja jest zmodyfikowany między <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu wylicza elementy <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> zawierający wartości w <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> Zawierający wartości w <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.ListDictionary" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is the same order as the associated keys in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Keys%2A&gt;</ph> method.</source>
          <target state="translated">Kolejność wartości na liście <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> jest nieokreślony, ale takiej samej kolejności jak skojarzonych kluczy w <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> zwrócony przez <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary.Keys%2A&gt;</ph> — metoda.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> refers back to the values in the original <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Zwrócona <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> nie jest statyczna kopia; zamiast tego <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> odwołuje się do wartości w oryginalnym <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> continue to be reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">W związku z tym zmiany <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> kontynuować zostaną odzwierciedlone w <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.ListDictionary.Values">
          <source>The following code example enumerates the elements of a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu wylicza elementy <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>