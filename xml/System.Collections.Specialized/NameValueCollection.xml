<Type Name="NameValueCollection" FullName="System.Collections.Specialized.NameValueCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d1d6aad3c24b139bec3904a9e019b3fa0651e47" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30440691" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NameValueCollection : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NameValueCollection extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.NameValueCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class NameValueCollection&#xA;Inherits NameObjectCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameValueCollection : System::Collections::Specialized::NameObjectCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kolekcję skojarzone <see cref="T:System.String" /> kluczy i <see cref="T:System.String" /> wartości, które można uzyskać dostępu do klucza lub indeksu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta kolekcja jest oparta na <xref:System.Collections.Specialized.NameObjectCollectionBase> klasy. Jednak w przeciwieństwie do <xref:System.Collections.Specialized.NameObjectCollectionBase>, ta klasa przechowuje wielu wartości ciągów jednego klucza.  
  
 Ta klasa może służyć dla nagłówków, ciągów zapytania i dane formularza.  
  
 Każdy element jest para klucza i wartości.  
  
 Kolekcje tego typu nie zachowuj kolejność elementów, a konkretnego kolejność nie jest gwarantowana podczas wyliczania kolekcji.  
  
 Pojemność <xref:System.Collections.Specialized.NameValueCollection> jest liczba elementów <xref:System.Collections.Specialized.NameValueCollection> może przechowywać. Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność co jest wymagane przez; Ponowna alokacja.  
  
 Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Moduł porównujący Określa, czy dwa klucze są takie same. Jest domyślna funkcja porównująca <xref:System.Collections.CaseInsensitiveComparer>.  
  
 W .NET Framework w wersji 1.0 klasa ta używa porównywania ciągów z uwzględnieniem kultury. Jednak w .NET Framework w wersji 1.1 lub nowszej, ta klasa korzysta z <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> podczas porównywania ciągów. Aby uzyskać więcej informacji na temat wpływ kultury porównań i sortowanie, zobacz [wykonywanie niezależnych od kultury operacje na ciągach](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md).  
  
 `null` jest dozwolona jako klucz lub wartość.  
  
> [!CAUTION]
>  <xref:System.Collections.Specialized.NameValueCollection.Get%2A> — Metoda nie rozróżnia `null` który jest zwracany, ponieważ nie odnaleziono określonego klucza i `null` który jest zwracany, ponieważ wartość skojarzoną z kluczem jest `null`.  
  
   
  
## Examples  
 [!code-cpp[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/CPP/nvc.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/CS/nvc.cs#1)]
 [!code-vb[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/VB/nvc.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Publiczne statyczne (<see langword="Shared" /> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków. Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.  
  
 Ta implementacja nie zapewnia zsynchronizowany otoki (wielowątkowość) dla <see cref="T:System.Collections.Specialized.NameValueCollection" />, ale klas pochodnych można tworzyć własne zsynchronizowane wersje <see cref="T:System.Collections.Specialized.NameValueCollection" /> przy użyciu <see cref="P:System.Collections.ICollection.SyncRoot" /> właściwość <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> klasy.  
  
 Wyliczanie za pomocą kolekcji leżą nie jest procedurą bezpieczne wątku. Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający. Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</threadsafe>
    <altmember cref="T:System.Collections.Specialized.NameObjectCollectionBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma domyślne początkowa pojemność i korzysta z domyślnego dostawcę kodu bez uwzględniania wielkości liter wyznaczania wartości skrótu i domyślna funkcja porównująca bez uwzględniania wielkości liter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność <xref:System.Collections.Specialized.NameValueCollection> jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection> może przechowywać. Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Moduł porównujący Określa, czy dwa klucze są takie same. Jest domyślna funkcja porównująca <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Ten konstruktor jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="equalityComparer">
          <see cref="T:System.Collections.IEqualityComparer" /> Obiekt ma być używany do określenia, czy dwa klucze są takie same i generowania skrótu kluczy w kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma domyślne początkowa pojemność i używa określonego <see cref="T:System.Collections.IEqualityComparer" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność <xref:System.Collections.Specialized.NameValueCollection> obiekt jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection> może przechowywać. Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 <xref:System.Collections.IEqualityComparer> Obiektu łączy modułu porównującego i dostawcy kodu wyznaczania wartości skrótu.  Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameValueCollection>.  Moduł porównujący Określa, czy dwa klucze są takie same.  
  
 Ten konstruktor jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (System.Collections.Specialized.NameValueCollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (col As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(System::Collections::Specialized::NameValueCollection ^ col);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="col" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="col">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Można skopiować do nowego <see cref="T:System.Collections.Specialized.NameValueCollection" /> wystąpienia.</param>
        <summary>Kopiuje dane z określonego <see cref="T:System.Collections.Specialized.NameValueCollection" /> na nowy <see cref="T:System.Collections.Specialized.NameValueCollection" /> z tej samej początkowej pojemności jako liczbę wpisów skopiowane i użycie takie same wyznaczania wartości skrótu dostawcy kodu i tego samego modułu porównującego jako kolekcji źródłowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność <xref:System.Collections.Specialized.NameValueCollection> jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection> może przechowywać. Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Moduł porównujący Określa, czy dwa klucze są takie same. Jest domyślna funkcja porównująca <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Nowe elementy <xref:System.Collections.Specialized.NameValueCollection> są sortowane w takiej samej kolejności jak źródło <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Ten konstruktor jest O (`n`) operację, której `n` jest liczba elementów w `col`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="col" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">Początkowa liczba wpisów który <see cref="T:System.Collections.Specialized.NameValueCollection" /> może zawierać.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma określony początkowa pojemność i korzysta z domyślnego dostawcę kodu bez uwzględniania wielkości liter wyznaczania wartości skrótu i domyślna funkcja porównująca bez uwzględniania wielkości liter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność <xref:System.Collections.Specialized.NameValueCollection> jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection> może przechowywać. Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Moduł porównujący Określa, czy dwa klucze są takie same. Jest domyślna funkcja porównująca <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Ten konstruktor jest O (`n`) operację, której `n` jest `capacity`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="capacity" /> jest mniejsza od zera.</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IHashCodeProvider hashProvider, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hashProvider As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(System::Collections::IHashCodeProvider ^ hashProvider, System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use NameValueCollection(IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="hashProvider">
          <see cref="T:System.Collections.IHashCodeProvider" /> Który będzie dostarczać skrótu dla wszystkich kluczy w <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <param name="comparer">
          <see cref="T:System.Collections.IComparer" /> Do użycia w celu ustalenia, czy dwa klucze są takie same.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma domyślne początkowa pojemność i używa dostawcy kodu określonego wyznaczania wartości skrótu i określona funkcja porównująca.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność <xref:System.Collections.Specialized.NameValueCollection> jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection> może przechowywać. Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Moduł porównujący Określa, czy dwa klucze są takie same. Jest domyślna funkcja porównująca <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Ten konstruktor jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">Początkowa liczba wpisów który <see cref="T:System.Collections.Specialized.NameValueCollection" /> obiekt może zawierać.</param>
        <param name="equalityComparer">
          <see cref="T:System.Collections.IEqualityComparer" /> Obiekt ma być używany do określenia, czy dwa klucze są takie same i generowania skrótu kluczy w kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma określony początkowa pojemność i używa określonego <see cref="T:System.Collections.IEqualityComparer" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność <xref:System.Collections.Specialized.NameValueCollection> obiekt jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection> może przechowywać. Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 <xref:System.Collections.IEqualityComparer> Obiektu łączy modułu porównującego i dostawcy kodu wyznaczania wartości skrótu.  Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameValueCollection>.  Moduł porównujący Określa, czy dwa klucze są takie same.  
  
 Ten konstruktor jest O (`n`) operację, której `n` jest `capacity` parametru.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="capacity" /> jest mniejsza od zera.</exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity, System.Collections.Specialized.NameValueCollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.Specialized.NameValueCollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, col As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity, System::Collections::Specialized::NameValueCollection ^ col);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="col" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="capacity">Początkowa liczba wpisów który <see cref="T:System.Collections.Specialized.NameValueCollection" /> może zawierać.</param>
        <param name="col">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Można skopiować do nowego <see cref="T:System.Collections.Specialized.NameValueCollection" /> wystąpienia.</param>
        <summary>Kopiuje dane z określonego <see cref="T:System.Collections.Specialized.NameValueCollection" /> na nowy <see cref="T:System.Collections.Specialized.NameValueCollection" /> o określonej pojemności początkowej lub tego samego początkowego pojemność liczbę wpisów skopiowane, w zależności od jest większa i przy użyciu domyślnego dostawcę kodu bez uwzględniania wielkości liter wyznaczania wartości skrótu i domyślne porównania bez uwzględniania wielkości liter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność <xref:System.Collections.Specialized.NameValueCollection> jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection> może przechowywać. Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Moduł porównujący Określa, czy dwa klucze są takie same. Jest domyślna funkcja porównująca <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Ten konstruktor jest O (`n`) operację, której `n` jest `capacity`.  Jeśli liczba elementów w `col` jest większa niż `capacity`, ten konstruktor staje się O (`n` + `m`) operację, której `n` jest `capacity` i `m` jest liczbą elementy w `col`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="capacity" /> jest mniejsza od zera.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="col" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameValueCollection (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameValueCollection(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiekt, który zawiera informacje wymagane do serializacji nowej <see cref="T:System.Collections.Specialized.NameValueCollection" /> wystąpienia.</param>
        <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> obiekt, który zawiera źródłowego i docelowego serializowanym strumieniu skojarzone z nowym <see cref="T:System.Collections.Specialized.NameValueCollection" /> wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, który jest możliwy do serializacji i używa określonego <see cref="T:System.Runtime.Serialization.SerializationInfo" /> i <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IHashCodeProvider hashProvider, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, hashProvider As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity, System::Collections::IHashCodeProvider ^ hashProvider, System::Collections::IComparer ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use NameValueCollection(Int32, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">Początkowa liczba wpisów który <see cref="T:System.Collections.Specialized.NameValueCollection" /> może zawierać.</param>
        <param name="hashProvider">
          <see cref="T:System.Collections.IHashCodeProvider" /> Który będzie dostarczać skrótu dla wszystkich kluczy w <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <param name="comparer">
          <see cref="T:System.Collections.IComparer" /> Do użycia w celu ustalenia, czy dwa klucze są takie same.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma określony początkowa pojemność i używa dostawcy kodu określonego wyznaczania wartości skrótu i określona funkcja porównująca.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność <xref:System.Collections.Specialized.NameValueCollection> jest liczba elementów który <xref:System.Collections.Specialized.NameValueCollection> może przechowywać. Po dodaniu elementów do <xref:System.Collections.Specialized.NameValueCollection>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu zrezygnuje skrótu kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślny dostawca kod skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Moduł porównujący Określa, czy dwa klucze są takie same. Jest domyślna funkcja porównująca <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Ten konstruktor jest O (`n`) operację, której `n` jest `capacity`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="capacity" /> jest mniejsza od zera.</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje wpisy do bieżącego <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Specialized.NameValueCollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Collections.Specialized.NameValueCollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (c As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Collections::Specialized::NameValueCollection ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="c">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Można skopiować do bieżącego <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
        <summary>Kopiuje wpisy w określonym <see cref="T:System.Collections.Specialized.NameValueCollection" /> do bieżącego <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli klucz w `c` już istnieje w miejscu docelowym <xref:System.Collections.Specialized.NameValueCollection> wystąpienie skojarzona wartość w `c` jest dodawany do istniejącej listy rozdzielanej przecinkami wartości skojarzone z tym samym kluczem, w celu <xref:System.Collections.Specialized.NameValueCollection> wystąpienia.  
  
 Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> jest już równa pojemności pojemność <xref:System.Collections.Specialized.NameValueCollection> zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.  
  
 Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> jest mniejsza niż pojemność, ta metoda jest operacją O(1). Jeśli pojemność wymaga zwiększenia w celu uwzględnienia nowego elementu, ta metoda staje się O (`n`) operację, której `n` jest <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="c" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.String" /> Klucza wpisu do dodania. Klucz musi być <see langword="null" />.</param>
        <param name="value">
          <see cref="T:System.String" /> Wartość wpisu do dodania. Wartość może być <see langword="null" />.</param>
        <summary>Dodaje wpis o określonej nazwie i wartości do <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony klucz już istnieje w miejscu docelowym <xref:System.Collections.Specialized.NameValueCollection> wystąpienia, określona wartość jest dodawana do istniejącej listy rozdzielanej przecinkami wartości w formularzu `"value1,value2,value3"`. Wartości są skojarzone z tym samym kluczem, w celu <xref:System.Collections.Specialized.NameValueCollection> wystąpienia.  
  
 Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> jest już równa pojemności pojemność <xref:System.Collections.Specialized.NameValueCollection> zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.  
  
 Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> jest mniejsza niż pojemność, ta metoda jest operacją O(1). Jeśli pojemność wymaga zwiększenia w celu uwzględnienia nowego elementu, ta metoda staje się O (`n`) operację, której `n` jest <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public virtual string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wszystkie klucze w <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <value>A <see cref="T:System.String" /> tablica, która zawiera wszystkie klucze <see cref="T:System.Collections.Specialized.NameValueCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli kolekcja jest pusta, ta metoda zwraca pustą <xref:System.String> tablicy nie `null`.  
  
 Tablice zwrócony przez <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> są buforowane w celu poprawy wydajności i są automatycznie odświeżane po dokonaniu zmiany w kolekcji. Klasa pochodna może unieważnić wersja buforowana przez wywołanie metody <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, a tym samym wymuszania tablic do odtworzenia.  
  
 Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)" />
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unieważnia tablice pamięci podręcznej i usuwa wszystkie wpisy z <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ dest, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Jednowymiarowa <see cref="T:System.Array" /> który jest miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.Specialized.NameValueCollection" />. <see cref="T:System.Array" /> Musi mieć indeksowania liczony od zera.</param>
        <param name="index">Liczony od zera indeks w <c>dest</c> od rozpoczyna się kopiowanie które.</param>
        <summary>Kopiuje całą <see cref="T:System.Collections.Specialized.NameValueCollection" /> do jednowymiarowego zgodnego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określona tablica musi być zgodne z typem.  
  
 Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> można skopiować elementów.  
  
 Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dest" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest mniejsza od zera.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dest" /> jest wielowymiarowy.  
  
 —lub—  
  
 Liczba elementów w źródle <see cref="T:System.Collections.Specialized.NameValueCollection" /> jest większa niż dostępne miejsce od <paramref name="index" /> do końca tablicy docelowej <paramref name="dest" />.</exception>
        <exception cref="T:System.InvalidCastException">Typ źródła <see cref="T:System.Collections.Specialized.NameValueCollection" /> nie można automatycznie rzutować na typ docelowy <paramref name="dest" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartości określonego wpisu w <see cref="T:System.Collections.Specialized.NameValueCollection" /> połączone w jedną listę rozdzielaną przecinkami.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual string Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Get(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks wpis zawierający wartości do pobrania z kolekcji.</param>
        <summary>Pobiera wartości w określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" /> połączone w jedną listę rozdzielaną przecinkami.</summary>
        <returns>A <see cref="T:System.String" /> zawierający rozdzielaną przecinkami listę wartości w określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" />, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest O (`n`) operację, której `n` jest to liczba wartości w określonym indeksie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest poza prawidłowym zakresem indeksów kolekcji.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual string Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Get(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.String" /> Klucza wpisu, który zawiera wartości do pobrania. Klucz musi być <see langword="null" />.</param>
        <summary>Pobiera wartości skojarzone z określonym kluczem z <see cref="T:System.Collections.Specialized.NameValueCollection" /> połączone w jedną listę rozdzielaną przecinkami.</summary>
        <returns>A <see cref="T:System.String" /> zawiera rozdzielaną przecinkami listę wartości skojarzone z określonym kluczem z <see cref="T:System.Collections.Specialized.NameValueCollection" />, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Ta metoda zwraca `null` w następujących przypadkach: 1) Jeśli określony klucz nie zostanie odnaleziony; i 2) Jeśli określony klucz zostanie znaleziony i jej powiązaną wartość jest `null`. Ta metoda nie rozróżnia dwóch przypadków.  
  
 Ta metoda jest O (`n`) operację, której `n` jest to liczba wartości skojarzone z określonym kluczem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetKey(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks klucz do uzyskania z kolekcji.</param>
        <summary>Pobiera klucz w określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <returns>A <see cref="T:System.String" /> zawierający klucz w określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" />, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest poza prawidłowym zakresem indeksów kolekcji.</exception>
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartości określonego wpisu w <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual string[] GetValues (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetValues(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (index As Integer) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetValues(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks wpis zawierający wartości do pobrania z kolekcji.</param>
        <summary>Pobiera wartości w określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <returns>A <see cref="T:System.String" /> tablica, która zawiera wartości w określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" />, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest O (`n`) operację, której `n` jest to liczba wartości w określonym indeksie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest poza prawidłowym zakresem indeksów kolekcji.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual string[] GetValues (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetValues(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (name As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetValues(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.String" /> Klucza wpisu, który zawiera wartości do pobrania. Klucz musi być <see langword="null" />.</param>
        <summary>Pobiera wartości skojarzone z określonym kluczem z <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <returns>A <see cref="T:System.String" /> tablicy, która zawiera wartości skojarzone z określonym kluczem z <see cref="T:System.Collections.Specialized.NameValueCollection" />, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Ta metoda zwraca `null` w następujących przypadkach: 1) Jeśli określony klucz nie zostanie odnaleziony; i 2) Jeśli określony klucz zostanie znaleziony i jej powiązaną wartość jest `null`. Ta metoda nie rozróżnia dwóch przypadków.  
  
 Ta metoda jest O (`n`) operację, której `n` jest to liczba wartości skojarzone z określonym kluczem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.HasKeys" />
      <MemberSignature Language="VB.NET" Value="Public Function HasKeys () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasKeys();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Collections.Specialized.NameValueCollection" /> zawiera klucze, które nie są <see langword="null" />.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Collections.Specialized.NameValueCollection" /> zawiera klucze, które nie są <see langword="null" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest operacją O(1).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateCachedArrays">
      <MemberSignature Language="C#" Value="protected void InvalidateCachedArrays ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateCachedArrays() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateCachedArrays ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateCachedArrays();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje buforowane tablic kolekcji do <see langword="null" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tablice zwrócony przez <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> są buforowane w celu poprawy wydajności i są automatycznie odświeżane po dokonaniu zmiany w kolekcji. Klasa pochodna może unieważnić wersja buforowana przez wywołanie metody <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, a tym samym wymuszania tablic do odtworzenia.  
  
 Ta metoda jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia określony wpis <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[int] { System::String ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks wpisu do zlokalizowania w kolekcji.</param>
        <summary>Pobiera zapis w określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <value>A <see cref="T:System.String" /> zawierający rozdzielaną przecinkami listę wartości w określonym indeksie kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.  
  
 Nie można ustawić tej właściwości. Aby ustawić wartość od określonego indeksu, należy użyć `Item[GetKey(index)]`.  
  
 Używa języka C# do definiowania indeksatory zamiast implementacja słowa kluczowego <xref:System.Collections.Specialized.NameValueCollection.Item%2A> właściwości. Implementuje Visual Basic <xref:System.Collections.Specialized.NameValueCollection.Item%2A> jako domyślna właściwość, która zapewnia te same funkcje indeksowania.  
  
 Pobieranie wartości w określonym indeksie jest O (`n`) operację, której `n` jest to liczba wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> jest poza prawidłowym zakresem indeksów kolekcji.</exception>
        <altmember cref="Overload:System.Collections.Specialized.NameValueCollection.Get" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameValueCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); void set(System::String ^ name, System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.String" /> Klucza wpisu do zlokalizowania. Klucz musi być <see langword="null" />.</param>
        <summary>Pobiera lub ustawia wpis z określonym kluczem w <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <value>A <see cref="T:System.String" /> zawierający rozdzielaną przecinkami listę wartości skojarzone z określonym kluczem, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[name]`.  
  
 Jeśli określony klucz już istnieje w kolekcji, ustawienie dla tej właściwości spowoduje zastąpienie istniejącej listy wartości z określoną wartością. Aby dołączyć nową wartość do istniejącej listy wartości, należy użyć <xref:System.Collections.Specialized.NameValueCollection.Add%2A> metody.  
  
 Jeśli określony klucz nie istnieje w kolekcji, ustawienie dla tej właściwości tworzy nowy wpis przy użyciu określonego klucza i określoną wartość.  
  
> [!CAUTION]
>  Ta właściwość zwraca `null` w następujących przypadkach: 1) Jeśli określony klucz nie zostanie odnaleziony; i 2) Jeśli określony klucz zostanie znaleziony i jej powiązaną wartość jest `null`. Ta właściwość nie rozróżnia dwóch przypadków.  
  
 Używa języka C# do definiowania indeksatory zamiast implementacja słowa kluczowego <xref:System.Collections.Specialized.NameValueCollection.Item%2A> właściwości. Implementuje Visual Basic <xref:System.Collections.Specialized.NameValueCollection.Item%2A> jako domyślna właściwość, która zapewnia te same funkcje indeksowania.  
  
 Podczas pobierania lub ustawiania wartości skojarzone z określonym kluczem jest O (`n`) operację, której `n` jest to liczba wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu i operacji próbuje zmodyfikować kolekcji.</exception>
        <altmember cref="Overload:System.Collections.Specialized.NameValueCollection.Get" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.String" /> Klucza wpisu do usunięcia. Klucz musi być <see langword="null" />.</param>
        <summary>Usuwa wpisy z określonym kluczem z <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Collections.Specialized.NameValueCollection> nie zawiera element z określonym kluczem <xref:System.Collections.Specialized.NameValueCollection> pozostaje niezmieniona. Nie wyjątek.  
  
 W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po usuniętym elemencie przesuwają się w górę, aby zająć zwolnione miejsce. Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane. To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.  
  
 Ta metoda jest O (`n`) operację, której `n` jest <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Set (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Set(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.String" /> Wpisu, aby dodać nową wartość do klucza. Klucz musi być <see langword="null" />.</param>
        <param name="value">
          <see cref="T:System.Object" /> Reprezentujący nową wartość do dodania do określonego wpisu. Wartość może być <see langword="null" />.</param>
        <summary>Ustawia wartość wpisu w <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony klucz już istnieje w kolekcji, ta metoda zastępuje istniejące listy wartości z określoną wartością. Aby dołączyć nową wartość do istniejącej listy wartości, należy użyć <xref:System.Collections.Specialized.NameValueCollection.Add%2A> metody.  
  
 Jeśli określony klucz nie istnieje w kolekcji, ta metoda tworzy nowy wpis przy użyciu określonego klucza i określoną wartość.  
  
 Ta metoda jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>