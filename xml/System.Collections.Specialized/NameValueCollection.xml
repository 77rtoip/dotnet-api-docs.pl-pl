<Type Name="NameValueCollection" FullName="System.Collections.Specialized.NameValueCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc658843edd6ff600368e0071325625edebf13df" /><Meta Name="ms.sourcegitcommit" Value="cb4d218ffd5a459a5f921fe1d945c682d1e09aca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/16/2019" /><Meta Name="ms.locfileid" Value="69539756" /></Metadata><TypeSignature Language="C#" Value="public class NameValueCollection : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NameValueCollection extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.NameValueCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class NameValueCollection&#xA;Inherits NameObjectCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameValueCollection : System::Collections::Specialized::NameObjectCollectionBase" />
  <TypeSignature Language="F#" Value="type NameValueCollection = class&#xA;    inherit NameObjectCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję skojarzonych <see cref="T:System.String" /> kluczy i <see cref="T:System.String" /> wartości, do których można uzyskać dostęp przy użyciu klucza lub indeksu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

 Ta kolekcja jest oparta na <xref:System.Collections.Specialized.NameObjectCollectionBase> klasie. Każdy element kolekcji jest parą klucz/wartość. Jednak, w przeciwieństwie <xref:System.Collections.Specialized.NameObjectCollectionBase>do, ta klasa może przechowywać wiele wartości ciągu w ramach jednego klucza.  
  
 Ta klasa może być używana w nagłówkach, ciągach zapytań i danych formularza.  
  
 Kolekcje tego typu nie zachowują uporządkowania elementów i nie są gwarantowane żadne określone porządkowanie podczas wyliczania kolekcji.  
  
 Pojemność a to liczba <xref:System.Collections.Specialized.NameValueCollection> elementów, które <xref:System.Collections.Specialized.NameValueCollection> mogą być przechowywane. Po dodaniu elementów jego pojemność jest automatycznie zwiększana zgodnie z wymaganiami ponownej alokacji.  
  
 Dostawca kodu skrótu ma kody skrótów dla kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślnym dostawcą kodu skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Funkcja porównująca określa, czy dwa klucze są równe. Domyślną metodą porównującą jest <xref:System.Collections.CaseInsensitiveComparer> , która używa konwencji niezmiennej [kultury](xref:System.Globalization.CultureInfo.InvariantCulture); oznacza to, że porównania kluczy domyślnie nie uwzględniają wielkości liter. Aby wykonać porównania kluczy z uwzględnieniem wielkości liter, <xref:System.Collections.Specialized.NameValueCollection.%23ctor(System.Collections.IEqualityComparer)?displayProperty=nameWithType> Wywołaj konstruktora i podaj <xref:System.StringComparer.CurrentCulture?displayProperty=nameWithType>wartość `equalityComparer` , <xref:System.StringComparer.InvariantCulture?displayProperty=nameWithType>lub <xref:System.StringComparer.Ordinal?displayProperty=nameWithType> jako argument. Aby uzyskać więcej informacji o tym, jak kultura ma wpływ na porównania i sortowanie, zobacz [wykonywanie operacji](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)na ciągach nieuwzględniających kulturę. 

 `null`jest dozwolony jako klucz lub jako wartość.  
  
> [!CAUTION]
>  Metoda nie `null` rozróżnia wartości, która jest zwracana, ponieważ nie odnaleziono określonego klucza, który jest zwracany, ponieważ wartość skojarzona z kluczem to `null`. `null` <xref:System.Collections.Specialized.NameValueCollection.Get%2A>  
  
   
  
## Examples  
 [!code-cpp[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/CPP/nvc.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/CS/nvc.cs#1)]
 [!code-vb[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/VB/nvc.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Publiczne statyczne (<see langword="Shared" /> w Visual Basic) członkowie tego typu są bezpieczne wątkowo. Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.  
  
<see cref="T:System.Collections.Specialized.NameValueCollection" />Ta implementacja nie zapewnia <see cref="T:System.Collections.Specialized.NameValueCollection" /> funkcjiwychodzącej<see cref="P:System.Collections.ICollection.SyncRoot" /> (bezpieczne wątkowo) dla elementu, ale klasy pochodne mogą tworzyć własne, zsynchronizowane wersje klasyprzyużyciuwłaściwości.<see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />  
  
Wyliczanie za pomocą kolekcji nie jest wewnętrznie procedurą bezpiecznego wątku. Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający. Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</threadsafe>
    <altmember cref="T:System.Collections.Specialized.NameObjectCollectionBase" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma domyślną pojemność początkową i używa domyślnego, nieuwzględniającego wielkości liter dostawcy kodu skrótu i domyślnego programu porównującego bez uwzględniania wielkości liter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność programu to liczba <xref:System.Collections.Specialized.NameValueCollection> elementów <xref:System.Collections.Specialized.NameValueCollection> , które mogą być przechowywane. Gdy elementy są dodawane do <xref:System.Collections.Specialized.NameValueCollection>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu ma kody skrótów dla kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślnym dostawcą kodu skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Funkcja porównująca określa, czy dwa klucze są równe. Domyślna funkcja porównująca to <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Ten konstruktor jest operacją O (1).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : System.Collections.IEqualityComparer -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection equalityComparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="equalityComparer"><see cref="T:System.Collections.IEqualityComparer" /> Obiekt, który ma zostać użyty do określenia, czy dwa klucze są równe, i aby generować kody skrótów dla kluczy w kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma domyślną pojemność początkową i używa określonego <see cref="T:System.Collections.IEqualityComparer" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność <xref:System.Collections.Specialized.NameValueCollection> obiektu to liczba elementów <xref:System.Collections.Specialized.NameValueCollection> , które mogą być przechowywane. Gdy elementy są dodawane do <xref:System.Collections.Specialized.NameValueCollection>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 <xref:System.Collections.IEqualityComparer> Obiekt łączy funkcję porównującą i dostawcę kodu skrótu.  Dostawca kodu skrótu ma kody skrótów dla kluczy w <xref:System.Collections.Specialized.NameValueCollection>.  Funkcja porównująca określa, czy dwa klucze są równe.  
  
 Ten konstruktor jest operacją O (1).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (System.Collections.Specialized.NameValueCollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (col As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(System::Collections::Specialized::NameValueCollection ^ col);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : System.Collections.Specialized.NameValueCollection -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection col" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="col" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="col">Do skopiowania do nowego <see cref="T:System.Collections.Specialized.NameValueCollection" /> wystąpienia. <see cref="T:System.Collections.Specialized.NameValueCollection" /></param>
        <summary>Kopiuje wpisy z określonego <see cref="T:System.Collections.Specialized.NameValueCollection" /> elementu do nowej <see cref="T:System.Collections.Specialized.NameValueCollection" /> o tej samej początkowej pojemności co liczba skopiowanych wpisów i przy użyciu tego samego dostawcy kodu skrótu i tej samej funkcji porównującej, która jest kolekcją źródłową.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność programu to liczba <xref:System.Collections.Specialized.NameValueCollection> elementów <xref:System.Collections.Specialized.NameValueCollection> , które mogą być przechowywane. Gdy elementy są dodawane do <xref:System.Collections.Specialized.NameValueCollection>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu ma kody skrótów dla kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślnym dostawcą kodu skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Funkcja porównująca określa, czy dwa klucze są równe. Domyślna funkcja porównująca to <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Elementy nowego <xref:System.Collections.Specialized.NameValueCollection> są sortowane w tej samej kolejności co źródło <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Ten konstruktor jest operacją o`n`(), gdzie `n` jest liczbą elementów w `col`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="col" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : int -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">Początkowa liczba wpisów, które <see cref="T:System.Collections.Specialized.NameValueCollection" /> może zawierać.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma określoną pojemność początkową i używa domyślnego dostawcy kodu skrótu bez uwzględniania wielkości liter oraz domyślnego programu porównującego bez uwzględniania wielkości liter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność programu to liczba <xref:System.Collections.Specialized.NameValueCollection> elementów <xref:System.Collections.Specialized.NameValueCollection> , które mogą być przechowywane. Gdy elementy są dodawane do <xref:System.Collections.Specialized.NameValueCollection>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu ma kody skrótów dla kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślnym dostawcą kodu skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Funkcja porównująca określa, czy dwa klucze są równe. Domyślna funkcja porównująca to <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Ten konstruktor jest operacją o`n`(), gdzie `n` is `capacity`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity" />jest mniejsza od zera.</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IHashCodeProvider hashProvider, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hashProvider As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(System::Collections::IHashCodeProvider ^ hashProvider, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection (hashProvider, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use NameValueCollection(IEqualityComparer) instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hashProvider">Spowoduje to dostarczenie kodów skrótu dla wszystkich kluczy <see cref="T:System.Collections.Specialized.NameValueCollection" />w. <see cref="T:System.Collections.IHashCodeProvider" /></param>
        <param name="comparer">Służy <see cref="T:System.Collections.IComparer" /> do określenia, czy dwa klucze są równe.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma domyślną pojemność początkową i używa określonego dostawcy kodu skrótu i określonej metody porównującej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność programu to liczba <xref:System.Collections.Specialized.NameValueCollection> elementów <xref:System.Collections.Specialized.NameValueCollection> , które mogą być przechowywane. Gdy elementy są dodawane do <xref:System.Collections.Specialized.NameValueCollection>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu ma kody skrótów dla kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślnym dostawcą kodu skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Funkcja porównująca określa, czy dwa klucze są równe. Domyślna funkcja porównująca to <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Ten konstruktor jest operacją O (1).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : int * System.Collections.IEqualityComparer -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection (capacity, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="capacity">Początkowa liczba wpisów, które <see cref="T:System.Collections.Specialized.NameValueCollection" /> może zawierać obiekt.</param>
        <param name="equalityComparer"><see cref="T:System.Collections.IEqualityComparer" /> Obiekt, który ma zostać użyty do określenia, czy dwa klucze są równe, i aby generować kody skrótów dla kluczy w kolekcji.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma określoną pojemność początkową i używa określonego <see cref="T:System.Collections.IEqualityComparer" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność <xref:System.Collections.Specialized.NameValueCollection> obiektu to liczba elementów <xref:System.Collections.Specialized.NameValueCollection> , które mogą być przechowywane. Gdy elementy są dodawane do <xref:System.Collections.Specialized.NameValueCollection>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 <xref:System.Collections.IEqualityComparer> Obiekt łączy funkcję porównującą i dostawcę kodu skrótu.  Dostawca kodu skrótu ma kody skrótów dla kluczy w <xref:System.Collections.Specialized.NameValueCollection>.  Funkcja porównująca określa, czy dwa klucze są równe.  
  
 Ten konstruktor jest operacją o`n`(), gdzie `n` jest `capacity` parametrem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity" />jest mniejsza od zera.</exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity, System.Collections.Specialized.NameValueCollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.Specialized.NameValueCollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, col As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity, System::Collections::Specialized::NameValueCollection ^ col);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : int * System.Collections.Specialized.NameValueCollection -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection (capacity, col)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="col" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="capacity">Początkowa liczba wpisów, które <see cref="T:System.Collections.Specialized.NameValueCollection" /> może zawierać.</param>
        <param name="col">Do skopiowania do nowego <see cref="T:System.Collections.Specialized.NameValueCollection" /> wystąpienia. <see cref="T:System.Collections.Specialized.NameValueCollection" /></param>
        <summary>Kopiuje wpisy z określonego <see cref="T:System.Collections.Specialized.NameValueCollection" /> do nowego <see cref="T:System.Collections.Specialized.NameValueCollection" /> o określonej pojemności początkowej lub takiej samej początkowej pojemności jak liczba skopiowanych wpisów, w zależności od tego, który jest większy, i przy użyciu domyślnego dostawcy kodu skrótu bez uwzględniania wielkości liter i Domyślna funkcja porównująca bez uwzględniania wielkości liter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność programu to liczba <xref:System.Collections.Specialized.NameValueCollection> elementów <xref:System.Collections.Specialized.NameValueCollection> , które mogą być przechowywane. Gdy elementy są dodawane do <xref:System.Collections.Specialized.NameValueCollection>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu ma kody skrótów dla kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślnym dostawcą kodu skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Funkcja porównująca określa, czy dwa klucze są równe. Domyślna funkcja porównująca to <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Ten konstruktor jest operacją o`n`(), gdzie `n` is `capacity`.  Jeśli liczba elementów w `col` jest większa niż `capacity`, ten Konstruktor będzie operacją o ( `capacity` `n` `n`  + `m`), gdzie is i `m` jest liczbą elementy w `col`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity" />jest mniejsza od zera.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="col" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameValueCollection (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameValueCollection(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info">Obiekt, który zawiera informacje wymagane do serializacji nowego <see cref="T:System.Collections.Specialized.NameValueCollection" /> wystąpienia. <see cref="T:System.Runtime.Serialization.SerializationInfo" /></param>
        <param name="context">Obiekt, który zawiera źródło i miejsce docelowe serializowanego strumienia skojarzonego z nowym <see cref="T:System.Collections.Specialized.NameValueCollection" /> wystąpieniem. <see cref="T:System.Runtime.Serialization.StreamingContext" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest możliwa do serializacji i używa określonego <see cref="T:System.Runtime.Serialization.SerializationInfo" /> i <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest operacją O (1).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IHashCodeProvider hashProvider, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, hashProvider As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity, System::Collections::IHashCodeProvider ^ hashProvider, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : int * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection (capacity, hashProvider, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use NameValueCollection(Int32, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="capacity">Początkowa liczba wpisów, które <see cref="T:System.Collections.Specialized.NameValueCollection" /> może zawierać.</param>
        <param name="hashProvider">Spowoduje to dostarczenie kodów skrótu dla wszystkich kluczy <see cref="T:System.Collections.Specialized.NameValueCollection" />w. <see cref="T:System.Collections.IHashCodeProvider" /></param>
        <param name="comparer">Służy <see cref="T:System.Collections.IComparer" /> do określenia, czy dwa klucze są równe.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Collections.Specialized.NameValueCollection" /> klasy, która jest pusta, ma określoną pojemność początkową i używa określonego dostawcy kodu skrótu i określonej metody porównującej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojemność programu to liczba <xref:System.Collections.Specialized.NameValueCollection> elementów <xref:System.Collections.Specialized.NameValueCollection> , które mogą być przechowywane. Gdy elementy są dodawane do <xref:System.Collections.Specialized.NameValueCollection>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.  
  
 Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Specialized.NameValueCollection>.  
  
 Dostawca kodu skrótu ma kody skrótów dla kluczy w <xref:System.Collections.Specialized.NameValueCollection>. Domyślnym dostawcą kodu skrótu jest <xref:System.Collections.CaseInsensitiveHashCodeProvider>.  
  
 Funkcja porównująca określa, czy dwa klucze są równe. Domyślna funkcja porównująca to <xref:System.Collections.CaseInsensitiveComparer>.  
  
 Ten konstruktor jest operacją o`n`(), gdzie `n` is `capacity`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity" />jest mniejsza od zera.</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje wpisy do bieżącego <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Specialized.NameValueCollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Collections.Specialized.NameValueCollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (c As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Collections::Specialized::NameValueCollection ^ c);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="nameValueCollection.Add c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="c">Do kopiowania do bieżącego <see cref="T:System.Collections.Specialized.NameValueCollection" />. <see cref="T:System.Collections.Specialized.NameValueCollection" /></param>
        <summary>Kopiuje wpisy z określonego <see cref="T:System.Collections.Specialized.NameValueCollection" /> do bieżącego. <see cref="T:System.Collections.Specialized.NameValueCollection" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `c` klucz w <xref:System.Collections.Specialized.NameValueCollection> wystąpieniu już istnieje, skojarzona wartość w `c` jest dodawana do istniejącej listy oddzielanych przecinkami wartości skojarzonych z tym samym kluczem w wystąpieniu docelowym <xref:System.Collections.Specialized.NameValueCollection> .  
  
 Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> jest już równa pojemności, pojemność <xref:System.Collections.Specialized.NameValueCollection> programu jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.  
  
 Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> jest mniejsza niż pojemność, ta metoda jest operacją o (1). Jeśli pojemność musi zostać zwiększona w celu uwzględnienia nowego elementu, ta metoda będzie operacją o (`n`), gdzie `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="c" />jest <see langword="null" />.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; unit&#xA;override this.Add : string * string -&gt; unit" Usage="nameValueCollection.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.String" /> Klucz wpisu do dodania. Klucz może być <see langword="null" />.</param>
        <param name="value"><see cref="T:System.String" /> Wartość wpisu do dodania. Wartość może być <see langword="null" />równa.</param>
        <summary>Dodaje wpis z określoną nazwą i wartością do <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony klucz już istnieje w wystąpieniu docelowym <xref:System.Collections.Specialized.NameValueCollection> , określona wartość jest dodawana do istniejącej listy wartości rozdzielanych przecinkami w formularzu. `"value1,value2,value3"` Wartości są skojarzone z tym samym kluczem w wystąpieniu docelowym <xref:System.Collections.Specialized.NameValueCollection> .  
  
 Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> jest już równa pojemności, pojemność <xref:System.Collections.Specialized.NameValueCollection> programu jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.  
  
 Jeśli <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> jest mniejsza niż pojemność, ta metoda jest operacją o (1). Jeśli pojemność musi zostać zwiększona w celu uwzględnienia nowego elementu, ta metoda będzie operacją o (`n`), gdzie `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public virtual string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllKeys : string[]" Usage="System.Collections.Specialized.NameValueCollection.AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wszystkie klucze w <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <value>Tablica zawierająca wszystkie klucze <see cref="T:System.Collections.Specialized.NameValueCollection" />. <see cref="T:System.String" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli kolekcja jest pusta, ta metoda zwraca pustą <xref:System.String> tablicę, a nie. `null`  
  
 Tablice zwracane przez <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> są przechowywane w pamięci podręcznej w celu uzyskania lepszej wydajności i są automatycznie odświeżane w przypadku zmiany kolekcji. Klasa pochodna może unieważnić buforowaną wersję przez wywołanie <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, wymuszając w ten sposób tworzenie macierzy.  
  
 Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)" />
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="nameValueCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unieważnia tablice zapisane w pamięci podręcznej i usuwa wszystkie <see cref="T:System.Collections.Specialized.NameValueCollection" />wpisy z.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int -&gt; unit" Usage="nameValueCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Collections.Specialized.NameValueCollection" />. <see cref="T:System.Array" /> Musi mieć indeksowanie oparte na zero.</param>
        <param name="index">Indeks (liczony od zera) <paramref name="dest" /> , w którym rozpoczyna się kopiowanie.</param>
        <summary>Kopiuje cały <see cref="T:System.Collections.Specialized.NameValueCollection" /> do zgodnego jednowymiarowego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określona tablica musi być typu zgodnego.  
  
 Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> do kopiowania elementów.  
  
 Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dest" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />jest mniejsza od zera.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dest" />jest wielowymiarowych.  
  
—lub— 
Liczba elementów w źródle <see cref="T:System.Collections.Specialized.NameValueCollection" /> jest większa niż dostępne miejsce od <paramref name="index" /> do końca miejsca docelowego <paramref name="dest" />.</exception>
        <exception cref="T:System.InvalidCastException">Nie można automatycznie rzutować <see cref="T:System.Collections.Specialized.NameValueCollection" /> typu źródła na typ docelowy. <paramref name="dest" /></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartości określonego wpisu w <see cref="T:System.Collections.Specialized.NameValueCollection" /> połączeniu z jedną listą rozdzieloną przecinkami.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual string Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Get(int index);" />
      <MemberSignature Language="F#" Value="abstract member Get : int -&gt; string&#xA;override this.Get : int -&gt; string" Usage="nameValueCollection.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks (liczony od zera) wpisu, który zawiera wartości, które mają zostać pobrane z kolekcji.</param>
        <summary>Pobiera wartości w określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" /> połączonej z jedną listą rozdzieloną przecinkami.</summary>
        <returns>A <see cref="T:System.String" /> , który zawiera rozdzieloną przecinkami listę wartości w określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" />, <see langword="null" />jeśli został znaleziony; w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest operacją o`n`(), gdzie `n` jest liczbą wartości w określonym indeksie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />jest poza prawidłowym zakresem indeksów dla kolekcji.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual string Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Get(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; string&#xA;override this.Get : string -&gt; string" Usage="nameValueCollection.Get name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.String" /> Klucz wpisu, który zawiera wartości do pobrania. Klucz może być <see langword="null" />.</param>
        <summary>Pobiera wartości skojarzone z określonym kluczem z <see cref="T:System.Collections.Specialized.NameValueCollection" /> połączonej na jedną listę rozdzieloną przecinkami.</summary>
        <returns>A <see cref="T:System.String" /> <see cref="T:System.Collections.Specialized.NameValueCollection" />, który zawiera rozdzieloną przecinkami listę wartości skojarzonych z określonym kluczem z, <see langword="null" />jeśli został znaleziony; w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Ta metoda zwraca `null` w następujących przypadkach: 1) Jeśli nie odnaleziono określonego klucza; i 2) Jeśli określony klucz zostanie znaleziony i jego skojarzona wartość to `null`. Ta metoda nie rozróżnia obydwu przypadków.  
  
 Ta metoda jest operacją o`n`(), gdzie `n` jest liczbą wartości skojarzonych z określonym kluczem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetKey : int -&gt; string&#xA;override this.GetKey : int -&gt; string" Usage="nameValueCollection.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks (liczony od zera) klucza do pobrania z kolekcji.</param>
        <summary>Pobiera klucz przy określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <returns>A <see cref="T:System.String" /> , który zawiera klucz w określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" />, <see langword="null" />jeśli został znaleziony; w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />jest poza prawidłowym zakresem indeksów dla kolekcji.</exception>
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartości określonego wpisu w <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual string[] GetValues (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetValues(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (index As Integer) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetValues(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : int -&gt; string[]&#xA;override this.GetValues : int -&gt; string[]" Usage="nameValueCollection.GetValues index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks (liczony od zera) wpisu, który zawiera wartości, które mają zostać pobrane z kolekcji.</param>
        <summary>Pobiera wartości z określonego indeksu <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <returns>Tablica zawierająca wartości w określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" />, <see langword="null" />jeśli znaleziono; w przeciwnym razie. <see cref="T:System.String" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest operacją o`n`(), gdzie `n` jest liczbą wartości w określonym indeksie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />jest poza prawidłowym zakresem indeksów dla kolekcji.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual string[] GetValues (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetValues(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (name As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetValues(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : string -&gt; string[]&#xA;override this.GetValues : string -&gt; string[]" Usage="nameValueCollection.GetValues name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.String" /> Klucz wpisu, który zawiera wartości do pobrania. Klucz może być <see langword="null" />.</param>
        <summary>Pobiera wartości skojarzone z określonym kluczem z <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <returns>Tablica zawierająca wartości skojarzone z określonym kluczem <see cref="T:System.Collections.Specialized.NameValueCollection" />z, <see langword="null" />jeśli znaleziono; w przeciwnym razie. <see cref="T:System.String" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Ta metoda zwraca `null` w następujących przypadkach: 1) Jeśli nie odnaleziono określonego klucza; i 2) Jeśli określony klucz zostanie znaleziony i jego skojarzona wartość to `null`. Ta metoda nie rozróżnia obydwu przypadków.  
  
 Ta metoda jest operacją o`n`(), gdzie `n` jest liczbą wartości skojarzonych z określonym kluczem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.HasKeys" />
      <MemberSignature Language="VB.NET" Value="Public Function HasKeys () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasKeys();" />
      <MemberSignature Language="F#" Value="member this.HasKeys : unit -&gt; bool" Usage="nameValueCollection.HasKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Collections.Specialized.NameValueCollection" /> klucze zawierają, które nie <see langword="null" />są.</summary>
        <returns><see langword="true" />Jeśli zawiera klucze, które nie <see langword="null" />są; w przeciwnym <see langword="false" />razie,. <see cref="T:System.Collections.Specialized.NameValueCollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest operacją O(1).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateCachedArrays">
      <MemberSignature Language="C#" Value="protected void InvalidateCachedArrays ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateCachedArrays() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateCachedArrays ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateCachedArrays();" />
      <MemberSignature Language="F#" Value="member this.InvalidateCachedArrays : unit -&gt; unit" Usage="nameValueCollection.InvalidateCachedArrays " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje buforowane tablice kolekcji do <see langword="null" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tablice zwracane przez <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> są przechowywane w pamięci podręcznej w celu uzyskania lepszej wydajności i są automatycznie odświeżane w przypadku zmiany kolekcji. Klasa pochodna może unieważnić buforowaną wersję przez wywołanie <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>, wymuszając w ten sposób tworzenie macierzy.  
  
 Ta metoda jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera lub ustawia określony wpis <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[int] { System::String ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Collections.Specialized.NameValueCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks wpisu, który ma zostać zlokalizowany w kolekcji.</param>
        <summary>Pobiera wpis o określonym indeksie <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <value>A <see cref="T:System.String" /> , który zawiera listę wartości rozdzielonych przecinkami w określonym indeksie kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zapewnia możliwość dostępu do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.  
  
 Nie można ustawić tej właściwości. Aby ustawić wartość w określonym indeksie, użyj `Item[GetKey(index)]`.  
  
 Język używa [tego](~/docs/csharp/language-reference/keywords/this.md) słowa kluczowego, aby zdefiniować indeksatory zamiast implementowania <xref:System.Collections.Specialized.NameValueCollection.Item%2A> właściwości. C# Visual Basic implementuje <xref:System.Collections.Specialized.NameValueCollection.Item%2A> jako [Właściwość domyślną](~/docs/visual-basic/language-reference/modifiers/default.md), która zapewnia te same funkcje indeksowania.  
  
 Pobieranie wartości o określonym indeksie jest operacją O (`n`), gdzie `n` jest liczbą wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />jest poza prawidłowym zakresem indeksów dla kolekcji.</exception>
        <altmember cref="Overload:System.Collections.Specialized.NameValueCollection.Get" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameValueCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); void set(System::String ^ name, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Collections.Specialized.NameValueCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.String" /> Klucz wpisu do zlokalizowania. Klucz może być <see langword="null" />.</param>
        <summary>Pobiera lub ustawia wpis o określonym kluczu w <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <value>A <see cref="T:System.String" /> , który zawiera rozdzieloną przecinkami listę wartości skojarzonych z określonym kluczem, jeśli znaleziono; <see langword="null" />w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zapewnia możliwość dostępu do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[name]`.  
  
 Jeśli określony klucz już istnieje w kolekcji, ustawienie tej właściwości spowoduje zastąpienie istniejącej listy wartości określoną wartością. Aby dołączyć nową wartość do istniejącej listy wartości, użyj <xref:System.Collections.Specialized.NameValueCollection.Add%2A> metody.  
  
 Jeśli określony klucz nie istnieje w kolekcji, ustawienie tej właściwości powoduje utworzenie nowego wpisu przy użyciu określonego klucza i określonej wartości.  
  
> [!CAUTION]
>  Ta właściwość zwraca `null` w następujących przypadkach: 1) Jeśli nie odnaleziono określonego klucza; i 2) Jeśli określony klucz zostanie znaleziony i jego skojarzona wartość to `null`. Ta właściwość nie rozróżnia obydwu przypadków.  
  
 Język używa [tego](~/docs/csharp/language-reference/keywords/this.md) słowa kluczowego, aby zdefiniować indeksatory zamiast implementowania <xref:System.Collections.Specialized.NameValueCollection.Item%2A> właściwości. C# Visual Basic implementuje <xref:System.Collections.Specialized.NameValueCollection.Item%2A> jako [Właściwość domyślną](~/docs/visual-basic/language-reference/modifiers/default.md), która zapewnia te same funkcje indeksowania.  
  
 Pobieranie lub Ustawianie wartości skojarzonych z określonym kluczem jest operacją O (`n`), gdzie `n` jest liczbą wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu, a operacja próbuje zmodyfikować kolekcję.</exception>
        <altmember cref="Overload:System.Collections.Specialized.NameValueCollection.Get" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="nameValueCollection.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.String" /> Klucz wpisu do usunięcia. Klucz może być <see langword="null" />.</param>
        <summary>Usuwa wpisy z określonym kluczem z <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie zawiera elementu z określonym kluczem <xref:System.Collections.Specialized.NameValueCollection> , pozostaje niezmieniona. <xref:System.Collections.Specialized.NameValueCollection> Nie zgłoszono żadnego wyjątku.

 Jeśli określisz `null` wartość `name` parametru `null` , wpis z kluczem zostanie usunięty, jeśli zostanie znaleziony.
  
 W kolekcjach elementów sąsiadujących, takich jak listy, elementy znajdujące się po usuniętym elemencie są przenoszone do opuszczone. Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane. To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.  
  
 Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Set (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Set(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Set : string * string -&gt; unit&#xA;override this.Set : string * string -&gt; unit" Usage="nameValueCollection.Set (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.String" /> Klucz wpisu, do którego ma zostać dodana nowa wartość. Klucz może być <see langword="null" />.</param>
        <param name="value"><see cref="T:System.Object" /> Reprezentuje nową wartość, która ma zostać dodana do określonego wpisu. Wartość może być <see langword="null" />równa.</param>
        <summary>Ustawia wartość wpisu w <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony klucz już istnieje w kolekcji, ta metoda zastępuje istniejącą listę wartości określoną wartością. Aby dołączyć nową wartość do istniejącej listy wartości, użyj <xref:System.Collections.Specialized.NameValueCollection.Add%2A> metody.  
  
 Jeśli określony klucz nie istnieje w kolekcji, ta metoda tworzy nowy wpis przy użyciu określonego klucza i określonej wartości.  
  
 Ta metoda jest operacją O(1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Kolekcja jest tylko do odczytu.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Wykonywanie niezależnych od kultury operacji na ciągach</related>
      </Docs>
    </Member>
  </Members>
</Type>
