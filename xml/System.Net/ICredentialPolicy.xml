<Type Name="ICredentialPolicy" FullName="System.Net.ICredentialPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75e0dbaae9cd90660c201933abdd8b5393701fcb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69090849" /></Metadata><TypeSignature Language="C#" Value="public interface ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.ICredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICredentialPolicy" />
  <TypeSignature Language="F#" Value="type ICredentialPolicy = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje zasady poświadczeń, które mają być używane dla żądań zasobów, które są <see cref="T:System.Net.WebRequest" /> wykonywane przy użyciu i ich klas pochodnych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zasady poświadczeń określają, czy wysyłać poświadczenia podczas wysyłania <xref:System.Net.WebRequest> do zasobu sieciowego, na przykład zawartości strony sieci Web. Jeśli są wysyłane poświadczenia, serwery, które wymagają uwierzytelniania klienta, mogą próbować uwierzytelniać klienta po odebraniu żądania, zamiast wysyłać odpowiedzi wskazujące, że poświadczenia klienta są wymagane. Podczas gdy jest to zaoszczędzenie na serwerze, ten wzrost wydajności musi być zrównoważony w odniesieniu do zagrożenia bezpieczeństwa związanego z wysyłaniem poświadczeń w sieci. Gdy serwer docelowy nie wymaga uwierzytelniania klienta, najlepiej nie wysyłaj poświadczeń.  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy>zasady są wywoływane tylko wtedy, <xref:System.Net.WebRequest> gdy <xref:System.Net.WebProxy> lub skojarzone z żądaniem mają poświadczenia, które nie `null`są. Ustawienie tych zasad nie ma wpływu na żądania, które nie określają poświadczeń.  
  
 Użyj właściwości <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> , aby <xref:System.Net.ICredentialPolicy> ustawić zasady. Program obsługujący uwierzytelnianie dla żądania <xref:System.Net.ICredentialPolicy.ShouldSendCredential%2A> wywoła metodę przed przeprowadzeniem uwierzytelniania. <xref:System.Net.IAuthenticationModule> Jeśli metoda zwróci `false`metodę, uwierzytelnianie nie jest wykonywane.  
  
 <xref:System.Net.ICredentialPolicy> Zasady <xref:System.Net.WebRequest> mają wpływ na wszystkie wystąpienia z poświadczeniami o wartości innej niż null w bieżącej domenie aplikacji. Nie można zastąpić zasad w poszczególnych żądaniach.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tego interfejsu, która zezwala na wysyłanie poświadczeń tylko dla żądań, które są przeznaczone dla określonych hostów.  
  
 [!code-cpp[NclCredPolicy#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#3)]
 [!code-csharp[NclCredPolicy#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authenticationModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool" Usage="iCredentialPolicy.ShouldSendCredential (challengeUri, request, credential, authenticationModule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri"><see cref="T:System.Uri" /> To spowoduje odebranie żądania.</param>
        <param name="request"><see cref="T:System.Net.WebRequest" /> Reprezentuje żądany zasób.</param>
        <param name="credential">, Który zostanie wysłany z żądaniem, jeśli ta metoda zwróci wartość <see langword="true" />. <see cref="T:System.Net.NetworkCredential" /></param>
        <param name="authenticationModule">, <see cref="T:System.Net.IAuthenticationModule" /> Który będzie przeprowadzać uwierzytelnianie, jeśli wymagane jest uwierzytelnianie.</param>
        <summary>Zwraca wartość wskazującą <see cref="T:System.Net.WebRequest" /> ,czypoświadczeniaklientasąwysyłanezżądaniemzasobuutworzonymprzy<see cref="T:System.Boolean" /> użyciu wystąpienia klasy.</summary>
        <returns><see langword="true" />Jeśli poświadczenia są wysyłane wraz z żądaniem; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.IAuthenticationModule> <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> <xref:System.Net.ICredentialPolicy.ShouldSendCredential%2A> Po określeniu <xref:System.Net.WebRequest> zasad przez ustawienie właściwości, która obsługuje uwierzytelnianie dla a wywołuje metodę przed przeprowadzeniem uwierzytelniania. <xref:System.Net.ICredentialPolicy> W przypadku powrocie `false`tej metody uwierzytelnianie nie jest wykonywane.  
  
 Gdy oryginalne żądanie zostało przekierowane lub wymagane jest uwierzytelnienie serwera proxy, zasób identyfikowany `challengeUri` przez program może różnić się od żądanego zasobu określonego w <xref:System.Net.WebRequest.RequestUri%2A?displayProperty=nameWithType>. W przypadku przekierowania, `challengeUri` zawiera rzeczywistą lokalizację docelową. <xref:System.Uri> Jeśli wymagane jest uwierzytelnianie serwera proxy `challengeUri` , zawiera adres serwera proxy, który wymaga uwierzytelnienia klienta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
