<Type Name="ICredentialPolicy" FullName="System.Net.ICredentialPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d9c78957f8e5c0a95a2c68a023cd746d5ffc5ef7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36472259" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.ICredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICredentialPolicy" />
  <TypeSignature Language="F#" Value="type ICredentialPolicy = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje zasady dla żądań zasobów, które są wykonywane przy użyciu poświadczeń <see cref="T:System.Net.WebRequest" /> i jej klas pochodnych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poświadczenie zasad określa, czy można wysłać poświadczeń podczas wysyłania <xref:System.Net.WebRequest> zasobu sieci, takich jak zawartość strony sieci Web. Jeśli poświadczenia zostaną wysłane, spróbować serwerów, które wymagają uwierzytelniania klienta do uwierzytelniania klienta po otrzymaniu żądania zamiast wysyłania odpowiedzi, która wskazuje, że są wymagane poświadczenia klienta. Podczas tego zapisuje obiegu do serwera, to bardziej wydajne musi zostać zrównoważone zagrożenie bezpieczeństwa związane z wysyła poświadczenia w sieci. Jeśli serwer docelowy nie wymaga uwierzytelniania klienta, najlepiej jest nie można wysłać poświadczeń.  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy> zasady są wywoływane tylko wtedy, gdy <xref:System.Net.WebRequest> lub <xref:System.Net.WebProxy> , który jest powiązany z żądaniem ma poświadczenia, które nie są `null`. Ustawienie tych zasad nie ma wpływu na żądania, które nie określają poświadczeń.  
  
 Użyj <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> właściwości można ustawić <xref:System.Net.ICredentialPolicy> zasad. <xref:System.Net.IAuthenticationModule> Wywoła dojść do uwierzytelniania dla żądania <xref:System.Net.ICredentialPolicy.ShouldSendCredential%2A> metoda przed wykonaniem uwierzytelniania. Jeśli metoda zwraca `false`, uwierzytelnianie nie jest wykonywane.  
  
 <xref:System.Net.ICredentialPolicy> Zasady wpływają na wszystkie wystąpienia <xref:System.Net.WebRequest> przy użyciu poświadczeń innych niż null w bieżącej domenie aplikacji. Zasady nie można zastąpić w poszczególnych żądań.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tego interfejsu, który pozwala na poświadczenia, aby być wysyłane tylko dla żądań, które odnoszą się do określonych hostów.  
  
 [!code-cpp[NclCredPolicy#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#3)]
 [!code-csharp[NclCredPolicy#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authenticationModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool" Usage="iCredentialPolicy.ShouldSendCredential (challengeUri, request, credential, authenticationModule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri">
          <see cref="T:System.Uri" /> Który będą otrzymywać żądania.</param>
        <param name="request">
          <see cref="T:System.Net.WebRequest" /> Reprezentujący żądanych zasobów.</param>
        <param name="credential">
          <see cref="T:System.Net.NetworkCredential" /> Będą który wysyłane z żądania, jeśli ta metoda zwraca <see langword="true" />.</param>
        <param name="authenticationModule">
          <see cref="T:System.Net.IAuthenticationModule" /> Który służy do przeprowadzenia uwierzytelniania, jeśli wymagane jest uwierzytelnienie.</param>
        <summary>Zwraca <see cref="T:System.Boolean" /> wskazująca, czy poświadczenia klienta są wysyłane z żądaniem zasobów zostało nawiązane przy użyciu wystąpienia <see cref="T:System.Net.WebRequest" /> klasy.</summary>
        <returns>
          <see langword="true" /> Jeśli poświadczenia zostaną wysłane z żądaniem; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po <xref:System.Net.ICredentialPolicy> zasad został określony przez ustawienie <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> właściwości, <xref:System.Net.IAuthenticationModule> uwierzytelniania uchwytów dla <xref:System.Net.WebRequest> wywołuje <xref:System.Net.ICredentialPolicy.ShouldSendCredential%2A> metoda przed wykonaniem uwierzytelniania. Jeśli ta metoda zwraca `false`, uwierzytelnianie nie jest wykonywane.  
  
 Jeśli oryginalne żądanie został przekierowany lub wymagane jest uwierzytelnienie serwera proxy, zasobu identyfikowanego przez `challengeUri` może różnić się od żądanego zasobu, który jest określony w <xref:System.Net.WebRequest.RequestUri%2A?displayProperty=nameWithType>. W przypadku przekierowania `challengeUri` zawiera rzeczywistego przeznaczenia <xref:System.Uri>. Jeśli wymagane jest uwierzytelnienie serwera proxy `challengeUri` zawiera adres serwera proxy, który wymaga uwierzytelniania klienta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>