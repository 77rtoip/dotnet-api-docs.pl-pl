<Type Name="IAuthenticationModule" FullName="System.Net.IAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d54d19e127f46c16df84529790dcfaf0f6146e95" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36472295" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAuthenticationModule" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthenticationModule" />
  <TypeSignature Language="DocId" Value="T:System.Net.IAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthenticationModule" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthenticationModule" />
  <TypeSignature Language="F#" Value="type IAuthenticationModule = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs podstawowego uwierzytelniania dla modułów uwierzytelniania klienta sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.IAuthenticationModule> Interfejs definiuje właściwości i metody, które muszą używać moduły uwierzytelniania niestandardowego.  
  
 Moduły uwierzytelniania należy przeprowadzić cały proces uwierzytelniania za pomocą serwera odpowiada na żądania uwierzytelnienia zależnie od potrzeb. Ten proces może obejmować żądania do uwierzytelniania serwera innym niż serwer zasobów, jak również inne działania wymagane do prawidłowo uwierzytelnić żądanie identyfikatora URI.  
  
 Moduły uwierzytelniania niestandardowego powinny implementować <xref:System.Net.IAuthenticationModule> interfejs, a następnie zarejestruj <xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType> metody. Moduły uwierzytelniania są także zarejestrowane podczas inicjowania programu poprzez Odczyt pliku konfiguracji.  
  
   
  
## Examples  
 Poniższy przykład tworzy tworzy klasę dostosowane uwierzytelniania zaimplementowanie <xref:System.Net.IAuthenticationModule> interfejsu. Pełny przykład można znaleźć w temacie <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Authentication#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#6)]
 [!code-csharp[System.Net.Authentication#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#6)]
 [!code-vb[System.Net.Authentication#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.AuthenticationManager" />
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="abstract member Authenticate : string * System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="iAuthenticationModule.Authenticate (challenge, request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge">Żądania uwierzytelnienia wysyłane przez serwer.</param>
        <param name="request">
          <see cref="T:System.Net.WebRequest" /> Wystąpienie skojarzone z żądaniem.</param>
        <param name="credentials">Poświadczenia związane z żądaniem.</param>
        <summary>Zwraca wystąpienie klasy <see cref="T:System.Net.Authorization" /> klasy w respose aby żądania uwierzytelnienia z serwera.</summary>
        <returns>
          <see cref="T:System.Net.Authorization" /> Zawierające komunikat autoryzacji na żądanie lub <see langword="null" /> , jeśli nie można obsłużyć żądania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.IAuthenticationModule.Authenticate%2A> Metoda przeprowadza proces uwierzytelniania z serwerem i zwraca <xref:System.Net.Authorization> wystąpienie do <xref:System.Net.AuthenticationManager>.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Net.IAuthenticationModule.Authenticate%2A> metody. Pełny przykład można znaleźć w temacie <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Authentication#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#3)]
 [!code-csharp[System.Net.Authentication#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#3)]
 [!code-vb[System.Net.Authentication#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="T:System.Net.AuthenticationManager" /> Wywołania <see cref="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" /> metoda moduły uwierzytelniania zarejestrowane, aby ustalić, który moduł obsługuje żądanie. Jeśli moduł uwierzytelniania nie może obsłużyć żądania, <see cref="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" /> metoda musi zwracać <see langword="null" />. Jeśli moduł uwierzytelniania napotka błąd podczas przeprowadzania procesu uwierzytelniania <see cref="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" /> należy zgłosić wyjątek.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Net.IAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Net.IAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ uwierzytelniania udostępniane przez ten moduł uwierzytelniania.</summary>
        <value>Ciąg wskazujący typ uwierzytelniania udostępniane przez ten moduł uwierzytelniania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> Właściwość określa typ uwierzytelniania, implementowanych przez ten moduł uwierzytelniania. <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> Jest używana przez <xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType> metodę, aby ustalić, czy moduł uwierzytelniania został zarejestrowany i przez <xref:System.Net.AuthenticationManager.Unregister%2A?displayProperty=nameWithType> metodę, aby usunąć moduł uwierzytelniania w zarejestrowany.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> właściwości. Pełny przykład można znaleźć w temacie <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Authentication#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#7)]
 [!code-csharp[System.Net.Authentication#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#7)]
 [!code-vb[System.Net.Authentication#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPreAuthenticate">
      <MemberSignature Language="C#" Value="public bool CanPreAuthenticate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.IAuthenticationModule.CanPreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPreAuthenticate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPreAuthenticate : bool" Usage="System.Net.IAuthenticationModule.CanPreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy moduł uwierzytelniania obsługuje wstępnego uwierzytelniania.</summary>
        <value>
          <see langword="true" /> Jeśli moduł autoryzacji obsługuje wstępnego uwierzytelniania; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A> Właściwość jest ustawiona na `true` aby wskazać, że moduł uwierzytelniania mogą odpowiadać, podając prawidłowy <xref:System.Net.Authorization> wystąpienia, kiedy <xref:System.Net.IAuthenticationModule.PreAuthenticate%2A> metoda jest wywoływana.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A> właściwości. Pełny przykład można znaleźć w temacie <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Authentication#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#7)]
 [!code-csharp[System.Net.Authentication#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#7)]
 [!code-vb[System.Net.Authentication#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zazwyczaj jest to wartość stałą; Moduł uwierzytelniania można preauthenticate albo nie jest.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="abstract member PreAuthenticate : System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="iAuthenticationModule.PreAuthenticate (request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request">
          <see cref="T:System.Net.WebRequest" /> Wystąpienia skojarzonego z żądania uwierzytelnienia.</param>
        <param name="credentials">Parametry logowania związane z żądania uwierzytelnienia.</param>
        <summary>Zwraca wystąpienie klasy <see cref="T:System.Net.Authorization" /> klasy dla żądań uwierzytelniania na serwerze.</summary>
        <returns>
          <see cref="T:System.Net.Authorization" /> Zawierające komunikat autoryzacji dla żądania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A> właściwość jest `true`, <xref:System.Net.IAuthenticationModule.PreAuthenticate%2A> metoda zwróci wystąpienia <xref:System.Net.Authorization> klasa zawierająca komunikat uwierzytelniania.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Net.IAuthenticationModule.PreAuthenticate%2A> metody. Pełny przykład można znaleźć w temacie <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Authentication#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#4)]
 [!code-csharp[System.Net.Authentication#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#4)]
 [!code-vb[System.Net.Authentication#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>