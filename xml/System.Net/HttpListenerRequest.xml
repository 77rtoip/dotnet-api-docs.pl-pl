<Type Name="HttpListenerRequest" FullName="System.Net.HttpListenerRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d940242925d794878f76e4a5fbb52244dd635067" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36549115" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListenerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cd592-101">W tym artykule opisano przychodzące żądanie HTTP do <see cref="T:System.Net.HttpListener" /> obiektu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd592-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span>
      </span>
      <span data-ttu-id="cd592-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd592-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-103">Gdy klient wysyła żądanie do zasobu identyfikator URI (Uniform) obsługiwany przez <xref:System.Net.HttpListener> obiektu <xref:System.Net.HttpListener> zapewnia <xref:System.Net.HttpListenerContext> obiektu, który zawiera informacje o nadawcy, żądania i odpowiedzi, który jest wysyłany do klienta.</span><span class="sxs-lookup"><span data-stu-id="cd592-103">When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client.</span></span> <span data-ttu-id="cd592-104"><xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> Zwraca właściwość <xref:System.Net.HttpListenerRequest> obiektu, który opisuje żądania.</span><span class="sxs-lookup"><span data-stu-id="cd592-104">The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.</span></span>  
  
 <span data-ttu-id="cd592-105"><xref:System.Net.HttpListenerRequest> Zawiera informacje o żądaniu, takich jak żądanie <xref:System.Net.HttpListenerRequest.HttpMethod%2A> ciągu <xref:System.Net.HttpListenerRequest.UserAgent%2A> ciąg i dane treści żądania (zobacz <xref:System.Net.HttpListenerRequest.InputStream%2A> właściwości).</span><span class="sxs-lookup"><span data-stu-id="cd592-105">The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).</span></span>  
  
 <span data-ttu-id="cd592-106">Aby odpowiedzieć na żądanie, należy uzyskać przy użyciu skojarzonego odpowiedzi <xref:System.Net.HttpListenerContext.Response%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-106">To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-107">Poniższy przykład kodu pokazuje, jak otrzymywać i reagowanie na <xref:System.Net.HttpListenerRequest>.</span><span class="sxs-lookup"><span data-stu-id="cd592-107">The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-108">Pobiera typy MIME zaakceptowane przez klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-108">Gets the MIME types accepted by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-109">A <see cref="T:System.String" /> tablica, która zawiera nazwy typu określony w żądaniu <see langword="Accept" /> nagłówka lub <see langword="null" /> Jeśli żądanie klienta nie zawiera <see langword="Accept" /> nagłówka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-109">A <see cref="T:System.String" /> array that contains the type names specified in the request's <see langword="Accept" /> header or <see langword="null" /> if the client request did not include an <see langword="Accept" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-110">`Accept` Nagłówka to ciąg rozdzielany nazwy typów protokołu dynamicznej konfiguracji hosta (MIME, Multipurpose Internet Mail Extensions) (na przykład `image/jpeg`), które wskazują typy MIME, które klient jest gotowa do akceptowania i przetwarzania w odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="cd592-110">The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response.</span></span> <span data-ttu-id="cd592-111">`*/*` Wpis wskazuje, czy klient akceptuje dowolny typ MIME.</span><span class="sxs-lookup"><span data-stu-id="cd592-111">The `*/*` entry indicates that the client accepts any MIME type.</span></span> <span data-ttu-id="cd592-112">Aby uzyskać szczegółowy opis `Accept` nagłówka, zobacz RFC 2616 dostępne pod adresem [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="cd592-112">For a detailed description of the `Accept` header, see RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="cd592-113">Aby uzyskać pełną listę nagłówków żądań, zobacz <xref:System.Net.HttpRequestHeader> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cd592-113">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-114">Poniższy przykład kodu pokazuje, za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-114">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetClientCertificate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetClientCertificate(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetClientCertificate (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetClientCertificate(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetClientCertificate : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListenerRequest.BeginGetClientCertificate (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="cd592-115">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="cd592-116">Obiekt użytkownika, który zawiera informacje na temat operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-116">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="cd592-117">Ten obiekt jest przekazywany do delegata wywołania zwrotnego, po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-117">This object is passed to the callback delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd592-118">Rozpoczyna żądanie asynchroniczne dla klienta X.509 v.3 certyfikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd592-119">
            <see cref="T:System.IAsyncResult" /> Wskazuje, że stan operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateError">
      <MemberSignature Language="C#" Value="public int ClientCertificateError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientCertificateError" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificateError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientCertificateError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateError : int" Usage="System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-120">Pobiera kod błędu, który wykryje problem z <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> dostarczonych przez klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-121">
            <see cref="T:System.Int32" /> Wartość, która zawiera kod błędu systemu Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-121">An <see cref="T:System.Int32" /> value that contains a Windows error code.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-122">Ta właściwość zawiera kod błędu systemu Windows zwracane przez bezpiecznego kanału (Schannel) dostawcy obsługi zabezpieczeń interfejsu (SSPI), który jest używany do weryfikacji certyfikatu.</span><span class="sxs-lookup"><span data-stu-id="cd592-122">This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</span></span> <span data-ttu-id="cd592-123">Aby uzyskać więcej informacji na temat obsługi interfejsu SSPI dla dostawcy Schannel, zobacz "Tworzenie zabezpieczyć połączenie przy użyciu Schannel" w dokumentacji zabezpieczeń w [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).</span><span class="sxs-lookup"><span data-stu-id="cd592-123">For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-124">Poniższy przykład kodu sprawdza tę właściwość, aby ustalić, czy żądanie zawiera prawidłowy certyfikat klienta.</span><span class="sxs-lookup"><span data-stu-id="cd592-124">The following code example checks this property to determine whether the request includes a valid client certificate.</span></span>  
  
 [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]
 [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cd592-125">Nie zainicjowano jeszcze certyfikatu klienta przez wywołanie do <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> lub <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> metody - lub - operacja jest w toku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods  -or -  The operation is still in progress.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding" Usage="System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-126">Pobiera kodowanie zawartości, która może być używany z danych wysłanych w żądaniu</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-126">Gets the content encoding that can be used with data sent with the request</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-127">
            <see cref="T:System.Text.Encoding" /> Obiektu odpowiednie do użycia z danymi w <see cref="P:System.Net.HttpListenerRequest.InputStream" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-127">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerRequest.InputStream" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-128"><xref:System.Text.Encoding> Obiekt może służyć do konwertowania sekwencji bajtów do zestawów znaków (stron kodowych) i znaki do sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="cd592-128">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span> <span data-ttu-id="cd592-129">Ta właściwość używa wartości charset z `Content-Type` nagłówka określić kodowania.</span><span class="sxs-lookup"><span data-stu-id="cd592-129">This property uses the charset value from the `Content-Type` header to determine the encoding.</span></span> <span data-ttu-id="cd592-130">Jeśli te informacje nie jest dostępny, ta właściwość zwraca <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd592-130">If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-131">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-131">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength64 : int64" Usage="System.Net.HttpListenerRequest.ContentLength64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-132">Pobiera długość treści dane zawarte w żądaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-132">Gets the length of the body data included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-133">Wartość w żądaniu <see langword="Content-Length" /> nagłówka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-133">The value from the request's <see langword="Content-Length" /> header.</span>
          </span>
          <span data-ttu-id="cd592-134">Ta wartość wynosi -1, jeśli długość treści nie jest znany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-134">This value is -1 if the content length is not known.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-135">`Content-Length` Nagłówka wyraża w bajtach długość danych treści towarzyszący żądaniu.</span><span class="sxs-lookup"><span data-stu-id="cd592-135">The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.</span></span>  
  
 <span data-ttu-id="cd592-136">Aby uzyskać pełną listę nagłówków żądań, zobacz <xref:System.Net.HttpRequestHeader> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cd592-136">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-137">Poniższy przykład kodu wykorzystuje <xref:System.Net.HttpListenerRequest.ContentLength64%2A> właściwości podczas przetwarzania danych treści.</span><span class="sxs-lookup"><span data-stu-id="cd592-137">The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Net.HttpListenerRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-138">Pobiera typ MIME treści dane zawarte w żądaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-138">Gets the MIME type of the body data included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-139">A <see cref="T:System.String" /> zawiera treść żądania <see langword="Content-Type" /> nagłówka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-139">A <see cref="T:System.String" /> that contains the text of the request's <see langword="Content-Type" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-140">Jeśli klienta zawiera treść danych w żądaniu, deklaruje typ poczty rozszerzenia MIME (Multipurpose Internet) danych treści w `Content-Type` nagłówka.</span><span class="sxs-lookup"><span data-stu-id="cd592-140">If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header.</span></span> <span data-ttu-id="cd592-141">Na przykład domyślny typ MIME danych zwracane z formularza sieci Web przy użyciu `POST` jest metoda `application/x-www-form-urlencoded`.</span><span class="sxs-lookup"><span data-stu-id="cd592-141">For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.</span></span>  
  
 <span data-ttu-id="cd592-142">Aby uzyskać pełną listę nagłówków żądań, zobacz <xref:System.Net.HttpRequestHeader> wyliczenie i RFC 2616 dostępne pod adresem [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="cd592-142">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="cd592-143"><xref:System.Net.HttpListenerRequest.ContentType%2A> Ma wartość null, gdy ma nie `Content-Type` nagłówka w żądaniu.</span><span class="sxs-lookup"><span data-stu-id="cd592-143">The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-144">Poniższy przykład kodu pokazuje, jak używać tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-144">The following code example demonstrates how to use this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Net.CookieCollection" Usage="System.Net.HttpListenerRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-145">Pobiera pliki cookie wysłanych w żądaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-145">Gets the cookies sent with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-146">A <see cref="T:System.Net.CookieCollection" /> zawierający pliki cookie, dołączone do żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-146">A <see cref="T:System.Net.CookieCollection" /> that contains cookies that accompany the request.</span>
          </span>
          <span data-ttu-id="cd592-147">Ta właściwość zwraca pustą kolekcję, jeśli żądanie nie zawiera plików cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-147">This property returns an empty collection if the request does not contain cookies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-148">Plik cookie jest dane tekstowe nazwa/wartość z serwera sieci Web, która jest przechowywana na komputerze lokalnym (klient).</span><span class="sxs-lookup"><span data-stu-id="cd592-148">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-149">Poniższy przykładowy kod przedstawia wartości plików cookie wysłanych w żądaniu.</span><span class="sxs-lookup"><span data-stu-id="cd592-149">The following code example displays the values of cookies sent with the request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="EndGetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetClientCertificate (asyncResult As IAsyncResult) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ EndGetClientCertificate(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetClientCertificate : IAsyncResult -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.EndGetClientCertificate asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="cd592-150">Oczekujące żądanie certyfikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-150">The pending request for the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cd592-151">Kończy żądanie asynchroniczne dla klienta X.509 v.3 certyfikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-151">Ends an asynchronous request for the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd592-152">
            <see cref="T:System.IAsyncResult" /> Obiekt, który jest zwracany, gdy operacja rozpoczęta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-152">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cd592-153">
            <paramref name="asyncResult" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-153">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cd592-154">
            <paramref name="asyncResult" /> nie uzyskano przez wywołanie metody <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-154">
              <paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cd592-155">Ta metoda już wywołano dla operacji identyfikowanych <paramref name="asyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-155">This method was already called for the operation identified by <paramref name="asyncResult" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificate () As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ GetClientCertificate();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.GetClientCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cd592-156">Pobiera certyfikat v.3 X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-156">Retrieves the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd592-157">A <see cref="N:System.Security.Cryptography.X509Certificates" /> obiekt, który zawiera certyfikat v.3 X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-157">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-158">Ta metoda umożliwia blokowanie do momentu pobrania certyfikatu.</span><span class="sxs-lookup"><span data-stu-id="cd592-158">This method blocks until the certificate is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cd592-159">Wywołanie tej metody można pobrać certyfikat v.3 X.509 klienta jest w toku i w związku z tym innym wywołaniu tej metody nie można dokonać korekty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-159">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span>
          </span>
        </exception>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificateAsync () As Task(Of X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ GetClientCertificateAsync();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificateAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="httpListenerRequest.GetClientCertificateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cd592-160">Pobiera certyfikat v.3 X.509 klienta jako operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-160">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cd592-161">Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-161">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="cd592-162">Obiekt zadania reprezentujący operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-162">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="cd592-163">
            <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="N:System.Security.Cryptography.X509Certificates" /> obiekt, który zawiera certyfikat v.3 X.509.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-163">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-164">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="cd592-164">This operation will not block.</span></span> <span data-ttu-id="cd592-165">Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po pobraniu certyfikatu.</span><span class="sxs-lookup"><span data-stu-id="cd592-165">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.</span></span>  
  
 <span data-ttu-id="cd592-166">Jeśli wywołanie tej metody można pobrać certyfikat v.3 X.509 klienta jest w toku, nie można wprowadzić inne wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="cd592-166">If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEntityBody { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEntityBody : bool" Usage="System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-167">Pobiera <see cref="T:System.Boolean" /> wartość, która wskazuje, czy żądanie jest skojarzony danych treści.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-167">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-168">
            <see langword="true" /> Jeśli żądanie ma skojarzone danych treści. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-168">
              <see langword="true" /> if the request has associated body data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-169">Żądania, który wysyła dane do serwera przy użyciu `POST` metody, na przykład powinien mieć treści jednostki.</span><span class="sxs-lookup"><span data-stu-id="cd592-169">A request that sends data to the server using the `POST` method, for example, should have an entity body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-170">Poniższy przykład kodu pokazuje, za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-170">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-171">Pobiera kolekcję par nazw i wartości nagłówka wysłanych w żądaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-171">Gets the collection of header name/value pairs sent in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-172">A <see cref="T:System.Net.WebHeaderCollection" /> zawiera nagłówki HTTP zawarte w żądaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-172">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers included in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-173">Nagłówki żądania zawierają informacje o metadanych.</span><span class="sxs-lookup"><span data-stu-id="cd592-173">Request headers contain metadata information.</span></span> <span data-ttu-id="cd592-174">Na przykład nagłówków może zawierać jednolity identyfikator zasobów (URI) zasobu określonego przez klienta do serwera, tożsamość agenta użytkownika zatrudnieni przez klienta i MIME dopuszczalne typy danych w treści odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="cd592-174">For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</span></span>  
  
 <span data-ttu-id="cd592-175">Aby uzyskać pełną listę nagłówków żądań, zobacz <xref:System.Net.HttpRequestHeader> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cd592-175">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-176">Poniższy przykładowy kod przedstawia wszystkie informacje w danym <xref:System.Net.WebHeaderCollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cd592-176">The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Net.HttpListenerRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-177">Pobiera metody HTTP określonej przez klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-177">Gets the HTTP method specified by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-178">A <see cref="T:System.String" /> zawiera metodę użytą w żądaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-178">A <see cref="T:System.String" /> that contains the method used in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-179">Metoda HTTP jest zwykle GET lub POST, w zależności od akcji żądanego przez klienta.</span><span class="sxs-lookup"><span data-stu-id="cd592-179">The HTTP method is typically GET or POST, depending on the action desired by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-180">Poniższy przykład kodu pokazuje, za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-180">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Net.HttpListenerRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-181">Pobiera strumień, który zawiera dane treści wysłane przez klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-181">Gets a stream that contains the body data sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-182">Czytelny <see cref="T:System.IO.Stream" /> obiekt, który zawiera bajtów wysłanych przez klienta w treści żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-182">A readable <see cref="T:System.IO.Stream" /> object that contains the bytes sent by the client in the body of the request.</span>
          </span>
          <span data-ttu-id="cd592-183">Ta właściwość zwraca <see cref="F:System.IO.Stream.Null" /> Jeśli żadne dane nie są wysyłane z żądaniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-183">This property returns <see cref="F:System.IO.Stream.Null" /> if no data is sent with the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-184">Jeśli klient przesyła dane (na przykład przy użyciu protokołu HTTP `POST` metodę), Strumień zwrócony przez tę metodę zawiera dane.</span><span class="sxs-lookup"><span data-stu-id="cd592-184">If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd592-185">Zamknięcie żądania nie zamknięcia Strumień zwrócony przez tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="cd592-185">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="cd592-186">Gdy strumień jest nie są już potrzebne, zamknij go przez wywołanie metody <xref:System.IO.Stream.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cd592-186">When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-187">Poniższy przykład kodu pokazuje, za pomocą tej właściwości można odczytać danych wysłanych z żądaniem.</span><span class="sxs-lookup"><span data-stu-id="cd592-187">The following code example demonstrates using this property to read the data sent with a request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="cd592-188">
            <para>Ten element członkowski generuje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji zobacz [sieci śledzenia .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-188">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns false")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-189">Pobiera <see cref="T:System.Boolean" /> wartość, która wskazuje, czy klient wysyła to żądanie jest uwierzytelniony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-189">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-190">
            <see langword="true" /> Jeśli klient został uwierzytelniony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-190">
              <see langword="true" /> if the client was authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-191">Aplikacja żądań klienta uwierzytelnianie przy użyciu <xref:System.Net.HttpListener.AuthenticationSchemes%2A> lub <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-191">Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="cd592-192">Aplikacja nie otrzyma <xref:System.Net.HttpListenerContext> żądania od klientów, którzy nie zostali pomyślnie uwierzytelnieni.</span><span class="sxs-lookup"><span data-stu-id="cd592-192">Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-193">Poniższy przykładowy kod przedstawia wartość <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-193">The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Net.HttpListenerRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-194">Pobiera <see cref="T:System.Boolean" /> wartość, która wskazuje, czy żądanie jest wysyłane z komputera lokalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-194">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-195">
            <see langword="true" /> Jeśli żądanie pochodzi na tym samym komputerze co <see cref="T:System.Net.HttpListener" /> obiektu dostarczonego żądania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-195">
              <see langword="true" /> if the request originated on the same computer as the <see cref="T:System.Net.HttpListener" /> object that provided the request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-196">Aplikacje mogą używać tej właściwości wykonywanie specjalnego przetwarzania, w przypadku żądań z komputera lokalnego.</span><span class="sxs-lookup"><span data-stu-id="cd592-196">Applications can use this property to perform special processing when requests are from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-197">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Net.HttpListenerRequest.IsLocal%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-197">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-198">Pobiera <see cref="T:System.Boolean" /> wartość, która wskazuje, czy połączenie TCP, używaną do wysyłania żądania przy użyciu protokołu Secure Sockets Layer (SSL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-198">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-199">
            <see langword="true" /> Jeśli połączenie TCP jest przy użyciu protokołu SSL; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-199">
              <see langword="true" /> if the TCP connection is using SSL; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-200">Aby poprosić o bezpiecznego połączenia, żądanie klienta używa <xref:System.Uri.UriSchemeHttps> zamiast <xref:System.Uri.UriSchemeHttp>.</span><span class="sxs-lookup"><span data-stu-id="cd592-200">To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>.</span></span> <span data-ttu-id="cd592-201">Jeśli nie można nawiązać połączenia przy użyciu protokołu SSL, klient odbierze <xref:System.Net.WebException> udostępniająca informacje o tym błędzie.</span><span class="sxs-lookup"><span data-stu-id="cd592-201">If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-202">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-202">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-203">Pobiera <see cref="T:System.Boolean" /> wartość, która wskazuje, czy połączenie TCP zostało żądanie protokołu WebSocket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-203">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-204">Zwraca <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-204">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="cd592-205">
            <see langword="true" /> Jeśli połączenie TCP jest żądaniem protokołu WebSocket; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-205">
              <see langword="true" /> if the TCP connection is a WebSocket request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool" Usage="System.Net.HttpListenerRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-206">Pobiera <see cref="T:System.Boolean" /> wartość, która wskazuje, czy klient żąda trwałe połączenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-206">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-207">
            <see langword="true" /> Jeśli połączenie należy zachować; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-207">
              <see langword="true" /> if the connection should be kept open; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-208">Jeśli klient HTTP i serwer powinien wymiany danych wielokrotnie w krótkim czasie, połączenie trwałe przyspiesza komunikację przez pozwalający na uniknięcie dodatkowych czynności wymaganych do otwierania i zamykania połączenia TCP dla każdego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="cd592-208">If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="cd592-209">Dla klientów korzystających z protokołu HTTP/1.1, wartością domyślną dla tej właściwości jest `true`.</span><span class="sxs-lookup"><span data-stu-id="cd592-209">For clients using HTTP/1.1, the default value for this property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-210">Poniższy przykład kodu pokazuje, za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-210">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ LocalEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-211">Pobierz adres IP i port numer do którego kierowane jest żądanie serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-211">Get the server IP address and port number to which the request is directed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-212">
            <see cref="T:System.Net.IPEndPoint" /> Reprezentujący adres IP, które żądania są wysyłane do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-212">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address that the request is sent to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-213">Ta właściwość jest przydatna, jeśli chcesz odpowiadać na żądania na podstawie sposobu ich są kierowane.</span><span class="sxs-lookup"><span data-stu-id="cd592-213">This property is useful when you want to respond to requests based on the way they are addressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-214">Poniższy przykład kodu pokazuje, za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-214">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-215">Pobiera wersję protokołu HTTP używanego przez klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-215">Gets the HTTP version used by the requesting client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-216">A <see cref="T:System.Version" /> identyfikujący wersję klienta HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-216">A <see cref="T:System.Version" /> that identifies the client's version of HTTP.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-217">Możliwości różnych wersji protokołu HTTP są określone w dokumentach dostępne pod adresem [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="cd592-217">The capabilities of different HTTP versions are specified in the documents available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-218">Poniższy przykład kodu pokazuje, za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-218">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-219">Pobiera ciąg zapytania w żądaniu uwzględniono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-219">Gets the query string included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-220">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> obiekt zawierający dane zapytania w żądaniu uwzględniono <see cref="P:System.Net.HttpListenerRequest.Url" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-220">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the query data included in the request <see cref="P:System.Net.HttpListenerRequest.Url" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-221">W adresie URL informacje o kwerendzie jest oddzielony od informacje o ścieżce znakiem zapytania (?).</span><span class="sxs-lookup"><span data-stu-id="cd592-221">In a URL, the query information is separated from the path information by a question mark (?).</span></span> <span data-ttu-id="cd592-222">Pary nazwa/wartość są oddzielone znakiem równości (=).</span><span class="sxs-lookup"><span data-stu-id="cd592-222">Name/value pairs are separated by an equals sign (=).</span></span> <span data-ttu-id="cd592-223">Uzyskiwanie dostępu do danych zapytania jako pojedynczy ciąg, Pobierz <xref:System.Uri.Query%2A> wartość właściwości z <xref:System.Uri> obiektu zwróconego przez <xref:System.Net.HttpListenerRequest.Url%2A>.</span><span class="sxs-lookup"><span data-stu-id="cd592-223">To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd592-224">Zapytania bez znaku równości (przykład: [ http://www.contoso.com/query.htm?Name ](http://www.contoso.com/query.htm?Name) ) są dodawane do `null` klucza w <xref:System.Collections.Specialized.NameValueCollection>.</span><span class="sxs-lookup"><span data-stu-id="cd592-224">Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-225">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Net.HttpListenerRequest.QueryString%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-225">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Net.HttpListenerRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-226">Pobiera informacje adresu URL (bez hosta i portu) żądanego przez klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-226">Gets the URL information (without the host and port) requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-227">A <see cref="T:System.String" /> zawierający nieprzetworzony adres URL dla tego żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-227">A <see cref="T:System.String" /> that contains the raw URL for this request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-228">Nieprzetworzony adres URL jest zdefiniowany jako część adresu URL następujące informacje o domenie.</span><span class="sxs-lookup"><span data-stu-id="cd592-228">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="cd592-229">W ciągu adresu URL `http://www.contoso.com/articles/recent.aspx`, nieprzetworzony adres URL jest `/articles/recent.aspx`.</span><span class="sxs-lookup"><span data-stu-id="cd592-229">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`.</span></span> <span data-ttu-id="cd592-230">Nieprzetworzony adres URL zawiera ciąg zapytania, jeśli jest obecny.</span><span class="sxs-lookup"><span data-stu-id="cd592-230">The raw URL includes the query string, if present.</span></span>  
  
 <span data-ttu-id="cd592-231">Aby uzyskać informacje na temat hosta i portu, użyj <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-231">To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-232">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Net.HttpListenerRequest.RawUrl%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-232">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ RemoteEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-233">Pobiera klienta IP adres i numer portu z której pochodzi żądanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-233">Gets the client IP address and port number from which the request originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-234">
            <see cref="T:System.Net.IPEndPoint" /> Reprezentujący adres IP i port numer z której pochodzi żądanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-234">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address and port number from which the request originated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd592-235">Poniższy przykład kodu pokazuje, za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-235">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestTraceIdentifier : Guid" Usage="System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns Guid.Empty")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-236">Pobiera identyfikator żądania przychodzące żądanie HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-236">Gets the request identifier of the incoming HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-237">A <see cref="T:System.Guid" /> obiekt, który zawiera identyfikator żądania HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-237">A <see cref="T:System.Guid" /> object that contains the identifier of the HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="System.Net.HttpListenerRequest.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-238">Pobiera dostawcę nazwy usługi (SPN) wysyłanej przez klienta w żądaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-238">Gets the Service Provider Name (SPN) that the client sent on the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-239">A <see cref="T:System.String" /> zawierający nazwę SPN wysłanych w żądaniu klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-239">A <see cref="T:System.String" /> that contains the SPN the client sent on the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-240">Aplikacja może użyć <xref:System.Net.HttpListenerRequest.ServiceName%2A> właściwości do wykonywania niestandardowego sprawdzania poprawności nazwy Podaj usługi (SPN).</span><span class="sxs-lookup"><span data-stu-id="cd592-240">An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.HttpListenerRequest.TransportContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-241">Pobiera <see cref="T:System.Net.TransportContext" /> dla żądania klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-241">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-242">A <see cref="T:System.Net.TransportContext" /> dla żądania klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-242">A <see cref="T:System.Net.TransportContext" /> object for the client request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-243"><xref:System.Net.TransportContext> Właściwości może służyć do pobierania token wiązania kanałów (CBT) dla <xref:System.Net.HttpListenerRequest> wysłania przy użyciu protokołu HTTPS.</span><span class="sxs-lookup"><span data-stu-id="cd592-243">The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.</span></span>  
  
 <span data-ttu-id="cd592-244">Aplikacja może użyć <xref:System.Net.TransportContext> właściwości, aby wykonać niestandardowe uwierzytelnianie przy użyciu wywołań natywnych Win32 [działanie funkcji AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) funkcji.</span><span class="sxs-lookup"><span data-stu-id="cd592-244">An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) function.</span></span>  
  
 <span data-ttu-id="cd592-245">Jeśli aplikacja próbuje pobrać token wiązania kanałów (CBT) to <xref:System.Net.HttpListenerRequest.TransportContext%2A> za pomocą właściwości <xref:System.Net.TransportContext.GetChannelBinding%2A> — metoda i <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> nie jest <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, a następnie <xref:System.Net.HttpListenerRequest> zgłosi <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="cd592-245">If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="cd592-246"><xref:System.Net.HttpListenerRequest> Zastępuje <xref:System.Net.TransportContext.GetChannelBinding%2A> metody za pomocą wewnętrznej implementacji.</span><span class="sxs-lookup"><span data-stu-id="cd592-246">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.ServiceName" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Net.HttpListenerRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-247">Pobiera <see cref="T:System.Uri" /> obiektu żądanego przez klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-247">Gets the <see cref="T:System.Uri" /> object requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-248">A <see cref="T:System.Uri" /> obiekt, który identyfikuje zasób żądanego przez klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-248">A <see cref="T:System.Uri" /> object that identifies the resource requested by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-249"><xref:System.Net.HttpListenerRequest.Url%2A> Właściwości umożliwia uzyskiwanie informacji dostępnych w <xref:System.Uri> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cd592-249">The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object.</span></span> <span data-ttu-id="cd592-250">Jeśli musisz wiedzieć nieprzetworzony tekst żądanie identyfikatora URI, należy rozważyć użycie <xref:System.Net.HttpListenerRequest.RawUrl%2A> właściwości zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="cd592-250">If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.</span></span>  
  
 <span data-ttu-id="cd592-251"><xref:System.Net.HttpListenerRequest.Url%2A> Właściwość ma wartość null Jeśli <xref:System.Uri> z klienta nie można przeanalizować.</span><span class="sxs-lookup"><span data-stu-id="cd592-251">The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.</span></span>  
  
 <span data-ttu-id="cd592-252"><xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> Właściwość wskazuje, czy <xref:System.Net.HttpListener> używa raw URI niezmienionym znaczeniu zamiast przekonwertowanego identyfikatora URI, gdzie wartości procent, kodowane są konwertowane, i są pobierane z procedurą normalizacji.</span><span class="sxs-lookup"><span data-stu-id="cd592-252">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="cd592-253">Gdy <xref:System.Net.HttpListener> wystąpienia odbiera żądanie za pośrednictwem `http.sys` usługi, tworzy wystąpienie ciągu identyfikatora URI dostarczonych przez `http.sys`i uwidacznia go jako <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-253">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="cd592-254">`http.sys` Usługi udostępnia dwa ciągi identyfikatora URI żądania:</span><span class="sxs-lookup"><span data-stu-id="cd592-254">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="cd592-255">Nieprzetworzona identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="cd592-255">Raw URI</span></span>  
  
-   <span data-ttu-id="cd592-256">Przekonwertowana identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="cd592-256">Converted URI</span></span>  
  
 <span data-ttu-id="cd592-257">Nieprzetworzona identyfikator URI jest <xref:System.Uri?displayProperty=nameWithType> dostępne w wierszu żądania HTTP żądania:</span><span class="sxs-lookup"><span data-stu-id="cd592-257">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="cd592-258">Nieprzetworzone udostępniane przez identyfikator URI `http.sys` dla żądania wymienionych powyżej, jest "/ path /".</span><span class="sxs-lookup"><span data-stu-id="cd592-258">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="cd592-259">Reprezentuje ciąg następujący zlecenie HTTP, jak została wysłana przez sieć.</span><span class="sxs-lookup"><span data-stu-id="cd592-259">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="cd592-260">`http.sys` Usługi tworzy przekonwertowanego identyfikatora URI na podstawie informacji dostępnych w żądaniu przy użyciu identyfikatora URI, dostępne w wierszu żądania HTTP i powinny zostać przekazane nagłówek hosta, aby określić serwer pochodzenia żądania.</span><span class="sxs-lookup"><span data-stu-id="cd592-260">The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="cd592-261">Jest to realizowane przez porównanie informacji z żądania z zestawem zarejestrowanych prefiksów identyfikatorów URI.</span><span class="sxs-lookup"><span data-stu-id="cd592-261">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="cd592-262">Aby można było porównać wartości, należy jednak wykonać niektóre normalizacji na żądanie.</span><span class="sxs-lookup"><span data-stu-id="cd592-262">In order to be able to compare those values, some normalization to the request needs to be done.</span></span> <span data-ttu-id="cd592-263">Dla przykładu powyżej przekonwertowanego identyfikator URI będzie w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="cd592-263">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="cd592-264">`http.sys` Usługi łączy <xref:System.Uri.Host%2A?displayProperty=nameWithType> wartość właściwości i ciąg w wierszu żądania do utworzenia przekonwertowanego identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="cd592-264">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="cd592-265">Ponadto `http.sys` i <xref:System.Uri?displayProperty=nameWithType> klasy również wykonać następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="cd592-265">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="cd592-266">Wyrejestruj specjalne procent wszystkich wartości zakodowany.</span><span class="sxs-lookup"><span data-stu-id="cd592-266">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="cd592-267">Konwertuje procent, kodowane znaki spoza zestawu ASCII w reprezentacji znaków UTF-16.</span><span class="sxs-lookup"><span data-stu-id="cd592-267">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="cd592-268">Należy pamiętać, że oraz znaków Unicode (kodowanie Unicode w formacie % uXXXX) są obsługiwane znaki UTF-8 i ANSI/zestawów znaków Dwubajtowych.</span><span class="sxs-lookup"><span data-stu-id="cd592-268">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="cd592-269">Wykonuje inne czynności normalizacji, takie jak ścieżka kompresji.</span><span class="sxs-lookup"><span data-stu-id="cd592-269">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="cd592-270">Ponieważ żądanie nie zawiera żadnych informacji o kodowanie używane z algorytmem procent wartości, nie może być określić poprawne kodowanie właśnie, analizując kodowany w formacie procent wartości.</span><span class="sxs-lookup"><span data-stu-id="cd592-270">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="cd592-271">W związku z tym `http.sys` zawiera dwa klucze rejestru do modyfikowania proces:</span><span class="sxs-lookup"><span data-stu-id="cd592-271">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="cd592-272">Klucz rejestru</span><span class="sxs-lookup"><span data-stu-id="cd592-272">Registry Key</span></span>|<span data-ttu-id="cd592-273">Wartość domyślna</span><span class="sxs-lookup"><span data-stu-id="cd592-273">Default Value</span></span>|<span data-ttu-id="cd592-274">Opis</span><span class="sxs-lookup"><span data-stu-id="cd592-274">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="cd592-275">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="cd592-275">EnableNonUTF8</span></span>|<span data-ttu-id="cd592-276">1</span><span class="sxs-lookup"><span data-stu-id="cd592-276">1</span></span>|<span data-ttu-id="cd592-277">Jeśli zero, `http.sys` akceptuje tylko adresy URL algorytmem UTF-8.</span><span class="sxs-lookup"><span data-stu-id="cd592-277">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="cd592-278">Jeśli niezerową, `http.sys` również akceptuje kodowaniu ANSI lub kodowany w formacie DBCS adresów URL w żądaniach.</span><span class="sxs-lookup"><span data-stu-id="cd592-278">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="cd592-279">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="cd592-279">FavorUTF8</span></span>|<span data-ttu-id="cd592-280">1</span><span class="sxs-lookup"><span data-stu-id="cd592-280">1</span></span>|<span data-ttu-id="cd592-281">Jeśli niezerową, `http.sys` zawsze próbuje dekodowanie adresu URL jako UTF-8 najpierw; Jeśli tej konwersji nie powiedzie się i EnableNonUTF8 jest różna od zera, sterownik Http.sys, a następnie próbuje zdekodować kodowaniu ANSI lub zestawów znaków Dwubajtowych.</span><span class="sxs-lookup"><span data-stu-id="cd592-281">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="cd592-282">Jeśli zero (i EnableNonUTF8 jest różna od zera) `http.sys` podejmuje próbę zdekodowania kodowaniu ANSI lub DBCS; Jeśli się nie powiedzie, próby konwersji UTF-8.</span><span class="sxs-lookup"><span data-stu-id="cd592-282">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="cd592-283">Gdy <xref:System.Net.HttpListener> odbiera żądanie, używa przekonwertowanego identyfikatora URI z `http.sys` jako wejściowych do <xref:System.Net.HttpListenerRequest.Url%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-283">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="cd592-284">Istnieje potrzeba do obsługi znaki oprócz znaków i liczb w identyfikatorów URI.</span><span class="sxs-lookup"><span data-stu-id="cd592-284">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="cd592-285">Przykładem jest następujący identyfikator URI, który służy do pobierania informacji klienta dla klienta numer "1/3812":</span><span class="sxs-lookup"><span data-stu-id="cd592-285">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="cd592-286">Należy zwrócić uwagę ukośnika procent, kodowane w identyfikatorze Uri (% 2F).</span><span class="sxs-lookup"><span data-stu-id="cd592-286">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="cd592-287">Jest to konieczne, ponieważ w takim przypadku znaku ukośnika reprezentuje danych i nie ogranicznik ścieżki.</span><span class="sxs-lookup"><span data-stu-id="cd592-287">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="cd592-288">Przekazywanie ciągu identyfikatora Uri konstruktora doprowadzi do następującego identyfikatora URI:</span><span class="sxs-lookup"><span data-stu-id="cd592-288">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="cd592-289">Dzielenie na jego segmenty ścieżki spowoduje następujące elementy:</span><span class="sxs-lookup"><span data-stu-id="cd592-289">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="cd592-290">To nie jest celem nadawca żądania.</span><span class="sxs-lookup"><span data-stu-id="cd592-290">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="cd592-291">Jeśli <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> właściwość jest ustawiona na wartość false, a następnie po <xref:System.Net.HttpListener> odbiera żądanie, używa raw URI zamiast przekonwertowanego identyfikatora URI z `http.sys` jako wejściowych do <xref:System.Net.HttpListenerRequest.Url%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-291">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-292">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Net.HttpListenerRequest.Url%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-292">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-293">Pobiera jednolity identyfikator zasobów (URI) zasobu określonego przez klienta do serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-293">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-294">A <see cref="T:System.Uri" /> obiekt, który zawiera treść żądania <see cref="F:System.Net.HttpRequestHeader.Referer" /> nagłówka, lub <see langword="null" /> Jeśli nagłówek nie został uwzględniony w żądaniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-294">A <see cref="T:System.Uri" /> object that contains the text of the request's <see cref="F:System.Net.HttpRequestHeader.Referer" /> header, or <see langword="null" /> if the header was not included in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-295">Jeśli klient ma wykonane hiperłącza do żądanego identyfikatora URI, żądania mogą zawierać `Referrer` nagłówek, który identyfikuje identyfikator URI zasobu, który zawiera hiperłącza.</span><span class="sxs-lookup"><span data-stu-id="cd592-295">If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.</span></span>  
  
 <span data-ttu-id="cd592-296">Klienci mogą fałszowanie lub wybierz nie przedstawić <xref:System.Net.HttpRequestHeader.Referer> nagłówka.</span><span class="sxs-lookup"><span data-stu-id="cd592-296">Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header.</span></span> <span data-ttu-id="cd592-297">W związku z tym podczas <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> właściwość może być przydatny do identyfikowania podstawowe trendy w ruchu w sieci Web; nie należy używać go jako część schematu autoryzacji do kontrolowania dostępu do danych.</span><span class="sxs-lookup"><span data-stu-id="cd592-297">Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</span></span>  
  
 <span data-ttu-id="cd592-298">Aby uzyskać pełną listę nagłówków żądań, zobacz <xref:System.Net.HttpRequestHeader> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cd592-298">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="cd592-299"><xref:System.Net.HttpListenerRequest.UrlReferrer%2A> Ma wartość null, gdy istnieje nie `Referrer` nagłówka w żądaniu lub gdy `Referrer` nagłówka jest obecny w żądaniu, ale nie analizuje do prawidłowej <xref:System.Uri>.</span><span class="sxs-lookup"><span data-stu-id="cd592-299">The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-300">Poniższy przykład kodu pokazuje, za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-300">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Net.HttpListenerRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-301">Pobiera agenta użytkownika przedstawione przez klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-301">Gets the user agent presented by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-302">A <see cref="T:System.String" /> obiekt, który zawiera treść żądania <see langword="User-Agent" /> nagłówka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-302">A <see cref="T:System.String" /> object that contains the text of the request's <see langword="User-Agent" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-303">`User-Agent` Nagłówka zwykle zawiera tekst, który określa nazwę i wersję liczbę oprogramowania służącego do generowania żądania.</span><span class="sxs-lookup"><span data-stu-id="cd592-303">The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.</span></span>  
  
 <span data-ttu-id="cd592-304">Aby uzyskać pełną listę nagłówków żądań, zobacz <xref:System.Net.HttpRequestHeader> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cd592-304">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="cd592-305"><xref:System.Net.HttpListenerRequest.UserAgent%2A> Ma wartość null, gdy ma nie `User-Agent` nagłówka w żądaniu.</span><span class="sxs-lookup"><span data-stu-id="cd592-305">The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-306">Poniższy przykład kodu pokazuje, za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-306">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-307">Pobiera adres IP i port numer do którego kierowane jest żądanie serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-307">Gets the server IP address and port number to which the request is directed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-308">A <see cref="T:System.String" /> zawierający informacje o adresie hosta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-308">A <see cref="T:System.String" /> that contains the host address information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-309">Informacje zwracane przez tę właściwość jest również dostępna w <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-309">The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-310">Poniższy przykładowy kod przedstawia wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-310">The following code example displays the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Net.HttpListenerRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-311">Pobiera nazwę DNS i, jeśli zostanie podana, numer portu określony przez klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-311">Gets the DNS name and, if provided, the port number specified by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-312">A <see cref="T:System.String" /> wartości, która zawiera treść żądania <see langword="Host" /> nagłówka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-312">A <see cref="T:System.String" /> value that contains the text of the request's <see langword="Host" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-313">`Host` Nagłówek zawiera nazwę hosta żądanej serwera i numer portu, jeśli jest określony, oddzielone dwukropkiem (na przykład `www.contoso.com:8080`).</span><span class="sxs-lookup"><span data-stu-id="cd592-313">The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).</span></span>  
  
 <span data-ttu-id="cd592-314">Ta właściwość służy do zwracania odpowiedzi różne w zależności od nazwy hosta określonej w żądaniu.</span><span class="sxs-lookup"><span data-stu-id="cd592-314">You can use this property to return different responses depending on the host name specified in the request.</span></span>  
  
 <span data-ttu-id="cd592-315">Aby uzyskać pełną listę nagłówków żądań, zobacz <xref:System.Net.HttpRequestHeader> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cd592-315">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-316">Poniższy przykład kodu pokazuje, za pomocą tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="cd592-316">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Net.HttpListenerRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd592-317">Pobiera języków naturalnych, które są preferowane dla odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-317">Gets the natural languages that are preferred for the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cd592-318">A <see cref="T:System.String" /> tablica zawierająca języków określony w żądaniu <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> nagłówka lub <see langword="null" /> Jeśli żądanie klienta nie zawiera <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> nagłówka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd592-318">A <see cref="T:System.String" /> array that contains the languages specified in the request's <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header or <see langword="null" /> if the client request did not include an <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd592-319">Aby uzyskać szczegółowy opis `Accept-Language` nagłówka, w sekcji RFC 2616 14.4 dostępne pod adresem [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="cd592-319">For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="cd592-320">Aby uzyskać pełną listę nagłówków żądań, zobacz <xref:System.Net.HttpRequestHeader> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="cd592-320">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd592-321">Poniższy przykładowy kod przedstawia językach w żądaniu `Accept-Language` nagłówka.</span><span class="sxs-lookup"><span data-stu-id="cd592-321">The following code example displays the languages from the request's `Accept-Language` header.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
  </Members>
</Type>