<Type Name="AuthenticationManager" FullName="System.Net.AuthenticationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e67a61d7b6d755a7950fce66a902c7ae50c0b34" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69092461" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.AuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationManager" />
  <TypeSignature Language="F#" Value="type AuthenticationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zarządza modułami uwierzytelniania wywoływanymi podczas procesu uwierzytelniania klienta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager>jest klasą statyczną, która zarządza modułami uwierzytelniania, które są używane przez aplikację. Gdy żądanie jest wysyłane do chronionych zasobów, <xref:System.Net.AuthenticationManager> wywołuje metodę, <xref:System.Net.AuthenticationManager.Authenticate%2A> Aby uzyskać <xref:System.Net.Authorization> wystąpienie do użycia w kolejnych żądaniach.  
  
 Wysyła zapytanie do każdego zarejestrowanego modułu uwierzytelniania <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> przez wywołanie metody dla każdego modułu. <xref:System.Net.AuthenticationManager> Pierwszy moduł uwierzytelniania do zwrócenia <xref:System.Net.Authorization> wystąpienia jest używany do uwierzytelniania żądania.  
  
 Moduły, które zapewniają typy uwierzytelniania Basic, Digest, Negotiate, NTLM i Kerberos, są domyślnie zarejestrowane przy <xref:System.Net.AuthenticationManager> użyciu usługi. Dodatkowe moduły uwierzytelniania implementujące <xref:System.Net.IAuthenticationModule> interfejs można dodać <xref:System.Net.AuthenticationManager.Register%2A> przy użyciu metody. Moduły uwierzytelniania są wywoływane w kolejności, w jakiej zostały dodane do listy.  
  
> [!NOTE]
>  Typ uwierzytelniania Kerberos i Negotiate nie jest obsługiwany w systemie Windows 95/98 lub Windows NT 4,0.  
  
   
  
## Examples  
 [!code-cpp[System.Net.Authentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#1)]
 [!code-csharp[System.Net.Authentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#1)]
 [!code-vb[System.Net.Authentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a">Zmiany w uwierzytelnianiu NTLM dla HTTPWebRequest w wersji 3,5 SP1</related>
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.Authenticate (challenge, request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge">Wyzwanie zwrócone przez zasób internetowy.</param>
        <param name="request"><see cref="T:System.Net.WebRequest" /> , Który zainicjował wyzwanie uwierzytelniania.</param>
        <param name="credentials"><see cref="T:System.Net.ICredentials" /> Skojarzone z tym żądaniem.</param>
        <summary>Wywołuje każdy zarejestrowany moduł uwierzytelniania, aby znaleźć pierwszy moduł, który może odpowiedzieć na żądanie uwierzytelnienia.</summary>
        <returns>Wystąpienie <see cref="T:System.Net.Authorization" /> klasy zawierające wynik próby autoryzacji. Jeśli nie ma modułu uwierzytelniania do odpowiedzi na wyzwanie, Metoda ta zwraca wartość <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje metodę dla każdego zarejestrowanego modułu uwierzytelniania do momentu, w którym jeden z <xref:System.Net.Authorization> modułów odpowie z wystąpieniem. <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> <xref:System.Net.AuthenticationManager.Authenticate%2A>  
  
 Pierwsze <xref:System.Net.Authorization> zwrócone wystąpienie służy do uwierzytelniania żądania. Jeśli żaden moduł uwierzytelniania nie może uwierzytelnić żądania, <xref:System.Net.AuthenticationManager.Authenticate%2A> Metoda zwraca `null`.  
  
 Moduły uwierzytelniania są wywoływane w kolejności, w której są zarejestrowane w usłudze <xref:System.Net.AuthenticationManager>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="challenge" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="request" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="credentials" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CredentialPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentialPolicy CredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CredentialPolicy As ICredentialPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentialPolicy ^ CredentialPolicy { System::Net::ICredentialPolicy ^ get(); void set(System::Net::ICredentialPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CredentialPolicy : System.Net.ICredentialPolicy with get, set" Usage="System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zasady poświadczeń, które mają być używane dla żądań zasobów wykonywanych <see cref="T:System.Net.HttpWebRequest" /> przy użyciu klasy.</summary>
        <value>Obiekt, który implementuje <see cref="T:System.Net.ICredentialPolicy" /> interfejs, który określa, czy poświadczenia są wysyłane z żądaniami. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zasady poświadczeń określają, czy należy wysyłać poświadczenia podczas wysyłania żądania dla zasobu sieciowego, takiego jak zawartość strony sieci Web. Jeśli są wysyłane poświadczenia, serwery, które wymagają uwierzytelniania klienta, mogą próbować uwierzytelniać klienta po odebraniu żądania, zamiast wysyłać odpowiedzi wskazujące, że wymagane są poświadczenia klienta. Podczas gdy ta usługa jest zapisywana w postaci okrężnej na serwerze, należy ją równoważyć zagrożeniu bezpieczeństwa związanym z wysyłaniem poświadczeń w sieci. Gdy serwer docelowy nie wymaga uwierzytelniania klienta, najlepiej nie wysyłaj poświadczeń.  
  
 Zasady poświadczeń są wywoływane tylko w przypadku żądań, które określają poświadczenia, lub używają <xref:System.Net.WebProxy> obiektu, który określa poświadczenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie zasad poświadczeń.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomTargetNameDictionary">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.StringDictionary CustomTargetNameDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CustomTargetNameDictionary As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::StringDictionary ^ CustomTargetNameDictionary { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomTargetNameDictionary : System.Collections.Specialized.StringDictionary" Usage="System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik zawierający główne nazwy usług (SPN), które są używane do identyfikowania hostów podczas uwierzytelniania przy użyciu protokołu Kerberos dla <see cref="T:System.Net.WebRequest" /> żądań wysyłanych za pomocą i ich klas pochodnych.</summary>
        <value>Zapis <see cref="T:System.Collections.Specialized.StringDictionary" /> zawierający wartości nazw SPN dla kluczy składających się z informacji o hoście.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPN to nazwa, za pomocą której klient jednoznacznie identyfikuje wystąpienie usługi lub aplikacji na serwerze na potrzeby wzajemnego uwierzytelniania. Uwierzytelnianie wzajemne jest wymagane domyślnie i można je wymagać przez ustawienie <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType> <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> w żądaniu.  
  
 Gdy wymagane <xref:System.Net.WebRequest> jest uwierzytelnianie wzajemne, Nazwa SPN dla miejsca docelowego musi być dostarczana przez klienta. Jeśli znasz nazwę SPN, możesz ją dodać do <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> przed wysłaniem żądania. Jeśli nie dodano informacji o SPN do tego słownika, <xref:System.Net.AuthenticationManager> <xref:System.Net.WebRequest.RequestUri%2A> używa metody do redagowania najbardziej prawdopodobną nazwę SPN, jednak jest to obliczona wartość i może być niepoprawna. Jeśli zostanie podjęta próba wzajemnego uwierzytelniania i nie powiedzie się, możesz sprawdzić słownik, aby określić obliczoną nazwę SPN. Jeśli protokół uwierzytelniania nie obsługuje wzajemnego uwierzytelniania, żadna nazwa SPN nie została wprowadzona do słownika.  
  
 Aby dodać wartość SPN do tego słownika, użyj <xref:System.Uri.AbsoluteUri%2A> <xref:System.Net.WebRequest.RequestUri%2A> jako klucza. Wewnętrznie klucz jest obcinany w celu uwzględnienia <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>i <xref:System.Uri.Port%2A> , jeśli nie jest portem domyślnym.  
  
> [!NOTE]
>  Dostęp do metod i właściwości <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> wymaga nieograniczonego. <xref:System.Net.WebPermission>  
  
> [!NOTE]
>  Gdy uwierzytelnianie Kerberos odbywa się za pośrednictwem serwera proxy, należy rozpoznać zarówno serwer proxy, jak i ostateczną nazwę hosta do nazwy SPN. Rozpoznawanie nazw serwera proxy jest chronione przez przekroczenie limitu czasu. Rozpoznanie nazwy hosta Ultimate do nazwy SPN wymaga wyszukiwania DNS, a nie ma limitu czasu skojarzonego bezpośrednio z tą operacją. W związku z tym operacje synchroniczne mogą trwać dłużej. Aby to rozwiązać, Dodaj prefiks identyfikatora URI ostatecznego hosta do pamięci podręcznej SPN przed przekazaniem do niej żądań.  
  
 Wersja 3,5 SP1 teraz domyślnie określa nazwę hosta używaną w adresie URL żądania w nazwie SPN w wymianie uwierzytelniania NTLM (NT LAN Manager), gdy <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> właściwość nie jest ustawiona. Nazwa hosta użyta w adresie URL żądania może się różnić od nagłówka hosta określonego w <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType> żądaniu klienta. Nazwa hosta użyta w adresie URL żądania może różnić się od rzeczywistej nazwy hosta serwera, nazwy komputera serwera, adresu IP komputera lub adresu sprzężenia zwrotnego. W takich przypadkach w systemie Windows żądanie uwierzytelnienia nie powiedzie się. Aby rozwiązać ten problem, może być konieczne powiadomienie systemu Windows o nazwie hosta używanej w adresie URL żądania w żądaniu klienta (na przykład "contoso") jest alternatywną nazwą komputera lokalnego.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wyświetlanie zawartości <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>.  
  
 [!code-cpp[NclCredPolicy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#5)]
 [!code-csharp[NclCredPolicy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a">Zmiany w uwierzytelnianiu NTLM dla HTTPWebRequest w wersji 3,5 SP1</related>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member PreAuthenticate : System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.PreAuthenticate (request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.Net.WebRequest" /> Do zasobu internetowego.</param>
        <param name="credentials"><see cref="T:System.Net.ICredentials" /> Skojarzone z żądaniem.</param>
        <summary>Wstępnie uwierzytelnia żądanie.</summary>
        <returns>Wystąpienie <see cref="T:System.Net.Authorization" /> klasy, <see langword="null" />Jeśli żądanie może być preuwierzytelniane; w przeciwnym razie. Jeśli <paramref name="credentials" /> <see langword="null" />jest <see langword="null" />, ta metoda zwraca.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli moduł uwierzytelniania może wstępnie uwierzytelnić żądanie, <xref:System.Net.AuthenticationManager.PreAuthenticate%2A> Metoda zwraca wystąpienie uwierzytelniania i wysyła informacje o autoryzacji do serwera zapobiegawczo zamiast czekać, aż zasób wystawia wyzwanie. Takie zachowanie opisano w sekcji 3,3 specyfikacji RFC 2617 (uwierzytelnianie HTTP: Uwierzytelnianie dostępu podstawowego i szyfrowanego). Moduły uwierzytelniania obsługujące wstępne uwierzytelnianie umożliwiają klientom zwiększenie wydajności serwera, unikając dodatkowych podróży spowodowanych wyzwaniami związanymi z uwierzytelnianiem.  
  
 Moduły autoryzacji, które mogą wstępnie uwierzytelniać żądania <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType> , ustawiają `true`właściwość na.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Register : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Register authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule"><see cref="T:System.Net.IAuthenticationModule" /> Do zarejestrowania się w Menedżerze uwierzytelniania.</param>
        <summary>Rejestruje moduł uwierzytelniania przy użyciu Menedżera uwierzytelniania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda dodaje moduły uwierzytelniania na końcu listy modułów wywoływanych <xref:System.Net.AuthenticationManager.Authenticate%2A> przez metodę. <xref:System.Net.AuthenticationManager.Register%2A> Moduły uwierzytelniania są wywoływane w kolejności, w jakiej zostały dodane do listy. Jeśli moduł o tej samej <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> jest już zarejestrowany, ta metoda usuwa zarejestrowany moduł i dodaje `authenticationModule` na końcu listy.  
  
   
  
## Examples  
 Poniższy przykład rejestruje moduł uwierzytelniania przy użyciu Menedżera uwierzytelniania. Aby uzyskać kompletny przykład, zapoznaj się <xref:System.Net.AuthenticationManager> z klasą.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="authenticationModule" />jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wykonywania kodu niezarządzanego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="RegisteredModules">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator RegisteredModules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerator RegisteredModules" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.RegisteredModules" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RegisteredModules As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerator ^ RegisteredModules { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegisteredModules : System.Collections.IEnumerator" Usage="System.Net.AuthenticationManager.RegisteredModules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę modułów uwierzytelniania, które są zarejestrowane w Menedżerze uwierzytelniania.</summary>
        <value><see cref="T:System.Collections.IEnumerator" /> Umożliwia odczytywanie zarejestrowanych modułów uwierzytelniania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.RegisteredModules%2A> Właściwość<xref:System.Collections.IEnumerator> zawiera wystąpienie, które umożliwia odczytywanie listy zarejestrowanych modułów uwierzytelniania. Metoda dodaje moduły do listy, <xref:System.Net.AuthenticationManager.Unregister%2A> a metoda usuwa z niej moduły. <xref:System.Net.AuthenticationManager.Register%2A>  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Net.AuthenticationManager.RegisteredModules%2A> właściwość w celu uzyskania listy modułów uwierzytelniania zarejestrowanych w Menedżerze uwierzytelniania. Aby uzyskać kompletny przykład, zapoznaj się <xref:System.Net.AuthenticationManager> z klasą.  
  
 [!code-cpp[System.Net.Authentication#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#8)]
 [!code-csharp[System.Net.Authentication#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#8)]
 [!code-vb[System.Net.Authentication#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unregister">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa moduły uwierzytelniania z listy zarejestrowanych modułów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Unregister : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule"><see cref="T:System.Net.IAuthenticationModule" /> Do usunięcia z listy zarejestrowanych modułów.</param>
        <summary>Usuwa określony moduł uwierzytelniania z listy zarejestrowanych modułów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda usuwa określony moduł uwierzytelniania z listy modułów uwierzytelniania wywoływanych <xref:System.Net.AuthenticationManager.Authenticate%2A> przez metodę. <xref:System.Net.AuthenticationManager.Unregister%2A> Moduł musiał zostać dodany do listy przy użyciu metody, <xref:System.Net.AuthenticationManager.Register%2A> aby można było go usunąć z listy.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Net.AuthenticationManager.Unregister%2A> metodę usuwania określonego modułu uwierzytelniania z listy zarejestrowanych modułów. Aby uzyskać kompletny przykład, zapoznaj się <xref:System.Net.AuthenticationManager> z klasą.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="authenticationModule" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Określony <see cref="T:System.Net.IAuthenticationModule" /> nie jest zarejestrowany.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wykonywania kodu niezarządzanego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationScheme As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ authenticationScheme);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationScheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationScheme">Schemat uwierzytelniania modułu do usunięcia.</param>
        <summary>Usuwa moduły uwierzytelniania z określonym schematem uwierzytelniania z listy zarejestrowanych modułów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda usuwa moduł uwierzytelniania z określonym schematem uwierzytelniania z listy modułów uwierzytelniania wywoływanych <xref:System.Net.AuthenticationManager.Authenticate%2A> przez metodę. <xref:System.Net.AuthenticationManager.Unregister%2A> Moduł musiał zostać dodany do listy przy użyciu metody, <xref:System.Net.AuthenticationManager.Register%2A> aby można było go usunąć z listy.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Net.AuthenticationManager.Unregister%2A> metodę usuwania modułu uwierzytelniania z określonym schematem uwierzytelniania z listy zarejestrowanych modułów.  
  
 [!code-cpp[AuthenticationManager_UnRegister2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CPP/authenticationmanager_unregister2.cpp#2)]
 [!code-csharp[AuthenticationManager_UnRegister2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CS/authenticationmanager_unregister2.cs#2)]
 [!code-vb[AuthenticationManager_UnRegister2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/VB/authenticationmanager_unregister2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="authenticationScheme" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Moduł dla tego schematu uwierzytelniania nie jest zarejestrowany.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wykonywania kodu niezarządzanego. Powiązane wartość typu wyliczeniowego: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>
