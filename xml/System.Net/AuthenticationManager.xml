<Type Name="AuthenticationManager" FullName="System.Net.AuthenticationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6557aa33b5dbcbdad923774777f049037478e1e6" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39959111" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthenticationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.AuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationManager" />
  <TypeSignature Language="F#" Value="type AuthenticationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zarządza modułami uwierzytelniania wywołanymi podczas procesu uwierzytelniania klienta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager> jest klasą statyczną, która zarządza modułami uwierzytelniania, których używa aplikacja. Po wysłaniu żądania do zasobów chronionych, <xref:System.Net.AuthenticationManager> wywołania <xref:System.Net.AuthenticationManager.Authenticate%2A> metodę, aby uzyskać <xref:System.Net.Authorization> wystąpienia do użycia w kolejnych żądań.  
  
 <xref:System.Net.AuthenticationManager> Odpytuje każdy moduł uwierzytelniania zarejestrowanego przez wywołanie metody <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> metody dla każdego modułu. Pierwszy moduł uwierzytelniania do zwrócenia <xref:System.Net.Authorization> wystąpienie jest używane do uwierzytelnienia żądania.  
  
 Moduły, które zapewniają podstawowe, szyfrowane negocjowania NTLM, a typy uwierzytelniania Kerberos są zarejestrowane w usłudze <xref:System.Net.AuthenticationManager> domyślnie. Dodatkowe uwierzytelnianie modułów, które implementują <xref:System.Net.IAuthenticationModule> interfejsu można dodać za pomocą <xref:System.Net.AuthenticationManager.Register%2A> metody. Moduły uwierzytelniania są wywoływane w kolejności, w jakiej zostały dodane do listy.  
  
> [!NOTE]
>  Protokołu Kerberos i negocjowanie typ uwierzytelniania nie jest obsługiwany w Windows 95/98 lub Windows NT 4.0.  
  
   
  
## Examples  
 [!code-cpp[System.Net.Authentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#1)]
 [!code-csharp[System.Net.Authentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#1)]
 [!code-vb[System.Net.Authentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.Authenticate (challenge, request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge">Wyzwanie, zwracany przez Internet.</param>
        <param name="request">
          <see cref="T:System.Net.WebRequest" /> Który zainicjował żądanie uwierzytelnienia.</param>
        <param name="credentials">
          <see cref="T:System.Net.ICredentials" /> Skojarzony z tym żądaniem.</param>
        <summary>Wywołuje każdy moduł zarejestrowanych uwierzytelniania można znaleźć pierwszego modułu, który może reagować na żądania uwierzytelnienia.</summary>
        <returns>Wystąpienie <see cref="T:System.Net.Authorization" /> klasa zawierająca wynikiem próby autoryzacji. Czy moduł uwierzytelniania, nie odpowiada na żądania, Metoda ta zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Authenticate%2A> Wywołania metody <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> metody na każdy moduł uwierzytelniania zarejestrowanych, dopóki jeden moduł odpowiada za pomocą <xref:System.Net.Authorization> wystąpienia.  
  
 Pierwszy <xref:System.Net.Authorization> zwrócone wystąpienie jest używane do uwierzytelnienia żądania. Jeśli nie modułów uwierzytelniania umożliwiających uwierzytelnienie żądania, <xref:System.Net.AuthenticationManager.Authenticate%2A> metoda zwraca `null`.  
  
 Moduły uwierzytelniania są wywoływane w kolejności, w którym zostały zarejestrowane przy użyciu <xref:System.Net.AuthenticationManager>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="challenge" /> jest <see langword="null" />.  - lub - <paramref name="request" /> jest <see langword="null" />.  - lub - <paramref name="credentials" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CredentialPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentialPolicy CredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CredentialPolicy As ICredentialPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentialPolicy ^ CredentialPolicy { System::Net::ICredentialPolicy ^ get(); void set(System::Net::ICredentialPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CredentialPolicy : System.Net.ICredentialPolicy with get, set" Usage="System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zasady poświadczeń, które ma być używany dla żądań zasobów, które zostało nawiązane przy użyciu <see cref="T:System.Net.HttpWebRequest" /> klasy.</summary>
        <value>Obiekt, który implementuje <see cref="T:System.Net.ICredentialPolicy" /> interfejs, który określa, czy poświadczenia są wysyłane z żądania. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zasady poświadczeń Określa, czy w celu wysłania poświadczeń podczas wysyłania żądania do zasobu sieciowego, na przykład zawartość strony sieci Web. Jeśli poświadczenia są wysyłane, serwery, które wymagają uwierzytelniania klienta próbę uwierzytelniania klienta, gdy zostanie odebrane żądanie, zamiast wysyłać odpowiedzi wskazujący, że poświadczenia klienta są wymagane. Podczas komunikacji dwustronnej to zapisywanie na serwerze, musi być równoważony względem zagrożenie bezpieczeństwa związane z wysyła poświadczenia za pośrednictwem sieci. Serwer docelowy nie wymaga uwierzytelniania klienta jest najlepszym rozwiązaniem w wysyłał poświadczeń.  
  
 Zasady poświadczeń zostanie wywołana tylko w przypadku żądań, które Określ poświadczenia lub użyj <xref:System.Net.WebProxy> obiekt, który określa poświadczenia.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, ustawienie zasad dostępu do poświadczeń.  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomTargetNameDictionary">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.StringDictionary CustomTargetNameDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CustomTargetNameDictionary As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::StringDictionary ^ CustomTargetNameDictionary { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomTargetNameDictionary : System.Collections.Specialized.StringDictionary" Usage="System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik zawierający nazwy nazwy głównej usługi (SPN), które są używane do identyfikowania hostów podczas uwierzytelniania Kerberos dla żądań, które zostało nawiązane przy użyciu <see cref="T:System.Net.WebRequest" /> i jej klasy pochodne.</summary>
        <value>Zapisywalnego <see cref="T:System.Collections.Specialized.StringDictionary" /> zawierający wartości nazwy SPN dla kluczy składa się z informacji o hoście.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwę SPN jest to nazwa, przez którą klient jednoznacznie identyfikuje wystąpienie usługi lub aplikacji na serwerze w celu uwierzytelniania wzajemnego. Wzajemne uwierzytelnianie jest wymagany przez domyślne i można wymagać, ustawiając <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType> do <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> w żądaniu.  
  
 Gdy <xref:System.Net.WebRequest> wymaga wzajemnego uwierzytelniania, nazwę SPN dla miejsca docelowego muszą być dostarczane przez klienta. Jeśli znasz nazwę SPN, można dodać go do <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> przed wysłaniem żądania. Jeśli nazwa SPN informacji nie zostały dodane do tego słownika <xref:System.Net.AuthenticationManager> używa <xref:System.Net.WebRequest.RequestUri%2A> metody do redagowania najprawdopodobniej SPN; to jest jednak obliczoną wartością i może być niepoprawny. Jeśli nastąpi próba uwierzytelnienia wzajemnego i kończy się niepowodzeniem, możesz sprawdzić słownik do określenia obliczanej nazwy SPN. Nie nazwy SPN jest wprowadzany do słownika, jeśli protokołem uwierzytelniania nie obsługuje uwierzytelniania wzajemnego.  
  
 Aby dodać wartości nazwy SPN do tego słownika, użyj <xref:System.Uri.AbsoluteUri%2A> z <xref:System.Net.WebRequest.RequestUri%2A> jako klucz. Wewnętrznie, klucz został obcięty do uwzględnienia <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>i <xref:System.Uri.Port%2A> Jeśli nie jest domyślnym portem.  
  
> [!NOTE]
>  Uzyskiwanie dostępu do metod i właściwości <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> wymaga nieograniczony <xref:System.Net.WebPermission>.  
  
> [!NOTE]
>  Podczas uwierzytelniania Kerberos odbywa się za pośrednictwem serwera proxy, zarówno serwer proxy, jak i nazwę hosta ultimate muszą zostać rozpoznane nazwy SPN. Przekroczono limit czasu rozpoznawania nazw serwera proxy jest chroniony. Rozpoznawanie nazwy hosta ultimate do nazwy SPN wymaga wyszukiwania DNS, a brak limitu czasu skojarzone bezpośrednio z tą operacją. W związku z tym synchroniczne operacje może trwać dłużej, przekroczenie limitu czasu. Aby tego uniknąć, należy dodać hosta ultimate prefiks identyfikatora URI w pamięci podręcznej nazwę SPN, przed wykonaniem żądania do niego.  
  
 W wersji 3.5 z dodatkiem SP1, teraz używane wartości domyślne do określania nazwy hosta w adresie URL żądania w głównej nazwy usługi w uwierzytelnianiu NTLM (NT LAN Manager) programu exchange, kiedy <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> nie ustawiono właściwości. Nazwa hosta używana w adresie URL żądania może różnić się od nagłówka hosta określona w <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType> w żądaniu klienta. Nazwa hosta używana w adresie URL żądania może różnić się od aktualną nazwą hosta serwera, nazwę komputera serwera, adres IP tego komputera lub adres sprzężenia zwrotnego. W takich przypadkach Windows zakończy się niepowodzeniem żądania uwierzytelniania. Aby rozwiązać ten problem, konieczne może być Powiadom Windows używanej przez nazwę hosta w adresie URL żądania w kliencie żądania ("contoso", na przykład) jest faktycznie alternatywną nazwę komputera lokalnego.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, wyświetlanie zawartość <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>.  
  
 [!code-cpp[NclCredPolicy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#5)]
 [!code-csharp[NclCredPolicy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member PreAuthenticate : System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.PreAuthenticate (request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request">A <see cref="T:System.Net.WebRequest" /> do zasobu internetowego.</param>
        <param name="credentials">
          <see cref="T:System.Net.ICredentials" /> Skojarzony z tym żądaniem.</param>
        <summary>Wstępnie uwierzytelnia żądanie.</summary>
        <returns>Wystąpienie <see cref="T:System.Net.Authorization" /> klasy, jeśli żądanie może być uwierzytelniona; w przeciwnym razie <see langword="null" />. Jeśli <paramref name="credentials" /> jest <see langword="null" />, Metoda ta zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli moduł uwierzytelniania można preauthenticate żądania, <xref:System.Net.AuthenticationManager.PreAuthenticate%2A> metoda zwraca wystąpienie uwierzytelniania i wysyła informacje o autoryzacji do serwera prewencyjnego, zamiast czekać, aż zasób wydania wyzwania. To zachowanie jest opisany w sekcji 3.3 RFC 2617 (uwierzytelnianie HTTP: podstawowe i uwierzytelnianie dostępu do skrótu). Moduły uwierzytelniania wstępnego uwierzytelniania umożliwiają klientom zwiększyć wydajność serwera, unikając dodatkowych wystąpień komunikacji dwustronnej spowodowane wezwań do uwierzytelnienia.  
  
 Moduły autoryzacji, które można preauthenticate żądań zestaw <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType> właściwość `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Register : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Register authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">
          <see cref="T:System.Net.IAuthenticationModule" /> Zarejestrować się w Menedżerze uwierzytelniania.</param>
        <summary>Rejestruje moduł uwierzytelniania za pomocą Menedżera uwierzytelniania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Register%2A> Metoda dodaje moduły uwierzytelniania na końcu listy modułów wywoływane przez <xref:System.Net.AuthenticationManager.Authenticate%2A> metody. Moduły uwierzytelniania są wywoływane w kolejności, w jakiej zostały dodane do listy. Jeśli moduł o tej samej <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> jest już zarejestrowane, ta metoda usuwa zarejestrowanego modułu i dodaje `authenticationModule` na końcu listy.  
  
   
  
## Examples  
 Poniższy przykład rejestruje moduł uwierzytelniania za pomocą Menedżera uwierzytelniania. Pełny przykład można znaleźć <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationModule" /> jest <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wykonywania kodu niezarządzanego. Powiązane wyliczenie: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="RegisteredModules">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator RegisteredModules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerator RegisteredModules" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.RegisteredModules" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RegisteredModules As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerator ^ RegisteredModules { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegisteredModules : System.Collections.IEnumerator" Usage="System.Net.AuthenticationManager.RegisteredModules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę modułów uwierzytelniania, które są zarejestrowane w usłudze Menedżer uwierzytelniania.</summary>
        <value>
          <see cref="T:System.Collections.IEnumerator" /> Umożliwiającej moduły uwierzytelniania zarejestrowanych do odczytu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.RegisteredModules%2A> Dostarcza <xref:System.Collections.IEnumerator> wystąpienia, umożliwiającą listę zarejestrowanych modułów uwierzytelniania do odczytu. <xref:System.Net.AuthenticationManager.Register%2A> Metoda dodaje modułów do listy, a <xref:System.Net.AuthenticationManager.Unregister%2A> metoda usuwa modułów z niego.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.AuthenticationManager.RegisteredModules%2A> właściwości w celu uzyskania listy modułów uwierzytelniania, które są zarejestrowane w usłudze Menedżer uwierzytelniania. Pełny przykład można znaleźć <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Authentication#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#8)]
 [!code-csharp[System.Net.Authentication#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#8)]
 [!code-vb[System.Net.Authentication#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unregister">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa moduły uwierzytelniania z listy zarejestrowanych modułów.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Unregister : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">
          <see cref="T:System.Net.IAuthenticationModule" /> Do usunięcia z listy zarejestrowanych modułów.</param>
        <summary>Usuwa moduł uwierzytelniania określony na liście zarejestrowanych modułów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Unregister%2A> Metoda usuwa moduł uwierzytelniania określonej liście modułami uwierzytelniania wywołanymi <xref:System.Net.AuthenticationManager.Authenticate%2A> metody. Moduł, należy dodać do listy przy użyciu <xref:System.Net.AuthenticationManager.Register%2A> metoda można było usunąć z listy.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.AuthenticationManager.Unregister%2A> metodę, aby usunąć moduł uwierzytelniania określonej na liście zarejestrowanych modułów. Pełny przykład można znaleźć <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationModule" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Określony <see cref="T:System.Net.IAuthenticationModule" /> nie jest zarejestrowany.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wykonywania kodu niezarządzanego. Powiązane wyliczenie: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationScheme As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ authenticationScheme);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationScheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationScheme">Schemat uwierzytelniania modułu do usunięcia.</param>
        <summary>Usuwa moduły uwierzytelniania za pomocą określony schemat uwierzytelniania z listy zarejestrowanych modułów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Unregister%2A> Metoda usuwa moduł uwierzytelniania za pomocą określony schemat uwierzytelniania z listy modułami uwierzytelniania wywołanymi <xref:System.Net.AuthenticationManager.Authenticate%2A> metody. Moduł, należy dodać do listy przy użyciu <xref:System.Net.AuthenticationManager.Register%2A> metoda można było usunąć z listy.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.AuthenticationManager.Unregister%2A> metodę, aby usunąć moduł uwierzytelniania za pomocą określony schemat uwierzytelniania z listy zarejestrowanych modułów.  
  
 [!code-cpp[AuthenticationManager_UnRegister2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CPP/authenticationmanager_unregister2.cpp#2)]
 [!code-csharp[AuthenticationManager_UnRegister2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CS/authenticationmanager_unregister2.cs#2)]
 [!code-vb[AuthenticationManager_UnRegister2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/VB/authenticationmanager_unregister2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationScheme" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Moduł schematu uwierzytelniania nie jest zarejestrowany.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do wykonywania kodu niezarządzanego. Powiązane wyliczenie: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>