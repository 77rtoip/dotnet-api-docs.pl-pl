<Type Name="Authorization" FullName="System.Net.Authorization">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e25de1cae5893ecb02202707ecdea14c7f2174b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39958756" /></Metadata><TypeSignature Language="C#" Value="public class Authorization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Authorization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Authorization" />
  <TypeSignature Language="VB.NET" Value="Public Class Authorization" />
  <TypeSignature Language="C++ CLI" Value="public ref class Authorization" />
  <TypeSignature Language="F#" Value="type Authorization = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera komunikat uwierzytelniania dla serwera internetowego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager> Zwraca wystąpienie <xref:System.Net.Authorization> klasę, która zawiera komunikat uwierzytelniania. Ta wiadomość jest wysyłana do serwera internetowego, aby wskazać, że klient (takie jak <xref:System.Net.WebRequest> lub jeden z jego elementów potomnych) jest autoryzowany do uzyskiwania dostępu do serwera.  
  
 <xref:System.Net.Authorization> Tworzone jest wystąpienie przez moduł uwierzytelniania który <xref:System.Net.AuthenticationManager> wyznacza obsłużyć żądania.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.IAuthenticationModule" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Authorization" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Authorization (string token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Authorization.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (token As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Authorization(System::String ^ token);" />
      <MemberSignature Language="F#" Value="new System.Net.Authorization : string -&gt; System.Net.Authorization" Usage="new System.Net.Authorization token" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">Komunikat o autoryzacji zaszyfrowane, oczekiwana przez serwer.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Authorization" /> klasy z komunikatem o określonym autoryzacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Authorization> Jest tworzone wystąpienie o <xref:System.Net.Authorization.Message%2A> właściwością `token` i <xref:System.Net.Authorization.Complete%2A> właściwością `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób tworzenia <xref:System.Net.Authorization> obiektu. Pełny przykład można znaleźć <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Authentication#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#3)]
 [!code-csharp[System.Net.Authentication#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#3)]
 [!code-vb[System.Net.Authentication#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Authorization (string token, bool finished);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string token, bool finished) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Authorization.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (token As String, finished As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Authorization(System::String ^ token, bool finished);" />
      <MemberSignature Language="F#" Value="new System.Net.Authorization : string * bool -&gt; System.Net.Authorization" Usage="new System.Net.Authorization (token, finished)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
        <Parameter Name="finished" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="token">Komunikat o autoryzacji zaszyfrowane, oczekiwana przez serwer.</param>
        <param name="finished">Stan ukończenia prób autoryzacji. <see langword="true" /> Jeśli próba autoryzacji jest pełne; w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Authorization" /> klasy ze stanem autoryzacji określony komunikat i ukończenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Authorization> Jest tworzone wystąpienie o <xref:System.Net.Authorization.Message%2A> właściwością `token` i <xref:System.Net.Authorization.Complete%2A> właściwością `finished`.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy nowe wystąpienie klasy <xref:System.Net.Authorization> klasy ze stanem autoryzacji określony komunikat i ukończenia.  
  
 [!code-cpp[Authorization_ProtectionRealm#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Authorization_ProtectionRealm/CPP/authorization_protectionrealm.cpp#1)]
 [!code-csharp[Authorization_ProtectionRealm#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Authorization_ProtectionRealm/CS/authorization_protectionrealm.cs#1)]
 [!code-vb[Authorization_ProtectionRealm#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Authorization_ProtectionRealm/VB/authorization_protectionrealm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Authorization (string token, bool finished, string connectionGroupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string token, bool finished, string connectionGroupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (token As String, finished As Boolean, connectionGroupId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Authorization(System::String ^ token, bool finished, System::String ^ connectionGroupId);" />
      <MemberSignature Language="F#" Value="new System.Net.Authorization : string * bool * string -&gt; System.Net.Authorization" Usage="new System.Net.Authorization (token, finished, connectionGroupId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
        <Parameter Name="finished" Type="System.Boolean" />
        <Parameter Name="connectionGroupId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">Komunikat o autoryzacji zaszyfrowane, oczekiwana przez serwer.</param>
        <param name="finished">Stan ukończenia prób autoryzacji. <see langword="true" /> Jeśli próba autoryzacji jest pełne; w przeciwnym razie <see langword="false" />.</param>
        <param name="connectionGroupId">Unikatowy identyfikator, który może służyć do tworzenia prywatnej klient serwer połączeń, które są powiązane tylko ten tryb uwierzytelniania.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Authorization" /> klasie z atrybutem autoryzacji określony komunikat stanu ukończenia i identyfikator grupy połączeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy nowe wystąpienie klasy <xref:System.Net.Authorization> klasie z atrybutem autoryzacji określony komunikat stanu ukończenia i identyfikator grupy połączeń.  
  
 [!code-cpp[Authorization_Constructor3#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Authorization_Constructor3/CPP/authorization_constructor3.cpp#1)]
 [!code-csharp[Authorization_Constructor3#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Authorization_Constructor3/CS/authorization_constructor3.cs#1)]
 [!code-vb[Authorization_Constructor3#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Authorization_Constructor3/VB/authorization_constructor3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public bool Complete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Complete" />
      <MemberSignature Language="DocId" Value="P:System.Net.Authorization.Complete" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Complete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Complete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Complete : bool" Usage="System.Net.Authorization.Complete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan ukończenia autoryzacji.</summary>
        <value><see langword="true" /> Jeśli proces uwierzytelniania jest pełne; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Authorization.Complete%2A> Właściwość jest ustawiona na `true` po zakończeniu procesu uwierzytelniania między klientem a serwerem. Niektóre moduły uwierzytelniania, takich jak moduł protokołu Kerberos Użyj wielu wystąpień komunikacji dwustronnej między klientem i serwerem, aby ukończyć proces uwierzytelniania. Aby zachować <xref:System.Net.WebRequest> lub obiekt podrzędny, która zainicjowała procesu uwierzytelniania przerwanie podczas autoryzacji ma miejsce, zestawy moduł uwierzytelniania <xref:System.Net.Authorization.Complete%2A> właściwość `false`.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Authorization.Complete%2A> właściwości, które można pobrać stanu zakończenia autoryzacji. Pełny przykład można znaleźć <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Authentication#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#5)]
 [!code-csharp[System.Net.Authentication#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#5)]
 [!code-vb[System.Net.Authentication#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.IAuthenticationModule" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupId">
      <MemberSignature Language="C#" Value="public string ConnectionGroupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupId" />
      <MemberSignature Language="DocId" Value="P:System.Net.Authorization.ConnectionGroupId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionGroupId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionGroupId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupId : string" Usage="System.Net.Authorization.ConnectionGroupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator dla połączenia specyficzne dla użytkownika.</summary>
        <value>Unikatowy ciąg, który kojarzy połączenia z jednostką uwierzytelniania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Authorization.ConnectionGroupId%2A> Właściwość jest unikatowy ciąg, który kojarzy połączenie z określonej jednostki uwierzytelniania. Na przykład moduł autoryzacji NTLM łączy informacje dotyczące poświadczeń uwierzytelniania do określonego połączenia, aby zapobiec ponownemu użyciu nieprawidłowe połączenie.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Authorization.ConnectionGroupId%2A> właściwości, aby uzyskać identyfikator grupy zwrócony przez serwer. Pełny przykład można znaleźć <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Authentication#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#5)]
 [!code-csharp[System.Net.Authentication#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#5)]
 [!code-vb[System.Net.Authentication#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Net.Authorization.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Net.Authorization.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera komunikat zwrócony do serwera w odpowiedzi na wezwanie do uwierzytelnienia.</summary>
        <value>Komunikat, który zostanie zwrócony do serwera w odpowiedzi na wezwanie do uwierzytelnienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Authorization.Message%2A> Właściwość zawiera ciąg autoryzacji, który zwraca klienta do serwera podczas uzyskiwania dostępu do zasobów chronionych. Rzeczywista zawartość wiadomości są definiowane przez typ uwierzytelniania, które korzystają z klienta i serwera. Uwierzytelnianie podstawowe HTTP, na przykład wykorzystuje inny komunikat niż uwierzytelnianie Kerberos.  
  
 Gdy moduł uwierzytelniania wstępnego uwierzytelniania usług <xref:System.Net.Authorization.Message%2A> właściwości są wysyłane żądania wstępnego.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Authorization.Message%2A> właściwości, aby uzyskać komunikat zwrócony do serwera w odpowiedzi na wezwanie do uwierzytelnienia. Pełny przykład można znaleźć <xref:System.Net.AuthenticationManager> klasy.  
  
 [!code-cpp[System.Net.Authentication#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#5)]
 [!code-csharp[System.Net.Authentication#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#5)]
 [!code-vb[System.Net.Authentication#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.IAuthenticationModule" />
      </Docs>
    </Member>
    <Member MemberName="MutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public bool MutuallyAuthenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Authorization.MutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property MutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MutuallyAuthenticated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MutuallyAuthenticated : bool with get, set" Usage="System.Net.Authorization.MutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która wskazuje, czy wystąpiły wzajemnego uwierzytelniania.</summary>
        <value><see langword="true" /> Jeśli zarówno klient, jak i serwer został uwierzytelniony; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca `false` Jeśli uwierzytelnienie nie zostało ukończone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionRealm">
      <MemberSignature Language="C#" Value="public string[] ProtectionRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ProtectionRealm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Authorization.ProtectionRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionRealm As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ProtectionRealm { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionRealm : string[] with get, set" Usage="System.Net.Authorization.ProtectionRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia prefiks dla jednolitych identyfikatorów zasobów (URI), które mogą być uwierzytelniane przy użyciu <see cref="P:System.Net.Authorization.Message" /> właściwości.</summary>
        <value>Tablica ciągów zawiera prefiksów identyfikatorów URI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Authorization.ProtectionRealm%2A> Właściwość zawiera listę prefiksów identyfikatorów URI, który <xref:System.Net.Authorization.Message%2A> właściwość może być używana do uwierzytelniania. <xref:System.Net.WebRequest> i jego elementy podrzędne porównywanie identyfikatora URI do tej listy, aby określić, czy <xref:System.Net.Authorization> nadaje się do określonego identyfikatora URI.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera lub ustawia prefiks dla identyfikatorów URI, które mogą być uwierzytelniane przy użyciu <xref:System.Net.Authorization.Message%2A> właściwości.  
  
 [!code-cpp[Authorization_ProtectionRealm#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Authorization_ProtectionRealm/CPP/authorization_protectionrealm.cpp#1)]
 [!code-csharp[Authorization_ProtectionRealm#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Authorization_ProtectionRealm/CS/authorization_protectionrealm.cs#1)]
 [!code-vb[Authorization_ProtectionRealm#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Authorization_ProtectionRealm/VB/authorization_protectionrealm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>