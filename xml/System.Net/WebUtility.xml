<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00077ce3265b7c9b8c9786ed662a0c1ce1775cb1" />
    <Meta Name="ms.sourcegitcommit" Value="556bdb7ced6901e0b164b775c8e875e8c3d6c706" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/21/2018" />
    <Meta Name="ms.locfileid" Value="40451210" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e83d3-101">Zawiera metody służące do kodowania i dekodowania adresów URL podczas przetwarzania żądania sieci Web.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e83d3-101">Provides methods for encoding and decoding URLs when processing Web requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e83d3-102"><xref:System.Web.HttpUtility> Klasa zawiera kodowania i dekodowania metody narzędziowe do użytku z ciągami kodowanie HTML.</span><span class="sxs-lookup"><span data-stu-id="e83d3-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="e83d3-103"><xref:System.Uri?displayProperty=nameWithType> Klasa zawiera także metody i właściwości, które mogą służyć do podobnych celów.</span><span class="sxs-lookup"><span data-stu-id="e83d3-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e83d3-104">Konwertuje ciąg, który został zakodowany w formacie HTML do transmisji HTTP do Dekodowany ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-104">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e83d3-105">Ciągu do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-105">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e83d3-106">Konwertuje ciąg, który został zakodowany w formacie HTML do transmisji HTTP do Dekodowany ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-106">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e83d3-107">Dekodowany ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-107">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e83d3-108">Jeśli znaki, takie jak spacje i znaki interpunkcyjne są przekazywane w strumieniu HTTP, może być niemożliwe po stronie odbierającej.</span><span class="sxs-lookup"><span data-stu-id="e83d3-108">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e83d3-109">Kodowanie HTML konwertuje znaki, które nie są dozwolone w języku HTML encjach znaków; Dekodowanie HTML odwraca kodowania.</span><span class="sxs-lookup"><span data-stu-id="e83d3-109">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e83d3-110">Na przykład po osadzeniu w bloku tekstu, znaki `<` i `>` zakodowanymi w formacie `&lt;` i `&gt;` transmisji HTTP.</span><span class="sxs-lookup"><span data-stu-id="e83d3-110">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="e83d3-111">Jeśli `value` parametr jest `null`, jest zwracany Dekodowany ciąg `null`.</span><span class="sxs-lookup"><span data-stu-id="e83d3-111">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="e83d3-112">Jeśli `value` parametr jest pustym ciągiem, a następnie Dekodowany ciąg zwracany jest pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="e83d3-112">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e83d3-113">Ciągu do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-113">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e83d3-114">A <see cref="T:System.IO.TextWriter" /> strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-114">A <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e83d3-115">Konwertuje ciąg, który został zakodowany w formacie HTML do Dekodowany ciąg i wysyła Dekodowany ciąg do <see cref="T:System.IO.TextWriter" /> strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-115">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e83d3-116">Jeśli znaki, takie jak spacje i znaki interpunkcyjne są przekazywane w strumieniu HTTP, może być niemożliwe po stronie odbierającej.</span><span class="sxs-lookup"><span data-stu-id="e83d3-116">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e83d3-117">Kodowanie HTML konwertuje znaki, które nie są dozwolone w języku HTML encjach znaków; Dekodowanie HTML odwraca kodowania.</span><span class="sxs-lookup"><span data-stu-id="e83d3-117">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e83d3-118">Na przykład po osadzeniu w bloku tekstu, znaki `<` i `>` zakodowanymi w formacie `&lt;` i `&gt;` transmisji HTTP.</span><span class="sxs-lookup"><span data-stu-id="e83d3-118">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e83d3-119">
            <paramref name="output" /> Parametr nie może być <see langword="null" /> Jeśli <paramref name="value" /> parametr nie jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-119">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e83d3-120">Konwertuje ciąg na ciąg kodowany w formacie HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-120">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e83d3-121">Ciąg do kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-121">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e83d3-122">Konwertuje ciąg na ciąg kodowany w formacie HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-122">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e83d3-123">Ciąg zakodowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-123">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e83d3-124">Jeśli znaki, takie jak spacje i znaki interpunkcyjne są przekazywane w strumieniu HTTP, może być niemożliwe po stronie odbierającej.</span><span class="sxs-lookup"><span data-stu-id="e83d3-124">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e83d3-125">Kodowanie HTML konwertuje znaki, które nie są dozwolone w języku HTML encjach znaków; Dekodowanie HTML odwraca kodowania.</span><span class="sxs-lookup"><span data-stu-id="e83d3-125">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e83d3-126">Na przykład po osadzeniu w bloku tekstu, znaki `<` i `>` zakodowanymi w formacie `&lt;` i `&gt;` transmisji HTTP.</span><span class="sxs-lookup"><span data-stu-id="e83d3-126">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="e83d3-127">Jeśli `value` parametr jest `null`, jest zwracany ciąg zakodowany `null`.</span><span class="sxs-lookup"><span data-stu-id="e83d3-127">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="e83d3-128">Jeśli `value` parametr jest pustym ciągiem, a następnie zwracanego ciągu zakodowanego jest ciągiem pustym.</span><span class="sxs-lookup"><span data-stu-id="e83d3-128">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e83d3-129">Ciąg do kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-129">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e83d3-130">A <see cref="T:System.IO.TextWriter" /> strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-130">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e83d3-131">Konwertuje ciąg na ciąg kodowany w formacie HTML i zwraca dane wyjściowe jako <see cref="T:System.IO.TextWriter" /> strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-131">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e83d3-132">Jeśli znaki, takie jak spacje i znaki interpunkcyjne są przekazywane w strumieniu HTTP, może być niemożliwe po stronie odbierającej.</span><span class="sxs-lookup"><span data-stu-id="e83d3-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e83d3-133">Kodowanie HTML konwertuje znaki, które nie są dozwolone w języku HTML encjach znaków; Dekodowanie HTML odwraca kodowania.</span><span class="sxs-lookup"><span data-stu-id="e83d3-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e83d3-134">Na przykład po osadzeniu w bloku tekstu, znaki `<` i `>` zakodowanymi w formacie `&lt;` i `&gt;` transmisji HTTP.</span><span class="sxs-lookup"><span data-stu-id="e83d3-134">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e83d3-135">
            <paramref name="output" /> Parametr nie może być <see langword="null" /> Jeśli <paramref name="value" /> parametr nie jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-135">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="e83d3-136">Zakodowane w adresie URL ciągu do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-136">A URL-encoded string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e83d3-137">Konwertuje ciąg, który został zakodowany transmisji w adresie URL w Dekodowany ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-137">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e83d3-138">Dekodowany ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-138">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e83d3-139">Jeśli znaki, takie jak spacje i znaki interpunkcyjne są przekazywane w strumieniu HTTP, może być niemożliwe po stronie odbierającej.</span><span class="sxs-lookup"><span data-stu-id="e83d3-139">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e83d3-140">Kodowanie adresu URL konwertuje znaki, które nie są dozwolone w adresie URL na równoważne szesnastkowe sekwencje ucieczki.</span><span class="sxs-lookup"><span data-stu-id="e83d3-140">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="e83d3-141"><xref:System.Net.WebUtility.UrlEncode%2A> Metoda tworzy ciąg kodowany w formacie adresu URL.</span><span class="sxs-lookup"><span data-stu-id="e83d3-141">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="e83d3-142">Dekodowanie adresu URL zastępuje szesnastkowe sekwencje ucieczki odpowiednie ich odpowiednikami znaków ASCII.</span><span class="sxs-lookup"><span data-stu-id="e83d3-142">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="e83d3-143">Na przykład po osadzeniu w bloku tekstu zakodowane w adresie URL, unikowe `%3c` i `%3e` są dekodować w znaki `<` i `>`.</span><span class="sxs-lookup"><span data-stu-id="e83d3-143">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="e83d3-144">Zakodowane w adresie URL <see cref="T:System.Byte" /> tablicy do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-144">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e83d3-145">Przesunięcie w bajtach od początku <see cref="T:System.Byte" /> tablicy do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-145">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e83d3-146">Liczba bajtów do odkodowania z <see cref="T:System.Byte" /> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-146">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e83d3-147">Konwertuje tablicę bajtów zakodowany, który został zakodowany transmisji w adresie URL w tablicy bajtów zdekodowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-147">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e83d3-148">Zdekodowany <see cref="T:System.Byte" /> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-148">A decoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e83d3-149">Jeśli znaki, takie jak spacje i znaki interpunkcyjne są przekazywane w strumieniu HTTP, może być niemożliwe po stronie odbierającej.</span><span class="sxs-lookup"><span data-stu-id="e83d3-149">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e83d3-150">Kodowanie adresu URL konwertuje znaki, które nie są dozwolone w adresie URL na równoważne szesnastkowe sekwencje ucieczki.</span><span class="sxs-lookup"><span data-stu-id="e83d3-150">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="e83d3-151"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A> Metoda tworzy tablicę bajtów zakodowane w adresie URL.</span><span class="sxs-lookup"><span data-stu-id="e83d3-151">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="e83d3-152">Dekodowanie adresu URL zastępuje szesnastkowe sekwencje ucieczki odpowiednie ich odpowiednikami znaków ASCII.</span><span class="sxs-lookup"><span data-stu-id="e83d3-152">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="e83d3-153">Na przykład po osadzeniu w bloku tekstu zakodowane w adresie URL, unikowe `%3c` i `%3e` są dekodować w znaki `<` i `>`.</span><span class="sxs-lookup"><span data-stu-id="e83d3-153">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e83d3-154">Tekst do zakodowania w formacie adresu URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-154">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e83d3-155">Konwertuje ciąg tekstowy na ciąg kodowany w formacie adresu URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-155">Converts a text string into a URL-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e83d3-156">Ciąg kodowany w formacie adresu URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-156">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e83d3-157">Jeśli znaki, takie jak spacje i znaki interpunkcyjne są przekazywane w strumieniu HTTP, może być niemożliwe po stronie odbierającej.</span><span class="sxs-lookup"><span data-stu-id="e83d3-157">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e83d3-158">Kodowanie adresu URL zastępuje znaki, które nie są dozwolone w adresie URL za pomocą encje znaków składający się z szesnastkowe sekwencje ucieczki.</span><span class="sxs-lookup"><span data-stu-id="e83d3-158">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="e83d3-159">Przekonwertowany ciąg powinna być zgodna z formatem UTF-8.</span><span class="sxs-lookup"><span data-stu-id="e83d3-159">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="e83d3-160">Kodowanie adresu URL zastępuje wszystkie kody znaków, z wyjątkiem litery, cyfry i następujące znaki interpunkcyjne:</span><span class="sxs-lookup"><span data-stu-id="e83d3-160">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="e83d3-161">`-` (znak minusa)</span><span class="sxs-lookup"><span data-stu-id="e83d3-161">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="e83d3-162">`_` (podkreślenie)</span><span class="sxs-lookup"><span data-stu-id="e83d3-162">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="e83d3-163">`.` (okres)</span><span class="sxs-lookup"><span data-stu-id="e83d3-163">`.` (period)</span></span>  
  
-   <span data-ttu-id="e83d3-164">`!` (wykrzyknika)</span><span class="sxs-lookup"><span data-stu-id="e83d3-164">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="e83d3-165">`*` (gwiazdka)</span><span class="sxs-lookup"><span data-stu-id="e83d3-165">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="e83d3-166">`(` i `)` (nawiasy otwierające i zamykające)</span><span class="sxs-lookup"><span data-stu-id="e83d3-166">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="e83d3-167">Na przykład po osadzeniu w bloku tekstu, które mają być przekazywane w adresie URL, znaki `<` i `>` zakodowanymi w formacie `%3c` i `%3e`.</span><span class="sxs-lookup"><span data-stu-id="e83d3-167">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="e83d3-168"><xref:System.Net.WebUtility.UrlDecode%2A> Metoda odwraca kodowania.</span><span class="sxs-lookup"><span data-stu-id="e83d3-168">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e83d3-169">
            <see cref="T:System.Byte" /> Tablicy do kodowania adresu URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-169">The <see cref="T:System.Byte" /> array to URL-encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e83d3-170">Przesunięcie w bajtach od początku <see cref="T:System.Byte" /> tablicy do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-170">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e83d3-171">Liczba bajtów do kodowania z <see cref="T:System.Byte" /> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-171">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e83d3-172">Konwertuje tablicę bajtów z tablicy bajtów zakodowane w adresie URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-172">Converts a byte array into a URL-encoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e83d3-173">Zakodowany <see cref="T:System.Byte" /> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e83d3-173">An encoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e83d3-174">Jeśli znaki, takie jak spacje i znaki interpunkcyjne są przekazywane w strumieniu HTTP, może być niemożliwe po stronie odbierającej.</span><span class="sxs-lookup"><span data-stu-id="e83d3-174">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e83d3-175">Kodowanie adresu URL zastępuje znaki, które nie są dozwolone w adresie URL za pomocą encje znaków składający się z szesnastkowe sekwencje ucieczki.</span><span class="sxs-lookup"><span data-stu-id="e83d3-175">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="e83d3-176">Przekonwertowany ciąg powinna być zgodna z formatem UTF-8.</span><span class="sxs-lookup"><span data-stu-id="e83d3-176">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="e83d3-177">Kodowanie adresu URL zastępuje wszystkie kody znaków, z wyjątkiem litery, cyfry i następujące znaki interpunkcyjne:</span><span class="sxs-lookup"><span data-stu-id="e83d3-177">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="e83d3-178">`-` (znak minusa)</span><span class="sxs-lookup"><span data-stu-id="e83d3-178">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="e83d3-179">`_` (podkreślenie)</span><span class="sxs-lookup"><span data-stu-id="e83d3-179">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="e83d3-180">`.` (okres)</span><span class="sxs-lookup"><span data-stu-id="e83d3-180">`.` (period)</span></span>  
  
-   <span data-ttu-id="e83d3-181">`!` (wykrzyknika)</span><span class="sxs-lookup"><span data-stu-id="e83d3-181">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="e83d3-182">`*` (gwiazdka)</span><span class="sxs-lookup"><span data-stu-id="e83d3-182">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="e83d3-183">`'` (pojedynczy cudzysłów)</span><span class="sxs-lookup"><span data-stu-id="e83d3-183">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="e83d3-184">`(` i `)` (nawiasy otwierające i zamykające)</span><span class="sxs-lookup"><span data-stu-id="e83d3-184">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="e83d3-185">Na przykład po osadzeniu w bloku tekstu, które mają być przekazywane w adresie URL, znaki `<` i `>` zakodowanymi w formacie `%3c` i `%3e`.</span><span class="sxs-lookup"><span data-stu-id="e83d3-185">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="e83d3-186"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A> Metoda odwraca kodowania.</span><span class="sxs-lookup"><span data-stu-id="e83d3-186">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>