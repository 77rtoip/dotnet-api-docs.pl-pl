<Type Name="CredentialCache" FullName="System.Net.CredentialCache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e0c5e280601f7a78ee29c5ab50f3d5101860e329" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30561517" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CredentialCache : System.Collections.IEnumerable, System.Net.ICredentials, System.Net.ICredentialsByHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CredentialCache extends System.Object implements class System.Collections.IEnumerable, class System.Net.ICredentials, class System.Net.ICredentialsByHost" />
  <TypeSignature Language="DocId" Value="T:System.Net.CredentialCache" />
  <TypeSignature Language="VB.NET" Value="Public Class CredentialCache&#xA;Implements ICredentials, ICredentialsByHost, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CredentialCache : System::Collections::IEnumerable, System::Net::ICredentials, System::Net::ICredentialsByHost" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentials</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentialsByHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zapewnia wiele poświadczeń magazynu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.CredentialCache> Klasy przechowuje poświadczenia dla wielu zasobów w Internecie. Aplikacje, które muszą uzyskać dostęp do wielu zasobów można przechowywać poświadczenia dla tych zasobów w <xref:System.Net.CredentialCache> wystąpienie, które następnie zawiera prawidłowego zestawu poświadczeń z zasobem internetowym, gdy jest to wymagane. Gdy <xref:System.Net.CredentialCache.GetCredential%2A> metoda jest wywoływana, porównuje jednolity identyfikator zasobów (URI) i typ uwierzytelniania dostarczone z tymi przechowywane w pamięci podręcznej i zwraca pierwszy zestaw poświadczeń, które odpowiadają.  
  
 <xref:System.Net.CredentialCache.DefaultCredentials%2A> Właściwość zawiera poświadczeń systemu bieżącego kontekstu zabezpieczeń. Dla aplikacji klienckich te reprezentuje nazwę użytkownika, hasło i domenę użytkownika, który jest aktualnie zalogowany. Dla aplikacji ASP.NET domyślne poświadczenia są poświadczenia użytkownika zalogowanego użytkownika lub użytkownika Personifikowany.  
  
   
  
## Examples  
 Poniższy kod przykładowy inicjuje <xref:System.Net.CredentialCache> z wieloma poświadczenia zabezpieczeń i używa tych poświadczeń z <xref:System.Net.WebRequest>.  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.ICredentials" />
    <altmember cref="P:System.Net.WebRequest.Credentials" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CredentialCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CredentialCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.CredentialCache" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy konstruktora <xref:System.Net.CredentialCache> wystąpienia.  
  
   
  
## Examples  
 Poniższy kod przykładowy inicjuje <xref:System.Net.CredentialCache> z wieloma poświadczenia zabezpieczeń i używa tych poświadczeń z <xref:System.Net.WebRequest>.  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje <see cref="T:System.Net.NetworkCredential" /> wystąpienia w pamięci podręcznej poświadczeń.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uriPrefix, string authType, System.Net.NetworkCredential cred);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uriPrefix, string authType, class System.Net.NetworkCredential cred) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (uriPrefix As Uri, authType As String, cred As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Uri ^ uriPrefix, System::String ^ authType, System::Net::NetworkCredential ^ cred);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="cred" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">A <see cref="T:System.Uri" /> , który określa prefiks URI poświadczenie udziela dostępu do zasobów.</param>
        <param name="authType">Schemat uwierzytelniania używany przez zasób o nazwie w <c>uriPrefix</c>.</param>
        <param name="cred">
          <see cref="T:System.Net.NetworkCredential" /> Do dodania do pamięci podręcznej poświadczeń.</param>
        <summary>Dodaje <see cref="T:System.Net.NetworkCredential" /> wystąpienia w pamięci podręcznej poświadczenia do użycia z protokołów innych niż SMTP i kojarzy ją z protokołem prefiks i uwierzytelniania jednolity identyfikator zasobów (URI).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.CredentialCache.Add%2A> Miejsca metody <xref:System.Net.NetworkCredential> wystąpienie do użytku z protokołów innych niż SMTP do <xref:System.Net.CredentialCache>. Pamięć podręczna przechowuje poświadczenia w kolejności, w której są dodawane do niego. Gdy <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> metoda jest wywoływana, zwraca odpowiednie dopasowanie <xref:System.Net.NetworkCredential> wystąpienia.  
  
   
  
## Examples  
 Poniższy kod przykładowy inicjuje <xref:System.Net.CredentialCache> z wieloma poświadczenia zabezpieczeń i używa tych poświadczeń z <xref:System.Net.WebRequest>.  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriPrefix" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="authType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Tych samych poświadczeń są dodawane więcej niż raz.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string host, int port, string authenticationType, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string host, int32 port, string authenticationType, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (host As String, port As Integer, authenticationType As String, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ host, int port, System::String ^ authenticationType, System::Net::NetworkCredential ^ credential);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="host">A <see cref="T:System.String" /> , które identyfikują komputer-host.</param>
        <param name="port">A <see cref="T:System.Int32" /> , który określa port do połączenia w <c>hosta</c>.</param>
        <param name="authenticationType">A <see cref="T:System.String" /> schemat uwierzytelniania używany podczas nawiązywania połączenia, które identyfikują <c>hosta</c> przy użyciu <c>faktury korygu</c>.</param>
        <param name="credential">
          <see cref="T:System.Net.NetworkCredential" /> Do dodania do pamięci podręcznej poświadczeń.</param>
        <summary>Dodaje <see cref="T:System.Net.NetworkCredential" /> wystąpienie do użytku z protokołem SMTP pamięci podręcznej poświadczeń i kojarzy ją z protokołem komputera, portu i uwierzytelniania hosta. Dodane przy użyciu tej metody poświadczenia są prawidłowe dla SMTP tylko. Ta metoda działa w przypadku żądań HTTP lub FTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda powoduje <xref:System.Net.NetworkCredential> wystąpienie do użytku z protokołem SMTP do <xref:System.Net.CredentialCache>. Pamięć podręczna przechowuje poświadczenia w kolejności, w której są dodawane do niego. Gdy <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> metoda jest wywoływana, zwraca <xref:System.Net.NetworkCredential> wystąpienia wybranego przez dopasowanie `host`, `port`, i `authType`. Porównanie wykonuje się obniżać.  
  
 Obsługiwane wartości `authType` "NTLM", "Szyfrowanego", "Protokołu Kerberos" i "Negotiate".  
  
 Dodane przy użyciu tej metody poświadczenia są prawidłowe tylko do użytku z serwerem SMTP. Ta metoda nie działa dla protokołów HTTP lub FTP.  
  
   
  
## Examples  
 Poniższy kod przykładowy inicjuje <xref:System.Net.CredentialCache> z wielu poświadczenia zabezpieczeń do użycia z protokołem SMTP i używa jednego z tych poświadczeń z <xref:System.Net.Mail.SmtpClient>.  
  
 [!code-cpp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/CPP/source.cpp#1)]
 [!code-csharp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/cs/source.cs#1)]
 [!code-vb[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="authType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="authType" /> Nie zaakceptowano wartość.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> jest mniejsza od zera.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentials DefaultCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentials DefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentials ^ DefaultCredentials { System::Net::ICredentials ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera poświadczeń systemu w aplikacji.</summary>
        <value>
          <see cref="T:System.Net.ICredentials" /> Reprezentujący poświadczeń systemu w aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.CredentialCache.DefaultCredentials%2A> Właściwość ma zastosowanie tylko do uwierzytelniania NTLM, negocjowania i uwierzytelniania Kerberos.  
  
 <xref:System.Net.CredentialCache.DefaultCredentials%2A> reprezentuje poświadczeń systemu dla bieżącego kontekstu zabezpieczeń, w którym aplikacja jest uruchomiona. W przypadku aplikacji po stronie klienta są zazwyczaj poświadczeń systemu Windows (nazwa użytkownika, hasło i domenę) użytkownika uruchamiającego aplikację. Dla aplikacji ASP.NET domyślne poświadczenia są poświadczenia użytkownika zalogowanego użytkownika lub użytkownika Personifikowany.  
  
 Aby uzyskać poświadczenia w postaci <xref:System.Net.NetworkCredential> wystąpienia, należy użyć <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> właściwości.  
  
 Obsługiwane wartości `authType` "NTLM", "Szyfrowanego", "Protokołu Kerberos" i "Negotiate". Ta metoda nie działa dla protokołów HTTP lub FTP.  
  
> [!NOTE]
>  <xref:System.Net.ICredentials> Zwrócone przez wystąpienie <xref:System.Net.CredentialCache.DefaultCredentials%2A> nie można wyświetlić nazwę użytkownika, hasło lub domeny bieżący kontekst zabezpieczeń.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.CredentialCache.DefaultCredentials%2A> właściwości można pobrać poświadczeń systemu w aplikacji.  
  
 [!code-cpp[CredentialCache_DefaultCredentials#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CPP/credentialcache_defaultcredentials.cpp#1)]
 [!code-csharp[CredentialCache_DefaultCredentials#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CS/credentialcache_defaultcredentials.cs#1)]
 [!code-vb[CredentialCache_DefaultCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/VB/credentialcache_defaultcredentials.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Odczytywanie zmiennej środowiskowej nazwy użytkownika. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultNetworkCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkCredential DefaultNetworkCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.NetworkCredential DefaultNetworkCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultNetworkCredentials As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::NetworkCredential ^ DefaultNetworkCredentials { System::Net::NetworkCredential ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera poświadczenia sieciowe z bieżącego kontekstu zabezpieczeń.</summary>
        <value>
          <see cref="T:System.Net.NetworkCredential" /> Reprezentujący poświadczeń sieciowych bieżącego użytkownika lub aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poświadczenia zwrócony przez <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> właściwość ma zastosowanie tylko do uwierzytelniania NTLM, negocjowania i uwierzytelniania Kerberos.  
  
 Poświadczenia zwrócony przez <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> reprezentuje poświadczenia uwierzytelniania dla bieżącego kontekstu zabezpieczeń, w którym aplikacja jest uruchomiona. W przypadku aplikacji po stronie klienta są zazwyczaj poświadczeń systemu Windows (nazwa użytkownika, hasło i domenę) użytkownika uruchamiającego aplikację. Dla aplikacji ASP.NET domyślne poświadczenia sieciowe są poświadczenia użytkownika zalogowanego użytkownika lub użytkownika Personifikowany.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Odczytywanie zmiennej środowiskowej nazwy użytkownika. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCredential">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca <see cref="T:System.Net.NetworkCredential" /> wystąpienia skojarzonego z określonego identyfikatora URI (Uniform Resource) lub hosta, a typ uwierzytelniania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (uriPrefix As Uri, authType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentials.GetCredential(System.Uri,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">A <see cref="T:System.Uri" /> , który określa prefiks URI poświadczenie udziela dostępu do zasobów.</param>
        <param name="authType">Schemat uwierzytelniania używany przez zasób o nazwie w <c>uriPrefix</c>.</param>
        <summary>Zwraca <see cref="T:System.Net.NetworkCredential" /> wystąpienie skojarzone z określonym typem identyfikator URI (Uniform Resource) i uwierzytelniania.</summary>
        <returns>A <see cref="T:System.Net.NetworkCredential" /> lub, jeśli w pamięci podręcznej, nie nie ma pasującego poświadczeń <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> Metoda wyszukuje <xref:System.Net.CredentialCache> i zwraca <xref:System.Net.NetworkCredential> wystąpienia dla określonego typu dla identyfikatora URI autoryzacji. Jeśli <xref:System.Net.CredentialCache> zawiera pasującego <xref:System.Net.NetworkCredential> wystąpienia, `null` jest zwracany.  
  
 <xref:System.Net.CredentialCache.GetCredential%2A> używa najdłuższy zgodny Prefiks URI w pamięci podręcznej do określenia zestawu poświadczeń, aby powrócić do autoryzacji typu. W poniższej tabeli przedstawiono przykłady.  
  
|Prefiks URI|Dopasowania|  
|----------------|-------------|  
|`http://www.contoso.com/portal/news.htm`|Żądania dotyczące określonej strony sieci Web `news.htm`.|  
|`http://www.contoso.com/portal/`|Żądania dla całej zawartości w `portal` ścieżkę, z wyjątkiem `news.htm`.|  
|`http://www.contoso.com/`|Żądania dla wszystkich zasobów w `www.contoso.com`, z wyjątkiem w `portal` ścieżki.|  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> metodę, aby zwrócić <xref:System.Net.NetworkCredential> wystąpienie skojarzone z określonym typem identyfikatora URI i uwierzytelniania.  
  
 [!code-cpp[CredentialCache_GetCredential#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetCredential/CPP/credentialcache_getcredential.cpp#1)]
 [!code-csharp[CredentialCache_GetCredential#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetCredential/CS/credentialcache_getcredential.cs#1)]
 [!code-vb[CredentialCache_GetCredential#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetCredential/VB/credentialcache_getcredential.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriPrefix" /> lub <paramref name="authType" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (host As String, port As Integer, authenticationType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">A <see cref="T:System.String" /> , które identyfikują komputer-host.</param>
        <param name="port">A <see cref="T:System.Int32" /> , który określa port do połączenia w <c>hosta</c>.</param>
        <param name="authenticationType">A <see cref="T:System.String" /> schemat uwierzytelniania używany podczas nawiązywania połączenia, które identyfikują <c>hosta</c>.</param>
        <summary>Zwraca <see cref="T:System.Net.NetworkCredential" /> wystąpienia skojarzonego z określonego hosta, port i uwierzytelniania protokołu.</summary>
        <returns>A <see cref="T:System.Net.NetworkCredential" /> lub, jeśli w pamięci podręcznej, nie nie ma pasującego poświadczeń <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda szuka <xref:System.Net.CredentialCache> i zwraca <xref:System.Net.NetworkCredential> wystąpienia określonego hosta, port i typ autoryzacji. `host`, `port`, I `authType` wartości przekazanych do tej metody obniżać są porównywane z wartości określona podczas dodawania poświadczeń do <xref:System.Net.CredentialCache> przy użyciu <xref:System.Net.CredentialCache.Add%2A> metody.  
  
 Obsługiwane wartości `authType` "NTLM", "Szyfrowanego", "Protokołu Kerberos" i "Negotiate".  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="authType" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="authType" /> Nie zaakceptowano wartość.  
  
 —lub—  
  
 <paramref name="host" /> jest taki sam, jak ciąg pusty ("").</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="port" /> jest mniejsza od zera.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który można wykonać iterację <see cref="T:System.Net.CredentialCache" /> wystąpienia.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> Dla <see cref="T:System.Net.CredentialCache" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.CredentialCache.GetEnumerator%2A> metoda zwraca moduł wyliczający, który można wykonać iterację <xref:System.Net.CredentialCache> wystąpienia.  
  
 [!code-cpp[CredentialCache_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CPP/credentialcache_getenumerator.cpp#1)]
 [!code-csharp[CredentialCache_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CS/credentialcache_getenumerator.cs#1)]
 [!code-vb[CredentialCache_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetEnumerator/VB/credentialcache_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa <see cref="T:System.Net.NetworkCredential" /> wystąpienia w pamięci podręcznej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (uriPrefix As Uri, authType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix">A <see cref="T:System.Uri" /> , który określa prefiks URI zasobów, które poświadczenie jest używane na potrzeby.</param>
        <param name="authType">Schemat uwierzytelniania używany przez hosta o nazwie w <c>uriPrefix</c>.</param>
        <summary>Usuwa <see cref="T:System.Net.NetworkCredential" /> wystąpienia z pamięci podręcznej, jeśli jest on skojarzony z określonym protokołem prefiks i uwierzytelniania jednolity identyfikator zasobów (URI).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda usuwa <xref:System.Net.NetworkCredential> wystąpienia z <xref:System.Net.CredentialCache> Jeśli identyfikator URI określony protokół prefiks i uwierzytelniania są zgodne z tymi skojarzone z poświadczeniami. Wiele wywołań <xref:System.Net.CredentialCache.Remove%2A> metody dla tego samego <xref:System.Net.NetworkCredential> nie mają żadnego skutku.  
  
 Jeśli `authType` jest `null` lub `uriPrefix` jest `null`, lub nie ma pasującego poświadczeń znajduje się w pamięci podręcznej, ta metoda nie działa.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje tę metodę, aby usunąć <xref:System.Net.NetworkCredential> wystąpienia w pamięci podręcznej.  
  
 [!code-cpp[CredentialCache_Add_Remove#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CPP/credentialcache_add_remove.cpp#3)]
 [!code-csharp[CredentialCache_Add_Remove#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CS/credentialcache_add_remove.cs#3)]
 [!code-vb[CredentialCache_Add_Remove#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_Add_Remove/VB/credentialcache_add_remove.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (host As String, port As Integer, authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">A <see cref="T:System.String" /> , które identyfikują komputer-host.</param>
        <param name="port">A <see cref="T:System.Int32" /> , który określa port do połączenia w <c>hosta</c>.</param>
        <param name="authenticationType">A <see cref="T:System.String" /> schemat uwierzytelniania używany podczas nawiązywania połączenia, które identyfikują <c>hosta</c>.</param>
        <summary>Usuwa <see cref="T:System.Net.NetworkCredential" /> wystąpienia z pamięci podręcznej, jeśli jest on skojarzony z określonym protokołem hosta, port i uwierzytelniania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda usuwa <xref:System.Net.NetworkCredential> wystąpienia z <xref:System.Net.CredentialCache> Jeśli podany protokół hosta, port i uwierzytelniania zgodne z tymi skojarzone z poświadczeniami. Wiele wywołań <xref:System.Net.CredentialCache.Remove%2A> metody dla tego samego <xref:System.Net.NetworkCredential> nie mają żadnego skutku.  
  
 Jeśli `authType` jest `null` lub `uriPrefix` jest `null`, lub nie ma pasującego poświadczeń znajduje się w pamięci podręcznej, ta metoda nie działa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>