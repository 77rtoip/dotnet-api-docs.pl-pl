<Type Name="WebClient" FullName="System.Net.WebClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a4fc1c1cf5e30a94e065704361073d711c8d06b6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36549680" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebClient : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebClient extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebClient" />
  <TypeSignature Language="VB.NET" Value="Public Class WebClient&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClient : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type WebClient = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.WebClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia metody typowe dla danych wysyłania i odbierania danych z zasobu identyfikowanego przez identyfikator URI.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient> Klasa udostępnia typowe metody do wysyłania danych i odbierania danych z lokalnego, intranetu lub Internetu zasobu identyfikowanego przez identyfikator URI.  
  
 <xref:System.Net.WebClient> Klasy używa <xref:System.Net.WebRequest> klasy w celu zapewnienia dostępu do zasobów. <xref:System.Net.WebClient> wystąpienia mają dostęp do danych za pomocą dowolnego <xref:System.Net.WebRequest> zarejestrowany element podrzędny <xref:System.Net.WebRequest.RegisterPrefix%2A?displayProperty=nameWithType> metody.  
  
> [!NOTE]
>  Domyślnie program .NET Framework obsługuje identyfikatory URI, które rozpoczynają się od `http:`, `https:`, ftp:, a `file:` schemat identyfikatorów.  
  
 W poniższej tabeli opisano <xref:System.Net.WebClient> metody wysyłania danych do zasobu.  
  
|Metoda|Opis|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenWrite%2A>|Pobiera <xref:System.IO.Stream> używane do wysyłania danych do tego zasobu.|  
|<xref:System.Net.WebClient.OpenWriteAsync%2A>|Pobiera <xref:System.IO.Stream> używany do wysyłania danych do zasobu, bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.UploadData%2A>|Wysyła tablica bajtów do zasobów i zwraca <xref:System.Byte> tablica zawierająca odpowiedzi.|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|Wysyła <xref:System.Byte> tablicy do zasobu, bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.UploadFile%2A>|Wysyła pliku lokalnego do zasobów i zwraca <xref:System.Byte> tablica zawierająca odpowiedzi.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Wysyła pliku lokalnego do zasobu, bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.UploadValues%2A>|Wysyła <xref:System.Collections.Specialized.NameValueCollection> zasobów i zwraca <xref:System.Byte> tablica zawierająca odpowiedzi.|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Wysyła <xref:System.Collections.Specialized.NameValueCollection> zasobów i zwraca <xref:System.Byte> tablica zawierająca wszystkie odpowiedzi bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.UploadString%2A>|Wysyła <xref:System.String> do zasobu, bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.UploadStringAsync%2A>|Wysyła <xref:System.String> do zasobu, bez blokowania wątek wywołujący.|  
  
 W poniższej tabeli opisano <xref:System.Net.WebClient> metody pobierania danych z zasobu.  
  
|Metoda|Opis|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenRead%2A>|Zwraca dane z zasobu jako <xref:System.IO.Stream>.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Zwraca dane z zasobem, bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.DownloadData%2A>|Pobiera dane z zasobów i zwraca <xref:System.Byte> tablicy.|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Pobiera dane z zasobów i zwraca <xref:System.Byte> tablicy bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.DownloadFile%2A>|Pobiera dane z zasobu do pliku lokalnego.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Pobiera dane z zasobu w lokalnym pliku bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.DownloadString%2A>|Pobiera <xref:System.String> z zasobów i zwraca <xref:System.String>.|  
|<xref:System.Net.WebClient.DownloadStringAsync%2A>|Pobiera <xref:System.String> od zasobu bez blokowania wątek wywołujący.|  
  
 Można użyć <xref:System.Net.WebClient.CancelAsync%2A> metodę, aby anulować operacji asynchronicznych, które nie zostały zakończone.  
  
 A <xref:System.Net.WebClient> wystąpienia nie wysyła opcjonalne nagłówki HTTP domyślnie. Jeśli żądanie wymaga opcjonalne nagłówki, należy dodać nagłówka do <xref:System.Net.WebClient.Headers%2A> kolekcji. Na przykład aby zachować zapytań w odpowiedzi, należy dodać nagłówek agenta użytkownika. Ponadto serwerów może zwrócić 500 (wewnętrzny błąd serwera), jeśli brak nagłówka agenta użytkownika.  
  
 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> ustawiono `true` w <xref:System.Net.WebClient> wystąpień.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera identyfikator URI zasobu, przywraca je i wyświetla odpowiedzi.  
  
 [!code-cpp[NCLWebClientUserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientUserAgent/CPP/useragent.cpp#1)]
 [!code-csharp[NCLWebClientUserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientUserAgent/CS/useragent.cs#1)]
 [!code-vb[NCLWebClientUserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientUserAgent/VB/useragent.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do żądanego identyfikatora URI lub dowolny identyfikator URI, który żądanie jest przekierowywane do. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <block subset="none" type="overrides">
      <para>Klasy pochodne powinny wywoływać implementację klasy podstawowej <see cref="T:System.Net.WebClient" /> zapewnienie klasy pochodnej działa zgodnie z oczekiwaniami.</para>
    </block>
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.HttpWebRequest" />
    <altmember cref="T:System.Net.HttpWebResponse" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.WebClient" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślny konstruktor tworzy nowe wystąpienie klasy <xref:System.Net.WebClient> klasy. Domyślną metodą HTTP jest GET. Domyślną metodą FTP jest RETR. Wartość domyślna <xref:System.Net.WebClient.Encoding%2A> jest <xref:System.Text.Encoding.Default%2A>. Wartość domyślna <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> jest `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.WebClient> wystąpienia i używa jej pobieranie danych z serwera i wyświetlić je za pomocą konsoli systemu, aby pobrać dane z serwera i zapisze go w pliku i do przekazania wartości formularza do serwera i odbierania odpowiedzi.  
  
 [!code-cpp[WebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient/CPP/webclient.cpp#1)]
 [!code-csharp[WebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient/CS/webclient.cs#1)]
 [!code-vb[WebClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient/VB/webclient.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowReadStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowReadStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowReadStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReadStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy do buforowania danych z zasobem internetowym dla <see cref="T:System.Net.WebClient" /> wystąpienia.</summary>
        <value>Zwraca <see cref="T:System.Boolean" />.  
  
 <see langword="true" /> Aby włączyć buforowanie danych otrzymywanych z zasobem internetowym; <see langword="false" /> Aby wyłączyć buforowanie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Net.WebClient.AllowReadStreamBuffering%2A> właściwość jest `true`, dane są buforowane w pamięci, dlatego jest gotowy do odczytu przez aplikację.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWriteStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowWriteStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWriteStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWriteStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWriteStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWriteStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy dane zapisane zasobu internetowego dla buforu <see cref="T:System.Net.WebClient" /> wystąpienia.</summary>
        <value>Zwraca <see cref="T:System.Boolean" />.  
  
 <see langword="true" /> Aby włączyć buforowanie danych zapisywane z zasobem internetowym; <see langword="false" /> Aby wyłączyć buforowanie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Net.WebClient.AllowWriteStreamBuffering%2A> właściwość jest `true`, dane są buforowane w pamięci, dlatego mogą być zapisywane w wydajniej z zasobem internetowym w większych fragmentów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public string BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : string with get, set" Usage="System.Net.WebClient.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia podstawowy identyfikator URI dla żądań wysyłanych przez <see cref="T:System.Net.WebClient" />.</summary>
        <value>A <see cref="T:System.String" /> zawierający podstawowy identyfikator URI dla żądań wysyłanych przez <see cref="T:System.Net.WebClient" /> lub <see cref="F:System.String.Empty" /> , jeśli nie podano żadnego adresu podstawowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.BaseAddress%2A> Właściwość zawiera podstawowy identyfikator URI, która jest połączona z adresu względnego. Po wywołaniu metody, która przekazuje lub pobiera dane, <xref:System.Net.WebClient> ten podstawowy identyfikator URI obiektu łączy się z adres względny, określ w wywołaniu metody. Jeśli określisz bezwzględny identyfikator URI, <xref:System.Net.WebClient> nie używa <xref:System.Net.WebClient.BaseAddress%2A> wartości właściwości.  
  
 Aby usunąć wcześniej ustawionej wartości, ustaw tę właściwość na `null` lub ciąg pusty ("").  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera dane z serwera internetowego i wyświetla je w konsoli. Przy założeniu, że adres serwera (takich jak http://www.contoso.com) w `hostUri` i czy ścieżka do zasobu (np. / default.htm) znajduje się w `uriSuffix`.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#1)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#1)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Net.WebClient.BaseAddress" /> Ustawiono nieprawidłowy identyfikator URI. Wyjątek wewnętrzny może zawierać informacje, dzięki którym można znaleźć kod błędu.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebClient.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zasady pamięci podręcznej aplikacji dla wszystkich zasobów uzyskany przy użyciu tego wystąpienia WebClient <see cref="T:System.Net.WebRequest" /> obiektów.</summary>
        <value>A <see cref="T:System.Net.Cache.RequestCachePolicy" /> obiekt, który reprezentuje aplikacji buforowanego wymagania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="webClient.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje istnieje oczekująca operacja asynchroniczna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli operacja oczekuje się, ta metoda wywołuje metodę <xref:System.Net.WebRequest.Abort%2A> na podstawowych <xref:System.Net.WebRequest>.  
  
 Podczas wywoływania <xref:System.Net.WebClient.CancelAsync%2A>, aplikacja odbiera nadal zdarzenie ukończenia skojarzonych z operacją. Na przykład podczas wywoływania <xref:System.Net.WebClient.CancelAsync%2A> anulować <xref:System.Net.WebClient.DownloadStringAsync%2A> operacji, jeśli określono program obsługi zdarzeń dla <xref:System.Net.WebClient.DownloadStringCompleted> zdarzeń, obsługi zdarzenia otrzymuje powiadomienie, że operacja została zakończona. Aby dowiedzieć się, czy operacja została ukończona pomyślnie, sprawdź <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> właściwości dla klasy podstawowej z <xref:System.Net.DownloadDataCompletedEventArgs> zdarzeń obiektu danych są przekazywane do programu obsługi zdarzeń.  
  
 Jeśli nie asynchroniczne jest operacja w toku, ta metoda nie działa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poświadczenia sieciowe, które są wysyłane do hosta i używany do uwierzytelniania żądania.</summary>
        <value>
          <see cref="T:System.Net.ICredentials" /> Zawierający poświadczenia uwierzytelniania dla żądania. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Credentials%2A> Właściwość zawiera poświadczenia uwierzytelniania używany do uzyskania dostępu do zasobu na hoście. W większości przypadków po stronie klienta, należy użyć <xref:System.Net.CredentialCache.DefaultCredentials%2A>, które są poświadczeń aktualnie zalogowanego użytkownika. Aby to zrobić, ustaw <xref:System.Net.WebClient.UseDefaultCredentials%2A> właściwości `true` zamiast ustawienie dla tej właściwości.  
  
 Jeśli <xref:System.Net.WebClient> klasy jest używany w aplikacji warstwy środkowej, np. aplikację ASP.NET <xref:System.Net.CredentialCache.DefaultCredentials%2A> należą do konta, na którym działa strony ASP (poświadczeń po stronie serwera). Zazwyczaj ustawi tę właściwość do poświadczeń klienta w imieniu którego żądań.  
  
 Ze względów bezpieczeństwa po automatycznie przekierowania, przechowywane poświadczenia, które mają zostać uwzględnione w przekierowania w <xref:System.Net.CredentialCache> i przypisz je do tej właściwości. Ta właściwość zostanie automatycznie ustawiona do `null` na przekierowanie, jeśli zawiera więcej niż <xref:System.Net.CredentialCache>. Posiadające wartość tej właściwości jest automatycznie ustawiana `null` w tych warunkach uniemożliwia poświadczenia są wysyłane do dowolnego niezamierzone miejsca docelowego.
  
## Examples  
 Poniższy przykładowy kod używa poświadczeń systemu użytkownika do uwierzytelniania żądania.  
  
 [!code-cpp[WebClientAuthentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClientAuthentication/CPP/webclientauth.cpp#1)]
 [!code-csharp[WebClientAuthentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClientAuthentication/CS/webclientauth.cs#1)]
 [!code-vb[WebClientAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClientAuthentication/VB/webclientauth.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.WebRequest.Credentials" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobieranie zasobu jako <see cref="T:System.Byte" /> tablicy z określony identyfikator URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : string -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI, z którego można pobrać danych.</param>
        <summary>Pobieranie zasobu jako <see cref="T:System.Byte" /> tablicy z określony identyfikator URI.</summary>
        <returns>A <see cref="T:System.Byte" /> tablica zawierająca pobranych zasobów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadData%2A> Metoda pobiera zasób z określony przez identyfikator URI `address` parametru. Tej metody bloki podczas pobierania zasobów. Aby pobrać zasobu i kontynuuje wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadDataAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu żąda danych od serwera i wyświetla dane zwrócone. Przy założeniu, że `remoteUri` zawiera nieprawidłowy identyfikator URI dla żądanych danych.  
  
 [!code-cpp[WebClient_DownloadData#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadData/CPP/webclient_downloaddata.cpp#1)]
 [!code-csharp[WebClient_DownloadData#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadData/CS/webclient_downloaddata.cs#1)]
 [!code-vb[WebClient_DownloadData#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadData/VB/webclient_downloaddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania danych.</exception>
        <exception cref="T:System.NotSupportedException">Metoda została wywołana jednocześnie na wielu wątków.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As Uri) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : Uri -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Reprezentowany przez identyfikator URI <see cref="T:System.Uri" /> obiektu, z którego można pobrać danych.</param>
        <summary>Pobieranie zasobu jako <see cref="T:System.Byte" /> tablicy z określony identyfikator URI.</summary>
        <returns>A <see cref="T:System.Byte" /> tablica zawierająca pobranych zasobów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadData%2A> Metoda pobiera zasób z określony przez identyfikator URI `address` parametru. Tej metody bloki podczas pobierania zasobów. Aby pobrać zasobu i kontynuuje wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadDataAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
 **Uwaga** ten element członkowski danych wyjściowych informacji o śledzeniu, po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobieranie zasobu jako <see cref="T:System.Byte" /> tablicy z identyfikatora URI określony jako operację asynchroniczną. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri -&gt; unit" Usage="webClient.DownloadDataAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> zawierający identyfikator URI do pobrania.</param>
        <summary>Pobieranie zasobu jako <see cref="T:System.Byte" /> tablicy z identyfikatora URI określony jako operację asynchroniczną.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera określonego zasobu przy użyciu metody domyślnej dla protokołu skojarzone z schemat identyfikatora URI określony w `address`. Dane są pobierane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Ta metoda nie blokuje wątek wywołujący podczas pobierania zasobów. Aby pobrać zasobów i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadData%2A> metody. Po zakończeniu pobierania <xref:System.Net.WebClient.DownloadDataCompleted> zdarzenia. Aplikacja musi obsługiwać tego zdarzenia, aby otrzymać powiadomienie. Pobrane dane są dostępne w <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> właściwości.  
  
 Można użyć <xref:System.Net.WebClient.CancelAsync%2A> metodę, aby anulować operacji asynchronicznych, które nie zostały zakończone.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadDataAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> zawierający identyfikator URI do pobrania.</param>
        <param name="userToken">Obiekt użytkownika, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej.</param>
        <summary>Pobieranie zasobu jako <see cref="T:System.Byte" /> tablicy z identyfikatora URI określony jako operację asynchroniczną.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera określonego zasobu przy użyciu metody domyślnej dla protokołu skojarzone z schemat identyfikatora URI określony w `address`. Dane są pobierane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Ta metoda nie blokuje wątek wywołujący podczas pobierania zasobów. Aby pobrać zasobów i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadData%2A> metody. Po zakończeniu pobierania <xref:System.Net.WebClient.DownloadDataCompleted> zdarzenia. Aplikacja musi obsługiwać tego zdarzenia, aby otrzymać powiadomienie. Pobrane dane są dostępne w <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> właściwości.  
  
 Można użyć <xref:System.Net.WebClient.CancelAsync%2A> metodę, aby anulować operacji asynchronicznych, które nie zostały zakończone.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadDataCompleted As DownloadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadDataCompletedEventHandler ^ DownloadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " Usage="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji pobierania danych asynchronicznych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane każdorazowo zakończeniu operacji pobierania danych asynchronicznych. Pobieranie asynchroniczne danych są uruchamiane przez wywołanie metody <xref:System.Net.WebClient.DownloadDataAsync%2A> metody.  
  
 <xref:System.Net.DownloadDataCompletedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.Net.DownloadDataCompletedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie program obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#21](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#21)]
 [!code-csharp[NCLWebClientAsync#21](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#21)]
 [!code-vb[NCLWebClientAsync#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobieranie zasobu jako <see cref="T:System.Byte" /> tablicy z identyfikatora URI określony jako operację asynchroniczną za pomocą obiektu zadania. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Pobieranie zasobu jako <see cref="T:System.Byte" /> tablicy z identyfikatora URI określony jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablica zawierająca pobranych zasobów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po pobraniu zasobów danych.  
  
 Ta metoda pobiera określonego zasobu przy użyciu metody domyślnej dla protokołu skojarzone z schemat identyfikatora URI określony w `address` parametru. Dane są pobierane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Poniższy przykład kodu żąda danych od serwera i wyświetla dane zwrócone. Przy założeniu, że `remoteUri` zawiera nieprawidłowy identyfikator URI dla żądanych danych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Pobieranie zasobu jako <see cref="T:System.Byte" /> tablicy z identyfikatora URI określony jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablica zawierająca pobranych zasobów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po pobraniu zasobów danych.  
  
 Ta metoda pobiera określonego zasobu przy użyciu metody domyślnej dla protokołu skojarzone z schemat identyfikatora URI określony w `address` parametru. Dane są pobierane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
 **Uwaga** ten element członkowski danych wyjściowych informacji o śledzeniu, po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera zasób o określonym identyfikatorze URI do pliku lokalnego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI, z którego można pobrać danych.</param>
        <param name="fileName">Nazwa pliku lokalnego, który będzie odbierać dane.</param>
        <summary>Pobiera zasób o określonym identyfikatorze URI do pliku lokalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadFile%2A> — Metoda pobiera dane pliku lokalnego z określonymi w identyfikatorze URI `address` parametru. Tej metody bloki podczas pobierania zasobów. Aby pobrać zasobu i kontynuuje wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadFileAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Przy użyciu tej metody w aplikacji warstwy środkowej, takich jak strony ASP.NET, zostanie zwrócony błąd, jeśli konto, pod którą wykonuje aplikacji nie ma uprawnień dostępu do tego pliku.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera plik z http://www.contoso.com na lokalnym dysku twardym.  
  
 [!code-cpp[WebClient_DownloadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadFile/CPP/webclient_downloadfile.cpp#1)]
 [!code-csharp[WebClient_DownloadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadFile/CS/webclient_downloadfile.cs#1)]
 [!code-vb[WebClient_DownloadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadFile/VB/webclient_downloadfile.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="filename" /> jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.  - lub - plik nie istnieje.  - lub - wystąpił błąd podczas pobierania danych.</exception>
        <exception cref="T:System.NotSupportedException">Metoda została wywołana jednocześnie na wielu wątków.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Aby zapisać plik <paramref name="fileName" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI określony jako <see cref="T:System.String" />, z którego można pobrać danych.</param>
        <param name="fileName">Nazwa pliku lokalnego, który będzie odbierać dane.</param>
        <summary>Pobiera zasób o określonym identyfikatorze URI do pliku lokalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.DownloadFile%2A> — Metoda pobiera dane pliku lokalnego z określonymi w identyfikatorze URI `address` parametru. Tej metody bloki podczas pobierania zasobów. Aby pobrać zasobu i kontynuuje wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadFileAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Przy użyciu tej metody w aplikacji warstwy środkowej, takich jak strony ASP.NET, zostanie zwrócony błąd, jeśli konto, pod którą wykonuje aplikacji nie ma uprawnień dostępu do tego pliku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="filename" /> jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.  - lub - plik nie istnieje.  - lub - wystąpił błąd podczas pobierania danych.</exception>
        <exception cref="T:System.NotSupportedException">Metoda została wywołana jednocześnie na wielu wątków.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Aby zapisać plik <paramref name="fileName" />. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera określony zasób do pliku lokalnego jako operację asynchroniczną i zwraca obiekt zadania. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <param name="fileName">Nazwa pliku, który można umieścić na komputerze lokalnym.</param>
        <summary>Pobiera w lokalnym pliku zasobu z określonym identyfikatorem URI. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera zasobu pod adresem URI określonymi w `address` parametru. Po zakończeniu pobierania pomyślnie pobrany plik ma nazwę `fileName` na komputerze lokalnym. Plik jest pobierany asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymywać powiadomienia, gdy plik jest dostępny, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.DownloadFileCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas pobierania zasobów. Aby zablokować podczas oczekiwania na pobieranie, aby zakończyć, użyj jednej z <xref:System.Net.WebClient.DownloadFile%2A> metody.  
  
 Można użyć <xref:System.Net.WebClient.CancelAsync%2A> metodę, aby anulować operacji asynchronicznych, które nie zostały zakończone.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie został określony bezwzględnym identyfikatorem URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Przy użyciu tej metody na stronie platformy ASP.NET, zostanie zwrócony błąd, jeśli konto, które wykonuje stronie w obszarze nie ma uprawnienia dostępu do pliku lokalnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
        <exception cref="T:System.InvalidOperationException">Lokalny plik określony przez <paramref name="fileName" /> jest używany przez inny wątek.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string * obj -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <param name="fileName">Nazwa pliku, który można umieścić na komputerze lokalnym.</param>
        <param name="userToken">Obiekt użytkownika, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej.</param>
        <summary>Pobiera w lokalnym pliku zasobu z określonym identyfikatorem URI. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera zasobu pod adresem URI określonymi w `address` parametru. Po zakończeniu pobierania pomyślnie pobrany plik ma nazwę `fileName` na komputerze lokalnym. Plik jest pobierany asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymywać powiadomienia, gdy plik jest dostępny, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.DownloadFileCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas pobierania zasobów. Aby zablokować podczas oczekiwania na pobieranie, aby zakończyć, użyj jednej z <xref:System.Net.WebClient.DownloadFile%2A> metody.  
  
 Można użyć <xref:System.Net.WebClient.CancelAsync%2A> metodę, aby anulować operacji asynchronicznych, które nie zostały zakończone.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie został określony bezwzględnym identyfikatorem URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Przy użyciu tej metody na stronie platformy ASP.NET, zostanie zwrócony błąd, jeśli konto, które wykonuje stronie w obszarze nie ma uprawnienia dostępu do pliku lokalnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
        <exception cref="T:System.InvalidOperationException">Lokalny plik określony przez <paramref name="fileName" /> jest używany przez inny wątek.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ DownloadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji pobierania plików asynchronicznego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane każdorazowo zakończeniu operacji pobierania plików asynchronicznego. Pobieranie asynchroniczne plików są uruchamiane przez wywołanie metody <xref:System.Net.WebClient.DownloadFileAsync%2A> metody.  
  
 <xref:System.ComponentModel.AsyncCompletedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.ComponentModel.AsyncCompletedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie program obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera określony zasób do pliku lokalnego jako operację asynchroniczną za pomocą obiektu zadania. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As String, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <param name="fileName">Nazwa pliku, który można umieścić na komputerze lokalnym.</param>
        <summary>Pobiera określony zasób do pliku lokalnego jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task" />.  Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task> obiektu ukończy po pobraniu zasobów danych.  
  
 Ta metoda pobiera zasobu pod adresem URI określonymi w `address` parametru. Po zakończeniu pobierania pomyślnie pobrany plik ma nazwę `fileName` na komputerze lokalnym. Plik jest pobierany asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Można użyć <xref:System.Net.WebClient.CancelAsync%2A> metodę, aby anulować operacji asynchronicznych, które nie zostały zakończone.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie został określony bezwzględnym identyfikatorem URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Przy użyciu tej metody na stronie platformy ASP.NET, zostanie zwrócony błąd, jeśli konto, które wykonuje stronie w obszarze nie ma uprawnienia dostępu do pliku lokalnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
        <exception cref="T:System.InvalidOperationException">Lokalny plik określony przez <paramref name="fileName" /> jest używany przez inny wątek.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As Uri, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <param name="fileName">Nazwa pliku, który można umieścić na komputerze lokalnym.</param>
        <summary>Pobiera określony zasób do pliku lokalnego jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task" />.  Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task> obiektu ukończy po pobraniu zasobów danych.  
  
 Ta metoda pobiera zasobu pod adresem URI określonymi w `address` parametru. Po zakończeniu pobierania pomyślnie pobrany plik ma nazwę `fileName` na komputerze lokalnym. Plik jest pobierany asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Można użyć <xref:System.Net.WebClient.CancelAsync%2A> metodę, aby anulować operacji asynchronicznych, które nie zostały zakończone.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie został określony bezwzględnym identyfikatorem URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Przy użyciu tej metody na stronie platformy ASP.NET, zostanie zwrócony błąd, jeśli konto, które wykonuje stronie w obszarze nie ma uprawnienia dostępu do pliku lokalnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
        <exception cref="T:System.InvalidOperationException">Lokalny plik określony przez <paramref name="fileName" /> jest używany przez inny wątek.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadProgressChanged As DownloadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadProgressChangedEventHandler ^ DownloadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " Usage="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy operacja pobierania asynchroniczne pomyślnie przesyła niektórych lub wszystkich danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane każdorazowo asynchronicznego pobierania sprawia, że postęp. To zdarzenie jest wywoływane, gdy pliki do pobrania są uruchamiane przy użyciu dowolnej z poniższych metod.  
  
|Metoda|Opis|  
|------------|-----------------|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Pobiera dane z zasobów i zwraca <xref:System.Byte> tablicy bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Pobiera dane z zasobu w lokalnym pliku bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Zwraca dane z zasobem, bez blokowania wątek wywołujący.|  
  
 <xref:System.Net.DownloadProgressChangedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.Net.DownloadProgressChangedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
> [!NOTE]
>  Pasywnego FTP transferu plików zawsze będzie widoczna procent postępu zero, ponieważ serwer nie wysłał rozmiar pliku. Aby wyświetlić postęp, można zmienić połączeń FTP na aktywny przez zastąpienie <xref:System.Net.WebClient.GetWebRequest%2A> metody wirtualnej:  
  
```csharp  
internal class MyWebClient : WebClient
{  
    protected override WebRequest GetWebRequest(Uri address)
    {  
        FtpWebRequest req = (FtpWebRequest)base.GetWebRequest(address);  
        req.UsePassive = false;  
        return req;  
    }  
}  
```  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie program obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 Poniższy przykładowy kod przedstawia implementację programu obsługi dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pliki do pobrania żądanego zasobu jako <see cref="T:System.String" />. Można określić jako zasób do pobrania <see cref="T:System.String" /> zawierający identyfikator URI lub <see cref="T:System.Uri" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : string -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.String" /> zawierający identyfikator URI do pobrania.</param>
        <summary>Pliki do pobrania żądanego zasobu jako <see cref="T:System.String" />. Zasób do pobrania jest określony jako <see cref="T:System.String" /> zawierający identyfikator URI.</summary>
        <returns>A <see cref="T:System.String" /> zawierający żądanego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera określonego zasobu. Po pobraniu zasobu, metoda korzysta z kodowaniem określonym na <xref:System.Net.WebClient.Encoding%2A> właściwości zasobu, aby przekonwertować <xref:System.String>. Tej metody bloki podczas pobierania zasobów. Aby pobrać zasobu i kontynuuje wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadStringAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wywołanie tej metody.  
  
 [!code-cpp[NCLWebClientAsync#25](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#25)]
 [!code-csharp[NCLWebClientAsync#25](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#25)]
 [!code-vb[NCLWebClientAsync#25](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
        <exception cref="T:System.NotSupportedException">Metoda została wywołana jednocześnie na wielu wątków.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : Uri -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> obiekt, który zawiera identyfikator URI do pobrania.</param>
        <summary>Pliki do pobrania żądanego zasobu jako <see cref="T:System.String" />. Zasób do pobrania jest określony jako <see cref="T:System.Uri" />.</summary>
        <returns>A <see cref="T:System.String" /> zawierający żądanego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera określonego zasobu. Po pobraniu zasobu, metoda korzysta z kodowaniem określonym na <xref:System.Net.WebClient.Encoding%2A> właściwości zasobu, aby przekonwertować <xref:System.String>. Tej metody bloki podczas pobierania zasobów. Aby pobrać zasobu i kontynuuje wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadStringAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
        <exception cref="T:System.NotSupportedException">Metoda została wywołana jednocześnie na wielu wątków.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera zasób określony jako <see cref="T:System.String" /> lub <see cref="T:System.Uri" />. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri -&gt; unit" Usage="webClient.DownloadStringAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> zawierający identyfikator URI do pobrania.</param>
        <summary>Pobiera zasób określony jako <see cref="T:System.Uri" />. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zasób jest ładowany asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Po pobraniu zasobu, ta metoda korzysta z kodowaniem określonym na <xref:System.Net.WebClient.Encoding%2A> właściwości zasobu, aby przekonwertować <xref:System.String>. Ta metoda nie blokuje wątek wywołujący podczas pobierania zasobów. Aby pobrać zasobów i blok podczas oczekiwania na odpowiedź serwera, należy użyć <xref:System.Net.WebClient.DownloadString%2A> metody. Po zakończeniu pobierania <xref:System.Net.WebClient.DownloadStringCompleted> zdarzenia. Aplikacja musi obsługiwać tego zdarzenia, aby otrzymać powiadomienie. Pobrany ciągu jest dostępna w <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> właściwości.  
  
 Można użyć <xref:System.Net.WebClient.CancelAsync%2A> metodę, aby anulować operacji asynchronicznych, które nie zostały zakończone.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadStringAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> zawierający identyfikator URI do pobrania.</param>
        <param name="userToken">Obiekt użytkownika, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej.</param>
        <summary>Pobiera określony ciąg do określonego zasobu. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zasób jest ładowany asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Po pobraniu zasobu, ta metoda korzysta z kodowaniem określonym na <xref:System.Net.WebClient.Encoding%2A> właściwości zasobu, aby przekonwertować <xref:System.String>. Ta metoda nie blokuje wątek wywołujący podczas pobierania zasobów. Aby pobrać zasobów i blok podczas oczekiwania na odpowiedź serwera, należy użyć <xref:System.Net.WebClient.DownloadString%2A> metody. Po zakończeniu pobierania <xref:System.Net.WebClient.DownloadStringCompleted> zdarzenia. Aplikacja musi obsługiwać tego zdarzenia, aby otrzymać powiadomienie. Pobrany ciągu jest dostępna w <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> właściwości.  
  
 Można użyć <xref:System.Net.WebClient.CancelAsync%2A> metodę, aby anulować operacji asynchronicznych, które nie zostały zakończone.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadStringCompleted As DownloadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadStringCompletedEventHandler ^ DownloadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " Usage="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji asynchronicznej pobierania zasobów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane każdorazowo kończy operację asynchroniczną można pobrać zasobu jako ciąg. Te operacje są uruchamiane przez wywołanie metody <xref:System.Net.WebClient.DownloadStringAsync%2A> metody.  
  
 <xref:System.Net.DownloadStringCompletedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.Net.DownloadStringCompletedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie program obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#28](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#28)]
 [!code-csharp[NCLWebClientAsync#28](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#28)]
 [!code-vb[NCLWebClientAsync#28](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobieranie zasobu jako <see cref="T:System.String" /> z identyfikatora URI określony jako operację asynchroniczną za pomocą obiektu zadania.  Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Pobieranie zasobu jako <see cref="T:System.String" /> z identyfikatora URI określony jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablica zawierająca pobranych zasobów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po pobraniu zasobów danych.  Zasób jest ładowany asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Po pobraniu zasobu, ta metoda korzysta z kodowaniem określonym na <xref:System.Net.WebClient.Encoding%2A> właściwości zasobu, aby przekonwertować <xref:System.String>. Ta metoda nie blokuje wątek wywołujący podczas pobierania zasobów.  
  
 Można użyć <xref:System.Net.WebClient.CancelAsync%2A> metodę, aby anulować operacji asynchronicznych, które nie zostały zakończone.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Pobieranie zasobu jako <see cref="T:System.String" /> z identyfikatora URI określony jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablica zawierająca pobranych zasobów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po pobraniu zasobów danych. Zasób jest ładowany asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Po pobraniu zasobu, ta metoda korzysta z kodowaniem określonym na <xref:System.Net.WebClient.Encoding%2A> właściwości zasobu, aby przekonwertować <xref:System.String>. Ta metoda nie blokuje wątek wywołujący podczas pobierania zasobów.  
  
 Można użyć <xref:System.Net.WebClient.CancelAsync%2A> metodę, aby anulować operacji asynchronicznych, które nie zostały zakończone.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Net.WebClient.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera i ustawia <see cref="T:System.Text.Encoding" /> używany do przekazywania i pobierania ciągów.</summary>
        <value>A <see cref="T:System.Text.Encoding" /> używany do kodowania ciągów. Wartość domyślna tej właściwości jest kodowanie zwrócony przez <see cref="P:System.Text.Encoding.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadString%2A> i <xref:System.Net.WebClient.UploadStringAsync%2A> metody używać tej właściwości, aby przekonwertować określony ciąg do <xref:System.Byte> tablicy przed przekazaniem ciąg. Aby uzyskać dodatkowe informacje, zobacz <xref:System.Text.Encoding.GetBytes%2A> metody.  
  
 Podczas pobierania ciągu przy użyciu <xref:System.Net.WebClient.DownloadString%2A> lub <xref:System.Net.WebClient.DownloadStringAsync%2A> metod, <xref:System.Net.WebClient> używa <xref:System.Text.Encoding> zwróconych przez to, aby przekonwertować pobrany <xref:System.Byte> tablicy na ciąg. Aby uzyskać dodatkowe informacje, zobacz <xref:System.Text.Encoding.GetString%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie dla tej właściwości wartości.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebRequest(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebRequest (address As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ address);" />
      <MemberSignature Language="F#" Value="abstract member GetWebRequest : Uri -&gt; System.Net.WebRequest&#xA;override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="webClient.GetWebRequest address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> identyfikującym rozszerzenie zasobu do żądania.</param>
        <summary>Zwraca <see cref="T:System.Net.WebRequest" /> obiektu określonego zasobu.</summary>
        <returns>Nowy <see cref="T:System.Net.WebRequest" /> obiektu określonego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia skopiowanie istniejącej <xref:System.Net.WebClient.Headers%2A>, <xref:System.Net.WebClient.Credentials%2A>i metodę, aby nowo utworzony <xref:System.Net.WebRequest> obiektu.  
  
 Ta metoda może być wywoływana tylko przez klasy, które dziedziczą z <xref:System.Net.WebClient>. Są dostarczane do udostępnienia dziedziczenia odpowiadającego <xref:System.Net.WebRequest> obiektu. Klasy pochodne powinny wywoływać implementację klasy podstawowej <xref:System.Net.WebClient.GetWebRequest%2A> zapewnienie metody działa zgodnie z oczekiwaniami.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#1)]
 [!code-csharp[NCLCustomWebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca <see cref="T:System.Net.WebResponse" /> dla określonego <see cref="T:System.Net.WebRequest" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request">A <see cref="T:System.Net.WebRequest" /> umożliwiające uzyskanie odpowiedzi.</param>
        <summary>Zwraca <see cref="T:System.Net.WebResponse" /> dla określonego <see cref="T:System.Net.WebRequest" />.</summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> zawierające odpowiedzi dla określonego <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt zwrócony przez tę metodę można uzyskać przez wywołanie <xref:System.Net.WebRequest.GetResponse%2A> metody na określonym <xref:System.Net.WebRequest> obiektu.  
  
 Ta metoda może być wywoływana tylko przez klasy, które dziedziczą z <xref:System.Net.WebClient>. Są dostarczane do udostępnienia dziedziczenia odpowiadającego <xref:System.Net.WebResponse> obiektu.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#2)]
 [!code-csharp[NCLCustomWebClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse (request, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request">A <see cref="T:System.Net.WebRequest" /> umożliwiające uzyskanie odpowiedzi.</param>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> Uzyskanego z poprzedniego wywołania <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> .</param>
        <summary>Zwraca <see cref="T:System.Net.WebResponse" /> dla określonego <see cref="T:System.Net.WebRequest" /> przy użyciu określonego <see cref="T:System.IAsyncResult" />.</summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> zawierające odpowiedzi dla określonego <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt zwrócony przez tę metodę można uzyskać przez wywołanie <xref:System.Net.WebRequest.EndGetResponse%2A> metody na określonym <xref:System.Net.WebRequest> obiektu.  
  
 Ta metoda może być wywoływana tylko przez klasy, które dziedziczą z <xref:System.Net.WebClient>. Są dostarczane do udostępnienia dziedziczenia odpowiadającego <xref:System.Net.WebResponse> obiektu.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#3)]
 [!code-csharp[NCLCustomWebClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebClient.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolekcję par nazw i wartości nagłówka skojarzone z żądaniem.</summary>
        <value>A <see cref="T:System.Net.WebHeaderCollection" /> zawierający pary nazwa/wartość nagłówka skojarzone z tym żądaniem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Headers%2A> Właściwość zawiera <xref:System.Net.WebHeaderCollection> zawierające nagłówków protokołu który <xref:System.Net.WebClient> wysyła z żądaniem.  
  
 Niektóre typowe nagłówki są traktowane jako ograniczone i są chronione przez system i nie można ustawić ani zmienić w <xref:System.Net.WebHeaderCollection> obiektu. Próby wartość dla jednego z tych nagłówków ograniczeniami <xref:System.Net.WebHeaderCollection> obiekt skojarzony z <xref:System.Net.WebClient> obiektu spowoduje zgłoszenie wyjątku później, podczas próby wysłania <xref:System.Net.WebClient> żądania.  
  
 Ograniczone nagłówki chroniona przez system obejmują, ale nie są ograniczone do następujących:  
  
-   Data  
  
-   Host  
  
 Ponadto niektóre inne nagłówki są również ograniczony przy użyciu <xref:System.Net.WebClient> obiektu. Nagłówki ograniczeniami te obejmują, ale nie są ograniczone do następujących:  
  
-   Zaakceptuj  
  
-   Połączenia  
  
-   Długość zawartości  
  
-   Oczekiwane (Jeśli wartość jest równa "100-kontynuować"  
  
-   If-Modified-Since  
  
-   Zakres  
  
-   Transfer-Encoding  
  
 <xref:System.Net.HttpWebRequest> Klasa ma właściwości do ustawiania niektórych nagłówków powyżej. Jeśli jest ważna w przypadku aplikacji ustawić te nagłówki, a następnie <xref:System.Net.HttpWebRequest> klasy powinien być używany zamiast <xref:System.Net.WebRequest> klasy.  
  
 Nie należy zakładać, że wartości nagłówka pozostaną bez zmian, ponieważ serwery sieci Web i pamięci podręczne może zmienić lub dodać nagłówków żądania sieci Web.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.WebClient.Headers%2A> kolekcji można ustawić HTTP `Content-Type` nagłówka do `application/x-www-form-urlencoded,` powiadomiono serwera, na którym dane formularza jest dołączony do wpisu.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.Headers" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Net.WebClient.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informację, czy żądania sieci Web jest w toku.</summary>
        <value>
          <see langword="true" /> Jeśli żądanie sieci Web jest nadal w toku; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadDataCompleted (System.Net.DownloadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadDataCompleted(class System.Net.DownloadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadDataCompleted (e As DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadDataCompleted(System::Net::DownloadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Net.DownloadDataCompletedEventArgs" /> obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.DownloadDataCompleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z tej klasy można zastąpić to metoda wykonania dodatkowych zadań, kiedy <xref:System.Net.WebClient.DownloadDataCompleted> zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md)  
  
 <xref:System.Net.WebClient.OnDownloadDataCompleted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#4)]
 [!code-csharp[NCLCustomWebClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadFileCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadFileCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadFileCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.DownloadFileCompleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z tej klasy można zastąpić to metoda wykonania dodatkowych zadań, kiedy <xref:System.Net.WebClient.DownloadFileCompleted> zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Net.WebClient.OnDownloadFileCompleted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#5)]
 [!code-csharp[NCLCustomWebClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadProgressChanged (System.Net.DownloadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadProgressChanged(class System.Net.DownloadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadProgressChanged (e As DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadProgressChanged(System::Net::DownloadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit&#xA;override this.OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnDownloadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Net.DownloadProgressChangedEventArgs" /> obiekt zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.DownloadProgressChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z tej klasy można zastąpić to metoda wykonania dodatkowych zadań, kiedy <xref:System.Net.WebClient.DownloadProgressChanged> zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Net.WebClient.OnDownloadProgressChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#12)]
 [!code-csharp[NCLCustomWebClient#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadStringCompleted (System.Net.DownloadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadStringCompleted(class System.Net.DownloadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadStringCompleted (e As DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadStringCompleted(System::Net::DownloadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Net.DownloadStringCompletedEventArgs" /> obiekt zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.DownloadStringCompleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z tej klasy można zastąpić to metoda wykonania dodatkowych zadań, kiedy <xref:System.Net.WebClient.DownloadStringCompleted> zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Net.WebClient.OnDownloadStringCompleted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#6)]
 [!code-csharp[NCLCustomWebClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenReadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenReadCompleted (System.Net.OpenReadCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenReadCompleted(class System.Net.OpenReadCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenReadCompleted (e As OpenReadCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenReadCompleted(System::Net::OpenReadCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit&#xA;override this.OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenReadCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenReadCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Net.OpenReadCompletedEventArgs" /> obiekt zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.OpenReadCompleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z tej klasy można zastąpić to metoda wykonania dodatkowych zadań, kiedy <xref:System.Net.WebClient.OpenReadCompleted> zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Net.WebClient.OnOpenReadCompleted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#7)]
 [!code-csharp[NCLCustomWebClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenWriteCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenWriteCompleted (System.Net.OpenWriteCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenWriteCompleted(class System.Net.OpenWriteCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenWriteCompleted (e As OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenWriteCompleted(System::Net::OpenWriteCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit&#xA;override this.OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenWriteCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenWriteCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Net.OpenWriteCompletedEventArgs" /> obiekt zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.OpenWriteCompleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z tej klasy można zastąpić to metoda wykonania dodatkowych zadań, kiedy <xref:System.Net.WebClient.OpenWriteCompleted> zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Net.WebClient.OnOpenWriteCompleted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#8)]
 [!code-csharp[NCLCustomWebClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadDataCompleted (System.Net.UploadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadDataCompleted(class System.Net.UploadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadDataCompleted (e As UploadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadDataCompleted(System::Net::UploadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit&#xA;override this.OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadDataCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Net.UploadDataCompletedEventArgs" /> obiekt zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.UploadDataCompleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z tej klasy można zastąpić to metoda wykonania dodatkowych zadań, kiedy <xref:System.Net.WebClient.UploadDataCompleted> zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Net.WebClient.OnUploadDataCompleted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#9)]
 [!code-csharp[NCLCustomWebClient#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadFileCompleted (System.Net.UploadFileCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadFileCompleted(class System.Net.UploadFileCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadFileCompleted (e As UploadFileCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadFileCompleted(System::Net::UploadFileCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit&#xA;override this.OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadFileCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Net.UploadFileCompletedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.UploadFileCompleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z tej klasy można zastąpić to metoda wykonania dodatkowych zadań, kiedy <xref:System.Net.WebClient.UploadFileCompleted> zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Net.WebClient.OnUploadFileCompleted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#10)]
 [!code-csharp[NCLCustomWebClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#10)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadProgressChanged (System.Net.UploadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadProgressChanged(class System.Net.UploadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadProgressChanged (e As UploadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadProgressChanged(System::Net::UploadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit&#xA;override this.OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnUploadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Net.UploadProgressChangedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.UploadProgressChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z tej klasy można zastąpić to metoda wykonania dodatkowych zadań, kiedy <xref:System.Net.WebClient.UploadProgressChanged> zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Net.WebClient.OnUploadProgressChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#13)]
 [!code-csharp[NCLCustomWebClient#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#13)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadStringCompleted (System.Net.UploadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadStringCompleted(class System.Net.UploadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadStringCompleted (e As UploadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadStringCompleted(System::Net::UploadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit&#xA;override this.OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadStringCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Net.UploadStringCompletedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.UploadStringCompleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z tej klasy można zastąpić to metoda wykonania dodatkowych zadań, kiedy <xref:System.Net.WebClient.UploadStringCompleted> zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Net.WebClient.OnUploadStringCompleted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#11)]
 [!code-csharp[NCLCustomWebClient#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadValuesCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadValuesCompleted (System.Net.UploadValuesCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadValuesCompleted(class System.Net.UploadValuesCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadValuesCompleted (e As UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadValuesCompleted(System::Net::UploadValuesCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit&#xA;override this.OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadValuesCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadValuesCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Net.UploadValuesCompletedEventArgs" /> obiekt zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.UploadValuesCompleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które dziedziczą z tej klasy można zastąpić to metoda wykonania dodatkowych zadań, kiedy <xref:System.Net.WebClient.UploadValuesCompleted> zdarzenie.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Net.WebClient.OnUploadValuesCompleted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację tej metody, który można dostosować przez klasę pochodną <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#14)]
 [!code-csharp[NCLCustomWebClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnWriteStreamClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteStreamClosed (System.Net.WriteStreamClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteStreamClosed(class System.Net.WriteStreamClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteStreamClosed (e As WriteStreamClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteStreamClosed(System::Net::WriteStreamClosedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit&#xA;override this.OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit" Usage="webClient.OnWriteStreamClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.WriteStreamClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Net.WriteStreamClosedEventArgs" /> obiekt zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Net.WebClient.WriteStreamClosed" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenRead">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zostanie otwarty do odczytu strumienia danych pobrane z zasobów z określonego identyfikatora URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : string -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI określony jako <see cref="T:System.String" /> do pobrania danych.</param>
        <summary>Zostanie otwarty do odczytu strumienia danych pobrane z zasobu o identyfikatorze URI określony jako <see cref="T:System.String" />.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> używany do odczytu danych z zasobem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenRead%2A> Metoda tworzy <xref:System.IO.Stream> wystąpienie używane do odczytu treści zasobu określonego przez `address` parametru. Tej metody bloki podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumieniu, użyj jednej z <xref:System.Net.WebClient.OpenReadAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest `null`, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu <xref:System.IO.Stream> w celu uniknięcia wyczerpania zasobów systemowych.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu otwiera zasobu identyfikowanego przez `uriString` i wyświetla wyniki w konsoli systemowej. Należy pamiętać, że <xref:System.IO.Stream> zwrócony przez <xref:System.Net.WebClient.OpenRead%2A> jest zamknięty, jeśli dane zostały odczytane.  
  
 [!code-cpp[WebClient_OpenRead#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenRead/CPP/webclient_openread.cpp#1)]
 [!code-csharp[WebClient_OpenRead#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenRead/CS/webclient_openread.cs#1)]
 [!code-vb[WebClient_OpenRead#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenRead/VB/webclient_openread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : Uri -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI określony jako <see cref="T:System.Uri" /> do pobrania danych.</param>
        <summary>Zostanie otwarty do odczytu strumienia danych pobrane z zasobu o identyfikatorze URI określony jako <see cref="T:System.Uri" /></summary>
        <returns>A <see cref="T:System.IO.Stream" /> używany do odczytu danych z zasobem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenRead%2A> Metoda tworzy <xref:System.IO.Stream> wystąpienie używane do odczytu treści zasobu określonego przez `address` parametru. Tej metody bloki podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumieniu, użyj jednej z <xref:System.Net.WebClient.OpenReadAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest `null`, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu <xref:System.IO.Stream> w celu uniknięcia wyczerpania zasobów systemowych.  
  
 **Uwaga** ten element członkowski danych wyjściowych informacji o śledzeniu, po włączeniu śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania danych.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera zawierających określony zasób strumień do odczytu. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri -&gt; unit" Usage="webClient.OpenReadAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Otwiera zawierających określony zasób strumień do odczytu. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do dostępu do zasobu określonego przez `address` parametru. Strumień uzyskuje się za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymywać powiadomienia, gdy strumień jest dostępna, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.OpenReadCompleted> zdarzeń.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu z <xref:System.IO.Stream> w celu uniknięcia wyczerpania zasobów systemowych.  
  
 Ta metoda nie blokuje wątek wywołujący, gdy strumień jest otwierane. Aby zablokować podczas oczekiwania na strumieniu, użyj <xref:System.Net.WebClient.OpenReadAsync%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie został określony bezwzględnym identyfikatorem URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI żądanego zasobu. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest `null`, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i adres jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri * obj -&gt; unit" Usage="webClient.OpenReadAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <param name="userToken">Obiekt użytkownika, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej.</param>
        <summary>Otwiera zawierających określony zasób strumień do odczytu. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do dostępu do zasobu określonego przez `address` parametru. Strumień uzyskuje się za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymywać powiadomienia, gdy strumień jest dostępna, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.OpenReadCompleted> zdarzeń.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu z <xref:System.IO.Stream> w celu uniknięcia wyczerpania zasobów systemowych.  
  
 Ta metoda nie blokuje wątek wywołujący, gdy strumień jest otwierane. Aby zablokować podczas oczekiwania na strumieniu, użyj <xref:System.Net.WebClient.OpenRead%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie został określony bezwzględnym identyfikatorem URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI żądanego zasobu. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest `null`, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i adres jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenReadCompletedEventHandler OpenReadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenReadCompletedEventHandler OpenReadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenReadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenReadCompleted As OpenReadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenReadCompletedEventHandler ^ OpenReadCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " Usage="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenReadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji asynchronicznej można otworzyć strumienia zawierający zasób.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane zawsze, gdy kończy operację asynchroniczną można otworzyć strumienia zawierający zasób. Te operacje są uruchamiane przez wywołanie metody <xref:System.Net.WebClient.OpenReadAsync%2A> metody.  
  
 <xref:System.Net.OpenReadCompletedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.Net.OpenReadCompletedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie program obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#30](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#30)]
 [!code-csharp[NCLWebClientAsync#30](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#30)]
 [!code-vb[NCLWebClientAsync#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zostanie otwarty do odczytu strumienia zawierających określony zasób jako operację asynchroniczną za pomocą obiektu zadania. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Zostanie otwarty do odczytu strumienia zawierających określony zasób jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.IO.Stream" /> używany do odczytu danych z zasobem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po otwarciu strumień do odczytu do zasobu danych. Ta metoda nie blokuje wątek wywołujący, gdy strumień jest otwierane.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do dostępu do zasobu określonego przez `address` parametru. Strumień uzyskuje się za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu z <xref:System.IO.Stream> w celu uniknięcia wyczerpania zasobów systemowych.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie został określony bezwzględnym identyfikatorem URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI żądanego zasobu. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest `null`, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i adres jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Zostanie otwarty do odczytu strumienia zawierających określony zasób jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.IO.Stream" /> używany do odczytu danych z zasobem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po otwarciu strumień do odczytu do zasobu danych. Ta metoda nie blokuje wątek wywołujący, gdy strumień jest otwierane.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do dostępu do zasobu określonego przez `address` parametru. Strumień uzyskuje się za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu z <xref:System.IO.Stream> w celu uniknięcia wyczerpania zasobów systemowych.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie został określony bezwzględnym identyfikatorem URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI żądanego zasobu. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest `null`, jest dołączany do `address`.  
  
 Ta metoda używa polecenia RETR można pobrać zasobu usługi FTP. Dla zasobu HTTP jest używana metody GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i adres jest nieprawidłowy.  - lub - wystąpił błąd podczas pobierania zasobów.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWrite">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera strumień do zapisania danych zasób o określonym identyfikatorze URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> używany do zapisywania danych do tego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Metoda zwraca strumień zapisywalny, który służy do wysyłania danych do zasobu. Tej metody bloki podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumieniu, użyj jednej z <xref:System.Net.WebClient.OpenWriteAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykładowy kod odczytuje dane z wiersza polecenia i używa <xref:System.Net.WebClient.OpenWrite%2A> można uzyskać strumienia dla zapisu danych. Należy pamiętać, że <xref:System.IO.Stream> zwrócony przez <xref:System.Net.WebClient.OpenWrite%2A> jest zamknięte po wysłaniu danych.  
  
 [!code-cpp[WebClient_OpenWrite2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite2/CPP/webclient_openwrite2.cpp#1)]
 [!code-csharp[WebClient_OpenWrite2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite2/CS/webclient_openwrite2.cs#1)]
 [!code-vb[WebClient_OpenWrite2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite2/VB/webclient_openwrite2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> używany do zapisywania danych do tego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Metoda zwraca strumień zapisywalny, który służy do wysyłania danych do zasobu. Tej metody bloki podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumieniu, użyj jednej z <xref:System.Net.WebClient.OpenWriteAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu, używając określonej metody.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> używany do zapisywania danych do tego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Metoda zwraca strumień zapisywalny, który służy do wysyłania danych do zasobu. Podstawowy żądań z metody określonej w `method` parametru. Dane są wysyłane do serwera, po zamknięciu strumienia. Tej metody bloki podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumieniu, użyj jednej z <xref:System.Net.WebClient.OpenWriteAsync%2A> metody.  
  
 Jeśli `method` parametr określa metodę, która nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie określa adresu bezwzględnego, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykładowy kod odczytuje dane z wiersza polecenia i używa <xref:System.Net.WebClient.OpenWrite%2A> można uzyskać strumienia używany do zapisywania danych. Należy pamiętać, że <xref:System.IO.Stream> zwrócony przez <xref:System.Net.WebClient.OpenWrite%2A> muszą zostać zamknięte do wysłania danych.  
  
 [!code-cpp[WebClient_OpenWrite#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite/CPP/webclient_openwrite.cpp#1)]
 [!code-csharp[WebClient_OpenWrite#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite/CS/webclient_openwrite.cs#1)]
 [!code-vb[WebClient_OpenWrite#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite/VB/webclient_openwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu za pomocą określonej metody.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> używany do zapisywania danych do tego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Metoda zwraca strumień zapisywalny, który służy do wysyłania danych do zasobu. Tej metody bloki podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumieniu, użyj jednej z <xref:System.Net.WebClient.OpenWriteAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri -&gt; unit" Usage="webClient.OpenWriteAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera strumień zapisywalny, który służy do wysyłania danych do zasobu. Strumień jest pobierana za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymywać powiadomienia, gdy strumień jest dostępna, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.OpenWriteCompleted> zdarzeń. Po zamknięciu strumienia wątek blokuje dopóki żądanie zostanie wysłane do `address` i otrzymania odpowiedzi.  
  
 Ta metoda nie blokuje wątek wywołujący, gdy strumień jest otwierany. Aby zablokować podczas oczekiwania na strumieniu, użyj jednej z <xref:System.Net.WebClient.OpenWrite%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string -&gt; unit" Usage="webClient.OpenWriteAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera strumień zapisywalny, który służy do wysyłania danych do zasobu. Strumień jest pobierana za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymywać powiadomienia, gdy strumień jest dostępna, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.OpenWriteCompleted> zdarzeń. Po zamknięciu strumienia wątek blokuje dopóki żądanie zostanie wysłane do `address` i otrzymania odpowiedzi.  
  
 Ta metoda nie blokuje wątek wywołujący, gdy strumień jest otwierany. Aby zablokować podczas oczekiwania na strumieniu, użyj jednej z <xref:System.Net.WebClient.OpenWrite%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string * obj -&gt; unit" Usage="webClient.OpenWriteAsync (address, method, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="userToken">Zdefiniowane przez użytkownika obiektu, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej</param>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu, używając określonej metody. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera strumień zapisywalny, który służy do wysyłania danych do zasobu. Strumień jest pobierana asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymywać powiadomienia, gdy strumień jest dostępna, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.OpenWriteCompleted> zdarzeń. Zawartość strumienia są wysyłane do serwera, po zamknięciu strumienia.  
  
 Jeśli `method` parametr określa metodę, która nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Ta metoda nie blokuje wątek wywołujący, gdy strumień jest otwierany. Aby zablokować podczas oczekiwania na strumieniu, użyj jednej z <xref:System.Net.WebClient.OpenWrite%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenWriteCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenWriteCompleted As OpenWriteCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenWriteCompletedEventHandler ^ OpenWriteCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " Usage="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenWriteCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji asynchronicznej, można otworzyć strumienia można zapisać danych do zasobu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane zawsze, gdy kończy operację asynchroniczną można otworzyć strumienia, który służy do wysyłania danych do zasobu. Te operacje są uruchamiane przez wywołanie metody <xref:System.Net.WebClient.OpenWriteAsync%2A> metody.  
  
 <xref:System.Net.OpenWriteCompletedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.Net.OpenWriteCompletedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie program obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#14)]
 [!code-csharp[NCLWebClientAsync#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#14)]
 [!code-vb[NCLWebClientAsync#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu jako operację asynchroniczną za pomocą obiektu zadania. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.IO.Stream" /> używany do zapisywania danych do tego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po strumień zapisywalny do zasobu danych zostało otwarte. Ta metoda nie blokuje wątek wywołujący, gdy strumień jest otwierane.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienia używany do zapisywania danych do zasobu określonego przez `address` parametru. Strumień uzyskuje się za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu z <xref:System.IO.Stream> w celu uniknięcia wyczerpania zasobów systemowych.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.IO.Stream" /> używany do zapisywania danych do tego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po strumień zapisywalny do zasobu danych zostało otwarte. Ta metoda nie blokuje wątek wywołujący, gdy strumień jest otwierane.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienia używany do zapisywania danych do zasobu określonego przez `address` parametru. Strumień uzyskuje się za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu z <xref:System.IO.Stream> w celu uniknięcia wyczerpania zasobów systemowych.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.IO.Stream" /> używany do zapisywania danych do tego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po strumień zapisywalny do zasobu danych zostało otwarte. Ta metoda nie blokuje wątek wywołujący, gdy strumień jest otwierane.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienia używany do zapisywania danych do zasobu określonego przez `address` parametru. Strumień uzyskuje się za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu z <xref:System.IO.Stream> w celu uniknięcia wyczerpania zasobów systemowych.  
  
 Jeśli `method` parametr określa metodę, która nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <summary>Otwiera strumień do zapisania danych do określonego zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.IO.Stream" /> używany do zapisywania danych do tego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po strumień zapisywalny do zasobu danych zostało otwarte. Ta metoda nie blokuje wątek wywołujący, gdy strumień jest otwierane.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienia używany do zapisywania danych do zasobu określonego przez `address` parametru. Strumień uzyskuje się za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu z <xref:System.IO.Stream> w celu uniknięcia wyczerpania zasobów systemowych.  
  
 Jeśli `method` parametr określa metodę, która nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebClient.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia proxy używane przez to <see cref="T:System.Net.WebClient" /> obiektu.</summary>
        <value>
          <see cref="T:System.Net.IWebProxy" /> Wystąpienie używane do wysyłania żądań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Proxy%2A> Właściwość identyfikuje <xref:System.Net.IWebProxy> wystąpienia, który komunikuje się z serwerami zdalnymi imieniu to <xref:System.Net.WebClient> obiektu. Serwer proxy jest ustawiony przez system za pomocą plików konfiguracji i ustawień sieci lokalnej Internet Explorer. Aby określić, że należy używać żadnego serwera proxy, należy ustawić <xref:System.Net.WebClient.Proxy%2A> właściwości `null`.  
  
 Aby uzyskać informacje na wykrywanie serwera proxy, zobacz [automatycznego wykrywania Proxy](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Net.WebClient.Proxy" /> ustawiono <see langword="null" />.</exception>
        <permission cref="T:System.Net.WebPermission">to jest nieograniczony. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Net.HttpWebResponse" />
        <altmember cref="T:System.Net.FtpWebRequest" />
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
        <altmember cref="T:System.Net.WebProxy" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); void set(System::Collections::Specialized::NameValueCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection with get, set" Usage="System.Net.WebClient.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolekcję par nazw i wartości zapytania skojarzone z żądaniem.</summary>
        <value>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> zawierający pary nazwa/wartość zapytanie skojarzone z żądaniem. Jeśli pary nie są skojarzone z tym żądaniem, wartość jest pusta <see cref="T:System.Collections.Specialized.NameValueCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.QueryString%2A> Zawiera właściwość <xref:System.Collections.Specialized.NameValueCollection> wystąpienia zawierający pary nazwa/wartość, które są dołączane do identyfikatora URI jako ciąg zapytania. Zawartość <xref:System.Net.WebClient.QueryString%2A> właściwości są poprzedzone znakiem zapytania (?), a pary nazwa/wartość są oddzielone od siebie nawzajem handlowego "i" (&).  
  
   
  
## Examples  
 Poniższy przykładowy kod ma danych wprowadzonych przez użytkownika z poziomu wiersza polecenia i tworzy <xref:System.Collections.Specialized.NameValueCollection> przypisany do <xref:System.Net.WebClient.QueryString%2A> właściwości. Następnie pobraniu odpowiedzi z serwera do pliku lokalnego.  
  
 [!code-cpp[WebClient_QueryString#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_QueryString/CPP/webclient_querystring.cpp#1)]
 [!code-csharp[WebClient_QueryString#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_QueryString/CS/webclient_querystring.cs#1)]
 [!code-vb[WebClient_QueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_QueryString/VB/webclient_querystring.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaders">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection ResponseHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection ResponseHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.ResponseHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResponseHeaders As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ ResponseHeaders { System::Net::WebHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResponseHeaders : System.Net.WebHeaderCollection" Usage="System.Net.WebClient.ResponseHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję par nazw i wartości nagłówka skojarzone z odpowiedzią.</summary>
        <value>A <see cref="T:System.Net.WebHeaderCollection" /> zawierający pary nazwa/wartość nagłówka skojarzone z odpowiedzią, lub <see langword="null" /> jeśli odebrano żadnej odpowiedzi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.ResponseHeaders%2A> Właściwość zawiera <xref:System.Net.WebHeaderCollection> wystąpienia zawierający informacje o nagłówku <xref:System.Net.WebClient> odbiera z odpowiedzią.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera i wyświetla <xref:System.Net.WebClient.ResponseHeaders%2A> zwróconych przez serwer.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#2)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#2)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje buforu danych zasób o określonym identyfikatorze URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="data">Bufor do wysłania do zasobu.</param>
        <summary>Przekazuje buforu danych do zasobu identyfikowanego przez identyfikator URI.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła buforu danych do zasobu.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany. Jeśli źródłowe żądanie nie jest rozpoznawany przez serwer, podstawowe klasy protokołu określają, co występuje. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła zawartość `data` do serwera bez kodowania go. Ta metoda bloki podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadDataAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu konwertuje ciąg z konsoli, aby <xref:System.Byte> tablicy i zapisuje tablicę przy użyciu określonego serwera <xref:System.Net.WebClient.UploadData%2A>. Odpowiedzi z serwera zostanie wyświetlony w konsoli.  
  
 [!code-cpp[WebClient_UpLoadData2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData2/CPP/webclient_uploaddata2.cpp#1)]
 [!code-csharp[WebClient_UpLoadData2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData2/CS/webclient_uploaddata2.cs#1)]
 [!code-vb[WebClient_UpLoadData2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData2/VB/webclient_uploaddata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="data" /> jest <see langword="null" />.  - lub - wystąpił błąd podczas wysyłania danych.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="data">Bufor do wysłania do zasobu.</param>
        <summary>Przekazuje buforu danych do zasobu identyfikowanego przez identyfikator URI.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła buforu danych do zasobu.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany. Jeśli źródłowe żądanie nie jest rozpoznawany przez serwer, podstawowe klasy protokołu określają, co występuje. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła zawartość `data` do serwera bez kodowania go. Ta metoda bloki podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadDataAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="data" /> jest <see langword="null" />.  - lub - wystąpił błąd podczas wysyłania danych.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda HTTP używana do wysyłania danych do tego zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">Bufor do wysłania do zasobu.</param>
        <summary>Przekazuje buforu danych do określonego zasobu, używając określonej metody.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła buforu danych do zasobów przy użyciu metody HTTP określonej w `method` parametru i zwraca odpowiedzi z serwera. Ta metoda bloki podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadDataAsync%2A> metody.  
  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła zawartość `data` do serwera bez kodowania go.  
  
 Jeśli `method` parametr określa zlecenie, który nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu konwertuje ciąg wprowadzone z poziomu konsoli do tablicy typu byte i zapisuje tablicę przy użyciu określonego serwera <xref:System.Net.WebClient.UploadData%2A>. Odpowiedzi z serwera zostanie wyświetlony w konsoli.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="data" /> jest <see langword="null" />.  - lub - wystąpił błąd podczas przekazywania danych.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda HTTP używana do wysyłania danych do tego zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">Bufor do wysłania do zasobu.</param>
        <summary>Przekazuje buforu danych do określonego zasobu, używając określonej metody.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła buforu danych do zasobów przy użyciu metody HTTP określonej w `method` parametru i zwraca odpowiedzi z serwera. Ta metoda bloki podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadDataAsync%2A> metody.  
  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła zawartość `data` do serwera bez kodowania go.  
  
 Jeśli `method` parametr określa zlecenie, który nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="data" /> jest <see langword="null" />.  - lub - wystąpił błąd podczas przekazywania danych.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje buforu danych do zasobu identyfikowanego przez identyfikator URI. Ta metoda nie blokuje wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="data">Bufor do wysłania do zasobu.</param>
        <summary>Przekazuje buforu danych do zasobu identyfikowanego przez identyfikator URI przy użyciu metody POST. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła buforu danych do zasobu. Bufor danych są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Dane nie jest zaszyfrowana. Aby otrzymać powiadomienie po zakończeniu przekazywania danych, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.UploadDataCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania danych. Aby wysłać dane i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadData%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli <see langword="null" />, wartość domyślna to POST protokołu http i STOR ftp.</param>
        <param name="data">Bufor do wysłania do zasobu.</param>
        <summary>Przekazuje buforu danych do zasobu identyfikowanego przez identyfikator URI, za pomocą określonej metody. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła buforu danych do zasobu. Bufor danych są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Dane nie jest zaszyfrowana. Aby otrzymać powiadomienie po zakończeniu przekazywania danych, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.UploadDataCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania danych. Aby wysłać dane i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadData%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] * obj -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli <see langword="null" />, wartość domyślna to POST protokołu http i STOR ftp.</param>
        <param name="data">Bufor do wysłania do zasobu.</param>
        <param name="userToken">Obiekt użytkownika, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej.</param>
        <summary>Przekazuje buforu danych do zasobu identyfikowanego przez identyfikator URI, za pomocą określonej metody i zidentyfikowaniu tokenu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła buforu danych do zasobu. Bufor danych są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Dane nie jest zaszyfrowana. Aby otrzymać powiadomienie po zakończeniu przekazywania danych, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.UploadDataCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania danych. Aby wysłać dane i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadData%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadDataCompletedEventHandler UploadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadDataCompletedEventHandler UploadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadDataCompleted As UploadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadDataCompletedEventHandler ^ UploadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " Usage="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji asynchronicznej przekazywania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane każdorazowo zakończeniu operacji przekazywania danych asynchronicznych. Przekazywanie danych asynchronicznych są uruchamiane przez wywołanie metody <xref:System.Net.WebClient.UploadDataAsync%2A> metody.  
  
 <xref:System.Net.UploadDataCompletedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.Net.UploadDataCompletedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie program obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#36](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#36)]
 [!code-csharp[NCLWebClientAsync#36](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#36)]
 [!code-vb[NCLWebClientAsync#36](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazywanie danych buforu, który zawiera <see cref="T:System.Byte" /> tablicy na identyfikator URI określony jako operację asynchroniczną za pomocą obiektu zadania.  Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="data">Bufor do wysłania do zasobu.</param>
        <summary>Przekazywanie danych buforu, który zawiera <see cref="T:System.Byte" /> tablicy na identyfikator URI określony jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi otrzymanych od zasobu, gdy bufor danych został przekazany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po buforu danych został przekazany do tego zasobu.  
  
 Ta metoda wysyła buforu danych do zasobu. Bufor danych są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Dane nie jest zaszyfrowana.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="data">Bufor do wysłania do zasobu.</param>
        <summary>Przekazywanie danych buforu, który zawiera <see cref="T:System.Byte" /> tablicy na identyfikator URI określony jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi otrzymanych od zasobu, gdy bufor danych został przekazany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po buforu danych został przekazany do tego zasobu.  
  
 Ta metoda wysyła buforu danych do zasobu. Bufor danych są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Dane nie jest zaszyfrowana.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli <see langword="null" />, wartość domyślna to POST protokołu http i STOR ftp.</param>
        <param name="data">Bufor do wysłania do zasobu.</param>
        <summary>Przekazywanie danych buforu, który zawiera <see cref="T:System.Byte" /> tablicy na identyfikator URI określony jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi otrzymanych od zasobu, gdy bufor danych został przekazany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po buforu danych został przekazany do tego zasobu.  
  
 Ta metoda wysyła buforu danych do zasobu. Bufor danych są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Dane nie jest zaszyfrowana.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbioru danych.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli <see langword="null" />, wartość domyślna to POST protokołu http i STOR ftp.</param>
        <param name="data">Bufor do wysłania do zasobu.</param>
        <summary>Przekazywanie danych buforu, który zawiera <see cref="T:System.Byte" /> tablicy na identyfikator URI określony jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi otrzymanych od zasobu, gdy bufor danych został przekazany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po buforu danych został przekazany do tego zasobu.  
  
 Ta metoda wysyła buforu danych do zasobu. Bufor danych są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Dane nie jest zaszyfrowana.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje plik lokalny do zasobu z określonym identyfikatorem URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu odbieranie plików. Na przykład ftp://localhost/samplefile.txt.</param>
        <param name="fileName">Pliku do wysłania do zasobu. Na przykład "samplefile.txt".</param>
        <summary>Przekazuje określony plik lokalny do zasobów z określonego identyfikatora URI.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadFile%2A> Metoda wysyła plik lokalny do zasobu. Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
 Tej metody bloki podczas przekazywania pliku. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFileAsync%2A> metody.  
  
 `POST` Metody jest definiowana za pomocą protokołu HTTP. Jeśli źródłowe żądanie nie korzysta z protokołu HTTP i `POST` nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu przekazuje określonego pliku do określonej za pomocą identyfikatora URI <xref:System.Net.WebClient.UploadFile%2A>. Zwrócony przez serwer odpowiedzi jest wyświetlana na konsoli.  
  
 [!code-cpp[WebClient_UpLoadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile/CPP/webclient_uploadfile.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile/CS/webclient_uploadfile.cs#1)]
 [!code-vb[WebClient_UpLoadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile/VB/webclient_uploadfile.vb#1)]  
  
 Poniższy przykład kodu pokazuje strony platformy ASP.NET, który może zaakceptować zaksięgowany plików i nadaje się do użytku z <xref:System.Net.WebClient.UploadFile%2A> metody. Strona musi znajdować się na serwerze sieci Web. Adres zawiera wartość `address` parametr <xref:System.Net.WebClient.UploadFile%2A> metody.  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="fileName" /> jest <see langword="null" />, jest <see cref="F:System.String.Empty" />, zawiera nieprawidłowe znaki lub nie istnieje.  - lub - wystąpił błąd podczas przekazywania pliku.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> nagłówka rozpoczyna się od <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Aby uzyskać dostęp do pliku lokalnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu odbieranie plików. Na przykład ftp://localhost/samplefile.txt.</param>
        <param name="fileName">Pliku do wysłania do zasobu. Na przykład "samplefile.txt".</param>
        <summary>Przekazuje określony plik lokalny do zasobów z określonego identyfikatora URI.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadFile%2A> Metoda wysyła plik lokalny do zasobu. Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
 Tej metody bloki podczas przekazywania pliku. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFileAsync%2A> metody.  
  
 `POST` Metody jest definiowana za pomocą protokołu HTTP. Jeśli źródłowe żądanie nie korzysta z protokołu HTTP i `POST` nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="fileName" /> jest <see langword="null" />, jest <see cref="F:System.String.Empty" />, zawiera nieprawidłowe znaki lub nie istnieje.  - lub - wystąpił błąd podczas przekazywania pliku.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> nagłówka rozpoczyna się od <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Aby uzyskać dostęp do pliku lokalnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu odbieranie plików.</param>
        <param name="method">Metoda używana do wysyłania pliku do zasobu. Jeśli <see langword="null" />, wartość domyślna to POST protokołu http i STOR ftp.</param>
        <param name="fileName">Pliku do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do określonego zasobu, używając określonej metody.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy adres Określa zasób HTTP <xref:System.Net.WebClient.UploadFile%2A> metoda wysyła plik lokalny do zasobu, używając metody HTTP określonej w `method` parametrów i zwraca odpowiedzi z serwera. Tej metody bloki podczas przekazywania pliku. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFileAsync%2A> metody.  
  
 Jeśli `method` parametr określa zlecenie, który nie jest rozpoznawany przez serwer lub `address` zasobów, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu przekazuje określonego pliku do określonej za pomocą identyfikatora URI <xref:System.Net.WebClient.UploadFile%2A>. Zwrócony przez serwer odpowiedzi jest wyświetlana na konsoli.  
  
 [!code-cpp[WebClient_UpLoadFile2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CPP/webclient_uploadfile2.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CS/webclient_uploadfile2.cs#1)]
 [!code-vb[WebClient_UpLoadFile2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile2/VB/webclient_uploadfile2.vb#1)]  
  
 Poniższy przykład kodu pokazuje strony platformy ASP.NET, który może zaakceptować zaksięgowany plików i nadaje się do użytku z <xref:System.Net.WebClient.UploadFile%2A> metody. Strona musi znajdować się na serwerze sieci Web. Adres zawiera wartość `address` parametr <xref:System.Net.WebClient.UploadFile%2A> metody.  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="fileName" /> jest <see langword="null" />, jest <see cref="F:System.String.Empty" />, zawiera nieprawidłowe znaki lub nie istnieje.  - lub - wystąpił błąd podczas przekazywania pliku.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> nagłówka rozpoczyna się od <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Aby uzyskać dostęp do pliku lokalnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu odbieranie plików.</param>
        <param name="method">Metoda używana do wysyłania pliku do zasobu. Jeśli <see langword="null" />, wartość domyślna to POST protokołu http i STOR ftp.</param>
        <param name="fileName">Pliku do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do określonego zasobu, używając określonej metody.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy adres Określa zasób HTTP <xref:System.Net.WebClient.UploadFile%2A> metoda wysyła plik lokalny do zasobu, używając metody HTTP określonej w `method` parametrów i zwraca odpowiedzi z serwera. Tej metody bloki podczas przekazywania pliku. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFileAsync%2A> metody.  
  
 Jeśli `method` parametr określa zlecenie, który nie jest rozpoznawany przez serwer lub `address` zasobów, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="fileName" /> jest <see langword="null" />, jest <see cref="F:System.String.Empty" />, zawiera nieprawidłowe znaki lub nie istnieje.  - lub - wystąpił błąd podczas przekazywania pliku.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> nagłówka rozpoczyna się od <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Aby uzyskać dostęp do pliku lokalnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określony plik lokalny do określonego zasobu. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string -&gt; unit" Usage="webClient.UploadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu odbieranie plików. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="fileName">Pliku do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do określonego zasobu, przy użyciu metody POST. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plik jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymać powiadomienie po zakończeniu przekazywania pliku, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.UploadFileCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania pliku. Aby wysłać plików i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFile%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="fileName" /> jest <see langword="null" />, jest <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> nagłówka rozpoczyna się od <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Aby uzyskać dostęp do pliku lokalnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu odbieranie plików. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli <see langword="null" />, wartość domyślna to POST protokołu http i STOR ftp.</param>
        <param name="fileName">Pliku do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do określonego zasobu, przy użyciu metody POST. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plik jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymać powiadomienie po zakończeniu przekazywania pliku, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.UploadFileCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania pliku. Aby wysłać plików i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFile%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="fileName" /> jest <see langword="null" />, jest <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> nagłówka rozpoczyna się od <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Aby uzyskać dostęp do pliku lokalnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu odbieranie plików. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli <see langword="null" />, wartość domyślna to POST protokołu http i STOR ftp.</param>
        <param name="fileName">Pliku do wysłania do zasobu.</param>
        <param name="userToken">Obiekt użytkownika, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej.</param>
        <summary>Przekazuje określony plik lokalny do określonego zasobu, przy użyciu metody POST. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plik jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymać powiadomienie po zakończeniu przekazywania pliku, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.UploadFileCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania pliku. Aby wysłać plików i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFile%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="fileName" /> jest <see langword="null" />, jest <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> nagłówka rozpoczyna się od <see langword="multipart" />.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Aby uzyskać dostęp do pliku lokalnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadFileCompletedEventHandler UploadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadFileCompletedEventHandler UploadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadFileCompleted As UploadFileCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadFileCompletedEventHandler ^ UploadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " Usage="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadFileCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji asynchronicznej przekazywania pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane każdorazowo zakończeniu asynchronicznej operacji przesyłania. Przekazywanie pliku asynchroniczne są uruchamiane przez wywołanie metody <xref:System.Net.WebClient.UploadFileAsync%2A> metody.  
  
 <xref:System.Net.UploadFileCompletedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.Net.UploadFileCompletedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie program obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określony plik lokalny do zasobu jako operację asynchroniczną za pomocą obiektu zadania. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu odbieranie plików. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="fileName">Plik lokalny do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi otrzymanych od zasobu, jeśli plik został załadowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po przekazaniu pliku do zasobu. Plik jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="fileName" /> jest <see langword="null" />, jest <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> nagłówka rozpoczyna się od <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu odbieranie plików. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="fileName">Plik lokalny do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi otrzymanych od zasobu, jeśli plik został załadowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po przekazaniu pliku do zasobu. Plik jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="fileName" /> jest <see langword="null" />, jest <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> nagłówka rozpoczyna się od <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu odbieranie plików. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli <see langword="null" />, wartość domyślna to POST protokołu http i STOR ftp.</param>
        <param name="fileName">Plik lokalny do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi otrzymanych od zasobu, jeśli plik został załadowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po przekazaniu pliku do zasobu. Plik jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Domyślnie ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="fileName" /> jest <see langword="null" />, jest <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> nagłówka rozpoczyna się od <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu odbieranie plików. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="method">Metoda używana do wysyłania danych do tego zasobu. Jeśli <see langword="null" />, wartość domyślna to POST protokołu http i STOR ftp.</param>
        <param name="fileName">Plik lokalny do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi otrzymanych od zasobu, jeśli plik został załadowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po przekazaniu pliku do zasobu. Plik jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Domyślnie ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="fileName" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="fileName" /> jest <see langword="null" />, jest <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> nagłówka rozpoczyna się od <see langword="multipart" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.UploadProgressChangedEventHandler UploadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadProgressChangedEventHandler UploadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadProgressChanged As UploadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadProgressChangedEventHandler ^ UploadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " Usage="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy operacja asynchronicznego wysyłania pomyślnie przesyła niektórych lub wszystkich danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane każdorazowo asynchroniczne przekazanie sprawia, że postęp. To zdarzenie jest wywoływane podczas przekazywania są uruchamiane przy użyciu dowolnej z poniższych metod.  
  
|Metoda|Opis|  
|------------|-----------------|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|Wysyła <xref:System.Byte> tablicy do zasobu, bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Wysyła pliku lokalnego do zasobu, bez blokowania wątek wywołujący.|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Wysyła <xref:System.Collections.Specialized.NameValueCollection> zasobów i zwraca <xref:System.Byte> tablica zawierająca wszystkie odpowiedzi bez blokowania wątek wywołujący.|  
  
 <xref:System.Net.UploadProgressChangedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.Net.UploadProgressChangedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie program obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 Poniższy przykładowy kod przedstawia implementację programu obsługi dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określony ciąg do określonego zasobu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu na ciąg. Dla zasobów Http ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="data">Parametry do przekazania.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu, przy użyciu metody POST.</summary>
        <returns>A <see cref="T:System.String" /> zawierające odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Ta metoda umożliwia blokowanie, gdy są przesyłane ciąg. Aby wysyłać ciągu i kontynuuje wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadStringAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wywołanie tej metody.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu na ciąg. Dla zasobów Http ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="data">Parametry do przekazania.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu, przy użyciu metody POST.</summary>
        <returns>A <see cref="T:System.String" /> zawierające odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Ta metoda umożliwia blokowanie, gdy są przesyłane ciąg. Aby wysyłać ciągu i kontynuuje wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadStringAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym (""), i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu na ciąg. Ten identyfikator URI musi być zidentyfikowanie z zasobem, który może zaakceptować żądania wysyłane z <c>metody</c> metody.</param>
        <param name="method">Metoda HTTP używana do wysyłania ciąg do zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">Parametry do przekazania.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu, używając określonej metody.</summary>
        <returns>A <see cref="T:System.String" /> zawierające odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Ta metoda umożliwia blokowanie, gdy są przesyłane ciąg. Aby wysyłać ciągu i kontynuuje wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadStringAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje wywołanie tej metody.  
  
 [!code-cpp[NCLWebClientAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#2)]
 [!code-csharp[NCLWebClientAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#2)]
 [!code-vb[NCLWebClientAsync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <paramref name="method" /> nie może służyć do wysyłania zawartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu na ciąg. Ten identyfikator URI musi być zidentyfikowanie z zasobem, który może zaakceptować żądania wysyłane z <c>metody</c> metody.</param>
        <param name="method">Metoda HTTP używana do wysyłania ciąg do zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">Parametry do przekazania.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu, używając określonej metody.</summary>
        <returns>A <see cref="T:System.String" /> zawierające odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Ta metoda umożliwia blokowanie, gdy są przesyłane ciąg. Aby wysyłać ciągu i kontynuuje wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadStringAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <paramref name="method" /> nie może służyć do wysyłania zawartości.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określony ciąg do określonego zasobu. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string -&gt; unit" Usage="webClient.UploadStringAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu na ciąg. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="data">Parametry do przekazania.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła ciąg do zasobu. Ten ciąg jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Aby otrzymać powiadomienie po zakończeniu przekazywania ciągu, można dodać obsługi zdarzeń do <xref:System.Net.WebClient.UploadStringCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania ciąg. Aby wysłać ciągiem, a blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadString%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu na ciąg. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">Parametry do przekazania.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła ciąg do zasobu. Ten ciąg jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Aby otrzymać powiadomienie po zakończeniu przekazywania ciągu, można dodać obsługi zdarzeń do <xref:System.Net.WebClient.UploadStringCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania ciąg. Aby wysłać ciągiem, a blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadString%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="method" /> nie może służyć do wysyłania zawartości.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu na ciąg. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">Parametry do przekazania.</param>
        <param name="userToken">Obiekt użytkownika, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła ciąg do zasobu. Ten ciąg jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Aby otrzymać powiadomienie po zakończeniu przekazywania ciągu, można dodać obsługi zdarzeń do <xref:System.Net.WebClient.UploadStringCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania ciąg. Aby wysłać ciągiem, a blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadString%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="method" /> nie może służyć do wysyłania zawartości.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadStringCompletedEventHandler UploadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadStringCompletedEventHandler UploadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadStringCompleted As UploadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadStringCompletedEventHandler ^ UploadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " Usage="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu operacji asynchronicznej przekazywania ciąg.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane każdorazowo zakończeniu operacji przekazywania asynchroniczne ciąg. Przekazywanie ciąg asynchroniczne są uruchamiane przez wywołanie metody <xref:System.Net.WebClient.UploadStringAsync%2A> metody.  
  
 <xref:System.Net.UploadStringCompletedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.Net.UploadStringCompletedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie program obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#38](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#38)]
 [!code-csharp[NCLWebClientAsync#38](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#38)]
 [!code-vb[NCLWebClientAsync#38](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określony ciąg do określonego zasobu jako operację asynchroniczną za pomocą obiektu zadania. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu na ciąg. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="data">Parametry do przekazania.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.String" /> zawierające odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po ciąg został przekazany do tego zasobu. Ten ciąg jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Ta metoda umożliwia blokowanie, gdy są przesyłane ciąg.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu na ciąg. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="data">Parametry do przekazania.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.String" /> zawierające odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po ciąg został przekazany do tego zasobu. Ten ciąg jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Ta metoda umożliwia blokowanie, gdy są przesyłane ciąg.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu na ciąg. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">Parametry do przekazania.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.String" /> zawierające odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po ciąg został przekazany do tego zasobu. Ten ciąg jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Ta metoda umożliwia blokowanie, gdy są przesyłane ciąg.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="method" /> nie może służyć do wysyłania zawartości.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu na ciąg. Dla zasobów HTTP ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane przy użyciu metody POST, taką jak skrypt czy strona ASP.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">Parametry do przekazania.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.String" /> zawierające odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po ciąg został przekazany do tego zasobu. Ten ciąg jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Ta metoda umożliwia blokowanie, gdy są przesyłane ciąg.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="method" /> nie może służyć do wysyłania zawartości.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValues">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje kolekcji nazwa/wartość zasób o określonym identyfikatorze URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbierania kolekcji.</param>
        <param name="data">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A> Wysyła metody <xref:System.Collections.Specialized.NameValueCollection> na serwerze. Ta metoda bloki podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValuesAsync%2A> metody.  
  
 Jeśli źródłowe żądanie nie jest rozpoznawany przez serwer, podstawowe klasy protokołu określają, co występuje. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 W przypadku nagłówka Content-type `null`, <xref:System.Net.WebClient.UploadValues%2A> metody ustawia ją na "application/x--www-form-urlencoded".  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu zbiera informacje od użytkownika (nazwa, wieku i adresu) i przesyła wartości do serwera przy użyciu <xref:System.Net.WebClient.UploadValues%2A>. Odpowiedzi z serwera zostanie wyświetlony w konsoli.  
  
 [!code-cpp[WebClient_UploadValues#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues/CPP/webclient_uploadvalues.cpp#1)]
 [!code-csharp[WebClient_UploadValues#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues/CS/webclient_uploadvalues.cs#1)]
 [!code-vb[WebClient_UploadValues#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues/VB/webclient_uploadvalues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="data" /> jest <see langword="null" />.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - <see langword="Content-type" /> nagłówka nie jest <see langword="null" /> lub "application/x--www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbierania kolekcji.</param>
        <param name="data">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A> Wysyła metody <xref:System.Collections.Specialized.NameValueCollection> na serwerze. Ta metoda bloki podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValuesAsync%2A> metody.  
  
 Jeśli źródłowe żądanie nie jest rozpoznawany przez serwer, podstawowe klasy protokołu określają, co występuje. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 W przypadku nagłówka Content-type `null`, <xref:System.Net.WebClient.UploadValues%2A> metody ustawia ją na "application/x--www-form-urlencoded".  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="data" /> jest <see langword="null" />.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - <see langword="Content-type" /> nagłówka nie jest <see langword="null" /> lub "application/x--www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbierania kolekcji.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI przy użyciu określonej metody.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A> Wysyła metody <xref:System.Collections.Specialized.NameValueCollection> do zasobów za pomocą metody określonej w `method` parametrów i zwraca odpowiedzi z serwera. Ta metoda bloki podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValuesAsync%2A> metody.  
  
 Jeśli `Content-type` nagłówek jest `null`, <xref:System.Net.WebClient.UploadValues%2A> metody ustawia ją na `application/x-www-form-urlencoded`.  
  
 Jeśli `method` parametr określa zlecenie, który nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu zbiera informacje od użytkownika (nazwa, wieku i adresu) i przesyła wartości do serwera przy użyciu <xref:System.Net.WebClient.UploadValues%2A>. Odpowiedzi z serwera zostanie wyświetlony w konsoli.  
  
 [!code-cpp[WebClient_UploadValues2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues2/CPP/webclient_uploadvalues2.cpp#1)]
 [!code-csharp[WebClient_UploadValues2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues2/CS/webclient_uploadvalues2.cs#1)]
 [!code-vb[WebClient_UploadValues2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues2/VB/webclient_uploadvalues2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="data" /> jest <see langword="null" />.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> wartość nagłówka nie jest <see langword="null" /> i nie jest <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbierania kolekcji.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI przy użyciu określonej metody.</summary>
        <returns>A <see cref="T:System.Byte" /> tablicę zawierającą treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A> Wysyła metody <xref:System.Collections.Specialized.NameValueCollection> do zasobów za pomocą metody określonej w `method` parametrów i zwraca odpowiedzi z serwera. Ta metoda bloki podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValuesAsync%2A> metody.  
  
 Jeśli `Content-type` nagłówek jest `null`, <xref:System.Net.WebClient.UploadValues%2A> metody ustawia ją na `application/x-www-form-urlencoded`.  
  
 Jeśli `method` parametr określa zlecenie, który nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="data" /> jest <see langword="null" />.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> wartość nagłówka nie jest <see langword="null" /> i nie jest <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbierania kolekcji. Ten identyfikator URI musi zidentyfikować z zasobem, który może zaakceptować żądania wysyłane z domyślną metodą.</param>
        <param name="data">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazywanie danych w kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła ciąg do zasobu. Ten ciąg jest wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Przed przekazaniem ciąg, ta metoda konwertuje go do <xref:System.Byte> tablicy przy użyciu kodowania określony w <xref:System.Net.WebClient.Encoding%2A> właściwości. Aby otrzymać powiadomienie po zakończeniu przekazywania ciągu, można dodać obsługi zdarzeń do <xref:System.Net.WebClient.UploadStringCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania ciąg. Aby wysłać ciągiem, a blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadString%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbierania kolekcji. Ten identyfikator URI musi być zidentyfikowanie z zasobem, który może zaakceptować żądania wysyłane z <c>metody</c> metody.</param>
        <param name="method">Metoda używana do wysyłania ciąg do zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazywanie danych w kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI przy użyciu określonej metody. Ta metoda nie blokuje wątek wywołujący.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła dane zawarte w <xref:System.Collections.Specialized.NameValueCollection> do `address` zasobów. Użyj tej metody do wysyłania danych formularza do identyfikatora URI do przetwarzania. Dane są przesyłane przy użyciu typu nośnika urlencoded formularza; wartość nagłówka Content-Type musi być równa "application/x--www-form-urlencoded". Nagłówek została poprawnie ustawiona domyślnie. <xref:System.Net.WebClient.UploadValuesAsync%2A> Metod generują <xref:System.Net.WebException> można wywołać tej metody za pomocą innego zestawu wartości nagłówka Content-Type w <xref:System.Net.WebClient.Headers%2A> kolekcji.  
  
 Jeśli `method` — metoda nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 <xref:System.Collections.Specialized.NameValueCollection> Są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymać powiadomienie po zakończeniu operacji przekazywania, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.UploadValuesCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania ciąg. Aby wysłać ciągiem, a blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValues%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest pusta, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <paramref name="method" /> nie może służyć do wysyłania zawartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection * obj -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbierania kolekcji. Ten identyfikator URI musi być zidentyfikowanie z zasobem, który może zaakceptować żądania wysyłane z <c>metody</c> metody.</param>
        <param name="method">Metoda HTTP używana do wysyłania ciąg do zasobu. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <param name="userToken">Obiekt użytkownika, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej.</param>
        <summary>Przekazywanie danych w kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI przy użyciu określonej metody. Ta metoda nie blokuje wątek wywołujący i umożliwia obiekt wywołujący, aby przekazać obiektu do metody, które jest wywoływane po zakończeniu operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła dane zawarte w <xref:System.Collections.Specialized.NameValueCollection> do `address` zasobów. Użyj tej metody do wysyłania danych formularza do identyfikatora URI do przetwarzania. Dane są przesyłane przy użyciu typu nośnika urlencoded formularza; wartość nagłówka Content-Type musi być równa "application/x--www-form-urlencoded". Nagłówek została poprawnie ustawiona domyślnie. <xref:System.Net.WebClient.UploadValuesAsync%2A> Metod generują <xref:System.Net.WebException> można wywołać tej metody za pomocą innego zestawu wartości nagłówka Content-Type w <xref:System.Net.WebClient.Headers%2A> kolekcji.  
  
 Jeśli `method` — metoda nie jest rozpoznawany przez serwer, określić klasy podstawowej protokołu występujące. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 <xref:System.Collections.Specialized.NameValueCollection> Są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków. Aby otrzymać powiadomienie po zakończeniu operacji przekazywania, Dodaj program obsługi zdarzeń do <xref:System.Net.WebClient.UploadValuesCompleted> zdarzeń.  
  
 Ta metoda nie blokuje wątek wywołujący podczas wysyłania ciąg. Aby wysłać ciągiem, a blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValues%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest pusta, jest dołączany do `address`.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <paramref name="method" /> nie może służyć do wysyłania zawartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadValuesCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadValuesCompleted As UploadValuesCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadValuesCompletedEventHandler ^ UploadValuesCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " Usage="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadValuesCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu asynchronicznego przekazywania kolekcji nazwa/wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane każdorazowo asynchroniczne przekazywania <xref:System.Collections.Specialized.NameValueCollection> zakończeniu obiektu danych. Przekazywanie tych są uruchamiane przez wywołanie metody <xref:System.Net.WebClient.UploadValuesAsync%2A> metody.  
  
 <xref:System.Net.UploadValuesCompletedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.Net.UploadValuesCompletedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI jako operację asynchroniczną za pomocą obiektu zadania. Te metody nie blokują wątek wywołujący.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbierania kolekcji.</param>
        <param name="data">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablica zawierająca odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po przekazaniu kolekcji nazw i wartości do zasobu. Kolekcja nazw i wartości są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli źródłowe żądanie nie jest rozpoznawany przez serwer, podstawowe klasy protokołu określają, co występuje. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli nagłówek Content-type jest `null`, ta metoda ustawia ją na "application/x--www-form-urlencoded".  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - <see langword="Content-type" /> nagłówka nie jest <see langword="null" /> lub "application/x--www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbierania kolekcji.</param>
        <param name="data">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablica zawierająca odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po przekazaniu kolekcji nazw i wartości do zasobu. Kolekcja nazw i wartości są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli źródłowe żądanie nie jest rozpoznawany przez serwer, podstawowe klasy protokołu określają, co występuje. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli nagłówek Content-type jest `null`, ta metoda ustawia ją na "application/x--www-form-urlencoded".  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - <see langword="Content-type" /> wartość nagłówka nie jest <see langword="null" /> i nie jest <see langword="application/x-www-form-urlencoded" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbierania kolekcji.</param>
        <param name="method">Metoda HTTP używana do wysyłania do tego zasobu kolekcji. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablica zawierająca odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po przekazaniu kolekcji nazw i wartości do zasobu. Kolekcja nazw i wartości są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli źródłowe żądanie nie jest rozpoznawany przez serwer, podstawowe klasy protokołu określają, co występuje. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli nagłówek Content-type jest `null`, ta metoda ustawia ją na "application/x--www-form-urlencoded".  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="method" /> nie może służyć do wysyłania zawartości.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - <see langword="Content-type" /> nagłówka nie jest <see langword="null" /> lub "application/x--www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odbierania kolekcji.</param>
        <param name="method">Metoda HTTP używana do wysyłania do tego zasobu kolekcji. Jeśli wartość null, wartość domyślna to POST protokołu http i STOR w przypadku usługi ftp.</param>
        <param name="data">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje kolekcji określonej nazwy i wartości do zasobu wskazywanego przez określony identyfikator URI jako operację asynchroniczną za pomocą obiektu zadania.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Byte" /> tablica zawierająca odpowiedzi wysyłane przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po przekazaniu kolekcji nazw i wartości do zasobu. Kolekcja nazw i wartości są wysyłane asynchronicznie za pomocą wątku zasobów, które są automatycznie przydzielone z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone mogą zostać anulowane przy użyciu <xref:System.Net.WebClient.CancelAsync%2A> metody.  
  
 Jeśli źródłowe żądanie nie jest rozpoznawany przez serwer, podstawowe klasy protokołu określają, co występuje. Zazwyczaj <xref:System.Net.WebException> jest zgłaszany z <xref:System.Net.WebException.Status%2A> właściwości ustawioną na wskazywanie błędu.  
  
 Jeśli nagłówek Content-type jest `null`, ta metoda ustawia ją na "application/x--www-form-urlencoded".  
  
 Jeśli <xref:System.Net.WebClient.BaseAddress%2A> właściwość nie jest ciągiem pustym ("") i `address` nie zawiera bezwzględny identyfikator URI, `address` musi być względnym identyfikatorem URI, która jest połączona z <xref:System.Net.WebClient.BaseAddress%2A> do utworzenia bezwzględny identyfikator URI elementu żądanych danych. Jeśli <xref:System.Net.WebClient.QueryString%2A> właściwość nie jest ciągiem pustym, jest dołączany do `address`.  
  
 Ta metoda używa polecenia STOR przekazać zasobu usługi FTP. Dla zasobu HTTP metody POST jest używany.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> Parametr jest <see langword="null" />.  - lub - <paramref name="data" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />, i <paramref name="address" /> jest nieprawidłowy.  - lub - <paramref name="method" /> nie może służyć do wysyłania zawartości.  - lub - nie ma odpowiedzi z serwera obsługującego zasobu.  - lub - wystąpił błąd podczas otwierania strumienia.  - lub - <see langword="Content-type" /> nagłówka nie jest <see langword="null" /> lub "application/x--www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> Określa, czy wartość tej kontrolki <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> są wysyłane z żądania.</summary>
        <value>
          <see langword="true" /> Jeśli są używane domyślne poświadczenia; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest ustawiana `true` nawiązaniem żądań to <xref:System.Net.WebClient> obiektu Jeśli jest to wymagane przez serwer, uwierzytelniania przy użyciu domyślnych poświadczeń aktualnie zalogowanego użytkownika. Aplikacje klienckie jest to zachowanie w większości przypadków. Dla aplikacji warstwy środkowej, takich jak aplikacje ASP.NET, zamiast używać tej właściwości można zwykle ustawić <xref:System.Net.WebClient.Credentials%2A> właściwości do poświadczeń w imieniu którego żądań klienta.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie dla tej właściwości.  
  
 [!code-cpp[NCLWebClientAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#3)]
 [!code-csharp[NCLWebClientAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#3)]
 [!code-vb[NCLWebClientAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStreamClosed">
      <MemberSignature Language="C#" Value="public event System.Net.WriteStreamClosedEventHandler WriteStreamClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.WriteStreamClosedEventHandler WriteStreamClosed" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.WriteStreamClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WriteStreamClosed As WriteStreamClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::WriteStreamClosedEventHandler ^ WriteStreamClosed;" />
      <MemberSignature Language="F#" Value="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " Usage="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WriteStreamClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy operacja asynchroniczna można zapisać danych do zasobów przy użyciu strumienia zapisu jest zamknięty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane zawsze, gdy operacja asynchroniczna, używany do zapisywania danych do zasobów przy użyciu strumienia zapisu jest zamknięty. Te operacje wynikiem wywołania <xref:System.Net.WebClient.OpenWriteTaskAsync%2A> metody.  
  
 <xref:System.Net.WriteStreamClosedEventHandler> Jest delegowanie dla tego zdarzenia. <xref:System.Net.WriteStreamClosedEventArgs> Klasa udostępnia program obsługi zdarzeń z danych zdarzenia.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>