<Type Name="WebClient" FullName="System.Net.WebClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d96e08e39895a3682ca81b561edebf97cd6f0d5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69090487" /></Metadata><TypeSignature Language="C#" Value="public class WebClient : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebClient extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebClient" />
  <TypeSignature Language="VB.NET" Value="Public Class WebClient&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClient : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type WebClient = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.WebClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia typowe metody wysyłania danych do i otrzymywania danych z zasobu identyfikowanego przez identyfikator URI.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  Nie zalecamy używania `WebClient` klasy do nowych celów programistycznych. Zamiast tego należy użyć <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> klasy.

 <xref:System.Net.WebClient> Klasa zawiera typowe metody wysyłania danych do lub otrzymywania danych z dowolnego lokalnego, intranetu lub zasobu internetowego identyfikowanego przez identyfikator URI.  
  
 <xref:System.Net.WebClient> Klasa<xref:System.Net.WebRequest> używa klasy w celu zapewnienia dostępu do zasobów. <xref:System.Net.WebClient>wystąpienia mogą uzyskać dostęp do danych <xref:System.Net.WebRequest> przy użyciu dowolnego elementu <xref:System.Net.WebRequest.RegisterPrefix%2A?displayProperty=nameWithType> podrzędnego zarejestrowanego przy użyciu metody.  
  
> [!NOTE]
>  Domyślnie .NET Framework obsługuje identyfikatory `http:`URI rozpoczynające się od, `https:`, `ftp:`i `file:` .  
  
 W poniższej tabeli opisano <xref:System.Net.WebClient> metody przekazywania danych do zasobu.  
  
|Metoda|Opis|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenWrite%2A>|Pobiera wartość <xref:System.IO.Stream> użytą do wysłania danych do zasobu.|  
|<xref:System.Net.WebClient.OpenWriteAsync%2A>|Pobiera metodę <xref:System.IO.Stream> używaną do wysyłania danych do zasobu bez blokowania wątku wywołującego.|  
|<xref:System.Net.WebClient.UploadData%2A>|Wysyła tablicę bajtową do zasobu i zwraca <xref:System.Byte> tablicę zawierającą dowolną odpowiedź.|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|<xref:System.Byte> Wysyła tablicę do zasobu bez blokowania wątku wywołującego.|  
|<xref:System.Net.WebClient.UploadFile%2A>|Wysyła plik lokalny do zasobu i zwraca <xref:System.Byte> tablicę zawierającą dowolną odpowiedź.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Wysyła plik lokalny do zasobu bez blokowania wątku wywołującego.|  
|<xref:System.Net.WebClient.UploadValues%2A>|Wysyła do zasobu i zwraca tablicę zawierającą dowolną odpowiedź. <xref:System.Byte> <xref:System.Collections.Specialized.NameValueCollection>|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Wysyła do zasobu i zwraca tablicę zawierającą dowolną odpowiedź bez blokowania wątku wywołującego. <xref:System.Byte> <xref:System.Collections.Specialized.NameValueCollection>|  
|<xref:System.Net.WebClient.UploadString%2A>|<xref:System.String> Wysyła do zasobu, bez blokowania wątku wywołującego.|  
|<xref:System.Net.WebClient.UploadStringAsync%2A>|<xref:System.String> Wysyła do zasobu, bez blokowania wątku wywołującego.|  
  
 W poniższej tabeli opisano <xref:System.Net.WebClient> metody pobierania danych z zasobu.  
  
|Metoda|Opis|  
|------------|-----------------|  
|<xref:System.Net.WebClient.OpenRead%2A>|Zwraca dane z zasobu jako <xref:System.IO.Stream>.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Zwraca dane z zasobu bez blokowania wątku wywołującego.|  
|<xref:System.Net.WebClient.DownloadData%2A>|Pobiera dane z zasobu i zwraca <xref:System.Byte> tablicę.|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Pobiera dane z zasobu i zwraca <xref:System.Byte> tablicę bez blokowania wątku wywołującego.|  
|<xref:System.Net.WebClient.DownloadFile%2A>|Pobiera dane z zasobu do pliku lokalnego.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Pobiera dane z zasobu do pliku lokalnego bez blokowania wątku wywołującego.|  
|<xref:System.Net.WebClient.DownloadString%2A>|Pobiera z zasobu i <xref:System.String>zwraca. <xref:System.String>|  
|<xref:System.Net.WebClient.DownloadStringAsync%2A>|<xref:System.String> Pobiera z zasobu, bez blokowania wątku wywołującego.|  
  
 Możesz użyć <xref:System.Net.WebClient.CancelAsync%2A> metody, aby anulować operacje asynchroniczne, które nie zostały ukończone.  
  
 <xref:System.Net.WebClient> Wystąpienie nie wysyła domyślnie opcjonalnych nagłówków HTTP. Jeśli żądanie wymaga opcjonalnego nagłówka, należy dodać nagłówek do <xref:System.Net.WebClient.Headers%2A> kolekcji. Na przykład aby zachować zapytania w odpowiedzi, należy dodać nagłówek User-Agent. Ponadto serwery mogą zwrócić 500 (wewnętrzny błąd serwera), jeśli brakuje nagłówka agenta użytkownika.  
  
 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A>jest ustawiony na `true` wartość <xref:System.Net.WebClient> w wystąpieniach.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera identyfikator URI zasobu, pobiera go i wyświetla odpowiedź.  
  
 [!code-cpp[NCLWebClientUserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientUserAgent/CPP/useragent.cpp#1)]
 [!code-csharp[NCLWebClientUserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientUserAgent/CS/useragent.cs#1)]
 [!code-vb[NCLWebClientUserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientUserAgent/VB/useragent.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do żądanego identyfikatora URI lub dowolnego identyfikatora URI, do którego jest przekierowywane żądanie. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <block subset="none" type="overrides"><para>Klasy pochodne powinny wywoływać implementację <see cref="T:System.Net.WebClient" /> klasy bazowej, aby upewnić się, że Klasa pochodna działa zgodnie z oczekiwaniami.</para></block>
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.HttpWebRequest" />
    <altmember cref="T:System.Net.HttpWebResponse" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.WebClient" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor bez parametrów tworzy nowe wystąpienie <xref:System.Net.WebClient> klasy. Domyślną metodą HTTP jest GET. Domyślną metodą FTP jest RETR. Wartość domyślna <xref:System.Net.WebClient.Encoding%2A> to <xref:System.Text.Encoding.Default%2A>. Wartość <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> domyślna to `true`.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.WebClient> wystąpienie, a następnie używa go do pobierania danych z serwera i wyświetlania go w konsoli systemowej, do pobierania danych z serwera i zapisywania do pliku oraz przekazywania wartości formularzy do serwera i odbierania odpowiedzi.  
  
 [!code-cpp[WebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient/CPP/webclient.cpp#1)]
 [!code-csharp[WebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient/CS/webclient.cs#1)]
 [!code-vb[WebClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient/VB/webclient.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowReadStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowReadStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowReadStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReadStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowReadStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy dane odczytane z zasobu <see cref="T:System.Net.WebClient" /> Internetu mają być buforowane.</summary>
        <value><see langword="true" />Aby włączyć buforowanie danych otrzymanych z zasobu internetowego; <see langword="false" /> aby wyłączyć buforowanie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość ma `true`wartość, dane są buforowane w pamięci, dzięki czemu są gotowe do odczytania przez aplikację. <xref:System.Net.WebClient.AllowReadStreamBuffering%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWriteStreamBuffering">
      <MemberSignature Language="C#" Value="public bool AllowWriteStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWriteStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWriteStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWriteStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWriteStreamBuffering : bool with get, set" Usage="System.Net.WebClient.AllowWriteStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy w przypadku <see cref="T:System.Net.WebClient" /> wystąpienia mają być buforowane dane zapisywane w ramach zasobu internetowego.</summary>
        <value><see langword="true" />Aby włączyć buforowanie danych zapisaną w zasobie internetowym; <see langword="false" /> aby wyłączyć buforowanie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość ma `true`wartość, dane są buforowane w pamięci, dzięki czemu można bardziej efektywnie pisać do zasobów internetowych w większych fragmentach. <xref:System.Net.WebClient.AllowWriteStreamBuffering%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public string BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : string with get, set" Usage="System.Net.WebClient.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia podstawowy identyfikator URI dla żądań wykonanych przez <see cref="T:System.Net.WebClient" />.</summary>
        <value>Zawierający podstawowy identyfikator URI dla żądań wykonanych <see cref="T:System.Net.WebClient" /> przez lub <see cref="F:System.String.Empty" /> , jeśli nie został określony żaden adres podstawowy. <see cref="T:System.String" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.BaseAddress%2A> Właściwość zawiera podstawowy identyfikator URI, który jest połączony z adresem względnym. Po wywołaniu metody, która przekazuje lub pobiera dane, <xref:System.Net.WebClient> obiekt łączy ten podstawowy identyfikator URI z adresem względnym określonym w wywołaniu metody. <xref:System.Net.WebClient> W<xref:System.Net.WebClient.BaseAddress%2A> przypadku określenia bezwzględnego identyfikatora URI nie jest używana wartość właściwości.  
  
 Aby usunąć wcześniej ustawioną wartość, należy ustawić tę właściwość `null` na lub pusty ciąg ("").  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera dane z serwera internetowego i wyświetla go w konsoli programu. Przyjęto założenie, że adres serwera ( http://www.contoso.com) na przykład znajduje się w `hostUri` i że ścieżka do zasobu (na przykład/Default.htm) znajduje się `uriSuffix`w.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#1)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#1)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Net.WebClient.BaseAddress" />jest ustawiony na nieprawidłowy identyfikator URI. Wewnętrzny wyjątek może zawierać informacje, które ułatwią znalezienie błędu.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebClient.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zasady pamięci podręcznej aplikacji dla wszystkich zasobów uzyskanych przez wystąpienie elementu WebClient przy użyciu <see cref="T:System.Net.WebRequest" /> obiektów.</summary>
        <value><see cref="T:System.Net.Cache.RequestCachePolicy" /> Obiekt, który reprezentuje wymagania dotyczące buforowania aplikacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="webClient.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje oczekującą operację asynchroniczną.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli operacja jest w stanie oczekiwania, ta metoda <xref:System.Net.WebRequest.Abort%2A> wywołuje obiekt źródłowy <xref:System.Net.WebRequest>.  
  
 Po wywołaniu <xref:System.Net.WebClient.CancelAsync%2A>aplikacja nadal otrzymuje zdarzenie ukończenia skojarzone z operacją. Na przykład po wywołaniu <xref:System.Net.WebClient.CancelAsync%2A> <xref:System.Net.WebClient.DownloadStringAsync%2A> anulowania operacji, jeśli określono procedurę obsługi zdarzeń dla <xref:System.Net.WebClient.DownloadStringCompleted> zdarzenia, program obsługi zdarzeń otrzyma powiadomienie o zakończeniu operacji. Aby dowiedzieć się, czy operacja została ukończona <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> pomyślnie, sprawdź Właściwość <xref:System.Net.DownloadDataCompletedEventArgs> klasy podstawowej w obiekcie danych zdarzenia przekazaną do procedury obsługi zdarzeń.  
  
 Jeśli żadna operacja asynchroniczna nie jest w toku, ta metoda nie robi nic.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebClient.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poświadczenia sieciowe, które są wysyłane do hosta i używane do uwierzytelniania żądania.</summary>
        <value><see cref="T:System.Net.ICredentials" /> Zawierający poświadczenia uwierzytelniania dla żądania. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.Credentials%2A> Właściwość zawiera poświadczenia uwierzytelniania używane do uzyskiwania dostępu do zasobu na hoście. W większości scenariuszy po stronie klienta należy używać <xref:System.Net.CredentialCache.DefaultCredentials%2A>, które są poświadczenia aktualnie zalogowanego użytkownika. W tym celu należy ustawić <xref:System.Net.WebClient.UseDefaultCredentials%2A> właściwość na `true` zamiast ustawiania tej właściwości.  
  
 Jeśli klasa jest używana w aplikacji warstwy środkowej, takiej jak aplikacja ASP.NET <xref:System.Net.CredentialCache.DefaultCredentials%2A> , należy do konta z uruchomioną stroną ASP (poświadczenia po stronie serwera). <xref:System.Net.WebClient> Zazwyczaj należy ustawić tę właściwość na poświadczenia klienta, w którym imieniu żądanie zostało wykonane.  
  
 Ze względów bezpieczeństwa w przypadku automatycznego przekierowania należy przechowywać poświadczenia, które mają być uwzględnione w przekierowaniu <xref:System.Net.CredentialCache> , a następnie przypisać je do tej właściwości. Ta właściwość zostanie automatycznie ustawiona na `null` po przekierowaniu, jeśli zawiera wszystko <xref:System.Net.CredentialCache>z wyjątkiem. Wartość tej właściwości jest ustawiana automatycznie w `null` taki sposób, aby zapobiec wysyłaniu poświadczeń do dowolnych nieplanowanych miejsc docelowych.
  
## Examples  
 Poniższy przykład kodu używa poświadczeń systemu użytkownika do uwierzytelniania żądania.  
  
 [!code-cpp[WebClientAuthentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClientAuthentication/CPP/webclientauth.cpp#1)]
 [!code-csharp[WebClientAuthentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClientAuthentication/CS/webclientauth.cs#1)]
 [!code-vb[WebClientAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClientAuthentication/VB/webclientauth.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.WebRequest.Credentials" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera zasób jako <see cref="T:System.Byte" /> tablicę z określonego identyfikatora URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : string -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI, z którego mają zostać pobrane dane.</param>
        <summary>Pobiera zasób jako <see cref="T:System.Byte" /> tablicę z określonego identyfikatora URI.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca pobrany zasób.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pobiera zasób z identyfikatorem URI określonym `address` przez parametr. <xref:System.Net.WebClient.DownloadData%2A> Ta metoda jest blokowana podczas pobierania zasobu. Aby pobrać zasób i kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadDataAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu żąda danych z serwera i wyświetla zwrócone dane. Przyjęto założenie, że `remoteUri` zawiera on prawidłowy identyfikator URI dla żądanych danych.  
  
 [!code-cpp[WebClient_DownloadData#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadData/CPP/webclient_downloaddata.cpp#1)]
 [!code-csharp[WebClient_DownloadData#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadData/CS/webclient_downloaddata.cs#1)]
 [!code-vb[WebClient_DownloadData#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadData/VB/webclient_downloaddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania danych.</exception>
        <exception cref="T:System.NotSupportedException">Metoda została wywołana jednocześnie w wielu wątkach.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadData">
      <MemberSignature Language="C#" Value="public byte[] DownloadData (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DownloadData(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadData(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadData (address As Uri) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DownloadData(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadData : Uri -&gt; byte[]" Usage="webClient.DownloadData address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI reprezentowany przez <see cref="T:System.Uri" /> obiekt, z którego mają zostać pobrane dane.</param>
        <summary>Pobiera zasób jako <see cref="T:System.Byte" /> tablicę z określonego identyfikatora URI.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca pobrany zasób.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pobiera zasób z identyfikatorem URI określonym `address` przez parametr. <xref:System.Net.WebClient.DownloadData%2A> Ta metoda jest blokowana podczas pobierania zasobu. Aby pobrać zasób i kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadDataAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
 **Uwaga** Ten element członkowski wyprowadza informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera zasób jako <see cref="T:System.Byte" /> tablicę z identyfikatora URI określonego jako operacja asynchroniczna. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri -&gt; unit" Usage="webClient.DownloadDataAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> zawierający identyfikator URI do pobrania.</param>
        <summary>Pobiera zasób jako <see cref="T:System.Byte" /> tablicę z identyfikatora URI określonego jako operacja asynchroniczna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera określony zasób przy użyciu metody domyślnej dla protokołu skojarzonego z schematem identyfikatora URI określonym w `address`. Dane są pobierane asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Ta metoda nie blokuje wątku wywołującego podczas pobierania zasobu. Aby pobrać zasób i zablokować podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadData%2A> metod. Po zakończeniu <xref:System.Net.WebClient.DownloadDataCompleted> pobierania zostanie zgłoszone zdarzenie. Aplikacja musi obsłużyć to zdarzenie, aby otrzymać powiadomienie. Pobrane dane są dostępne we <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> właściwości.  
  
 Możesz użyć <xref:System.Net.WebClient.CancelAsync%2A> metody, aby anulować operacje asynchroniczne, które nie zostały ukończone.  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataAsync">
      <MemberSignature Language="C#" Value="public void DownloadDataAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadDataAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadDataAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadDataAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadDataAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userToken" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> zawierający identyfikator URI do pobrania.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przesyłany do metody wywoływanej po zakończeniu operacji asynchronicznej.</param>
        <summary>Pobiera zasób jako <see cref="T:System.Byte" /> tablicę z identyfikatora URI określonego jako operacja asynchroniczna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera określony zasób przy użyciu metody domyślnej dla protokołu skojarzonego z schematem identyfikatora URI określonym w `address`. Dane są pobierane asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Ta metoda nie blokuje wątku wywołującego podczas pobierania zasobu. Aby pobrać zasób i zablokować podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadData%2A> metod. Po zakończeniu <xref:System.Net.WebClient.DownloadDataCompleted> pobierania zostanie zgłoszone zdarzenie. Aplikacja musi obsłużyć to zdarzenie, aby otrzymać powiadomienie. Pobrane dane są dostępne we <xref:System.Net.DownloadDataCompletedEventArgs.Result%2A> właściwości.  
  
 Możesz użyć <xref:System.Net.WebClient.CancelAsync%2A> metody, aby anulować operacje asynchroniczne, które nie zostały ukończone.  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadDataCompleted As DownloadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadDataCompletedEventHandler ^ DownloadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " Usage="member this.DownloadDataCompleted : System.Net.DownloadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu asynchronicznej operacji ładowania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest zgłaszane przy każdym zakończeniu asynchronicznej operacji ładowania danych. Asynchroniczne pobieranie danych jest uruchamiane przez wywołanie <xref:System.Net.WebClient.DownloadDataAsync%2A> metod.  
  
 <xref:System.Net.DownloadDataCompletedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.Net.DownloadDataCompletedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie programu obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#21](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#21)]
 [!code-csharp[NCLWebClientAsync#21](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#21)]
 [!code-vb[NCLWebClientAsync#21](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera zasób jako <see cref="T:System.Byte" /> tablicę z identyfikatora URI określonego jako operacja asynchroniczna przy użyciu obiektu zadania. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Pobiera zasób jako <see cref="T:System.Byte" /> tablicę z identyfikatora URI określonego jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą pobrany zasób. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po pobraniu zasobu danych.  
  
 Ta metoda pobiera określony zasób przy użyciu metody domyślnej dla protokołu skojarzonego z schematem identyfikatora URI określonym w `address` parametrze. Dane są pobierane asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Poniższy przykład kodu żąda danych z serwera i wyświetla zwrócone dane. Przyjęto założenie, że `remoteUri` zawiera on prawidłowy identyfikator URI dla żądanych danych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; DownloadDataTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadDataTaskAsync (address As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ DownloadDataTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadDataTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.DownloadDataTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Pobiera zasób jako <see cref="T:System.Byte" /> tablicę z identyfikatora URI określonego jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą pobrany zasób. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po pobraniu zasobu danych.  
  
 Ta metoda pobiera określony zasób przy użyciu metody domyślnej dla protokołu skojarzonego z schematem identyfikatora URI określonym w `address` parametrze. Dane są pobierane asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
 **Uwaga** Ten element członkowski wyprowadza informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera zasób o określonym identyfikatorze URI do pliku lokalnego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI, z którego mają zostać pobrane dane.</param>
        <param name="fileName">Nazwa pliku lokalnego, który ma otrzymywać dane.</param>
        <summary>Pobiera zasób o określonym identyfikatorze URI do pliku lokalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pobiera do danych pliku lokalnego z identyfikatora URI określonego przez `address` parametr. <xref:System.Net.WebClient.DownloadFile%2A> Ta metoda jest blokowana podczas pobierania zasobu. Aby pobrać zasób i kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadFileAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Gdy ta metoda jest używana w aplikacji warstwy środkowej, takiej jak strona ASP.NET, zostanie wyświetlony komunikat o błędzie, jeśli konto, na którym jest wykonywana aplikacja, nie ma uprawnień dostępu do pliku.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera plik z http://www.contoso.com na lokalny dysk twardy.  
  
 [!code-cpp[WebClient_DownloadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_DownloadFile/CPP/webclient_downloadfile.cpp#1)]
 [!code-csharp[WebClient_DownloadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_DownloadFile/CS/webclient_downloadfile.cs#1)]
 [!code-vb[WebClient_DownloadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_DownloadFile/VB/webclient_downloadfile.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="filename" />jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.  
  
—lub— 
Plik nie istnieje.  
  
-lub-wystąpił błąd podczas pobierania danych.</exception>
        <exception cref="T:System.NotSupportedException">Metoda została wywołana jednocześnie w wielu wątkach.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">, aby zapisać plik <paramref name="fileName" />. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="webClient.DownloadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI określony jako <see cref="T:System.String" />, z którego mają zostać pobrane dane.</param>
        <param name="fileName">Nazwa pliku lokalnego, który ma otrzymywać dane.</param>
        <summary>Pobiera zasób o określonym identyfikatorze URI do pliku lokalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda pobiera do danych pliku lokalnego z identyfikatora URI określonego przez `address` parametr. <xref:System.Net.WebClient.DownloadFile%2A> Ta metoda jest blokowana podczas pobierania zasobu. Aby pobrać zasób i kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadFileAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Gdy ta metoda jest używana w aplikacji warstwy środkowej, takiej jak strona ASP.NET, zostanie wyświetlony komunikat o błędzie, jeśli konto, na którym jest wykonywana aplikacja, nie ma uprawnień dostępu do pliku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="filename" />jest <see langword="null" /> lub <see cref="F:System.String.Empty" />.  
  
—lub— 
Plik nie istnieje.  
  
—lub— 
Wystąpił błąd podczas pobierania danych.</exception>
        <exception cref="T:System.NotSupportedException">Metoda została wywołana jednocześnie w wielu wątkach.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">, aby zapisać plik <paramref name="fileName" />. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera określony zasób do pliku lokalnego jako operację asynchroniczną i zwraca obiekt zadania. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <param name="fileName">Nazwa pliku, który ma zostać umieszczony na komputerze lokalnym.</param>
        <summary>Pobiera do pliku lokalnego zasób o określonym identyfikatorze URI. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera zasób przy użyciu identyfikatora URI określonego przez `address` parametr. Po pomyślnym ukończeniu pobierania pobrany plik ma nazwę `fileName` na komputerze lokalnym. Plik jest pobierany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Aby otrzymywać powiadomienia, gdy plik jest dostępny, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.DownloadFileCompleted> zdarzenia.  
  
 Ta metoda nie blokuje wątku wywołującego podczas pobierania zasobu. Aby zablokować podczas oczekiwania na ukończenie pobierania, należy użyć jednej z <xref:System.Net.WebClient.DownloadFile%2A> metod.  
  
 Możesz użyć <xref:System.Net.WebClient.CancelAsync%2A> metody, aby anulować operacje asynchroniczne, które nie zostały ukończone.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie określa bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 W przypadku korzystania z tej metody na stronie ASP.NET zostanie wyświetlony komunikat o błędzie, jeśli konto, na którym jest wykonywana Strona, nie ma uprawnień dostępu do pliku lokalnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
        <exception cref="T:System.InvalidOperationException">Plik lokalny określony przez <paramref name="fileName" /> jest używany przez inny wątek.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileAsync (Uri address, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileAsync(class System.Uri address, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileAsync (address As Uri, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileAsync(Uri ^ address, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileAsync : Uri * string * obj -&gt; unit" Usage="webClient.DownloadFileAsync (address, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userToken" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <param name="fileName">Nazwa pliku, który ma zostać umieszczony na komputerze lokalnym.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przesyłany do metody wywoływanej po zakończeniu operacji asynchronicznej.</param>
        <summary>Pobiera do pliku lokalnego zasób o określonym identyfikatorze URI. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera zasób przy użyciu identyfikatora URI określonego przez `address` parametr. Po pomyślnym ukończeniu pobierania pobrany plik ma nazwę `fileName` na komputerze lokalnym. Plik jest pobierany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Aby otrzymywać powiadomienia, gdy plik jest dostępny, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.DownloadFileCompleted> zdarzenia.  
  
 Ta metoda nie blokuje wątku wywołującego podczas pobierania zasobu. Aby zablokować podczas oczekiwania na ukończenie pobierania, należy użyć jednej z <xref:System.Net.WebClient.DownloadFile%2A> metod.  
  
 Możesz użyć <xref:System.Net.WebClient.CancelAsync%2A> metody, aby anulować operacje asynchroniczne, które nie zostały ukończone.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie określa bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 W przypadku korzystania z tej metody na stronie ASP.NET zostanie wyświetlony komunikat o błędzie, jeśli konto, na którym jest wykonywana Strona, nie ma uprawnień dostępu do pliku lokalnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
        <exception cref="T:System.InvalidOperationException">Plik lokalny określony przez <paramref name="fileName" /> jest używany przez inny wątek.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ DownloadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.DownloadFileCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu asynchronicznej operacji ładowania pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest zgłaszane przy każdym zakończeniu asynchronicznej operacji ładowania pliku. Asynchroniczne operacje pobierania plików są uruchamiane przez wywołanie <xref:System.Net.WebClient.DownloadFileAsync%2A> metod.  
  
 <xref:System.ComponentModel.AsyncCompletedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.ComponentModel.AsyncCompletedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie programu obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera określony zasób do pliku lokalnego jako operację asynchroniczną przy użyciu obiektu zadania. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As String, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <param name="fileName">Nazwa pliku, który ma zostać umieszczony na komputerze lokalnym.</param>
        <summary>Pobiera określony zasób do pliku lokalnego jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task> obiekt zostanie ukończony po pobraniu zasobu danych.  
  
 Ta metoda pobiera zasób przy użyciu identyfikatora URI określonego przez `address` parametr. Po pomyślnym ukończeniu pobierania pobrany plik ma nazwę `fileName` na komputerze lokalnym. Plik jest pobierany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Możesz użyć <xref:System.Net.WebClient.CancelAsync%2A> metody, aby anulować operacje asynchroniczne, które nie zostały ukończone.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie określa bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 W przypadku korzystania z tej metody na stronie ASP.NET zostanie wyświetlony komunikat o błędzie, jeśli konto, na którym jest wykonywana Strona, nie ma uprawnień dostępu do pliku lokalnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
        <exception cref="T:System.InvalidOperationException">Plik lokalny określony przez <paramref name="fileName" /> jest używany przez inny wątek.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DownloadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DownloadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadFileTaskAsync (address As Uri, fileName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DownloadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task" Usage="webClient.DownloadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <param name="fileName">Nazwa pliku, który ma zostać umieszczony na komputerze lokalnym.</param>
        <summary>Pobiera określony zasób do pliku lokalnego jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task> obiekt zostanie ukończony po pobraniu zasobu danych.  
  
 Ta metoda pobiera zasób przy użyciu identyfikatora URI określonego przez `address` parametr. Po pomyślnym ukończeniu pobierania pobrany plik ma nazwę `fileName` na komputerze lokalnym. Plik jest pobierany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Możesz użyć <xref:System.Net.WebClient.CancelAsync%2A> metody, aby anulować operacje asynchroniczne, które nie zostały ukończone.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie określa bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 W przypadku korzystania z tej metody na stronie ASP.NET zostanie wyświetlony komunikat o błędzie, jeśli konto, na którym jest wykonywana Strona, nie ma uprawnień dostępu do pliku lokalnego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
        <exception cref="T:System.InvalidOperationException">Plik lokalny określony przez <paramref name="fileName" /> jest używany przez inny wątek.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadProgressChanged As DownloadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadProgressChangedEventHandler ^ DownloadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " Usage="member this.DownloadProgressChanged : System.Net.DownloadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy asynchroniczne operacje pobierania pomyślnie przetransferuje niektóre lub wszystkie dane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane za każdym razem, gdy pobieranie asynchroniczne powoduje postęp. To zdarzenie jest zgłaszane, gdy rozpocznie się pobieranie przy użyciu dowolnej z poniższych metod.  
  
|Metoda|Opis|  
|------------|-----------------|  
|<xref:System.Net.WebClient.DownloadDataAsync%2A>|Pobiera dane z zasobu i zwraca <xref:System.Byte> tablicę bez blokowania wątku wywołującego.|  
|<xref:System.Net.WebClient.DownloadFileAsync%2A>|Pobiera dane z zasobu do pliku lokalnego bez blokowania wątku wywołującego.|  
|<xref:System.Net.WebClient.OpenReadAsync%2A>|Zwraca dane z zasobu bez blokowania wątku wywołującego.|  
  
 <xref:System.Net.DownloadProgressChangedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.Net.DownloadProgressChangedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
> [!NOTE]
>  W przypadku pasywnego transferu plików FTP będzie zawsze wyświetlany procent postępu równy zero, ponieważ serwer nie wysłał rozmiaru pliku. Aby wyświetlić postęp, można zmienić połączenie FTP na aktywne poprzez zastąpienie <xref:System.Net.WebClient.GetWebRequest%2A> metody wirtualnej:  
  
```csharp  
internal class MyWebClient : WebClient
{  
    protected override WebRequest GetWebRequest(Uri address)
    {  
        FtpWebRequest req = (FtpWebRequest)base.GetWebRequest(address);  
        req.UsePassive = false;  
        return req;  
    }  
}  
```  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie programu obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#19)]
 [!code-csharp[NCLWebClientAsync#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#19)]
 [!code-vb[NCLWebClientAsync#19](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#19)]  
  
 Poniższy przykład kodu pokazuje implementację programu obsługi dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera żądany zasób jako <see cref="T:System.String" />. Zasób do pobrania może być określony jako <see cref="T:System.String" /> zawierający identyfikator URI <see cref="T:System.Uri" />lub.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : string -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.String" /> zawierający identyfikator URI do pobrania.</param>
        <summary>Pobiera żądany zasób jako <see cref="T:System.String" />. Zasób do pobrania jest określony jako <see cref="T:System.String" /> zawierający identyfikator URI.</summary>
        <returns><see cref="T:System.String" /> Zawierający żądany zasób.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera określony zasób. Po pobraniu zasobu Metoda używa kodowania określonego we <xref:System.Net.WebClient.Encoding%2A> właściwości, aby przekonwertować zasób <xref:System.String>na. Ta metoda jest blokowana podczas pobierania zasobu. Aby pobrać zasób i kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadStringAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie tej metody.  
  
 [!code-cpp[NCLWebClientAsync#25](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#25)]
 [!code-csharp[NCLWebClientAsync#25](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#25)]
 [!code-vb[NCLWebClientAsync#25](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
        <exception cref="T:System.NotSupportedException">Metoda została wywołana jednocześnie w wielu wątkach.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadString">
      <MemberSignature Language="C#" Value="public string DownloadString (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string DownloadString(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadString(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadString (address As Uri) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ DownloadString(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadString : Uri -&gt; string" Usage="webClient.DownloadString address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><see cref="T:System.Uri" /> Obiekt zawierający identyfikator URI do pobrania.</param>
        <summary>Pobiera żądany zasób jako <see cref="T:System.String" />. Zasób do pobrania jest określony jako <see cref="T:System.Uri" />.</summary>
        <returns><see cref="T:System.String" /> Zawierający żądany zasób.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera określony zasób. Po pobraniu zasobu Metoda używa kodowania określonego we <xref:System.Net.WebClient.Encoding%2A> właściwości, aby przekonwertować zasób <xref:System.String>na. Ta metoda jest blokowana podczas pobierania zasobu. Aby pobrać zasób i kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.DownloadStringAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
        <exception cref="T:System.NotSupportedException">Metoda została wywołana jednocześnie w wielu wątkach.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera zasób określony jako <see cref="T:System.String" /> <see cref="T:System.Uri" />lub. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri -&gt; unit" Usage="webClient.DownloadStringAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> zawierający identyfikator URI do pobrania.</param>
        <summary>Pobiera zasób określony jako <see cref="T:System.Uri" />. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zasób jest pobierany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Po pobraniu zasobu ta metoda używa kodowania określonego we <xref:System.Net.WebClient.Encoding%2A> właściwości, aby przekonwertować zasób <xref:System.String>na. Ta metoda nie blokuje wątku wywołującego podczas pobierania zasobu. Aby pobrać zasób i zablokować podczas oczekiwania na odpowiedź serwera, użyj <xref:System.Net.WebClient.DownloadString%2A> metody. Po zakończeniu <xref:System.Net.WebClient.DownloadStringCompleted> pobierania zostanie zgłoszone zdarzenie. Aplikacja musi obsłużyć to zdarzenie, aby otrzymać powiadomienie. Pobrany ciąg jest dostępny we <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> właściwości.  
  
 Możesz użyć <xref:System.Net.WebClient.CancelAsync%2A> metody, aby anulować operacje asynchroniczne, które nie zostały ukończone.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringAsync">
      <MemberSignature Language="C#" Value="public void DownloadStringAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadStringAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadStringAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadStringAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringAsync : Uri * obj -&gt; unit" Usage="webClient.DownloadStringAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userToken" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> zawierający identyfikator URI do pobrania.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przesyłany do metody wywoływanej po zakończeniu operacji asynchronicznej.</param>
        <summary>Pobiera określony ciąg do określonego zasobu. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zasób jest pobierany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Po pobraniu zasobu ta metoda używa kodowania określonego we <xref:System.Net.WebClient.Encoding%2A> właściwości, aby przekonwertować zasób <xref:System.String>na. Ta metoda nie blokuje wątku wywołującego podczas pobierania zasobu. Aby pobrać zasób i zablokować podczas oczekiwania na odpowiedź serwera, użyj <xref:System.Net.WebClient.DownloadString%2A> metody. Po zakończeniu <xref:System.Net.WebClient.DownloadStringCompleted> pobierania zostanie zgłoszone zdarzenie. Aplikacja musi obsłużyć to zdarzenie, aby otrzymać powiadomienie. Pobrany ciąg jest dostępny we <xref:System.Net.DownloadStringCompletedEventArgs.Result%2A> właściwości.  
  
 Możesz użyć <xref:System.Net.WebClient.CancelAsync%2A> metody, aby anulować operacje asynchroniczne, które nie zostały ukończone.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.DownloadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadStringCompleted As DownloadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::DownloadStringCompletedEventHandler ^ DownloadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " Usage="member this.DownloadStringCompleted : System.Net.DownloadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DownloadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu asynchronicznej operacji pobierania zasobów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane za każdym razem, gdy operacja asynchroniczna pobiera zasób w postaci ciągu. Te operacje są uruchamiane przez wywołanie <xref:System.Net.WebClient.DownloadStringAsync%2A> metod.  
  
 <xref:System.Net.DownloadStringCompletedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.Net.DownloadStringCompletedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie programu obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#28](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#28)]
 [!code-csharp[NCLWebClientAsync#28](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#28)]
 [!code-vb[NCLWebClientAsync#28](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera zasób jako <see cref="T:System.String" /> z identyfikatora URI określonego jako operacja asynchroniczna przy użyciu obiektu zadania.  Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Pobiera zasób jako <see cref="T:System.String" /> z identyfikatora URI określonego jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą pobrany zasób. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po pobraniu zasobu danych.  Zasób jest pobierany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Po pobraniu zasobu ta metoda używa kodowania określonego we <xref:System.Net.WebClient.Encoding%2A> właściwości, aby przekonwertować zasób <xref:System.String>na. Ta metoda nie blokuje wątku wywołującego podczas pobierania zasobu.  
  
 Możesz użyć <xref:System.Net.WebClient.CancelAsync%2A> metody, aby anulować operacje asynchroniczne, które nie zostały ukończone.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; DownloadStringTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DownloadStringTaskAsync (address As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ DownloadStringTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.DownloadStringTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.DownloadStringTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Pobiera zasób jako <see cref="T:System.String" /> z identyfikatora URI określonego jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą pobrany zasób. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po pobraniu zasobu danych. Zasób jest pobierany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Po pobraniu zasobu ta metoda używa kodowania określonego we <xref:System.Net.WebClient.Encoding%2A> właściwości, aby przekonwertować zasób <xref:System.String>na. Ta metoda nie blokuje wątku wywołującego podczas pobierania zasobu.  
  
 Możesz użyć <xref:System.Net.WebClient.CancelAsync%2A> metody, aby anulować operacje asynchroniczne, które nie zostały ukończone.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Net.WebClient.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Text.Encoding" /> używany do przekazywania i pobierania ciągów.</summary>
        <value><see cref="T:System.Text.Encoding" /> , Który jest używany do kodowania ciągów. Wartość domyślna tej właściwości to kodowanie zwracane przez <see cref="P:System.Text.Encoding.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody <xref:System.Net.WebClient.UploadString%2A> <xref:System.Byte> i <xref:System.Net.WebClient.UploadStringAsync%2A> używają tej właściwości do konwertowania określonego ciągu na tablicę przed przekazaniem ciągu. Aby uzyskać dodatkowe informacje, zobacz <xref:System.Text.Encoding.GetBytes%2A> metodę.  
  
 Gdy ciąg jest pobierany przy użyciu <xref:System.Net.WebClient.DownloadString%2A> metod <xref:System.Net.WebClient.DownloadStringAsync%2A> lub, <xref:System.Net.WebClient> używa <xref:System.Text.Encoding> zwracanych przez niego do przekonwertowania pobranej <xref:System.Byte> tablicy na ciąg. Aby uzyskać dodatkowe informacje, zobacz <xref:System.Text.Encoding.GetString%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie wartości tej właściwości.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebRequest(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebRequest (address As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ address);" />
      <MemberSignature Language="F#" Value="abstract member GetWebRequest : Uri -&gt; System.Net.WebRequest&#xA;override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="webClient.GetWebRequest address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> , który identyfikuje zasób do żądania.</param>
        <summary><see cref="T:System.Net.WebRequest" /> Zwraca obiekt dla określonego zasobu.</summary>
        <returns>Nowy <see cref="T:System.Net.WebRequest" /> obiekt dla określonego zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda kopiuje istniejące <xref:System.Net.WebClient.Headers%2A>, <xref:System.Net.WebClient.Credentials%2A>i metodę do nowo utworzonego <xref:System.Net.WebRequest> obiektu.  
  
 Tę metodę można wywołać tylko dla klas, które dziedziczą <xref:System.Net.WebClient>z. Jest to zapewniane przez dziedziczenie dostępu do obiektu źródłowego <xref:System.Net.WebRequest> . Klasy pochodne powinny wywoływać implementację <xref:System.Net.WebClient.GetWebRequest%2A> klasy bazowej, aby upewnić się, że metoda działa zgodnie z oczekiwaniami.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#1)]
 [!code-csharp[NCLCustomWebClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość <see cref="T:System.Net.WebRequest" />dla określonego elementu. <see cref="T:System.Net.WebResponse" /></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.Net.WebRequest" /> , Który jest używany do uzyskania odpowiedzi.</param>
        <summary>Zwraca wartość <see cref="T:System.Net.WebRequest" />dla określonego elementu. <see cref="T:System.Net.WebResponse" /></summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> zawierający odpowiedź dla określonego <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt zwrócony przez tę metodę jest uzyskiwany przez wywołanie <xref:System.Net.WebRequest.GetResponse%2A> metody dla określonego <xref:System.Net.WebRequest> obiektu.  
  
 Tę metodę można wywołać tylko dla klas, które dziedziczą <xref:System.Net.WebClient>z. Jest to zapewniane przez dziedziczenie dostępu do obiektu źródłowego <xref:System.Net.WebResponse> .  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#2)]
 [!code-csharp[NCLCustomWebClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse" Usage="webClient.GetWebResponse (request, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.Net.WebRequest" /> , Który jest używany do uzyskania odpowiedzi.</param>
        <param name="result">Obiekt uzyskany z poprzedniego wywołania do <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />. <see cref="T:System.IAsyncResult" /></param>
        <summary>Zwraca dla elementu określonego <see cref="T:System.Net.WebRequest" /> przy użyciu określonego <see cref="T:System.IAsyncResult" />. <see cref="T:System.Net.WebResponse" /></summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> zawierający odpowiedź dla określonego <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt zwrócony przez tę metodę jest uzyskiwany przez wywołanie <xref:System.Net.WebRequest.EndGetResponse%2A> metody dla określonego <xref:System.Net.WebRequest> obiektu.  
  
 Tę metodę można wywołać tylko dla klas, które dziedziczą <xref:System.Net.WebClient>z. Jest to zapewniane przez dziedziczenie dostępu do obiektu źródłowego <xref:System.Net.WebResponse> .  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#3)]
 [!code-csharp[NCLCustomWebClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebClient.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolekcję par nazwa/wartość nagłówka skojarzonych z żądaniem.</summary>
        <value><see cref="T:System.Net.WebHeaderCollection" /> Zawierająca pary nazwa nagłówka/wartość skojarzonych z tym żądaniem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera wystąpienie zawierające nagłówki protokołu wysyłane wraz z żądaniem. <xref:System.Net.WebClient> <xref:System.Net.WebClient.Headers%2A> <xref:System.Net.WebHeaderCollection>  
  
 Niektóre typowe nagłówki są uznawane za ograniczone i są chronione przez system i nie można ich ustawiać ani zmieniać <xref:System.Net.WebHeaderCollection> w obiekcie. Każda próba ustawienia jednego z tych ograniczonych nagłówków w <xref:System.Net.WebHeaderCollection> obiekcie skojarzonym <xref:System.Net.WebClient> z obiektem spowoduje zgłoszenie wyjątku później podczas <xref:System.Net.WebClient> próby wysłania żądania.  
  
 Ograniczone nagłówki chronione przez system obejmują, ale nie są ograniczone do następujących:  
  
-   Data  
  
-   Host  
  
 Ponadto niektóre inne nagłówki są również ograniczone przy użyciu <xref:System.Net.WebClient> obiektu. Te ograniczone nagłówki obejmują, ale nie są ograniczone do następujących:  
  
-   Odebrać  
  
-   Połączenie  
  
-   Długość zawartości  
  
-   Oczekiwanie (gdy wartość jest równa "100-Continue"  
  
-   If-Modified-Since  
  
-   Zakres  
  
-   Transfer-Encoding  
  
 <xref:System.Net.HttpWebRequest> Klasa ma właściwości służące do ustawiania niektórych z powyższych nagłówków. Jeśli ważne jest, aby aplikacja mogła ustawić te nagłówki, <xref:System.Net.HttpWebRequest> zamiast <xref:System.Net.WebRequest> klasy należy użyć klasy.  
  
 Nie należy zakładać, że wartości nagłówka pozostaną niezmienione, ponieważ serwery sieci Web i pamięci podręczne mogą zmieniać lub dodawać nagłówki do żądania sieci Web.  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Net.WebClient.Headers%2A> kolekcji, aby ustawić nagłówek `application/x-www-form-urlencoded,` http `Content-Type` w celu powiadomienia serwera, który formularz jest dołączony do wpisu.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.Headers" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBusy : bool" Usage="System.Net.WebClient.IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czy żądanie sieci Web jest w toku.</summary>
        <value><see langword="true" />Jeśli żądanie sieci Web jest nadal w toku; w <see langword="false" />przeciwnym razie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadDataCompleted (System.Net.DownloadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadDataCompleted(class System.Net.DownloadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadDataCompleted (e As DownloadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadDataCompleted(System::Net::DownloadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadDataCompleted : System.Net.DownloadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadDataCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.DownloadDataCompletedEventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.DownloadDataCompleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.WebClient.DownloadDataCompleted> przypadku wystąpienia zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md) wywoływanie zdarzeń  
  
 <xref:System.Net.WebClient.OnDownloadDataCompleted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#4)]
 [!code-csharp[NCLCustomWebClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.WebClient.OnDownloadDataCompleted(System.Net.DownloadDataCompletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadFileCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadFileCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadFileCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadFileCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadFileCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.DownloadFileCompleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.WebClient.DownloadFileCompleted> przypadku wystąpienia zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Net.WebClient.OnDownloadFileCompleted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#5)]
 [!code-csharp[NCLCustomWebClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.WebClient.OnDownloadFileCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadProgressChanged (System.Net.DownloadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadProgressChanged(class System.Net.DownloadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadProgressChanged (e As DownloadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadProgressChanged(System::Net::DownloadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit&#xA;override this.OnDownloadProgressChanged : System.Net.DownloadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnDownloadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadProgressChangedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.DownloadProgressChangedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.DownloadProgressChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.WebClient.DownloadProgressChanged> przypadku wystąpienia zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Net.WebClient.OnDownloadProgressChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#12)]
 [!code-csharp[NCLCustomWebClient#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDownloadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDownloadStringCompleted (System.Net.DownloadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDownloadStringCompleted(class System.Net.DownloadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDownloadStringCompleted (e As DownloadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDownloadStringCompleted(System::Net::DownloadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit&#xA;override this.OnDownloadStringCompleted : System.Net.DownloadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnDownloadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.DownloadStringCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.DownloadStringCompletedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.DownloadStringCompleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.WebClient.DownloadStringCompleted> przypadku wystąpienia zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Net.WebClient.OnDownloadStringCompleted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#6)]
 [!code-csharp[NCLCustomWebClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenReadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenReadCompleted (System.Net.OpenReadCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenReadCompleted(class System.Net.OpenReadCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenReadCompleted (e As OpenReadCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenReadCompleted(System::Net::OpenReadCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit&#xA;override this.OnOpenReadCompleted : System.Net.OpenReadCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenReadCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenReadCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.OpenReadCompletedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.OpenReadCompleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.WebClient.OpenReadCompleted> przypadku wystąpienia zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Net.WebClient.OnOpenReadCompleted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#7)]
 [!code-csharp[NCLCustomWebClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnOpenWriteCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnOpenWriteCompleted (System.Net.OpenWriteCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpenWriteCompleted(class System.Net.OpenWriteCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpenWriteCompleted (e As OpenWriteCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpenWriteCompleted(System::Net::OpenWriteCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit&#xA;override this.OnOpenWriteCompleted : System.Net.OpenWriteCompletedEventArgs -&gt; unit" Usage="webClient.OnOpenWriteCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.OpenWriteCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.OpenWriteCompletedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.OpenWriteCompleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.WebClient.OpenWriteCompleted> przypadku wystąpienia zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Net.WebClient.OnOpenWriteCompleted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#8)]
 [!code-csharp[NCLCustomWebClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadDataCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadDataCompleted (System.Net.UploadDataCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadDataCompleted(class System.Net.UploadDataCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadDataCompleted (e As UploadDataCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadDataCompleted(System::Net::UploadDataCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit&#xA;override this.OnUploadDataCompleted : System.Net.UploadDataCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadDataCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadDataCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.UploadDataCompletedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.UploadDataCompleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.WebClient.UploadDataCompleted> przypadku wystąpienia zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Net.WebClient.OnUploadDataCompleted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#9)]
 [!code-csharp[NCLCustomWebClient#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#9)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.WebClient.OnUploadDataCompleted(System.Net.UploadDataCompletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadFileCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadFileCompleted (System.Net.UploadFileCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadFileCompleted(class System.Net.UploadFileCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadFileCompleted (e As UploadFileCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadFileCompleted(System::Net::UploadFileCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit&#xA;override this.OnUploadFileCompleted : System.Net.UploadFileCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadFileCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadFileCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.UploadFileCompletedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.UploadFileCompleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.WebClient.UploadFileCompleted> przypadku wystąpienia zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Net.WebClient.OnUploadFileCompleted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#10)]
 [!code-csharp[NCLCustomWebClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#10)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.WebClient.OnUploadFileCompleted(System.Net.UploadFileCompletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadProgressChanged (System.Net.UploadProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadProgressChanged(class System.Net.UploadProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadProgressChanged (e As UploadProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadProgressChanged(System::Net::UploadProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit&#xA;override this.OnUploadProgressChanged : System.Net.UploadProgressChangedEventArgs -&gt; unit" Usage="webClient.OnUploadProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadProgressChangedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.UploadProgressChangedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.UploadProgressChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.WebClient.UploadProgressChanged> przypadku wystąpienia zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Net.WebClient.OnUploadProgressChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#13)]
 [!code-csharp[NCLCustomWebClient#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#13)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadStringCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadStringCompleted (System.Net.UploadStringCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadStringCompleted(class System.Net.UploadStringCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadStringCompleted (e As UploadStringCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadStringCompleted(System::Net::UploadStringCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit&#xA;override this.OnUploadStringCompleted : System.Net.UploadStringCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadStringCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadStringCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.UploadStringCompletedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.UploadStringCompleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.WebClient.UploadStringCompleted> przypadku wystąpienia zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Net.WebClient.OnUploadStringCompleted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#11)]
 [!code-csharp[NCLCustomWebClient#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUploadValuesCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnUploadValuesCompleted (System.Net.UploadValuesCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUploadValuesCompleted(class System.Net.UploadValuesCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUploadValuesCompleted (e As UploadValuesCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUploadValuesCompleted(System::Net::UploadValuesCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit&#xA;override this.OnUploadValuesCompleted : System.Net.UploadValuesCompletedEventArgs -&gt; unit" Usage="webClient.OnUploadValuesCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.UploadValuesCompletedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.UploadValuesCompletedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.UploadValuesCompleted" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy dziedziczące z tej klasy mogą przesłaniać tę metodę w celu wykonywania dodatkowych zadań w <xref:System.Net.WebClient.UploadValuesCompleted> przypadku wystąpienia zdarzenia.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Net.WebClient.OnUploadValuesCompleted%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje implementację tej metody, która może być dostosowana przez klasę pochodną od <xref:System.Net.WebClient>.  
  
 [!code-cpp[NCLCustomWebClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCustomWebClient/CPP/mywebclient.cpp#14)]
 [!code-csharp[NCLCustomWebClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCustomWebClient/CS/mywebclient.cs#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Net.WebClient.OnUploadValuesCompleted(System.Net.UploadValuesCompletedEventArgs)" /> metodę klasy bazowej, aby zarejestrowani pełnomocnicy otrzymywali zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnWriteStreamClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteStreamClosed (System.Net.WriteStreamClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteStreamClosed(class System.Net.WriteStreamClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteStreamClosed (e As WriteStreamClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteStreamClosed(System::Net::WriteStreamClosedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit&#xA;override this.OnWriteStreamClosed : System.Net.WriteStreamClosedEventArgs -&gt; unit" Usage="webClient.OnWriteStreamClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.WriteStreamClosedEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Net.WriteStreamClosedEventArgs" /> Obiekt zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Net.WebClient.WriteStreamClosed" /> Podnosi zdarzenie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenRead">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera strumień możliwy do odczytu dla danych pobranych z zasobu o określonym identyfikatorze URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : string -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI określony jako element <see cref="T:System.String" /> , z którego mają zostać pobrane dane.</param>
        <summary>Otwiera strumień możliwy do odczytu dla danych pobranych z zasobu z identyfikatorem URI określonym jako <see cref="T:System.String" />.</summary>
        <returns><see cref="T:System.IO.Stream" /> Służy do odczytywania danych z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda tworzy wystąpienie używane do odczytywania zawartości zasobu określonego przez `address` parametr. <xref:System.IO.Stream> <xref:System.Net.WebClient.OpenRead%2A> Ta metoda blokuje się podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumień, użyj jednej z <xref:System.Net.WebClient.OpenReadAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie `null`jest, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu z, <xref:System.IO.Stream> aby uniknąć braku zasobów systemowych.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu otwiera zasób identyfikowany przez `uriString` i wyświetla wyniki w konsoli systemowej. Zwróć uwagę, <xref:System.IO.Stream> że zwrócone <xref:System.Net.WebClient.OpenRead%2A> przez jest zamknięte, gdy dane zostały odczytane.  
  
 [!code-cpp[WebClient_OpenRead#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenRead/CPP/webclient_openread.cpp#1)]
 [!code-csharp[WebClient_OpenRead#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenRead/CS/webclient_openread.cs#1)]
 [!code-vb[WebClient_OpenRead#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenRead/VB/webclient_openread.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenRead (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenRead(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenRead(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenRead (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenRead(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenRead : Uri -&gt; System.IO.Stream" Usage="webClient.OpenRead address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI określony jako element <see cref="T:System.Uri" /> , z którego mają zostać pobrane dane.</param>
        <summary>Otwiera strumień możliwy do odczytu dla danych pobranych z zasobu z identyfikatorem URI określonym jako<see cref="T:System.Uri" /></summary>
        <returns><see cref="T:System.IO.Stream" /> Służy do odczytywania danych z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda tworzy wystąpienie używane do odczytywania zawartości zasobu określonego przez `address` parametr. <xref:System.IO.Stream> <xref:System.Net.WebClient.OpenRead%2A> Ta metoda blokuje się podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumień, użyj jednej z <xref:System.Net.WebClient.OpenReadAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie `null`jest, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Należy wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> po zakończeniu z, <xref:System.IO.Stream> aby uniknąć braku zasobów systemowych.  
  
 **Uwaga** Ten element członkowski wyprowadza informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania danych.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera strumień możliwy do odczytu zawierający określony zasób. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri -&gt; unit" Usage="webClient.OpenReadAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Otwiera strumień możliwy do odczytu zawierający określony zasób. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do uzyskiwania dostępu do zasobu określonego `address` przez parametr. Strumień jest uzyskiwany przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków. Aby otrzymywać powiadomienia, gdy strumień jest dostępny, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.OpenReadCompleted> zdarzenia.  
  
> [!NOTE]
>  Musisz wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> , <xref:System.IO.Stream> gdy skończysz, aby uniknąć braku zasobów systemowych.  
  
 Ta metoda nie blokuje wątku wywołującego podczas otwierania strumienia. Aby zablokować podczas oczekiwania na strumień, użyj <xref:System.Net.WebClient.OpenReadAsync%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie określa bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanego zasobu. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie `null`jest, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i adres jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadAsync">
      <MemberSignature Language="C#" Value="public void OpenReadAsync (Uri address, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenReadAsync(class System.Uri address, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenReadAsync (address As Uri, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenReadAsync(Uri ^ address, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenReadAsync : Uri * obj -&gt; unit" Usage="webClient.OpenReadAsync (address, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userToken" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przesyłany do metody wywoływanej po zakończeniu operacji asynchronicznej.</param>
        <summary>Otwiera strumień możliwy do odczytu zawierający określony zasób. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do uzyskiwania dostępu do zasobu określonego `address` przez parametr. Strumień jest uzyskiwany przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków. Aby otrzymywać powiadomienia, gdy strumień jest dostępny, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.OpenReadCompleted> zdarzenia.  
  
> [!NOTE]
>  Musisz wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> , <xref:System.IO.Stream> gdy skończysz, aby uniknąć braku zasobów systemowych.  
  
 Ta metoda nie blokuje wątku wywołującego podczas otwierania strumienia. Aby zablokować podczas oczekiwania na strumień, użyj <xref:System.Net.WebClient.OpenRead%2A> metody.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie określa bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanego zasobu. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie `null`jest, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i adres jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenReadCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenReadCompletedEventHandler OpenReadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenReadCompletedEventHandler OpenReadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenReadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenReadCompleted As OpenReadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenReadCompletedEventHandler ^ OpenReadCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " Usage="member this.OpenReadCompleted : System.Net.OpenReadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenReadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zostanie ukończona operacja asynchroniczna otwierająca strumień zawierający zasób.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane za każdym razem, gdy operacja asynchroniczna otworzy strumień zawierający zasób. Te operacje są uruchamiane przez wywołanie <xref:System.Net.WebClient.OpenReadAsync%2A> metod.  
  
 <xref:System.Net.OpenReadCompletedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.Net.OpenReadCompletedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie programu obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#30](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#30)]
 [!code-csharp[NCLWebClientAsync#30](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#30)]
 [!code-vb[NCLWebClientAsync#30](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReadTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera strumień możliwy do odczytu zawierający określony zasób jako operację asynchroniczną przy użyciu obiektu zadania. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Otwiera strumień możliwy do odczytu zawierający określony zasób jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.IO.Stream" /> zwraca używany do odczytywania danych z zasobu. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po otwarciu strumienia z możliwością odczytu do zasobu danych. Ta metoda nie blokuje wątku wywołującego podczas otwierania strumienia.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do uzyskiwania dostępu do zasobu określonego `address` przez parametr. Strumień jest uzyskiwany przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
> [!NOTE]
>  Musisz wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> , <xref:System.IO.Stream> gdy skończysz, aby uniknąć braku zasobów systemowych.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie określa bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanego zasobu. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie `null`jest, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i adres jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenReadTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenReadTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenReadTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenReadTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenReadTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenReadTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do pobrania.</param>
        <summary>Otwiera strumień możliwy do odczytu zawierający określony zasób jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.IO.Stream" /> zwraca używany do odczytywania danych z zasobu. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po otwarciu strumienia z możliwością odczytu do zasobu danych. Ta metoda nie blokuje wątku wywołującego podczas otwierania strumienia.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do uzyskiwania dostępu do zasobu określonego `address` przez parametr. Strumień jest uzyskiwany przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
> [!NOTE]
>  Musisz wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> , <xref:System.IO.Stream> gdy skończysz, aby uniknąć braku zasobów systemowych.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie określa bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanego zasobu. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie `null`jest, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda używa polecenia RETR w celu pobrania zasobu FTP. W przypadku zasobu HTTP jest używana metoda GET.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i adres jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas pobierania zasobu.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWrite">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera strumień służący do zapisywania danych w zasobie o określonym identyfikatorze URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <summary>Otwiera strumień służący do zapisywania danych do określonego zasobu.</summary>
        <returns><see cref="T:System.IO.Stream" /> Służy do zapisywania danych w zasobie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Metoda zwraca strumień zapisywalny, który jest używany do wysyłania danych do zasobu. Ta metoda blokuje się podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumień, użyj jednej z <xref:System.Net.WebClient.OpenWriteAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu odczytuje dane z wiersza polecenia i używa <xref:System.Net.WebClient.OpenWrite%2A> programu w celu uzyskania strumienia do zapisu danych. Zwróć uwagę, <xref:System.IO.Stream> że zwracane <xref:System.Net.WebClient.OpenWrite%2A> przez jest zamknięte po wysłaniu danych.  
  
 [!code-cpp[WebClient_OpenWrite2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite2/CPP/webclient_openwrite2.cpp#1)]
 [!code-csharp[WebClient_OpenWrite2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite2/CS/webclient_openwrite2.cs#1)]
 [!code-vb[WebClient_OpenWrite2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite2/VB/webclient_openwrite2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri -&gt; System.IO.Stream" Usage="webClient.OpenWrite address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <summary>Otwiera strumień służący do zapisywania danych do określonego zasobu.</summary>
        <returns><see cref="T:System.IO.Stream" /> Służy do zapisywania danych w zasobie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Metoda zwraca strumień zapisywalny, który jest używany do wysyłania danych do zasobu. Ta metoda blokuje się podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumień, użyj jednej z <xref:System.Net.WebClient.OpenWriteAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As String, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : string * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <summary>Otwiera strumień służący do zapisywania danych w określonym zasobie przy użyciu określonej metody.</summary>
        <returns><see cref="T:System.IO.Stream" /> Służy do zapisywania danych w zasobie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Metoda zwraca strumień zapisywalny, który jest używany do wysyłania danych do zasobu. Podstawowe żądanie jest wykonywane przy użyciu metody określonej w `method` parametrze. Dane są wysyłane do serwera po zamknięciu strumienia. Ta metoda blokuje się podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumień, użyj jednej z <xref:System.Net.WebClient.OpenWriteAsync%2A> metod.  
  
 `method` Jeśli parametr określa metodę, która nie jest zrozumiała dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie określa adresu bezwzględnego, `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu odczytuje dane z wiersza polecenia i używa <xref:System.Net.WebClient.OpenWrite%2A> w celu uzyskania strumienia użytego do zapisania danych. Zwróć uwagę, <xref:System.IO.Stream> że zwracane <xref:System.Net.WebClient.OpenWrite%2A> przez muszą być zamknięte, aby wysłać dane.  
  
 [!code-cpp[WebClient_OpenWrite#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_OpenWrite/CPP/webclient_openwrite.cpp#1)]
 [!code-csharp[WebClient_OpenWrite#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_OpenWrite/CS/webclient_openwrite.cs#1)]
 [!code-vb[WebClient_OpenWrite#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_OpenWrite/VB/webclient_openwrite.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWrite">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenWrite (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenWrite(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWrite (address As Uri, method As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenWrite(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWrite : Uri * string -&gt; System.IO.Stream" Usage="webClient.OpenWrite (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <summary>Otwiera strumień służący do zapisywania danych w określonym zasobie przy użyciu określonej metody.</summary>
        <returns><see cref="T:System.IO.Stream" /> Służy do zapisywania danych w zasobie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.OpenWrite%2A> Metoda zwraca strumień zapisywalny, który jest używany do wysyłania danych do zasobu. Ta metoda blokuje się podczas otwierania strumienia. Aby kontynuować wykonywanie podczas oczekiwania na strumień, użyj jednej z <xref:System.Net.WebClient.OpenWriteAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera strumień służący do zapisywania danych do określonego zasobu. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri -&gt; unit" Usage="webClient.OpenWriteAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <summary>Otwiera strumień służący do zapisywania danych do określonego zasobu. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera strumień zapisywalny, który jest używany do wysyłania danych do zasobu. Strumień jest pobierany przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Aby otrzymywać powiadomienia, gdy strumień jest dostępny, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.OpenWriteCompleted> zdarzenia. Po zamknięciu strumienia wątki są blokowane do momentu wysłania żądania do `address` i odebrania odpowiedzi.  
  
 Ta metoda nie blokuje wątku wywołującego podczas otwierania strumienia. Aby zablokować podczas oczekiwania na strumień, należy użyć jednej z <xref:System.Net.WebClient.OpenWrite%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string -&gt; unit" Usage="webClient.OpenWriteAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <summary>Otwiera strumień służący do zapisywania danych do określonego zasobu. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera strumień zapisywalny, który jest używany do wysyłania danych do zasobu. Strumień jest pobierany przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Aby otrzymywać powiadomienia, gdy strumień jest dostępny, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.OpenWriteCompleted> zdarzenia. Po zamknięciu strumienia wątki są blokowane do momentu wysłania żądania do `address` i odebrania odpowiedzi.  
  
 Ta metoda nie blokuje wątku wywołującego podczas otwierania strumienia. Aby zablokować podczas oczekiwania na strumień, należy użyć jednej z <xref:System.Net.WebClient.OpenWrite%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteAsync">
      <MemberSignature Language="C#" Value="public void OpenWriteAsync (Uri address, string method, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OpenWriteAsync(class System.Uri address, string method, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenWriteAsync (address As Uri, method As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OpenWriteAsync(Uri ^ address, System::String ^ method, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteAsync : Uri * string * obj -&gt; unit" Usage="webClient.OpenWriteAsync (address, method, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userToken" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przesyłany do metody wywoływanej po zakończeniu operacji asynchronicznej</param>
        <summary>Otwiera strumień służący do zapisywania danych w określonym zasobie przy użyciu określonej metody. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda pobiera strumień zapisywalny, który jest używany do wysyłania danych do zasobu. Strumień jest pobierany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Aby otrzymywać powiadomienia, gdy strumień jest dostępny, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.OpenWriteCompleted> zdarzenia. Zawartość strumienia jest wysyłana do serwera po zamknięciu strumienia.  
  
 `method` Jeśli parametr określa metodę, która nie jest zrozumiała dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Ta metoda nie blokuje wątku wywołującego podczas otwierania strumienia. Aby zablokować podczas oczekiwania na strumień, należy użyć jednej z <xref:System.Net.WebClient.OpenWrite%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.OpenWriteCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OpenWriteCompleted As OpenWriteCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::OpenWriteCompletedEventHandler ^ OpenWriteCompleted;" />
      <MemberSignature Language="F#" Value="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " Usage="member this.OpenWriteCompleted : System.Net.OpenWriteCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.OpenWriteCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy operacja asynchroniczna otworzy strumień, aby zapisać dane w zasobie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane za każdym razem, gdy operacja asynchroniczna otworzy strumień, który jest używany do ukończenia przesyłania danych do zasobu. Te operacje są uruchamiane przez wywołanie <xref:System.Net.WebClient.OpenWriteAsync%2A> metod.  
  
 <xref:System.Net.OpenWriteCompletedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.Net.OpenWriteCompletedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie programu obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#14)]
 [!code-csharp[NCLWebClientAsync#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#14)]
 [!code-vb[NCLWebClientAsync#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenWriteTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Otwiera strumień służący do zapisywania danych w określonym zasobie jako operacja asynchroniczna przy użyciu obiektu zadania. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <summary>Otwiera strumień służący do zapisywania danych w określonym zasobie jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.IO.Stream" /> zwraca wartość używaną do zapisywania danych w zasobie. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po otwarciu strumienia zapisywalnego dla zasobu danych. Ta metoda nie blokuje wątku wywołującego podczas otwierania strumienia.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do zapisywania danych do zasobu określonego `address` przez parametr. Strumień jest uzyskiwany przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
> [!NOTE]
>  Musisz wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> , <xref:System.IO.Stream> gdy skończysz, aby uniknąć braku zasobów systemowych.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <summary>Otwiera strumień służący do zapisywania danych w określonym zasobie jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.IO.Stream" /> zwraca wartość używaną do zapisywania danych w zasobie. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po otwarciu strumienia zapisywalnego dla zasobu danych. Ta metoda nie blokuje wątku wywołującego podczas otwierania strumienia.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do zapisywania danych do zasobu określonego `address` przez parametr. Strumień jest uzyskiwany przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
> [!NOTE]
>  Musisz wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> , <xref:System.IO.Stream> gdy skończysz, aby uniknąć braku zasobów systemowych.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(string address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As String, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(System::String ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <summary>Otwiera strumień służący do zapisywania danych w określonym zasobie jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.IO.Stream" /> zwraca wartość używaną do zapisywania danych w zasobie. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po otwarciu strumienia zapisywalnego dla zasobu danych. Ta metoda nie blokuje wątku wywołującego podczas otwierania strumienia.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do zapisywania danych do zasobu określonego `address` przez parametr. Strumień jest uzyskiwany przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
> [!NOTE]
>  Musisz wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> , <xref:System.IO.Stream> gdy skończysz, aby uniknąć braku zasobów systemowych.  
  
 `method` Jeśli parametr określa metodę, która nie jest zrozumiała dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="OpenWriteTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenWriteTaskAsync(class System.Uri address, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenWriteTaskAsync (address As Uri, method As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenWriteTaskAsync(Uri ^ address, System::String ^ method);" />
      <MemberSignature Language="F#" Value="member this.OpenWriteTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webClient.OpenWriteTaskAsync (address, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <summary>Otwiera strumień służący do zapisywania danych w określonym zasobie jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.IO.Stream" /> zwraca wartość używaną do zapisywania danych w zasobie. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po otwarciu strumienia zapisywalnego dla zasobu danych. Ta metoda nie blokuje wątku wywołującego podczas otwierania strumienia.  
  
 Ta metoda pobiera <xref:System.IO.Stream> wystąpienie używane do zapisywania danych do zasobu określonego `address` przez parametr. Strumień jest uzyskiwany przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
> [!NOTE]
>  Musisz wywołać <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> , <xref:System.IO.Stream> gdy skończysz, aby uniknąć braku zasobów systemowych.  
  
 `method` Jeśli parametr określa metodę, która nie jest zrozumiała dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.</exception>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebClient.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia serwer proxy używany przez ten <see cref="T:System.Net.WebClient" /> obiekt.</summary>
        <value><see cref="T:System.Net.IWebProxy" /> Wystąpienie używane do wysyłania żądań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość identyfikuje wystąpienie, które komunikuje się z serwerami zdalnymi w imieniu <xref:System.Net.WebClient> tego obiektu. <xref:System.Net.IWebProxy> <xref:System.Net.WebClient.Proxy%2A> Serwer proxy jest ustawiany przez system przy użyciu plików konfiguracji i ustawień sieci lokalnej programu Internet Explorer. Aby określić, że żaden serwer proxy nie powinien być używany <xref:System.Net.WebClient.Proxy%2A> , należy `null`ustawić właściwość na.  
  
 Aby uzyskać informacje na temat automatycznego wykrywania serwera proxy, zobacz [Automatyczne wykrywanie serwera proxy](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Net.WebClient.Proxy" />jest ustawiony na <see langword="null" />.</exception>
        <permission cref="T:System.Net.WebPermission">to nie jest ograniczone. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Net.HttpWebResponse" />
        <altmember cref="T:System.Net.FtpWebRequest" />
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
        <altmember cref="T:System.Net.WebProxy" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); void set(System::Collections::Specialized::NameValueCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection with get, set" Usage="System.Net.WebClient.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolekcję par nazwa/wartość zapytania skojarzonych z żądaniem.</summary>
        <value>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> , który zawiera pary nazwa/wartość zapytania skojarzone z żądaniem. Jeśli z żądaniem nie są skojarzone żadne pary, wartość jest pusta <see cref="T:System.Collections.Specialized.NameValueCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.QueryString%2A> Właściwość<xref:System.Collections.Specialized.NameValueCollection> zawiera wystąpienie zawierające pary nazwa/wartość, które są dołączane do identyfikatora URI jako ciąg zapytania. Zawartość <xref:System.Net.WebClient.QueryString%2A> właściwości jest poprzedzona znakiem zapytania (?), a pary nazwa/wartość są oddzielane od siebie przez znak handlowego "i" (&).  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera dane wprowadzane przez użytkownika z wiersza polecenia i kompiluje <xref:System.Collections.Specialized.NameValueCollection> , który jest przypisany <xref:System.Net.WebClient.QueryString%2A> do właściwości. Następnie pobiera odpowiedź z serwera do pliku lokalnego.  
  
 [!code-cpp[WebClient_QueryString#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_QueryString/CPP/webclient_querystring.cpp#1)]
 [!code-csharp[WebClient_QueryString#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_QueryString/CS/webclient_querystring.cs#1)]
 [!code-vb[WebClient_QueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_QueryString/VB/webclient_querystring.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaders">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection ResponseHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection ResponseHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.ResponseHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResponseHeaders As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebHeaderCollection ^ ResponseHeaders { System::Net::WebHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResponseHeaders : System.Net.WebHeaderCollection" Usage="System.Net.WebClient.ResponseHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję par nazwa/wartość nagłówka skojarzonych z odpowiedzią.</summary>
        <value>Zawierająca pary nazwa nagłówka/wartość skojarzonych z odpowiedzią lub <see langword="null" /> Jeśli nie otrzymano odpowiedzi. <see cref="T:System.Net.WebHeaderCollection" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.ResponseHeaders%2A> Właściwość zawiera<xref:System.Net.WebClient> wystąpienie zawierająceinformacjenagłówkaodbierane<xref:System.Net.WebHeaderCollection> z odpowiedzią.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera i wyświetla <xref:System.Net.WebClient.ResponseHeaders%2A> zwrócone przez serwer.  
  
 [!code-cpp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CPP/webclient_baseaddress_responseheaders.cpp#2)]
 [!code-csharp[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/CS/webclient_baseaddress_responseheaders.cs#2)]
 [!code-vb[WebClient_BaseAddress_ResponseHeaders#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_BaseAddress_ResponseHeaders/VB/webclient_baseaddress_responseheaders.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje bufor danych do zasobu o określonym identyfikatorze URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="data">Bufor danych do wysłania do zasobu.</param>
        <summary>Przekazuje bufor danych do zasobu identyfikowanego przez identyfikator URI.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła bufor danych do zasobu.  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST. Jeśli podstawowe żądanie nie jest zrozumiałe dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła`data` zawartość do serwera bez kodowania. Ta metoda blokuje podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadDataAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu konwertuje ciąg wprowadzony z konsoli programu do <xref:System.Byte> tablicy i zapisuje tablicę do określonego serwera przy użyciu. <xref:System.Net.WebClient.UploadData%2A> Dowolna odpowiedź z serwera zostanie wyświetlona w konsoli programu.  
  
 [!code-cpp[WebClient_UpLoadData2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData2/CPP/webclient_uploaddata2.cpp#1)]
 [!code-csharp[WebClient_UpLoadData2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData2/CS/webclient_uploaddata2.cs#1)]
 [!code-vb[WebClient_UpLoadData2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData2/VB/webclient_uploaddata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="data" />jest <see langword="null" />.  
  
—lub— 
Wystąpił błąd podczas wysyłania danych.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="data">Bufor danych do wysłania do zasobu.</param>
        <summary>Przekazuje bufor danych do zasobu identyfikowanego przez identyfikator URI.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła bufor danych do zasobu.  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST. Jeśli podstawowe żądanie nie jest zrozumiałe dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła`data` zawartość do serwera bez kodowania. Ta metoda blokuje podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadDataAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="data" />jest <see langword="null" />.  
  
—lub— 
Wystąpił błąd podczas wysyłania danych.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As String, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : string * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda HTTP używana do wysyłania danych do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data">Bufor danych do wysłania do zasobu.</param>
        <summary>Przekazuje bufor danych do określonego zasobu przy użyciu określonej metody.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wysyła bufor danych do zasobu przy użyciu metody http określonej `method` w parametrze i zwraca wszelkie odpowiedzi z serwera. <xref:System.Net.WebClient.UploadData%2A> Ta metoda blokuje podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadDataAsync%2A> metod.  
  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła`data` zawartość do serwera bez kodowania.  
  
 `method` Jeśli parametr określa czasownik, który nie jest zrozumiały dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu konwertuje ciąg wprowadzony z konsoli do tablicy bajtów i zapisuje tablicę do określonego serwera przy użyciu <xref:System.Net.WebClient.UploadData%2A>. Dowolna odpowiedź z serwera zostanie wyświetlona w konsoli programu.  
  
 [!code-cpp[WebClient_UpLoadData_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CPP/webclient_uploaddata_headers.cpp#2)]
 [!code-csharp[WebClient_UpLoadData_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/CS/webclient_uploaddata_headers.cs#2)]
 [!code-vb[WebClient_UpLoadData_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadData_Headers/VB/webclient_uploaddata_headers.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="data" />jest <see langword="null" />.  
  
—lub— 
Wystąpił błąd podczas przekazywania danych.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadData">
      <MemberSignature Language="C#" Value="public byte[] UploadData (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadData(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadData (address As Uri, method As String, data As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadData(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadData : Uri * string * byte[] -&gt; byte[]" Usage="webClient.UploadData (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda HTTP używana do wysyłania danych do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data">Bufor danych do wysłania do zasobu.</param>
        <summary>Przekazuje bufor danych do określonego zasobu przy użyciu określonej metody.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wysyła bufor danych do zasobu przy użyciu metody http określonej `method` w parametrze i zwraca wszelkie odpowiedzi z serwera. <xref:System.Net.WebClient.UploadData%2A> Ta metoda blokuje podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadDataAsync%2A> metod.  
  
 <xref:System.Net.WebClient.UploadData%2A> Metoda wysyła`data` zawartość do serwera bez kodowania.  
  
 `method` Jeśli parametr określa czasownik, który nie jest zrozumiały dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="data" />jest <see langword="null" />.  
  
—lub— 
Wystąpił błąd podczas przekazywania danych.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje bufor danych do zasobu identyfikowanego przez identyfikator URI. Ta metoda nie blokuje wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="data">Bufor danych do wysłania do zasobu.</param>
        <summary>Przekazuje bufor danych do zasobu identyfikowanego przez identyfikator URI przy użyciu metody POST. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła bufor danych do zasobu. Bufor danych jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Dane nie są zakodowane. Aby otrzymać powiadomienie po zakończeniu przekazywania danych, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.UploadDataCompleted> zdarzenia.  
  
 Ta metoda nie blokuje wątku wywołującego, gdy dane są wysyłane. Aby wysłać dane i zablokować podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadData%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli <see langword="null" />wartość domyślna to post dla protokołów HTTP i Stor dla usługi FTP.</param>
        <param name="data">Bufor danych do wysłania do zasobu.</param>
        <summary>Przekazuje bufor danych do zasobu identyfikowanego za pomocą identyfikatora URI przy użyciu określonej metody. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła bufor danych do zasobu. Bufor danych jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Dane nie są zakodowane. Aby otrzymać powiadomienie po zakończeniu przekazywania danych, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.UploadDataCompleted> zdarzenia.  
  
 Ta metoda nie blokuje wątku wywołującego, gdy dane są wysyłane. Aby wysłać dane i zablokować podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadData%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataAsync">
      <MemberSignature Language="C#" Value="public void UploadDataAsync (Uri address, string method, byte[] data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadDataAsync(class System.Uri address, string method, unsigned int8[] data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadDataAsync (address As Uri, method As String, data As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadDataAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadDataAsync : Uri * string * byte[] * obj -&gt; unit" Usage="webClient.UploadDataAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userToken" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli <see langword="null" />wartość domyślna to post dla protokołów HTTP i Stor dla usługi FTP.</param>
        <param name="data">Bufor danych do wysłania do zasobu.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przesyłany do metody wywoływanej po zakończeniu operacji asynchronicznej.</param>
        <summary>Przekazuje bufor danych do zasobu identyfikowanego za pomocą identyfikatora URI przy użyciu określonej metody i tokenu identyfikującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła bufor danych do zasobu. Bufor danych jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Dane nie są zakodowane. Aby otrzymać powiadomienie po zakończeniu przekazywania danych, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.UploadDataCompleted> zdarzenia.  
  
 Ta metoda nie blokuje wątku wywołującego, gdy dane są wysyłane. Aby wysłać dane i zablokować podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadData%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadDataCompletedEventHandler UploadDataCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadDataCompletedEventHandler UploadDataCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadDataCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadDataCompleted As UploadDataCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadDataCompletedEventHandler ^ UploadDataCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " Usage="member this.UploadDataCompleted : System.Net.UploadDataCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadDataCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu asynchronicznej operacji przekazywania danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest zgłaszane przy każdym zakończeniu asynchronicznej operacji przekazywania danych. Asynchroniczne przekazywanie danych jest uruchamiane przez wywołanie <xref:System.Net.WebClient.UploadDataAsync%2A> metod.  
  
 <xref:System.Net.UploadDataCompletedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.Net.UploadDataCompletedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie programu obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#36](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#36)]
 [!code-csharp[NCLWebClientAsync#36](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#36)]
 [!code-vb[NCLWebClientAsync#36](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadDataTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje bufor danych zawierający <see cref="T:System.Byte" /> tablicę o identyfikatorze URI określonym jako operacja asynchroniczna przy użyciu obiektu zadania.  Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="data">Bufor danych do wysłania do zasobu.</param>
        <summary>Przekazuje bufor danych zawierający <see cref="T:System.Byte" /> tablicę o identyfikatorze URI określonym jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą treść odpowiedzi odebranej z zasobu podczas przekazywania buforu danych. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu buforu danych do zasobu.  
  
 Ta metoda wysyła bufor danych do zasobu. Bufor danych jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Dane nie są zakodowane.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="data">Bufor danych do wysłania do zasobu.</param>
        <summary>Przekazuje bufor danych zawierający <see cref="T:System.Byte" /> tablicę o identyfikatorze URI określonym jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą treść odpowiedzi odebranej z zasobu podczas przekazywania buforu danych. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu buforu danych do zasobu.  
  
 Ta metoda wysyła bufor danych do zasobu. Bufor danych jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Dane nie są zakodowane.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(string address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As String, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(System::String ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : string * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli <see langword="null" />wartość domyślna to post dla protokołów HTTP i Stor dla usługi FTP.</param>
        <param name="data">Bufor danych do wysłania do zasobu.</param>
        <summary>Przekazuje bufor danych zawierający <see cref="T:System.Byte" /> tablicę o identyfikatorze URI określonym jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą treść odpowiedzi odebranej z zasobu podczas przekazywania buforu danych. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu buforu danych do zasobu.  
  
 Ta metoda wysyła bufor danych do zasobu. Bufor danych jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Dane nie są zakodowane.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadDataTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, string method, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadDataTaskAsync(class System.Uri address, string method, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadDataTaskAsync (address As Uri, method As String, data As Byte()) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadDataTaskAsync(Uri ^ address, System::String ^ method, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadDataTaskAsync : Uri * string * byte[] -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadDataTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego mają zostać odebrane dane.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli <see langword="null" />wartość domyślna to post dla protokołów HTTP i Stor dla usługi FTP.</param>
        <param name="data">Bufor danych do wysłania do zasobu.</param>
        <summary>Przekazuje bufor danych zawierający <see cref="T:System.Byte" /> tablicę o identyfikatorze URI określonym jako operacja asynchroniczna przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą treść odpowiedzi odebranej z zasobu podczas przekazywania buforu danych. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu buforu danych do zasobu.  
  
 Ta metoda wysyła bufor danych do zasobu. Bufor danych jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków. Dane nie są zakodowane.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje plik lokalny do zasobu o określonym identyfikatorze URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego ma zostać odebrany plik. Na przykład ftp://localhost/samplefile.txt.</param>
        <param name="fileName">Plik do wysłania do zasobu. Na przykład "SampleFile. txt".</param>
        <summary>Przekazuje określony plik lokalny do zasobu o określonym identyfikatorze URI.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadFile%2A> Metoda wysyła plik lokalny do zasobu. Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
 Ta metoda blokuje podczas przekazywania pliku. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFileAsync%2A> metod.  
  
 `POST` Metoda jest definiowana przez http. Jeśli podstawowe żądanie nie korzysta z protokołu HTTP i `POST` nie jest zrozumiałe dla serwera, bazowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu przekazuje określony plik do określonego identyfikatora URI przy użyciu <xref:System.Net.WebClient.UploadFile%2A>. Każda odpowiedź zwrócona przez serwer zostanie wyświetlona w konsoli programu.  
  
 [!code-cpp[WebClient_UpLoadFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile/CPP/webclient_uploadfile.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile/CS/webclient_uploadfile.cs#1)]
 [!code-vb[WebClient_UpLoadFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile/VB/webclient_uploadfile.vb#1)]  
  
 Poniższy przykład kodu pokazuje stronę ASP.NET, która może akceptować ogłoszone pliki i jest odpowiednia do użycia z <xref:System.Net.WebClient.UploadFile%2A> metodą. Strona musi znajdować się na serwerze sieci Web. Jego adres zawiera wartość `address` parametru <xref:System.Net.WebClient.UploadFile%2A> metody.  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="fileName" />is <see langword="null" />, is <see cref="F:System.String.Empty" />, zawiera nieprawidłowe znaki lub nie istnieje.  
  
—lub— 
Wystąpił błąd podczas przekazywania pliku.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Nagłówek rozpoczyna się od <see langword="multipart" />. <see langword="Content-type" /></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">w celu uzyskania dostępu do pliku lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string -&gt; byte[]" Usage="webClient.UploadFile (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego ma zostać odebrany plik. Na przykład ftp://localhost/samplefile.txt.</param>
        <param name="fileName">Plik do wysłania do zasobu. Na przykład "SampleFile. txt".</param>
        <summary>Przekazuje określony plik lokalny do zasobu o określonym identyfikatorze URI.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadFile%2A> Metoda wysyła plik lokalny do zasobu. Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
 Ta metoda blokuje podczas przekazywania pliku. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFileAsync%2A> metod.  
  
 `POST` Metoda jest definiowana przez http. Jeśli podstawowe żądanie nie korzysta z protokołu HTTP i `POST` nie jest zrozumiałe dla serwera, bazowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="fileName" />is <see langword="null" />, is <see cref="F:System.String.Empty" />, zawiera nieprawidłowe znaki lub nie istnieje.  
  
—lub— 
Wystąpił błąd podczas przekazywania pliku.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Nagłówek rozpoczyna się od <see langword="multipart" />. <see langword="Content-type" /></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">w celu uzyskania dostępu do pliku lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As String, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego ma zostać odebrany plik.</param>
        <param name="method">Metoda użyta do wysłania pliku do zasobu. Jeśli <see langword="null" />wartość domyślna to post dla protokołów HTTP i Stor dla usługi FTP.</param>
        <param name="fileName">Plik do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do określonego zasobu przy użyciu określonej metody.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy adres określa zasób http, <xref:System.Net.WebClient.UploadFile%2A> Metoda wysyła plik lokalny do zasobu przy użyciu metody http określonej `method` w parametrze i zwraca wszelkie odpowiedzi z serwera. Ta metoda blokuje podczas przekazywania pliku. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFileAsync%2A> metod.  
  
 Jeśli parametr określa czasownik, który nie jest zrozumiały dla serwera `address` lub zasobu, klasy bazowego protokołu określają, co się dzieje. `method` Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu przekazuje określony plik do określonego identyfikatora URI przy użyciu <xref:System.Net.WebClient.UploadFile%2A>. Każda odpowiedź zwrócona przez serwer zostanie wyświetlona w konsoli programu.  
  
 [!code-cpp[WebClient_UpLoadFile2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CPP/webclient_uploadfile2.cpp#1)]
 [!code-csharp[WebClient_UpLoadFile2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UpLoadFile2/CS/webclient_uploadfile2.cs#1)]
 [!code-vb[WebClient_UpLoadFile2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UpLoadFile2/VB/webclient_uploadfile2.vb#1)]  
  
 Poniższy przykład kodu pokazuje stronę ASP.NET, która może akceptować ogłoszone pliki i jest odpowiednia do użycia z <xref:System.Net.WebClient.UploadFile%2A> metodą. Strona musi znajdować się na serwerze sieci Web. Jego adres zawiera wartość `address` parametru <xref:System.Net.WebClient.UploadFile%2A> metody.  
  
 [!code-aspx-csharp[NCLWebClientAsp#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsp/CS/fileuploadercs.aspx#1)]
 [!code-aspx-vb[NCLWebClientAsp#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsp/VB/fileuploadervb.aspx#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="fileName" />is <see langword="null" />, is <see cref="F:System.String.Empty" />, zawiera nieprawidłowe znaki lub nie istnieje.  
  
—lub— 
Wystąpił błąd podczas przekazywania pliku.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Nagłówek rozpoczyna się od <see langword="multipart" />. <see langword="Content-type" /></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">w celu uzyskania dostępu do pliku lokalnego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public byte[] UploadFile (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadFile(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFile (address As Uri, method As String, fileName As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadFile(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : Uri * string * string -&gt; byte[]" Usage="webClient.UploadFile (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego ma zostać odebrany plik.</param>
        <param name="method">Metoda użyta do wysłania pliku do zasobu. Jeśli <see langword="null" />wartość domyślna to post dla protokołów HTTP i Stor dla usługi FTP.</param>
        <param name="fileName">Plik do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do określonego zasobu przy użyciu określonej metody.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy adres określa zasób http, <xref:System.Net.WebClient.UploadFile%2A> Metoda wysyła plik lokalny do zasobu przy użyciu metody http określonej `method` w parametrze i zwraca wszelkie odpowiedzi z serwera. Ta metoda blokuje podczas przekazywania pliku. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFileAsync%2A> metod.  
  
 Jeśli parametr określa czasownik, który nie jest zrozumiały dla serwera `address` lub zasobu, klasy bazowego protokołu określają, co się dzieje. `method` Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="fileName" />is <see langword="null" />, is <see cref="F:System.String.Empty" />, zawiera nieprawidłowe znaki lub nie istnieje.  
  
—lub— 
Wystąpił błąd podczas przekazywania pliku.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Nagłówek rozpoczyna się od <see langword="multipart" />. <see langword="Content-type" /></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">w celu uzyskania dostępu do pliku lokalnego. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określony plik lokalny do określonego zasobu. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string -&gt; unit" Usage="webClient.UploadFileAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego ma zostać odebrany plik. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="fileName">Plik do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do określonego zasobu przy użyciu metody POST. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plik jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków. Aby otrzymać powiadomienie po zakończeniu przekazywania pliku, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.UploadFileCompleted> zdarzenia.  
  
 Ta metoda nie blokuje wątku wywołującego, gdy plik jest wysyłany. Aby wysłać plik i zablokować podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFile%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem (""), `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="fileName" />is <see langword="null" />, is <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Nagłówek rozpoczyna się od <see langword="multipart" />. <see langword="Content-type" /></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">w celu uzyskania dostępu do pliku lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego ma zostać odebrany plik. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli <see langword="null" />wartość domyślna to post dla protokołów HTTP i Stor dla usługi FTP.</param>
        <param name="fileName">Plik do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do określonego zasobu przy użyciu metody POST. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plik jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków. Aby otrzymać powiadomienie po zakończeniu przekazywania pliku, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.UploadFileCompleted> zdarzenia.  
  
 Ta metoda nie blokuje wątku wywołującego, gdy plik jest wysyłany. Aby wysłać plik i zablokować podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFile%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem (""), `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="fileName" />is <see langword="null" />, is <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Nagłówek rozpoczyna się od <see langword="multipart" />. <see langword="Content-type" /></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">w celu uzyskania dostępu do pliku lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileAsync">
      <MemberSignature Language="C#" Value="public void UploadFileAsync (Uri address, string method, string fileName, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadFileAsync(class System.Uri address, string method, string fileName, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFileAsync (address As Uri, method As String, fileName As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFileAsync(Uri ^ address, System::String ^ method, System::String ^ fileName, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadFileAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadFileAsync (address, method, fileName, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userToken" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego ma zostać odebrany plik. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli <see langword="null" />wartość domyślna to post dla protokołów HTTP i Stor dla usługi FTP.</param>
        <param name="fileName">Plik do wysłania do zasobu.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przesyłany do metody wywoływanej po zakończeniu operacji asynchronicznej.</param>
        <summary>Przekazuje określony plik lokalny do określonego zasobu przy użyciu metody POST. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Plik jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków. Aby otrzymać powiadomienie po zakończeniu przekazywania pliku, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.UploadFileCompleted> zdarzenia.  
  
 Ta metoda nie blokuje wątku wywołującego, gdy plik jest wysyłany. Aby wysłać plik i zablokować podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadFile%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem (""), `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="fileName" />is <see langword="null" />, is <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Nagłówek rozpoczyna się od <see langword="multipart" />. <see langword="Content-type" /></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">w celu uzyskania dostępu do pliku lokalnego. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UploadFileCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadFileCompletedEventHandler UploadFileCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadFileCompletedEventHandler UploadFileCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadFileCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadFileCompleted As UploadFileCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadFileCompletedEventHandler ^ UploadFileCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " Usage="member this.UploadFileCompleted : System.Net.UploadFileCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadFileCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu asynchronicznej operacji przekazywania pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest zgłaszane przy każdym zakończeniu asynchronicznej operacji przekazywania pliku. Asynchroniczne operacje przekazywania plików są uruchamiane przez wywołanie <xref:System.Net.WebClient.UploadFileAsync%2A> metod.  
  
 <xref:System.Net.UploadFileCompletedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.Net.UploadFileCompletedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie programu obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFileTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określony plik lokalny do zasobu jako operację asynchroniczną przy użyciu obiektu zadania. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego ma zostać odebrany plik. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="fileName">Plik lokalny do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do zasobu jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą treść odpowiedzi odebranej z zasobu podczas przekazywania pliku. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu pliku do zasobu. Plik jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem (""), `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="fileName" />is <see langword="null" />, is <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Nagłówek rozpoczyna się od <see langword="multipart" />. <see langword="Content-type" /></exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego ma zostać odebrany plik. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="fileName">Plik lokalny do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do zasobu jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą treść odpowiedzi odebranej z zasobu podczas przekazywania pliku. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu pliku do zasobu. Plik jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem (""), `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="fileName" />is <see langword="null" />, is <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Nagłówek rozpoczyna się od <see langword="multipart" />. <see langword="Content-type" /></exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(string address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As String, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(System::String ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego ma zostać odebrany plik. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli <see langword="null" />wartość domyślna to post dla protokołów HTTP i Stor dla usługi FTP.</param>
        <param name="fileName">Plik lokalny do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do zasobu jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą treść odpowiedzi odebranej z zasobu podczas przekazywania pliku. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu pliku do zasobu. Plik jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem (""), `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Domyślnie ta metoda przekazuje zasób FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="fileName" />is <see langword="null" />, is <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Nagłówek rozpoczyna się od <see langword="multipart" />. <see langword="Content-type" /></exception>
      </Docs>
    </Member>
    <Member MemberName="UploadFileTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string method, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadFileTaskAsync(class System.Uri address, string method, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadFileTaskAsync (address As Uri, method As String, fileName As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadFileTaskAsync(Uri ^ address, System::String ^ method, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.UploadFileTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadFileTaskAsync (address, method, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu, do którego ma zostać odebrany plik. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="method">Metoda używana do wysyłania danych do zasobu. Jeśli <see langword="null" />wartość domyślna to post dla protokołów HTTP i Stor dla usługi FTP.</param>
        <param name="fileName">Plik lokalny do wysłania do zasobu.</param>
        <summary>Przekazuje określony plik lokalny do zasobu jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą treść odpowiedzi odebranej z zasobu podczas przekazywania pliku. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu pliku do zasobu. Plik jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem (""), `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Domyślnie ta metoda przekazuje zasób FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="fileName" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="fileName" />is <see langword="null" />, is <see cref="F:System.String.Empty" />, zawiera nieprawidłowy znak lub określona ścieżka do pliku nie istnieje.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Nagłówek rozpoczyna się od <see langword="multipart" />. <see langword="Content-type" /></exception>
      </Docs>
    </Member>
    <Member MemberName="UploadProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Net.UploadProgressChangedEventHandler UploadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadProgressChangedEventHandler UploadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadProgressChanged As UploadProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadProgressChangedEventHandler ^ UploadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " Usage="member this.UploadProgressChanged : System.Net.UploadProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy asynchroniczne operacje przekazywania pomyślnie przesyłają niektóre lub wszystkie dane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane za każdym razem, gdy asynchroniczne przekazywanie powoduje postęp. To zdarzenie jest zgłaszane w przypadku rozpoczęcia przekazywania przy użyciu dowolnej z poniższych metod.  
  
|Metoda|Opis|  
|------------|-----------------|  
|<xref:System.Net.WebClient.UploadDataAsync%2A>|<xref:System.Byte> Wysyła tablicę do zasobu bez blokowania wątku wywołującego.|  
|<xref:System.Net.WebClient.UploadFileAsync%2A>|Wysyła plik lokalny do zasobu bez blokowania wątku wywołującego.|  
|<xref:System.Net.WebClient.UploadValuesAsync%2A>|Wysyła do zasobu i zwraca tablicę zawierającą dowolną odpowiedź bez blokowania wątku wywołującego. <xref:System.Byte> <xref:System.Collections.Specialized.NameValueCollection>|  
  
 <xref:System.Net.UploadProgressChangedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.Net.UploadProgressChangedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie programu obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#4)]
 [!code-csharp[NCLWebClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#4)]
 [!code-vb[NCLWebClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#4)]  
  
 Poniższy przykład kodu pokazuje implementację programu obsługi dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#42](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#42)]
 [!code-csharp[NCLWebClientAsync#42](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#42)]
 [!code-vb[NCLWebClientAsync#42](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadString">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określony ciąg do określonego zasobu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania ciągu. W przypadku zasobów http ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="data">Ciąg, który ma zostać przekazany.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu, używając metody POST.</summary>
        <returns>A <see cref="T:System.String" /> zawiera odpowiedź wysłaną przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Ta metoda blokuje czas przesyłania ciągu. Aby wysłać ciąg i kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadStringAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie tej metody.  
  
 [!code-cpp[NCLWebClientAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#1)]
 [!code-csharp[NCLWebClientAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#1)]
 [!code-vb[NCLWebClientAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string -&gt; string" Usage="webClient.UploadString (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania ciągu. W przypadku zasobów http ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="data">Ciąg, który ma zostać przekazany.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu, używając metody POST.</summary>
        <returns>A <see cref="T:System.String" /> zawiera odpowiedź wysłaną przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Ta metoda blokuje czas przesyłania ciągu. Aby wysłać ciąg i kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadStringAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który jest <xref:System.Net.WebClient.BaseAddress%2A> połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As String, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : string * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania ciągu. Ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane <paramref name="method" /> za pomocą metody.</param>
        <param name="method">Metoda HTTP używana do wysyłania ciągu do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data">Ciąg, który ma zostać przekazany.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu, używając określonej metody.</summary>
        <returns>A <see cref="T:System.String" /> zawiera odpowiedź wysłaną przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Ta metoda blokuje czas przesyłania ciągu. Aby wysłać ciąg i kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadStringAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje wywołanie tej metody.  
  
 [!code-cpp[NCLWebClientAsync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#2)]
 [!code-csharp[NCLWebClientAsync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#2)]
 [!code-vb[NCLWebClientAsync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
 <paramref name="method" />nie można go użyć do wysłania zawartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadString">
      <MemberSignature Language="C#" Value="public string UploadString (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UploadString(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadString (address As Uri, method As String, data As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UploadString(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadString : Uri * string * string -&gt; string" Usage="webClient.UploadString (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania ciągu. Ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane <paramref name="method" /> za pomocą metody.</param>
        <param name="method">Metoda HTTP używana do wysyłania ciągu do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data">Ciąg, który ma zostać przekazany.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu, używając określonej metody.</summary>
        <returns>A <see cref="T:System.String" /> zawiera odpowiedź wysłaną przez serwer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Ta metoda blokuje czas przesyłania ciągu. Aby wysłać ciąg i kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadStringAsync%2A> metod.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
 <paramref name="method" />nie można go użyć do wysłania zawartości.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określony ciąg do określonego zasobu. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string -&gt; unit" Usage="webClient.UploadStringAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania ciągu. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="data">Ciąg, który ma zostać przekazany.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła ciąg do zasobu. Ten ciąg jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków. Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Aby otrzymać powiadomienie po zakończeniu przekazywania ciągu, można dodać do <xref:System.Net.WebClient.UploadStringCompleted> zdarzenia procedurę obsługi zdarzeń.  
  
 Ta metoda nie blokuje wątku wywołującego podczas wysyłania ciągu. Aby wysłać ciąg i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadString%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania ciągu. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data">Ciąg, który ma zostać przekazany.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła ciąg do zasobu. Ten ciąg jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków. Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Aby otrzymać powiadomienie po zakończeniu przekazywania ciągu, można dodać do <xref:System.Net.WebClient.UploadStringCompleted> zdarzenia procedurę obsługi zdarzeń.  
  
 Ta metoda nie blokuje wątku wywołującego podczas wysyłania ciągu. Aby wysłać ciąg i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadString%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="method" />nie można go użyć do wysłania zawartości.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringAsync">
      <MemberSignature Language="C#" Value="public void UploadStringAsync (Uri address, string method, string data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadStringAsync(class System.Uri address, string method, string data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadStringAsync (address As Uri, method As String, data As String, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadStringAsync(Uri ^ address, System::String ^ method, System::String ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadStringAsync : Uri * string * string * obj -&gt; unit" Usage="webClient.UploadStringAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userToken" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania ciągu. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data">Ciąg, który ma zostać przekazany.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przesyłany do metody wywoływanej po zakończeniu operacji asynchronicznej.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła ciąg do zasobu. Ten ciąg jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków. Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Aby otrzymać powiadomienie po zakończeniu przekazywania ciągu, można dodać do <xref:System.Net.WebClient.UploadStringCompleted> zdarzenia procedurę obsługi zdarzeń.  
  
 Ta metoda nie blokuje wątku wywołującego podczas wysyłania ciągu. Aby wysłać ciąg i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadString%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="method" />nie można go użyć do wysłania zawartości.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadStringCompletedEventHandler UploadStringCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadStringCompletedEventHandler UploadStringCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadStringCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadStringCompleted As UploadStringCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadStringCompletedEventHandler ^ UploadStringCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " Usage="member this.UploadStringCompleted : System.Net.UploadStringCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadStringCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zakończeniu asynchronicznej operacji przekazywania ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest zgłaszane przy każdym zakończeniu asynchronicznej operacji przekazywania ciągu. Asynchroniczne przekazywanie ciągów jest uruchamiane przez wywołanie <xref:System.Net.WebClient.UploadStringAsync%2A> metod.  
  
 <xref:System.Net.UploadStringCompletedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.Net.UploadStringCompletedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie programu obsługi zdarzeń dla tego zdarzenia.  
  
 [!code-cpp[NCLWebClientAsync#38](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#38)]
 [!code-csharp[NCLWebClientAsync#38](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#38)]
 [!code-vb[NCLWebClientAsync#38](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadStringTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określony ciąg do określonego zasobu jako operację asynchroniczną przy użyciu obiektu zadania. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania ciągu. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="data">Ciąg, który ma zostać przekazany.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.String" /> zwraca wartość zawierającą odpowiedź wysłaną przez serwer. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu ciągu do zasobu. Ten ciąg jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Ta metoda blokuje czas przesyłania ciągu.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania ciągu. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="data">Ciąg, który ma zostać przekazany.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.String" /> zwraca wartość zawierającą odpowiedź wysłaną przez serwer. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu ciągu do zasobu. Ten ciąg jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Ta metoda blokuje czas przesyłania ciągu.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(string address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As String, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(System::String ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : string * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania ciągu. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data">Ciąg, który ma zostać przekazany.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.String" /> zwraca wartość zawierającą odpowiedź wysłaną przez serwer. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu ciągu do zasobu. Ten ciąg jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Ta metoda blokuje czas przesyłania ciągu.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="method" />nie można go użyć do wysłania zawartości.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadStringTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string method, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; UploadStringTaskAsync(class System.Uri address, string method, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadStringTaskAsync (address As Uri, method As String, data As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ UploadStringTaskAsync(Uri ^ address, System::String ^ method, System::String ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadStringTaskAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="webClient.UploadStringTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania ciągu. W przypadku zasobów HTTP ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane za pomocą metody POST, takie jak strona skryptu lub ASP.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data">Ciąg, który ma zostać przekazany.</param>
        <summary>Przekazuje określony ciąg do określonego zasobu jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.String" /> zwraca wartość zawierającą odpowiedź wysłaną przez serwer. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu ciągu do zasobu. Ten ciąg jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Ta metoda blokuje czas przesyłania ciągu.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="method" />nie można go użyć do wysłania zawartości.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValues">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje kolekcję nazwa/wartość do zasobu o określonym identyfikatorze URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania kolekcji.</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje określoną kolekcję nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A> Metoda<xref:System.Collections.Specialized.NameValueCollection> wysyła do serwera. Ta metoda blokuje podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValuesAsync%2A> metod.  
  
 Jeśli podstawowe żądanie nie jest zrozumiałe dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli nagłówek Content-Type ma `null`wartość <xref:System.Net.WebClient.UploadValues%2A> , Metoda ustawia ją na wartość "application/x-www-form-urlencoded".  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu zbiera informacje od użytkownika (nazwy, wieku i adresu) i zapisuje wartości na serwerze przy użyciu <xref:System.Net.WebClient.UploadValues%2A>. Każda odpowiedź z serwera zostanie wyświetlona w konsoli programu.  
  
 [!code-cpp[WebClient_UploadValues#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues/CPP/webclient_uploadvalues.cpp#1)]
 [!code-csharp[WebClient_UploadValues#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues/CS/webclient_uploadvalues.cs#1)]
 [!code-vb[WebClient_UploadValues#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues/VB/webclient_uploadvalues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="data" />jest <see langword="null" />.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
<see langword="Content-type" /> Nagłówek nie<see langword="null" /> jest lub "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania kolekcji.</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje określoną kolekcję nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebClient.UploadValues%2A> Metoda<xref:System.Collections.Specialized.NameValueCollection> wysyła do serwera. Ta metoda blokuje podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValuesAsync%2A> metod.  
  
 Jeśli podstawowe żądanie nie jest zrozumiałe dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli nagłówek Content-Type ma `null`wartość <xref:System.Net.WebClient.UploadValues%2A> , Metoda ustawia ją na wartość "application/x-www-form-urlencoded".  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="data" />jest <see langword="null" />.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
<see langword="Content-type" /> Nagłówek nie<see langword="null" /> jest lub "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As String, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : string * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania kolekcji.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje określoną kolekcję nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI przy użyciu określonej metody.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wysyła do zasobu przy użyciu metody określonej w `method` parametrze i zwraca wszelkie odpowiedzi z serwera. <xref:System.Collections.Specialized.NameValueCollection> <xref:System.Net.WebClient.UploadValues%2A> Ta metoda blokuje podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValuesAsync%2A> metod.  
  
 Jeśli nagłówek ma `null`wartość, <xref:System.Net.WebClient.UploadValues%2A> Metoda ustawia ją na `application/x-www-form-urlencoded`. `Content-type`  
  
 `method` Jeśli parametr określa czasownik, który nie jest zrozumiały dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu zbiera informacje od użytkownika (nazwy, wieku i adresu) i zapisuje wartości na serwerze przy użyciu <xref:System.Net.WebClient.UploadValues%2A>. Każda odpowiedź z serwera zostanie wyświetlona w konsoli programu.  
  
 [!code-cpp[WebClient_UploadValues2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebClient_UploadValues2/CPP/webclient_uploadvalues2.cpp#1)]
 [!code-csharp[WebClient_UploadValues2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebClient_UploadValues2/CS/webclient_uploadvalues2.cs#1)]
 [!code-vb[WebClient_UploadValues2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebClient_UploadValues2/VB/webclient_uploadvalues2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="data" />jest <see langword="null" />.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Wartość nagłówka nie <see langword="null" /> jest i nie <see langword="application/x-www-form-urlencoded" />jest. <see langword="Content-type" /></exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValues">
      <MemberSignature Language="C#" Value="public byte[] UploadValues (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] UploadValues(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValues (address As Uri, method As String, data As NameValueCollection) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ UploadValues(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValues : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; byte[]" Usage="webClient.UploadValues (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania kolekcji.</param>
        <param name="method">Metoda HTTP używana do wysyłania pliku do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje określoną kolekcję nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI przy użyciu określonej metody.</summary>
        <returns><see cref="T:System.Byte" /> Tablica zawierająca treść odpowiedzi z zasobu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wysyła do zasobu przy użyciu metody określonej w `method` parametrze i zwraca wszelkie odpowiedzi z serwera. <xref:System.Collections.Specialized.NameValueCollection> <xref:System.Net.WebClient.UploadValues%2A> Ta metoda blokuje podczas przekazywania danych. Aby kontynuować wykonywanie podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValuesAsync%2A> metod.  
  
 Jeśli nagłówek ma `null`wartość, <xref:System.Net.WebClient.UploadValues%2A> Metoda ustawia ją na `application/x-www-form-urlencoded`. `Content-type`  
  
 `method` Jeśli parametr określa czasownik, który nie jest zrozumiały dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="data" />jest <see langword="null" />.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Wartość nagłówka nie <see langword="null" /> jest i nie <see langword="application/x-www-form-urlencoded" />jest. <see langword="Content-type" /></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określoną kolekcję nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania kolekcji. Ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysyłane z użyciem metody domyślnej.</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje dane w określonej kolekcji nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła ciąg do zasobu. Ten ciąg jest wysyłany asynchronicznie przy użyciu zasobów wątków, które są automatycznie przydzieleni z puli wątków. Przed przekazaniem ciągu ta metoda konwertuje ją na <xref:System.Byte> tablicę przy użyciu kodowania określonego <xref:System.Net.WebClient.Encoding%2A> we właściwości. Aby otrzymać powiadomienie po zakończeniu przekazywania ciągu, można dodać do <xref:System.Net.WebClient.UploadStringCompleted> zdarzenia procedurę obsługi zdarzeń.  
  
 Ta metoda nie blokuje wątku wywołującego podczas wysyłania ciągu. Aby wysłać ciąg i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadString%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania kolekcji. Ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane <paramref name="method" /> za pomocą metody.</param>
        <param name="method">Metoda użyta do wysłania ciągu do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje dane w określonej kolekcji nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI przy użyciu określonej metody. Ta metoda nie blokuje wątku wywołującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła dane zawarte w a <xref:System.Collections.Specialized.NameValueCollection> `address` do zasobu. Ta metoda służy do wysyłania danych formularza do identyfikatora URI w celu przetworzenia. Dane są wysyłane przy użyciu typu nośnika form-urlencoded; wartość nagłówka Content-Type musi być równa "application/x-www-form-urlencoded". Nagłówek jest domyślnie ustawiony prawidłowo. Metody zgłaszają metodę w <xref:System.Net.WebClient.Headers%2A> przypadkuwywołaniatejmetodyzinnąwartościąnagłówkaContent-Typeustawionąwkolekcji.<xref:System.Net.WebException> <xref:System.Net.WebClient.UploadValuesAsync%2A>  
  
 `method` Jeśli metoda nie jest rozpoznawana przez serwer, klasy bazowego protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 <xref:System.Collections.Specialized.NameValueCollection> Jest wysyłany asynchronicznie za pomocą zasobów wątków, które są automatycznie przyliczane z puli wątków. Aby otrzymać powiadomienie po zakończeniu operacji przekazywania, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.UploadValuesCompleted> zdarzenia.  
  
 Ta metoda nie blokuje wątku wywołującego podczas wysyłania ciągu. Aby wysłać ciąg i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValues%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pusta, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji [, zobacz Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
 <paramref name="method" />nie można go użyć do wysłania zawartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesAsync">
      <MemberSignature Language="C#" Value="public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UploadValuesAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadValuesAsync (address As Uri, method As String, data As NameValueCollection, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadValuesAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesAsync : Uri * string * System.Collections.Specialized.NameValueCollection * obj -&gt; unit" Usage="webClient.UploadValuesAsync (address, method, data, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userToken" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania kolekcji. Ten identyfikator URI musi identyfikować zasób, który może akceptować żądanie wysłane <paramref name="method" /> za pomocą metody.</param>
        <param name="method">Metoda HTTP używana do wysyłania ciągu do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <param name="userToken">Obiekt zdefiniowany przez użytkownika, który jest przesyłany do metody wywoływanej po zakończeniu operacji asynchronicznej.</param>
        <summary>Przekazuje dane w określonej kolekcji nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI przy użyciu określonej metody. Ta metoda nie blokuje wątku wywołującego i umożliwia obiektowi wywołującemu przekazywanie obiektu do metody, która jest wywoływana po zakończeniu operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wysyła dane zawarte w a <xref:System.Collections.Specialized.NameValueCollection> `address` do zasobu. Ta metoda służy do wysyłania danych formularza do identyfikatora URI w celu przetworzenia. Dane są wysyłane przy użyciu typu nośnika form-urlencoded; wartość nagłówka Content-Type musi być równa "application/x-www-form-urlencoded". Nagłówek jest domyślnie ustawiony prawidłowo. Metody zgłaszają metodę w <xref:System.Net.WebClient.Headers%2A> przypadkuwywołaniatejmetodyzinnąwartościąnagłówkaContent-Typeustawionąwkolekcji.<xref:System.Net.WebException> <xref:System.Net.WebClient.UploadValuesAsync%2A>  
  
 `method` Jeśli metoda nie jest rozpoznawana przez serwer, klasy bazowego protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 <xref:System.Collections.Specialized.NameValueCollection> Jest wysyłany asynchronicznie za pomocą zasobów wątków, które są automatycznie przyliczane z puli wątków. Aby otrzymać powiadomienie po zakończeniu operacji przekazywania, Dodaj procedurę obsługi zdarzeń do <xref:System.Net.WebClient.UploadValuesCompleted> zdarzenia.  
  
 Ta metoda nie blokuje wątku wywołującego podczas wysyłania ciągu. Aby wysłać ciąg i blok podczas oczekiwania na odpowiedź serwera, użyj jednej z <xref:System.Net.WebClient.UploadValues%2A> metod.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pusta, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji [, zobacz Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" /> i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
 <paramref name="method" />nie można go użyć do wysłania zawartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesCompleted">
      <MemberSignature Language="C#" Value="public event System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.UploadValuesCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UploadValuesCompleted As UploadValuesCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::UploadValuesCompletedEventHandler ^ UploadValuesCompleted;" />
      <MemberSignature Language="F#" Value="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " Usage="member this.UploadValuesCompleted : System.Net.UploadValuesCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.UploadValuesCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy asynchroniczne przekazywanie kolekcji nazwa/wartość zakończy się.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane za każdym razem, gdy asynchroniczne przekazywanie <xref:System.Collections.Specialized.NameValueCollection> danych obiektu zostanie ukończone. Te operacje przekazywania są uruchamiane przez wywołanie <xref:System.Net.WebClient.UploadValuesAsync%2A> metod.  
  
 <xref:System.Net.UploadValuesCompletedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.Net.UploadValuesCompletedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadValuesTaskAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przekazuje określoną kolekcję nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI jako operację asynchroniczną przy użyciu obiektu zadania. Te metody nie blokują wątku wywołującego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania kolekcji.</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje określoną kolekcję nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą odpowiedź wysłaną przez serwer. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu kolekcji nazwa/wartość do zasobu. Kolekcja nazwa/wartość jest wysyłana asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli podstawowe żądanie nie jest zrozumiałe dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli nagłówek Content-Type ma `null`wartość, ta metoda ustawia ją na wartość "application/x-www-form-urlencoded".  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
<see langword="Content-type" /> Nagłówek nie<see langword="null" /> jest lub "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania kolekcji.</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje określoną kolekcję nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą odpowiedź wysłaną przez serwer. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu kolekcji nazwa/wartość do zasobu. Kolekcja nazwa/wartość jest wysyłana asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli podstawowe żądanie nie jest zrozumiałe dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli nagłówek Content-Type ma `null`wartość, ta metoda ustawia ją na wartość "application/x-www-form-urlencoded".  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Wartość nagłówka nie <see langword="null" /> jest i nie <see langword="application/x-www-form-urlencoded" />jest. <see langword="Content-type" /></exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(string address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As String, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(System::String ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : string * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania kolekcji.</param>
        <param name="method">Metoda HTTP używana do wysyłania kolekcji do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje określoną kolekcję nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą odpowiedź wysłaną przez serwer. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu kolekcji nazwa/wartość do zasobu. Kolekcja nazwa/wartość jest wysyłana asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli podstawowe żądanie nie jest zrozumiałe dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli nagłówek Content-Type ma `null`wartość, ta metoda ustawia ją na wartość "application/x-www-form-urlencoded".  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="method" />nie można go użyć do wysłania zawartości.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
<see langword="Content-type" /> Nagłówek nie<see langword="null" /> jest lub "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UploadValuesTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; UploadValuesTaskAsync(class System.Uri address, string method, class System.Collections.Specialized.NameValueCollection data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UploadValuesTaskAsync (address As Uri, method As String, data As NameValueCollection) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ UploadValuesTaskAsync(Uri ^ address, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ data);" />
      <MemberSignature Language="F#" Value="member this.UploadValuesTaskAsync : Uri * string * System.Collections.Specialized.NameValueCollection -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="webClient.UploadValuesTaskAsync (address, method, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Collections.Specialized.NameValueCollection" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Identyfikator URI zasobu do odebrania kolekcji.</param>
        <param name="method">Metoda HTTP używana do wysyłania kolekcji do zasobu. Jeśli wartość jest równa null, wartość domyślna to POST dla protokołów HTTP i STOR dla usługi FTP.</param>
        <param name="data"><see cref="T:System.Collections.Specialized.NameValueCollection" /> Do wysłania do zasobu.</param>
        <summary>Przekazuje określoną kolekcję nazwa/wartość do zasobu identyfikowanego przez określony identyfikator URI jako operację asynchroniczną przy użyciu obiektu zadania.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Byte" /> zwraca tablicę zawierającą odpowiedź wysłaną przez serwer. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po przekazaniu kolekcji nazwa/wartość do zasobu. Kolekcja nazwa/wartość jest wysyłana asynchronicznie przy użyciu zasobów wątków, które są automatycznie przyliczane z puli wątków.  
  
 Operacje asynchroniczne, które nie zostały ukończone, można anulować przy <xref:System.Net.WebClient.CancelAsync%2A> użyciu metody.  
  
 Jeśli podstawowe żądanie nie jest zrozumiałe dla serwera, podstawowe klasy protokołu określają, co się dzieje. Zwykle <xref:System.Net.WebException> jest generowany <xref:System.Net.WebException.Status%2A> z ustawioną właściwością, aby wskazać błąd.  
  
 Jeśli nagłówek Content-Type ma `null`wartość, ta metoda ustawia ją na wartość "application/x-www-form-urlencoded".  
  
 Jeśli właściwość nie jest pustym ciągiem ("") i `address` nie zawiera bezwzględnego identyfikatora URI, `address` musi być względnym identyfikatorem URI, który <xref:System.Net.WebClient.BaseAddress%2A> jest połączony z, aby utworzyć bezwzględny identyfikator URI żądanych danych. <xref:System.Net.WebClient.BaseAddress%2A> Jeśli właściwość nie jest pustym ciągiem, jest dołączana do `address`. <xref:System.Net.WebClient.QueryString%2A>  
  
 Ta metoda służy do przekazywania zasobu FTP przy użyciu polecenia STOR. W przypadku zasobu HTTP używana jest metoda POST.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="address" />  
  
—lub— 
Parametr ma wartość <see langword="null" />. <paramref name="data" /></exception>
        <exception cref="T:System.Net.WebException">Identyfikator URI utworzony przez połączenie <see cref="P:System.Net.WebClient.BaseAddress" />i <paramref name="address" /> jest nieprawidłowy.  
  
—lub— 
 <paramref name="method" />nie można go użyć do wysłania zawartości.  
  
—lub— 
Brak odpowiedzi z serwera, na którym znajduje się zasób.  
  
—lub— 
Wystąpił błąd podczas otwierania strumienia.  
  
—lub— 
<see langword="Content-type" /> Nagłówek nie<see langword="null" /> jest lub "application/x-www-form-urlencoded".</exception>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebClient.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebClient.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określającą, <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> czy są wysyłane żądania.</summary>
        <value><see langword="true" />Jeśli są używane poświadczenia domyślne; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość na `true` , gdy żądania wysyłane przez <xref:System.Net.WebClient> ten obiekt powinny być uwierzytelniane przy użyciu domyślnych poświadczeń aktualnie zalogowanego użytkownika. W przypadku aplikacji klienckich jest to odpowiednie zachowanie w większości scenariuszy. W przypadku aplikacji warstwy środkowej, takich jak aplikacje ASP.NET, zamiast używać tej właściwości, zazwyczaj <xref:System.Net.WebClient.Credentials%2A> właściwość jest ustawiana na poświadczenia klienta, na którym jest wykonywane żądanie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje ustawienie tej właściwości.  
  
 [!code-cpp[NCLWebClientAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebClientAsync/CPP/asyncmethods.cpp#3)]
 [!code-csharp[NCLWebClientAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebClientAsync/CS/asyncmethods.cs#3)]
 [!code-vb[NCLWebClientAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebClientAsync/VB/asyncmethods.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStreamClosed">
      <MemberSignature Language="C#" Value="public event System.Net.WriteStreamClosedEventHandler WriteStreamClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Net.WriteStreamClosedEventHandler WriteStreamClosed" />
      <MemberSignature Language="DocId" Value="E:System.Net.WebClient.WriteStreamClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WriteStreamClosed As WriteStreamClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Net::WriteStreamClosedEventHandler ^ WriteStreamClosed;" />
      <MemberSignature Language="F#" Value="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " Usage="member this.WriteStreamClosed : System.Net.WriteStreamClosedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WriteStreamClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy operacja asynchroniczna zapisu danych w zasobie przy użyciu strumienia zapisu jest zamknięta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane za każdym razem, gdy operacja asynchroniczna użyta do zapisania danych w zasobie przy użyciu strumienia zapisu zostanie zamknięta. Te operacje są wynikiem wywołań <xref:System.Net.WebClient.OpenWriteTaskAsync%2A> metod.  
  
 <xref:System.Net.WriteStreamClosedEventHandler> Jest delegatem dla tego zdarzenia. <xref:System.Net.WriteStreamClosedEventArgs> Klasa zawiera program obsługi zdarzeń z danymi zdarzenia.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
