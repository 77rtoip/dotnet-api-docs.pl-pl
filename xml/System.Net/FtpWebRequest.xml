<Type Name="FtpWebRequest" FullName="System.Net.FtpWebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c49f50c0cd66d2e16a249b769d840807e011c17" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69071710" /></Metadata><TypeSignature Language="C#" Value="public sealed class FtpWebRequest : System.Net.WebRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FtpWebRequest extends System.Net.WebRequest" />
  <TypeSignature Language="DocId" Value="T:System.Net.FtpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FtpWebRequest&#xA;Inherits WebRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class FtpWebRequest sealed : System::Net::WebRequest" />
  <TypeSignature Language="F#" Value="type FtpWebRequest = class&#xA;    inherit WebRequest" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementuje klienta protokół transferu plików (FTP).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  Nie zalecamy używania `FtpWebRequest` klasy do nowych celów programistycznych. Aby uzyskać więcej informacji i dowiedzieć się więcej na `FtpWebRequest`temat, zobacz WebRequest nie [należy używać](https://github.com/dotnet/platform-compat/blob/master/docs/DE0003.md) w serwisie GitHub.

 Aby uzyskać wystąpienie klasy <xref:System.Net.FtpWebRequest>, <xref:System.Net.WebRequest.Create%2A> należy użyć metody. Można również użyć <xref:System.Net.WebClient> klasy do przekazywania i pobierania informacji z serwera FTP. Przy użyciu jednej z tych metod, gdy określisz zasób sieciowy korzystający ze schematu FTP (na przykład `"ftp://contoso.com"` <xref:System.Net.FtpWebRequest> ), klasa zapewnia możliwość programowego współdziałania z serwerami FTP.  
  
 Identyfikator URI może być względny lub bezwzględny. Jeśli identyfikator URI ma postać `"ftp://contoso.com/%2fpath"` (% 2F jest znakiem ucieczki "/"), identyfikator URI jest bezwzględny i bieżącym katalogiem jest. `/path` Jeśli jednak identyfikator URI ma postać `"ftp://contoso.com/path"`, najpierw usługa .NET Framework loguje się do serwera FTP (przy użyciu nazwy użytkownika i hasła ustawionej <xref:System.Net.FtpWebRequest.Credentials%2A> przez właściwość), a następnie bieżący katalog jest ustawiony na `<UserLoginDirectory>/path`.  
  
 Wymagana jest prawidłowa nazwa użytkownika i hasło dla serwera lub serwer musi zezwalać na Logowanie anonimowe. Możesz określić poświadczenia używane do nawiązania połączenia z serwerem przez ustawienie <xref:System.Net.FtpWebRequest.Credentials%2A> właściwości lub można je uwzględnić <xref:System.Uri.UserInfo%2A> w części identyfikatora URI przesłanej do <xref:System.Net.WebRequest.Create%2A> metody. W przypadku uwzględnienia <xref:System.Uri.UserInfo%2A> informacji w identyfikatorze URI <xref:System.Net.FtpWebRequest.Credentials%2A> właściwość jest ustawiana na nowe poświadczenie sieci przy użyciu określonej nazwy użytkownika i hasła.  
  
> [!CAUTION]
>  `true`O ile <xref:System.Net.FtpWebRequest.EnableSsl%2A> właściwość nie jest, wszystkie dane i polecenia, w tym informacje o nazwie użytkownika i haśle, są wysyłane do serwera w postaci zwykłego tekstu. Każdy może monitorować ruch sieciowy i używać ich do łączenia się z serwerem. W przypadku łączenia się z serwerem FTP, który wymaga poświadczeń i obsługuje SSL (SSL), należy ustawić na <xref:System.Net.FtpWebRequest.EnableSsl%2A> `true`wartość.  
  
 Musisz mieć <xref:System.Net.WebPermission> dostęp do zasobu FTP; w przeciwnym razie <xref:System.Security.SecurityException> jest zgłaszany wyjątek.  
  
 Określ polecenie FTP do wysłania do serwera przez ustawienie <xref:System.Net.FtpWebRequest.Method%2A> właściwości na wartość zdefiniowaną <xref:System.Net.WebRequestMethods.Ftp> w strukturze. Aby przesłać dane tekstowe, należy zmienić <xref:System.Net.FtpWebRequest.UseBinary%2A> wartość domyślną właściwości (`true`) na `false`. Aby uzyskać szczegółowe informacje i ograniczenia <xref:System.Net.FtpWebRequest.Method%2A>, zobacz.  
  
 W przypadku użycia <xref:System.Net.FtpWebRequest> obiektu do przekazania pliku na serwer należy napisać zawartość pliku do strumienia żądania uzyskanego przez <xref:System.Net.FtpWebRequest.GetRequestStream%2A> wywołanie metody lub jej odpowiedników <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> asynchronicznych, metod i <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> . Musisz zapisać w strumieniu i zamknąć strumień przed wysłaniem żądania.  
  
 Żądania są wysyłane do serwera przez wywołanie <xref:System.Net.FtpWebRequest.GetResponse%2A> metody lub jej odpowiedników asynchronicznych <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> , metod i <xref:System.Net.FtpWebRequest.EndGetResponse%2A> . Gdy żądana operacja zostanie ukończona, <xref:System.Net.FtpWebResponse> zwracany jest obiekt. <xref:System.Net.FtpWebResponse> Obiekt zawiera stan operacji i wszystkie dane pobrane z serwera.  
  
 Możesz ustawić wartość limitu czasu dla odczytu lub zapisu na serwerze przy użyciu <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> właściwości. W przypadku przekroczenia limitu czasu Metoda wywołująca generuje element <xref:System.Net.WebException> z <xref:System.Net.WebExceptionStatus> ustawionym na <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 W przypadku pobierania pliku z serwera FTP, jeśli polecenie zakończyło się pomyślnie, zawartość żądanego pliku jest dostępna w strumieniu obiektu odpowiedzi. Możesz uzyskać dostęp do tego strumienia, wywołując <xref:System.Net.FtpWebResponse.GetResponseStream%2A> metodę. Aby uzyskać więcej informacji, zobacz <xref:System.Net.FtpWebResponse>.  
  
 <xref:System.Net.FtpWebRequest.Proxy%2A> Jeśli właściwość jest ustawiona, bezpośrednio lub w pliku konfiguracji, komunikacja z serwerem FTP odbywa się za pośrednictwem określonego serwera proxy. Jeśli określony serwer proxy jest serwerem proxy HTTP, obsługiwane są <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>tylko <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>polecenia, <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> i.  
  
 Tylko pobrana zawartość binarna jest buforowana; oznacza to, że zawartość odebrana <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> przy użyciu polecenia <xref:System.Net.FtpWebRequest.UseBinary%2A> z właściwością `true`ustawioną na.  
  
 Wiele <xref:System.Net.FtpWebRequest>s ponownie Użyj istniejących połączeń, jeśli jest to możliwe.  
  
 Aby uzyskać więcej informacji na temat protokołu FTP, [zobacz RFC 959: Protokół transferu plików](https://www.ietf.org/rfc/rfc959.txt).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje usunięcie pliku z serwera FTP.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 Poniższy przykład kodu demonstruje pobieranie pliku z serwera FTP przy użyciu <xref:System.Net.WebClient> klasy.  
  
 [!code-cpp[NCLFtpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#5)]
 [!code-csharp[NCLFtpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#5)]  
  
 Poniższy przykład kodu demonstruje użycie operacji asynchronicznych w celu przekazania pliku do serwera FTP.  
  
 [!code-cpp[NCLFtpAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#1)]
 [!code-csharp[NCLFtpAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">w celu uzyskania dostępu do zasobu, do którego odwołuje się to żądanie. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <altmember cref="T:System.Net.FtpWebResponse" />
    <altmember cref="T:System.Net.FtpStatusCode" />
    <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.WebClient" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="ftpWebRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończy asynchroniczne operacje FTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ma operacji w toku, ta metoda nie robi nic. Jeśli transfer plików jest w toku, ta metoda przerywa transfer.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak użytkownik może przerwać asynchroniczne przekazywanie pliku z katalogu lokalnego na serwer.  
  
 [!code-cpp[NCLFtpClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#10)]
 [!code-csharp[NCLFtpClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><see cref="T:System.AsyncCallback" /> Delegat, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="state">Obiekt zdefiniowany przez użytkownika, który zawiera informacje o operacji. Ten obiekt jest przesyłany do <paramref name="callback" /> delegata po zakończeniu operacji.</param>
        <summary>Rozpoczyna asynchroniczne otwieranie strumienia zawartości żądania do zapisu.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienie wskazujące stan operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ukończyć operację asynchroniczną, należy wywołać <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> metodę. Zwykle jest wywoływana przez metodę przywoływaną przez `callback`. <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Aby określić stan operacji, sprawdź właściwości w <xref:System.IAsyncResult> obiekcie zwróconym przez tę metodę.  
  
 Ta metoda nie blokuje podczas oczekiwania na strumień. Aby zablokować, wywołaj <xref:System.Net.FtpWebRequest.GetRequestStream%2A> zamiast tej metody.  
  
 Aby uzyskać szczegółowe informacje na temat korzystania z modelu programowania asynchronicznego, zobacz [Asynchroniczne wywoływanie metod synchronicznych](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje rozpoczęcie operacji asynchronicznej w celu uzyskania strumienia żądania. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Net.FtpWebRequest> w przeglądzie klasy.  
  
 [!code-cpp[NCLFtpAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#4)]
 [!code-csharp[NCLFtpAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Poprzednie wywołanie tej metody lub <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> nie zostało jeszcze ukończone.</exception>
        <exception cref="T:System.Net.WebException">Nie można nawiązać połączenia z serwerem FTP.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">Właściwość nie jest ustawiona na <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />. <see cref="P:System.Net.FtpWebRequest.Method" /></exception>
        <block subset="none" type="usage"><para>Ta metoda generuje ruch sieciowy.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><see cref="T:System.AsyncCallback" /> Delegat, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="state">Obiekt zdefiniowany przez użytkownika, który zawiera informacje o operacji. Ten obiekt jest przesyłany do <paramref name="callback" /> delegata po zakończeniu operacji.</param>
        <summary>Zaczyna wysyłać żądanie i odbierać odpowiedź z serwera FTP asynchronicznie.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienie wskazujące stan operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ukończyć operację asynchroniczną, należy wywołać <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metodę. Zwykle jest wywoływana przez metodę przywoływaną przez `callback`. <xref:System.Net.FtpWebRequest.EndGetResponse%2A> Aby określić stan operacji, sprawdź właściwości w <xref:System.IAsyncResult> obiekcie zwracanym <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> przez metodę.  
  
 <xref:System.Net.FtpWebRequest.Proxy%2A> Jeśli właściwość jest ustawiona, bezpośrednio lub w pliku konfiguracji, komunikacja z serwerem FTP odbywa się za pośrednictwem określonego serwera proxy.  
  
 <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>nie blokuje podczas oczekiwania na odpowiedź z serwera. Aby zablokować, należy wywołać <xref:System.Net.FtpWebRequest.GetResponse%2A> metodę <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>zamiast.  
  
 Aby uzyskać więcej informacji o korzystaniu z modelu programowania asynchronicznego, zobacz [Asynchroniczne wywoływanie metod synchronicznych](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Jeśli jest zgłaszany, <xref:System.Net.WebException.Response%2A> Użyj właściwości i <xref:System.Net.WebException.Status%2A> wyjątku, aby określić odpowiedź z serwera. <xref:System.Net.WebException>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje zakończenie operacji asynchronicznej w celu uzyskania strumienia żądania, a następnie rozpoczęcie żądania pobrania odpowiedzi. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Net.FtpWebRequest> w przeglądzie klasy.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.GetResponse" />lub <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> zostało już wywołane dla tego wystąpienia.</exception>
        <block subset="none" type="usage"><para>Ta metoda generuje ruch sieciowy.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection with get, set" Usage="System.Net.FtpWebRequest.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia certyfikaty używane do nawiązywania szyfrowanego połączenia z serwerem FTP.</summary>
        <value><see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> Obiekt, który zawiera certyfikaty klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certyfikaty klienta są używane do uwierzytelniania klienta podczas początkowego negocjowania połączenia SSL. Aby uzyskać więcej informacji, zobacz <xref:System.Net.FtpWebRequest.EnableSsl%2A>.  
  
> [!NOTE]
>  .NET Framework buforuje sesje SSL podczas tworzenia i próbuje ponownie użyć buforowanej sesji dla nowego żądania, jeśli jest to możliwe. Podczas próby ponownego użycia sesji SSL .NET Framework używa pierwszego elementu <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (jeśli istnieje) lub prób ponownego użycia sesji anonimowej, jeśli <xref:System.Net.HttpWebRequest.ClientCertificates%2A> jest pusta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość określona dla operacji zestawu to <see langword="null" />.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę grupy połączeń zawierającej punkt usługi używany do wysyłania bieżącego żądania.</summary>
        <value><see cref="T:System.String" /> Wartość, która zawiera nazwę grupy połączeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupy połączeń kojarzą zestaw żądań z określonym połączeniem lub zestawem połączeń. Połączenia w grupie połączeń mogą być ponownie używane tylko przez żądania pochodzące z tej samej domeny aplikacji, gdy poświadczenia w żądaniu są takie same, a żądanie określa nazwę grupy połączeń. Gdy żądanie nie określa nazwy grupy połączeń, można użyć żadnego istniejącego połączenia z żądanym serwerem, który nie jest skojarzony z grupą połączeń. Jeśli poświadczenia nie są takie same, istniejące połączenie jest zamknięte i należy ponownie uwierzytelnić nowe żądanie.  
  
 Korzystanie z grup połączeń może zwiększyć wydajność, ponieważ umożliwia to wszystkim żądanie użytkownikowi ponowne użycie połączenia uwierzytelnionego z poświadczeniami użytkownika.  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A> <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> <xref:System.Net.FtpWebRequest.GetResponse%2A>Zmiana właściwości po wywołaniu metody,, lub<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> powoduje<xref:System.InvalidOperationException> wyjątek. <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera wartość tej właściwości.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Określono nową wartość dla tej właściwości dla żądania, które jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md">Zarządzanie połączeniami</related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która jest ignorowana przez <see cref="T:System.Net.FtpWebRequest" /> klasę.</summary>
        <value><see cref="T:System.Int64" /> Wartość, która powinna zostać zignorowana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest dostarczana tylko w celu zapewnienia zgodności z innymi implementacjami <xref:System.Net.WebResponse> <xref:System.Net.WebRequest> klas i. <xref:System.Net.FtpWebRequest.ContentLength%2A> Nie ma powodu do użycia <xref:System.Net.FtpWebRequest.ContentLength%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentOffset">
      <MemberSignature Language="C#" Value="public long ContentOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentOffset" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentOffset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentOffset { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentOffset : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przesunięcie bajtów do pliku pobranego przez to żądanie.</summary>
        <value><see cref="T:System.Int64" /> Wystąpienie, które określa przesunięcie pliku w bajtach. Wartość domyślna to zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.ContentOffset%2A> Ustaw właściwość podczas pobierania pliku z serwera FTP. To przesunięcie wskazuje położenie w pliku serwera, które oznacza początek danych do pobrania. Przesunięcie jest określone jako liczba bajtów od początku pliku; przesunięcie pierwszego bajtu jest równe zero.  
  
 Ustawienie <xref:System.Net.FtpWebRequest.ContentOffset%2A> `REST`powoduje wysłaniepoleceniarestart()naserwer.<xref:System.Net.FtpWebRequest> To polecenie jest ignorowane przez większość implementacji serwera FTP w przypadku przekazywania danych na serwer.  
  
 Zmiana <xref:System.Net.FtpWebRequest.ContentOffset%2A> <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>po <xref:System.Net.FtpWebRequest.GetRequestStream%2A>wywołaniu metody, ,<xref:System.Net.FtpWebRequest.GetResponse%2A> lub<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> powoduje wyjątek<xref:System.InvalidOperationException> .  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje pobieranie części pliku z serwera i dołączanie pobranych danych do pliku lokalnego.  
  
 [!code-cpp[NclFtpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#7)]
 [!code-csharp[NclFtpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Określono nową wartość dla tej właściwości dla żądania, które jest już w toku.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla tej właściwości jest mniejsza od zera.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.FtpWebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawsze zgłasza <see cref="T:System.NotSupportedException" />.</summary>
        <value>Zawsze zgłasza <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest dostarczana tylko w celu zapewnienia zgodności z innymi implementacjami <xref:System.Net.WebResponse> <xref:System.Net.WebRequest> klas i. <xref:System.Net.FtpWebRequest.ContentType%2A> Nie ma powodu do użycia <xref:System.Net.FtpWebRequest.ContentType%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Informacje o typie zawartości nie są obsługiwane w przypadku usługi FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.FtpWebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poświadczenia używane do komunikacji z serwerem FTP.</summary>
        <value>Wystąpienie; w przeciwnym razie <see langword="null" /> , jeśli właściwość nie została ustawiona. <see cref="T:System.Net.ICredentials" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie jest wymagane Określanie poświadczeń podczas nawiązywania połączenia przy użyciu logowania anonimowego. <xref:System.Net.FtpWebRequest.Credentials%2A> Właściwość należy ustawić przy użyciu poświadczeń typu <xref:System.Net.NetworkCredential>; dzięki temu można odczytać nazwę użytkownika i hasło oraz wysłać je na serwer.  
  
> [!CAUTION]
>  Informacje o poświadczeniach nie są szyfrowane, gdy są przekazywane do <xref:System.Net.FtpWebRequest.EnableSsl%2A> serwera, chyba że `true`właściwość jest ustawiona na.  
  
 Zmiana <xref:System.Net.FtpWebRequest.Credentials%2A> <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>po <xref:System.Net.FtpWebRequest.GetRequestStream%2A>wywołaniu metody, ,<xref:System.Net.FtpWebRequest.GetResponse%2A> lub<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> powoduje wyjątek<xref:System.InvalidOperationException> .  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera wartość tej właściwości i używa jej do wyświetlania nazwy użytkownika.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość określona dla operacji zestawu to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Typ inny niż <see cref="T:System.Net.NetworkCredential" /> został określony dla operacji zestawu. <see cref="T:System.Net.ICredentials" /></exception>
        <exception cref="T:System.InvalidOperationException">Określono nową wartość dla tej właściwości dla żądania, które jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definiuje domyślne zasady pamięci podręcznej dla wszystkich żądań FTP.</summary>
        <value>A <see cref="T:System.Net.Cache.RequestCachePolicy" /> , który definiuje zasady pamięci podręcznej dla żądań FTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko zawartość odebrana przy <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> użyciu polecenia jest buforowana.  
  
 W poniższej tabeli opisano skutki zasad buforowania FTP w systemie <xref:System.Net.FtpWebRequest>.  
  
|Zasady|Efekt|  
|------------|------------|  
|<xref:System.Net.Cache.RequestCacheLevel.Default>|Zwraca buforowany zasób, jeśli zasób jest świeży, długość zawartości jest dokładna i atrybuty daty wygaśnięcia, modyfikacji i długości zawartości są obecne.|  
|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|Zwraca zasób z serwera.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|Zwraca buforowany zasób, jeśli długość zawartości jest obecna i jest zgodna z rozmiarem wpisu; w przeciwnym razie zgłasza <xref:System.Net.WebException>.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|Zwraca buforowany zasób, jeśli długość zawartości jest podana i jest zgodna z rozmiarem wpisu; w przeciwnym razie zasób jest pobierany z serwera i zwracany do obiektu wywołującego.|  
|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|Zwraca buforowany zasób, jeśli sygnatura czasowa zasobu w pamięci podręcznej jest taka sama jak sygnatura czasu zasobu na serwerze; w przeciwnym razie zasób zostanie pobrany z serwera, zapisany w pamięci podręcznej i zwrócony do obiektu wywołującego.|  
|<xref:System.Net.Cache.RequestCacheLevel.Reload>|Pobiera zasób z serwera, zapisuje go w pamięci podręcznej i zwraca zasób do obiektu wywołującego.|  
|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|Jeśli istnieje zasób w pamięci podręcznej, zostanie on usunięty. Zasób jest pobierany z serwera i zwracany do obiektu wywołującego.|  
  
> [!NOTE]
>  Ustawienie <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> zastępuje wszystkie ustawienia konfiguracji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Obiekt wywołujący próbował ustawić tę właściwość na <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/0eb0c5cb-dd97-484d-8614-785e88877abb">defaultFtpCachePolicy (Ustawienia sieci)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.FtpWebRequest.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Boolean" /> określającą, czy ma być używane połączenie SSL.</summary>
        <value><see langword="true" />Jeśli dane kontroli i przesyłania danych są szyfrowane; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  `true`O ile <xref:System.Net.FtpWebRequest.EnableSsl%2A> właściwość nie jest, wszystkie dane i polecenia, w tym informacje o nazwie użytkownika i haśle, są wysyłane do serwera w postaci zwykłego tekstu. Każdy może monitorować ruch sieciowy i używać ich do łączenia się z serwerem. W przypadku łączenia się z serwerem FTP, który wymaga poświadczeń i obsługuje protokół SSL, należy ustawić <xref:System.Net.FtpWebRequest.EnableSsl%2A> wartość `true`.  
  
 `"AUTH TLS"` Polecenie jest wysyłane do serwera w celu zażądania zaszyfrowanej sesji. Jeśli serwer nie rozpoznaje tego polecenia, zostanie wyświetlony <xref:System.Net.WebException> wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu używa szyfrowanego połączenia w celu pobrania listy katalogów z serwera FTP.  
  
 [!code-cpp[NCLFtpClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#8)]
 [!code-csharp[NCLFtpClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenie z serwerem FTP zostało już nawiązane.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="ftpWebRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> Obiekt, który został zwrócony po rozpoczęciu operacji.</param>
        <summary>Zakończenie oczekującej operacji asynchronicznej rozpoczętej z <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</summary>
        <returns>Wystąpienie z <see cref="T:System.IO.Stream" /> możliwością zapisu skojarzone z tym wystąpieniem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli operacja nie została ukończona, zostanie <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> ona zablokowana do momentu zakończenia operacji. Aby określić, czy operacja została ukończona, sprawdź <xref:System.IAsyncResult.IsCompleted%2A> właściwość przed wywołaniem metody. <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>  
  
 Oprócz wyjątków zanotowanych w "wyjątkach" <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> ponownie generuje wyjątki, które zostały zgłoszone podczas otwierania strumienia do zapisu.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje zakończenie operacji asynchronicznej w celu uzyskania strumienia żądania. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Net.FtpWebRequest> w przeglądzie klasy.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" />nie został uzyskany przez <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />wywołanie metody.</exception>
        <exception cref="T:System.InvalidOperationException">Ta metoda została już wywołana dla operacji identyfikowanej przez <paramref name="asyncResult" />.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="ftpWebRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> , Który został zwrócony po rozpoczęciu operacji.</param>
        <summary>Zakończenie oczekującej operacji asynchronicznej rozpoczętej z <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</summary>
        <returns>Odwołanie, które <see cref="T:System.Net.FtpWebResponse" /> zawiera wystąpienie. <see cref="T:System.Net.WebResponse" /> Ten obiekt zawiera odpowiedź serwera FTP na żądanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli operacja nie została ukończona w momencie <xref:System.Net.FtpWebRequest.EndGetResponse%2A> wywołania metody, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> bloki do momentu zakończenia operacji. Aby zapobiec blokowaniu, sprawdź <xref:System.IAsyncResult.IsCompleted%2A> właściwość przed wywołaniem metody. <xref:System.Net.FtpWebRequest.EndGetResponse%2A>  
  
 Oprócz wyjątków zanotowanych w "wyjątkach" <xref:System.Net.FtpWebRequest.EndGetResponse%2A> ponownie generuje wyjątki, które zostały zgłoszone podczas komunikacji z serwerem.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje zakończenie operacji asynchronicznej w celu uzyskania odpowiedzi. Ten przykład kodu jest częścią większego przykładu podanego <xref:System.Net.FtpWebRequest> w przeglądzie klasy.  
  
 [!code-cpp[NCLFtpAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#6)]
 [!code-csharp[NCLFtpAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" />nie został uzyskany przez <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />wywołanie metody.</exception>
        <exception cref="T:System.InvalidOperationException">Ta metoda została już wywołana dla operacji identyfikowanej przez <paramref name="asyncResult" />.</exception>
        <exception cref="T:System.Net.WebException">Wystąpił błąd podczas korzystania z serwera proxy HTTP.</exception>
        <block subset="none" type="usage"><para>Ta metoda generuje ruch sieciowy.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="M:System.Net.FtpWebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="ftpWebRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera strumień używany do przekazywania danych do serwera FTP.</summary>
        <returns>Wystąpienie zapisywalne <see cref="T:System.IO.Stream" /> służące do przechowywania danych wysyłanych do serwera przez bieżące żądanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw właściwości żądania przed wywołaniem <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metody. Po zapisaniu danych w strumieniu należy zamknąć strumień przed wysłaniem żądania.  
  
 Jeśli <xref:System.Net.FtpWebRequest.Method%2A> właściwość nie została ustawiona na <xref:System.Net.WebRequestMethods.Ftp.UploadFile> lub <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, nie można uzyskać strumienia.  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>bloki podczas oczekiwania na strumień. Aby tego uniknąć, należy wywołać <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> metodę <xref:System.Net.FtpWebRequest.GetRequestStream%2A>zamiast.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje skopiowanie pliku do strumienia danych żądania i wysłanie żądania do serwera w celu przekazania danych i dołączenia go do pliku.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />został wywołany i nie został ukończony.  
  
—lub— 
Serwer proxy HTTP jest włączony i podjęto próbę użycia polecenia FTP innego niż <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />lub <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
        <exception cref="T:System.Net.WebException">Nie można nawiązać połączenia z serwerem FTP.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">Właściwość nie jest ustawiona na <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> lub <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />. <see cref="P:System.Net.FtpWebRequest.Method" /></exception>
        <block subset="none" type="usage"><para>Ta metoda generuje ruch sieciowy.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="ftpWebRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca odpowiedź serwera FTP.</summary>
        <returns>Odwołanie, które <see cref="T:System.Net.FtpWebResponse" /> zawiera wystąpienie. <see cref="T:System.Net.WebResponse" /> Ten obiekt zawiera odpowiedź serwera FTP na żądanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać dostęp do właściwości specyficznych dla protokołu FTP, należy <xref:System.Net.WebResponse> rzutować obiekt zwrócony przez tę <xref:System.Net.FtpWebResponse>metodę na.  
  
 <xref:System.Net.FtpWebRequest.GetResponse%2A>powoduje nawiązanie połączenia kontrolnego i może również utworzyć połączenie danych. <xref:System.Net.FtpWebRequest.GetResponse%2A>bloki do momentu otrzymania odpowiedzi. Aby tego uniknąć, można wykonać tę operację asynchronicznie, wywołując <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metody i <xref:System.Net.FtpWebRequest.EndGetResponse%2A> zamiast. <xref:System.Net.FtpWebRequest.GetResponse%2A>  
  
 <xref:System.Net.FtpWebRequest.Proxy%2A> Jeśli właściwość jest ustawiona, bezpośrednio lub w pliku konfiguracji, komunikacja z serwerem FTP odbywa się za pośrednictwem serwera proxy.  
  
 Jeśli jest zgłaszany, <xref:System.Net.WebException.Response%2A> Użyj właściwości i <xref:System.Net.WebException.Status%2A> wyjątku, aby określić odpowiedź z serwera. <xref:System.Net.WebException>  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Wiele wywołań <xref:System.Net.FtpWebRequest.GetResponse%2A> zwracających ten sam obiekt Response; żądanie nie jest ponownie wystawiane.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje skopiowanie pliku do strumienia danych żądania i wysłanie żądania dołączenia danych do pliku na serwer. Przykład wywołuje <xref:System.Net.FtpWebRequest.GetResponse%2A> , aby wysłać żądanie i zablokować do momentu zwrócenia odpowiedzi przez serwer.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Net.FtpWebRequest.GetResponse" />lub <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> zostało już wywołane dla tego wystąpienia.  
  
—lub— 
Serwer proxy HTTP jest włączony i podjęto próbę użycia polecenia FTP innego niż <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />lub <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
        <exception cref="T:System.Net.WebException"><see cref="P:System.Net.FtpWebRequest.EnableSsl" />jest ustawiona na <see langword="true" />, ale serwer nie obsługuje tej funkcji.  
  
—lub— 
A <see cref="P:System.Net.FtpWebRequest.Timeout" /> został określony i upłynął limit czasu.</exception>
        <block subset="none" type="usage"><para>Ta metoda generuje ruch sieciowy.</para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.FtpWebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pusty <see cref="T:System.Net.WebHeaderCollection" /> obiekt.</summary>
        <value>Pusty <see cref="T:System.Net.WebHeaderCollection" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest dostarczana tylko w celu zapewnienia zgodności z innymi implementacjami <xref:System.Net.WebResponse> <xref:System.Net.WebRequest> klas i. <xref:System.Net.FtpWebRequest.Headers%2A> Nie ma powodu do użycia <xref:System.Net.FtpWebRequest.Headers%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Net.FtpWebRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("We don't support KeepAlive = true")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określającą, czy połączenie z serwerem FTP jest zamknięte po zakończeniu żądania.</summary>
        <value><see langword="true" />Jeśli połączenie z serwerem nie powinno być niszczone, w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość jest ustawiona na `false`, połączenie kontrolne jest <xref:System.Net.FtpWebResponse.Close%2A> zamykane po wywołaniu metody. <xref:System.Net.FtpWebRequest.KeepAlive%2A>  
  
 Zmiana <xref:System.Net.FtpWebRequest.KeepAlive%2A> <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>po <xref:System.Net.FtpWebRequest.GetRequestStream%2A>wywołaniu metody, ,<xref:System.Net.FtpWebRequest.GetResponse%2A> lub<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> powoduje wyjątek<xref:System.InvalidOperationException> .  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera i wyświetla wartości właściwości dla określonego <xref:System.Net.FtpWebRequest> obiektu.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Określono nową wartość dla tej właściwości dla żądania, które jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.FtpWebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia polecenie do wysłania do serwera FTP.</summary>
        <value><see cref="T:System.String" /> Wartość zawierająca polecenie FTP do wysłania do serwera. Wartość domyślna to <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.Method%2A> Właściwość określa, które polecenie jest wysyłane do serwera. Ustawia się <xref:System.Net.FtpWebRequest.Method%2A> za pomocą ciągów zdefiniowanych w publicznych elementach członkowskich <xref:System.Net.WebRequestMethods.Ftp> klasy. Należy zauważyć, że ciągi zdefiniowane w <xref:System.Net.WebRequestMethods.Ftp> klasie są jedynymi obsługiwanymi opcjami <xref:System.Net.FtpWebRequest.Method%2A> właściwości. Ustawienie właściwości na inną wartość spowoduje <xref:System.ArgumentException> wyjątek. <xref:System.Net.FtpWebRequest.Method%2A>  
  
 W przypadku <xref:System.Net.FtpWebRequest.Method%2A> ustawienia <xref:System.Net.WebRequestMethods.Ftp.UploadFile>na, należy to <xref:System.Net.FtpWebRequest.GetRequestStream%2A> zrobić przed wywołaniem metody. Niepowodzenie wywołania tych elementów członkowskich w odpowiedniej kolejności powoduje <xref:System.Net.ProtocolViolationException> wyjątek podczas próby pobrania strumienia żądania.  
  
 Poświadczenia podane dla <xref:System.Net.FtpWebRequest> obiektu muszą mieć uprawnienia do wykonania określonej metody. W przeciwnym razie polecenie FTP kończy się niepowodzeniem.  
  
 Aby określić powodzenie lub niepowodzenie polecenia, należy sprawdzić <xref:System.Net.FtpWebResponse.StatusCode%2A> właściwości i. <xref:System.Net.FtpWebResponse.StatusDescription%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia tę właściwość na <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Określono nową wartość dla tej właściwości dla żądania, które jest już w toku.</exception>
        <exception cref="T:System.ArgumentException">Metoda jest nieprawidłowa.  
  
—lub—
  
 Metoda nie jest obsługiwana.  
  
—lub—
  
 Określono wiele metod.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawsze zgłasza <see cref="T:System.NotSupportedException" />.</summary>
        <value>Zawsze zgłasza <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest dostarczana tylko w celu zapewnienia zgodności z innymi implementacjami <xref:System.Net.WebResponse> <xref:System.Net.WebRequest> klas i. <xref:System.Net.FtpWebRequest.PreAuthenticate%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Uwierzytelnianie wstępne nie jest obsługiwane w przypadku usługi FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.FtpWebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia serwer proxy używany do komunikacji z serwerem FTP.</summary>
        <value><see cref="T:System.Net.IWebProxy" /> Wystąpienie odpowiedzialne za komunikowanie się z serwerem FTP. W przypadku platformy .NET Core jego wartość <see langword="null" />to.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

### <a name="on-net-framework"></a>Na .NET Framework

 <xref:System.Net.FtpWebRequest.Proxy%2A> Właściwość<xref:System.Net.IWebProxy> identyfikuje wystąpienie, które komunikuje się z serwerem FTP. Serwer proxy jest ustawiany przez system przy użyciu plików konfiguracyjnych i ustawień sieci lokalnej programu Internet Explorer. Aby określić, że żaden serwer proxy nie powinien być <xref:System.Net.FtpWebRequest.Proxy%2A> używany, ustaw na wystąpienie serwera proxy <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> zwrócone przez metodę. Aby uzyskać więcej informacji o automatycznym wykrywaniu serwerów proxy, zobacz [Automatyczne wykrywanie serwera proxy](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 Przed zapisaniem danych w strumieniu żądania lub otrzymaniu odpowiedzi należy ustawić wartość <xref:System.Net.FtpWebRequest.Proxy%2A> . Zmiana <xref:System.Net.FtpWebRequest.Proxy%2A> <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>po <xref:System.Net.FtpWebRequest.GetRequestStream%2A>wywołaniu metody, ,<xref:System.Net.FtpWebRequest.GetResponse%2A> lub<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> powoduje wyjątek<xref:System.InvalidOperationException> .  
  
 <xref:System.Net.FtpWebRequest> Klasa obsługuje serwery proxy klienta zapory http i ISA.  
  
 Jeśli określony serwer proxy jest serwerem proxy HTTP, obsługiwane są <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>tylko <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>polecenia, <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> i.  
  
### <a name="on-net-core"></a>Na platformie .NET Core   

`FtpWebRequest.Proxy` Właściwość nie jest obsługiwana. Ustawienie właściwości nie ma żadnego wpływu. Pobieranie wartości właściwości zwraca `null`wartość. 


## Examples  
 Poniższy przykład kodu wyświetla tę wartość właściwości.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ta właściwość nie może być ustawiona <see langword="null" />na wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Określono nową wartość dla tej właściwości dla żądania, które jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadWriteTimeout : int with get, set" Usage="System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia limit czasu podczas odczytywania lub zapisywania w strumieniu.</summary>
        <value>Liczba milisekund przed upływem limitu czasu odczytu lub zapisu. Wartość domyślna to 300 000 milisekund (5 minut).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest używany podczas zapisywania do strumienia zwróconego <xref:System.Net.FtpWebRequest.GetRequestStream%2A> przez metodę lub odczytywania ze strumienia zwróconego przez <xref:System.Net.FtpWebResponse.GetResponseStream%2A> metodę. <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>  
  
 Właściwość określa limit czasu <xref:System.IO.Stream.Read%2A> dla metody, która jest używana do odczytu strumienia zwróconego przez <xref:System.Net.FtpWebResponse.GetResponseStream%2A> metodę i dla <xref:System.IO.Stream.Write%2A> metody, która jest używana do zapisu w strumieniu zwracanym przez <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> <xref:System.Net.FtpWebRequest.GetRequestStream%2A>Metoda. W przypadku przekroczenia limitu czasu Metoda wywołująca generuje element <xref:System.Net.WebException> z <xref:System.Net.WebExceptionStatus> ustawionym na <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Aby określić czas oczekiwania na zakończenie żądania, użyj <xref:System.Net.FtpWebRequest.Timeout%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Żądanie zostało już wysłane.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji zestawu jest mniejsza lub równa zero i nie jest równa <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public string RenameTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RenameTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RenameTo" />
      <MemberSignature Language="VB.NET" Value="Public Property RenameTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RenameTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenameTo : string with get, set" Usage="System.Net.FtpWebRequest.RenameTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nową nazwę pliku, którego nazwa jest zmieniana.</summary>
        <value>Nowa nazwa pliku, którego nazwę zmieniono.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Wartość określona dla operacji zestawu jest <see langword="null" /> lub ciągiem pustym.</exception>
        <exception cref="T:System.InvalidOperationException">Określono nową wartość dla tej właściwości dla żądania, które jest już w toku.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.FtpWebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator URI żądany przez to wystąpienie.</summary>
        <value><see cref="T:System.Uri" /> Wystąpienie, które identyfikuje zasób, do którego uzyskuje się dostęp przy użyciu protokół transferu plików.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Net.FtpWebRequest.RequestUri%2A> właściwości jest identyfikatorem URI określonym <xref:System.Net.WebRequest.Create%2A> podczas wywołania metody w celu uzyskania tego wystąpienia.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla tę wartość właściwości.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.FtpWebRequest.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Net.ServicePoint" /> Pobiera obiekt używany do nawiązywania połączenia z serwerem FTP.</summary>
        <value><see cref="T:System.Net.ServicePoint" /> Obiekt, który może służyć do dostosowywania zachowania połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli żaden <xref:System.Net.ServicePoint> obiekt nie istnieje, zostanie on utworzony dla serwera FTP. Aby ustawić maksymalną liczbę połączeń, które mogą być otwarte dla serwera FTP, ustaw <xref:System.Net.ServicePoint.ConnectionLimit%2A> Właściwość <xref:System.Net.ServicePoint> wystąpienia zwracanego przez tę właściwość.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera punkt usługi z żądania i ustawia maksymalną liczbę połączeń na jeden.  
  
 [!code-cpp[NCLFtpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#1)]
 [!code-csharp[NCLFtpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.FtpWebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę milisekund oczekiwania na żądanie.</summary>
        <value><see cref="T:System.Int32" /> Wartość, która zawiera liczbę milisekund oczekiwania przed upływem limitu czasu żądania. Wartość domyślna to <see cref="F:System.Threading.Timeout.Infinite" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby określić nieskończoną wartość, ustaw <xref:System.Net.FtpWebRequest.Timeout%2A> właściwość na <xref:System.Threading.Timeout.Infinite> (-1). Jest to wartość domyślna.  
  
 <xref:System.Net.FtpWebRequest.Timeout%2A>jest to liczba milisekund, przez którą żądanie synchroniczne wykonane z <xref:System.Net.FtpWebRequest.GetResponse%2A> metodą czeka na odpowiedź i <xref:System.Net.FtpWebRequest.GetRequestStream%2A> że metoda czeka na strumień. Jeśli zasób nie odpowiada w określonym limicie czasu, żądanie wygeneruje <xref:System.Net.WebException> <xref:System.Net.WebException.Status%2A> właściwość z ustawioną na <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Zmiana <xref:System.Net.FtpWebRequest.Timeout%2A> <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>po <xref:System.Net.FtpWebRequest.GetRequestStream%2A>wywołaniu metody, ,<xref:System.Net.FtpWebRequest.GetResponse%2A> lub<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> powoduje wyjątek<xref:System.InvalidOperationException> .  
  
 Zwracanie lub przekroczenie limitu czasu zapytania systemu nazw domen (DNS) może potrwać do 15 sekund. Jeśli żądanie zawiera nazwę hosta, która wymaga rozwiązania i ma ustawioną <xref:System.Net.FtpWebRequest.Timeout%2A> wartość mniejszą niż 15 sekund, może upłynąć 15 sekund lub więcej <xref:System.Net.WebException> zanim zostanie zgłoszony limit czasu dla żądania.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia tę właściwość.  
  
 [!code-cpp[NCLFtpClient#23](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#23)]
 [!code-csharp[NCLFtpClient#23](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość jest mniejsza od zera i nie <see cref="F:System.Threading.Timeout.Infinite" />jest.</exception>
        <exception cref="T:System.InvalidOperationException">Określono nową wartość dla tej właściwości dla żądania, które jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseBinary">
      <MemberSignature Language="C#" Value="public bool UseBinary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseBinary" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseBinary" />
      <MemberSignature Language="VB.NET" Value="Public Property UseBinary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseBinary { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseBinary : bool with get, set" Usage="System.Net.FtpWebRequest.UseBinary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określającą typ danych dla transferów plików.</summary>
        <value><see langword="true" />Aby wskazać serwerowi, że dane do transferu są binarne; <see langword="false" /> , aby wskazać, że dane są tekst. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku wysyłania danych binarnych, takich jak obraz, należy ustawić tę właściwość na `true`. W przypadku wysyłania tekstu należy ustawić właściwość na `false`. Określenie `true` powoduje<xref:System.Net.FtpWebRequest> wysłanie`"TYPE I"` polecenia do serwera. Określenie `false` powoduje<xref:System.Net.FtpWebRequest> wysłanie`"Type A"` polecenia do serwera. Serwery FTP mogą ignorować te polecenia.  
  
 Zmiana <xref:System.Net.FtpWebRequest.UseBinary%2A> <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>po <xref:System.Net.FtpWebRequest.GetRequestStream%2A>wywołaniu metody, ,<xref:System.Net.FtpWebRequest.GetResponse%2A> lub<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> powoduje wyjątek<xref:System.InvalidOperationException> .  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera i wyświetla wartości właściwości dla określonego <xref:System.Net.FtpWebRequest> obiektu.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Określono nową wartość dla tej właściwości dla żądania, które jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawsze zgłasza <see cref="T:System.NotSupportedException" />.</summary>
        <value>Zawsze zgłasza <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest dostarczana tylko w celu zapewnienia zgodności z innymi implementacjami <xref:System.Net.WebResponse> <xref:System.Net.WebRequest> klas i. <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> Nie ma powodu do użycia <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Poświadczenia domyślne nie są obsługiwane w przypadku usługi FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePassive">
      <MemberSignature Language="C#" Value="public bool UsePassive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePassive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UsePassive" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePassive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePassive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePassive : bool with get, set" Usage="System.Net.FtpWebRequest.UsePassive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zachowanie procesu transferu danych aplikacji klienta.</summary>
        <value><see langword="false" />Jeśli proces transferu danych przez aplikację kliencką nasłuchuje połączenia na porcie danych; w przeciwnym <see langword="true" /> razie, jeśli klient powinien inicjować połączenie z portem danych. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie właściwości w celu `true` wysłania polecenia`PASV"` "do serwera programu. <xref:System.Net.FtpWebRequest.UsePassive%2A> To polecenie żąda od serwera nasłuchiwania na porcie danych i oczekiwania na połączenie zamiast zainicjowania go przy odbiorze polecenia transferu.  
  
 Aby uzyskać opis zachowań, które są określone za pomocą <xref:System.Net.FtpWebRequest.UsePassive%2A>, zobacz [RFC 959: "Protokół transferu plików", sekcja 3,2: "Ustanawianie połączeń danych" oraz sekcja 4.1.2: "Przekazywanie poleceń parametrów"](https://www.ietf.org/rfc/rfc959.txt).  
  
 Zmiana <xref:System.Net.FtpWebRequest.UsePassive%2A> <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>po <xref:System.Net.FtpWebRequest.GetRequestStream%2A>wywołaniu metody, ,<xref:System.Net.FtpWebRequest.GetResponse%2A> lub<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> powoduje wyjątek<xref:System.InvalidOperationException> .  
  
 Jeśli <xref:System.Net.FtpWebRequest.UsePassive%2A> jest ustawiona na `true`, serwer FTP może nie wysłać rozmiaru pliku, a postęp pobierania może być zawsze równy zeru. Jeśli <xref:System.Net.FtpWebRequest.UsePassive%2A> jest ustawiona na `false`, Zapora może zgłosić alert i zablokować pobieranie pliku.  
  
   
  
## Examples  
 Poniższy przykład kodu pobiera i wyświetla wartości właściwości dla określonego <xref:System.Net.FtpWebRequest> obiektu.  
  
 [!code-cpp[NCLFtpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#6)]
 [!code-csharp[NCLFtpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Określono nową wartość dla tej właściwości dla żądania, które jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
  </Members>
</Type>
