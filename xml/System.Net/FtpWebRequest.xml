<Type Name="FtpWebRequest" FullName="System.Net.FtpWebRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1278f9f8cd27029d54ab70b0f5f3548c6cf29dbc" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33683802" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FtpWebRequest : System.Net.WebRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FtpWebRequest extends System.Net.WebRequest" />
  <TypeSignature Language="DocId" Value="T:System.Net.FtpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FtpWebRequest&#xA;Inherits WebRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class FtpWebRequest sealed : System::Net::WebRequest" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementuje klienta protokołu transferu plików (FTP).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać wystąpienia <xref:System.Net.FtpWebRequest>, użyj <xref:System.Net.WebRequest.Create%2A> metody. Można również użyć <xref:System.Net.WebClient> klasy przekazywania i pobierania informacji z serwera FTP. Przy użyciu jednej z tych metod, po określeniu zasobu sieciowego, który wykorzystuje schemat FTP (na przykład `"ftp://contoso.com"`) <xref:System.Net.FtpWebRequest> klasa umożliwia programowo interakcji z serwerami FTP.  
  
 Identyfikator URI może być względna lub bezwzględna. Jeśli identyfikator URI ma postać `"ftp://contoso.com/%2fpath"` (% 2f jest zmienionym znaczeniu "/"), następnie jest bezwzględny identyfikator URI i bieżący katalog jest `/path`. Jeśli identyfikator URI jest jednak formularza `"ftp://contoso.com/path"`, najpierw .NET Framework loguje się do serwera FTP (przy użyciu nazwy użytkownika i hasło ustawione przez <xref:System.Net.FtpWebRequest.Credentials%2A> właściwości), bieżący katalog przybiera wartość `<UserLoginDirectory>/path`.  
  
 Musi mieć prawidłową nazwę użytkownika i hasło dla serwera lub serwer musi zezwalać na logowanie anonimowe. Możesz określić poświadczenia używane do łączenia się z serwerem przez ustawienie <xref:System.Net.FtpWebRequest.Credentials%2A> właściwości lub można je uwzględnić w <xref:System.Uri.UserInfo%2A> część identyfikatora URI przekazane do <xref:System.Net.WebRequest.Create%2A> metody. Jeśli dołączysz <xref:System.Uri.UserInfo%2A> informacji w identyfikatorze URI, <xref:System.Net.FtpWebRequest.Credentials%2A> właściwość jest ustawiona na nowe poświadczenie sieci z informacjami o nazwę i hasło określonego użytkownika.  
  
> [!CAUTION]
>  O ile <xref:System.Net.FtpWebRequest.EnableSsl%2A> właściwość jest `true`, wszystkie dane i poleceń, w tym nazwę i hasło, informacje o użytkowniku, są wysyłane do serwera w postaci zwykłego tekstu. Każda osoba, która monitorowanie ruchu w sieci można wyświetlać swoje poświadczenia i ich używać do łączenia się z serwerem. Jeśli łączysz się z serwerem FTP, który wymaga poświadczeń i obsługuje Secure Sockets Layer (SSL), należy ustawić <xref:System.Net.FtpWebRequest.EnableSsl%2A> do `true`.  
  
 Musi mieć <xref:System.Net.WebPermission> dostępu do zasobu FTP; w przeciwnym razie <xref:System.Security.SecurityException> wyjątku.  
  
 Określ polecenie FTP do wysyłania do serwera przez ustawienie <xref:System.Net.FtpWebRequest.Method%2A> właściwości na wartość zdefiniowana w <xref:System.Net.WebRequestMethods.Ftp> struktury. Aby przesyłać dane tekstowe, zmień <xref:System.Net.FtpWebRequest.UseBinary%2A> właściwości ze swojej wartości domyślnej (`true`) do `false`. Ograniczenia i uzyskać szczegółowe informacje, zobacz <xref:System.Net.FtpWebRequest.Method%2A>.  
  
 Korzystając z <xref:System.Net.FtpWebRequest> obiektu do przekazania pliku do serwera, zawartość pliku musi być zapisana do strumienia żądania można uzyskać przez wywołanie <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metody lub jego odpowiedników asynchroniczne, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> i <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> metody. Musisz zapisać do strumienia i zamykać strumień przed wysłaniem żądania.  
  
 Żądania wysyłane do serwera przez wywołanie metody <xref:System.Net.FtpWebRequest.GetResponse%2A> metody lub jego odpowiedników asynchroniczne, <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> i <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metody. Po zakończeniu wykonywania żądanej operacji <xref:System.Net.FtpWebResponse> obiekt jest zwracany. <xref:System.Net.FtpWebResponse> Obiektu zawiera informacje o stanie operacji oraz wszystkie dane pobrane z serwera.  
  
 Można ustawić wartość limitu czasu dla odczytu lub zapisu do serwera przy użyciu <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> właściwości. Po przekroczeniu limitu czasu wywołania metoda zgłasza <xref:System.Net.WebException> z <xref:System.Net.WebExceptionStatus> ustawioną <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Podczas pobierania pliku z serwera FTP, jeśli polecenie zostało zakończone pomyślnie, zawartość żądany plik jest dostępna w strumieniu obiekt odpowiedzi. Dostęp do tego strumienia przez wywołanie metody <xref:System.Net.FtpWebResponse.GetResponseStream%2A> metody. Aby uzyskać więcej informacji, zobacz <xref:System.Net.FtpWebResponse>.  
  
 Jeśli <xref:System.Net.FtpWebRequest.Proxy%2A> właściwość jest ustawiona, albo bezpośrednio lub w pliku konfiguracji komunikacji z serwerem FTP są nawiązywane przy użyciu określonego serwera proxy. Jeśli serwer proxy określony jest serwer proxy HTTP tylko <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, i <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> polecenia są obsługiwane.  
  
 Tylko zawartość binarną pobierane są buforowane; oznacza to, że zawartość odbierane przy użyciu <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> z <xref:System.Net.FtpWebRequest.UseBinary%2A> ustawioną właściwość `true`.  
  
 Wiele <xref:System.Net.FtpWebRequest>s, jeśli to możliwe ponowne użycie istniejących połączeń.  
  
 Aby uzyskać więcej informacji na temat protokołu FTP, zobacz [RFC 959: File Transfer Protocol](https://www.ietf.org/rfc/rfc959.txt).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, usunięcie pliku z serwera FTP.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 Poniższy przykład kodu pokazuje, pobierania pliku z serwera FTP przy użyciu <xref:System.Net.WebClient> klasy.  
  
 [!code-cpp[NCLFtpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#5)]
 [!code-csharp[NCLFtpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#5)]  
  
 Poniższy przykład kodu pokazuje, aby przekazać plik do serwera FTP przy użyciu operacji asynchronicznych.  
  
 [!code-cpp[NCLFtpAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#1)]
 [!code-csharp[NCLFtpAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do zasobu przywoływanego przez to żądanie. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <altmember cref="T:System.Net.FtpWebResponse" />
    <altmember cref="T:System.Net.FtpStatusCode" />
    <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.WebClient" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kończy operację asynchroniczną FTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie żadna operacja w toku, ta metoda nie działa. Jeśli transfer plików jest w toku, ta metoda kończy transferu.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak użytkownik może obsłużyć asynchronicznego przesyłania plików z katalogu lokalnego do serwera.  
  
 [!code-cpp[NCLFtpClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#10)]
 [!code-csharp[NCLFtpClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="state">Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <c>wywołania zwrotnego</c> delegować po zakończeniu operacji.</param>
        <summary>Rozpoczyna asynchronicznie otwierania strumień zawartości żądań zapisu.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Wystąpienia, które wskazuje stan operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wykonaj operację asynchroniczną, wywołując <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> metody. Zazwyczaj <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> jest wywoływana przez metodę odwołuje się `callback`. Aby określić stan operacji, sprawdź właściwości w <xref:System.IAsyncResult> obiektu zwróconego przez tę metodę.  
  
 Ta metoda nie są blokowane podczas oczekiwania na strumienia. Aby zablokować, należy wywołać <xref:System.Net.FtpWebRequest.GetRequestStream%2A> zamiast tej metody.  
  
 Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje rozpoczyna operację asynchroniczną można uzyskać strumienia żądania. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Net.FtpWebRequest> Przegląd klasy.  
  
 [!code-cpp[NCLFtpAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#4)]
 [!code-csharp[NCLFtpAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Poprzednie wywołanie tej metody lub <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> nie zostało jeszcze zakończone.</exception>
        <exception cref="T:System.Net.WebException">Nie można nawiązać połączenia z serwerem FTP.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">
          <see cref="P:System.Net.FtpWebRequest.Method" /> Nie ustawiono właściwości <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />.</exception>
        <block subset="none" type="usage">
          <para>Ta metoda generuje ruchu sieciowego.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="state">Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <c>wywołania zwrotnego</c> delegować po zakończeniu operacji.</param>
        <summary>Rozpoczyna wysyłanie żądania i asynchronicznie odbierania odpowiedzi z serwera FTP.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Wystąpienia, które wskazuje stan operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wykonaj operację asynchroniczną, wywołując <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metody. Zazwyczaj <xref:System.Net.FtpWebRequest.EndGetResponse%2A> jest wywoływana przez metodę odwołuje się `callback`. Aby określić stan operacji, sprawdź właściwości w <xref:System.IAsyncResult> obiektu zwróconego przez <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metody.  
  
 Jeśli <xref:System.Net.FtpWebRequest.Proxy%2A> właściwość jest ustawiona, albo bezpośrednio lub w pliku konfiguracji komunikacji z serwerem FTP są nawiązywane przy użyciu określonego serwera proxy.  
  
 <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> nie są blokowane podczas oczekiwania na odpowiedź z serwera. Aby zablokować, należy wywołać <xref:System.Net.FtpWebRequest.GetResponse%2A> metody zamiast <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>.  
  
 Aby uzyskać więcej informacji o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Jeśli <xref:System.Net.WebException> jest zgłoszone, użyj <xref:System.Net.WebException.Response%2A> i <xref:System.Net.WebException.Status%2A> właściwości wyjątku, aby określić odpowiedzi z serwera.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje kończące operację asynchroniczną można uzyskać strumienia żądania, a następnie uruchomić żądanie, aby pobrać odpowiedzi. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Net.FtpWebRequest> Przegląd klasy.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Net.FtpWebRequest.GetResponse" /> lub <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> została już wywołana dla tego wystąpienia.</exception>
        <block subset="none" type="usage">
          <para>Ta metoda generuje ruchu sieciowego.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia certyfikaty używane do nawiązywania zaszyfrowanego połączenia z serwerem FTP.</summary>
        <value>
          <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> Obiekt, który zawiera certyfikaty klienta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certyfikaty klienta są używane do uwierzytelniania klienta podczas początkowego negocjowania połączenia SSL. Aby uzyskać więcej informacji, zobacz <xref:System.Net.FtpWebRequest.EnableSsl%2A>.  
  
> [!NOTE]
>  .NET Framework buforuje sesji SSL, tworzonych i podejmie próbę ponownego użycia pamięci podręcznej sesji dla nowego żądania, jeśli to możliwe. Podczas próby ponownego użycia sesji SSL, .NET Framework używa pierwszego elementu obiektu <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (jeśli istnieje), lub spróbuje ponownie użyć sesji anonimowe, jeśli <xref:System.Net.HttpWebRequest.ClientCertificates%2A> jest pusta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość określona dla operacji set jest <see langword="null" />.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę grupy połączeń, która zawiera punkt usługi używane do wysyłania bieżącego żądania.</summary>
        <value>A <see cref="T:System.String" /> wartości, która zawiera nazwę grupy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupy połączeń skojarzyć zbiór żądań z danego połączenia lub zestawu połączeń. Połączenia w grupie połączenia mogą być ponownie używane tylko przez żądań pochodzących z tej samej domenie aplikacji, gdy poświadczenia na żądanie są takie same i żądania określa nazwę grupy połączeń. Gdy żądanie nie określa nazwę grupy, można każde istniejące połączenie z żądanego serwera, który nie jest skojarzony z grupą połączenia. Jeśli poświadczenia nie są takie same, istniejące połączenie zostanie zamknięte, a nowe żądanie musi zostać ponownie uwierzytelnić.  
  
 Przy użyciu grup połączeń może zwiększyć wydajność, ponieważ dzięki temu wszystkie żądania dla użytkownika do ponownego użycia połączenia uwierzytelniony przy użyciu poświadczeń użytkownika.  
  
 Zmiana <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> właściwości po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metody powoduje, że <xref:System.InvalidOperationException> wyjątku.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera wartość tej właściwości.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która jest ignorowana przez <see cref="T:System.Net.FtpWebRequest" /> klasy.</summary>
        <value>
          <see cref="T:System.Int64" /> Wartość, która powinna być ignorowane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.ContentLength%2A> Właściwości jest dostępne tylko w celu zgodności z innych implementacji <xref:System.Net.WebRequest> i <xref:System.Net.WebResponse> klasy. To nie ma powodu do użycia <xref:System.Net.FtpWebRequest.ContentLength%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentOffset">
      <MemberSignature Language="C#" Value="public long ContentOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentOffset" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentOffset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentOffset { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Przesunięcie bajtów do pliku pobieranych przez to żądanie.</summary>
        <value>
          <see cref="T:System.Int64" /> Wystąpienia, która określa przesunięcie w pliku w bajtach. Wartość domyślna wynosi zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.Net.FtpWebRequest.ContentOffset%2A> właściwość podczas pobierania pliku z serwera FTP. To przesunięcie wskazuje położenie w pliku serwera, który oznacza początek danych do pobrania. Przesunięcie jest określony jako liczba bajtów na początku pliku. przesunięcie pierwszego bajtu wynosi zero.  
  
 Ustawienie <xref:System.Net.FtpWebRequest.ContentOffset%2A> powoduje, że <xref:System.Net.FtpWebRequest> do wysyłania ponownego uruchomienia (`REST`) polecenia na serwerze. To polecenie jest ignorowane przez większość implementacje serwer FTP podczas przekazywania danych do serwera.  
  
 Zmiana <xref:System.Net.FtpWebRequest.ContentOffset%2A> po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metody powoduje, że <xref:System.InvalidOperationException> wyjątku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje pobieranie część pliku z serwera i dołączenie pobrane dane do pliku lokalnego.  
  
 [!code-cpp[NclFtpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#7)]
 [!code-csharp[NclFtpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla tej właściwości jest mniejsza od zera.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawsze zwraca <see cref="T:System.NotSupportedException" />.</summary>
        <value>Zawsze zwraca <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.ContentType%2A> Właściwości jest dostępne tylko w celu zgodności z innych implementacji <xref:System.Net.WebRequest> i <xref:System.Net.WebResponse> klasy. To nie ma powodu do użycia <xref:System.Net.FtpWebRequest.ContentType%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Informacje o typie zawartości nie jest obsługiwana w przypadku usługi FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poświadczenia używane do komunikacji z serwerem FTP.</summary>
        <value>
          <see cref="T:System.Net.ICredentials" /> Wystąpienia; w przeciwnym razie <see langword="null" /> Jeśli właściwość nie została ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie należy określić poświadczenia podczas nawiązywania połączenia przy użyciu anonimowego logowania. Należy ustawić <xref:System.Net.FtpWebRequest.Credentials%2A> właściwości przy użyciu poświadczeń typu <xref:System.Net.NetworkCredential>; dzięki temu, nazwę użytkownika i hasło może być do odczytu i wysłane do serwera.  
  
> [!CAUTION]
>  Informacje poświadczeń nie są szyfrowane podczas przesyłania do serwera, chyba że <xref:System.Net.FtpWebRequest.EnableSsl%2A> właściwość jest ustawiona na `true`.  
  
 Zmiana <xref:System.Net.FtpWebRequest.Credentials%2A> po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metody powoduje, że <xref:System.InvalidOperationException> wyjątku.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera wartość tej właściwości i używa go do wyświetlenia nazwy użytkownika.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość określona dla operacji set jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Net.ICredentials" /> Typu innego niż <see cref="T:System.Net.NetworkCredential" /> został określony dla operacji set.</exception>
        <exception cref="T:System.InvalidOperationException">Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa domyślne zasady pamięci podręcznej dla wszystkich żądań FTP.</summary>
        <value>A <see cref="T:System.Net.Cache.RequestCachePolicy" /> definiuje zasady dla żądań FTP w pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko zawartość odbierane przy użyciu <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> polecenia są buforowane.  
  
 W poniższej tabeli opisano skutków FTP buforowanie zasad na <xref:System.Net.FtpWebRequest>.  
  
|Zasady|Efekt|  
|------------|------------|  
|<xref:System.Net.Cache.RequestCacheLevel.Default>|Zwraca buforowane zasobu, jeśli zasób jest nowa, długość zawartości jest dokładna i wygaśnięcia, modyfikowanie i atrybuty długość zawartości znajdują się.|  
|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|Zwraca zasobu z serwera.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|Zwraca buforowane zasobu, jeśli długość zawartości jest obecny i dopasowuje rozmiar wpisu; w przeciwnym razie zwraca <xref:System.Net.WebException>.|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|Zwraca buforowane zasobów, jeśli zostanie podana długość zawartości dopasowuje rozmiar wpisu; w przeciwnym razie zasób jest pobierane z serwera i jest zwracany do obiektu wywołującego.|  
|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|Zwraca buforowane zasobu, jeśli sygnatury czasowej buforowanych zasobów jest taka sama jak sygnaturę czasową zasobu na serwerze; w przeciwnym razie wartość zasób jest pobierany z serwera, przechowywane w pamięci podręcznej i zwracany do obiektu wywołującego.|  
|<xref:System.Net.Cache.RequestCacheLevel.Reload>|Pobiera zasób z serwera, jest on przechowywany w pamięci podręcznej i zwraca zasobu do obiektu wywołującego.|  
|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|Jeśli istnieje zasób pamięci podręcznej, jest ono usunięte. Zasób jest pobierane z serwera i jest zwracany do obiektu wywołującego.|  
  
> [!NOTE]
>  Ustawienie <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> zastępuje wszelkie ustawienia konfiguracji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Obiekt wywołujący próbował ustawić tę właściwość na <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> Określa, że połączenie SSL powinny być używane.</summary>
        <value>
          <see langword="true" /> Jeśli są zaszyfrowane transmisji danych i kontroli; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  O ile <xref:System.Net.FtpWebRequest.EnableSsl%2A> właściwość jest `true`, wszystkie dane i poleceń, w tym nazwę i hasło, informacje o użytkowniku, są wysyłane do serwera w postaci zwykłego tekstu. Każda osoba, która monitorowanie ruchu w sieci można wyświetlać swoje poświadczenia i ich używać do łączenia się z serwerem. Jeśli łączysz się z serwerem FTP, który wymaga poświadczeń i obsługuje protokół SSL, należy ustawić <xref:System.Net.FtpWebRequest.EnableSsl%2A> do `true`.  
  
 `"AUTH TLS"` Polecenia są wysyłane do serwera żądanie sesji zaszyfrowanej. Jeśli serwer nie rozpoznaje tego polecenia, zostanie wyświetlony <xref:System.Net.WebException> wyjątku.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje zaszyfrowanego połączenia, aby pobrać listę z serwera FTP katalogów.  
  
 [!code-cpp[NCLFtpClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#8)]
 [!code-csharp[NCLFtpClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nawiązano już połączenie z serwerem FTP.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Obiekt, który został zwrócony podczas uruchamiania operacji.</param>
        <summary>Kończy się istnieje oczekująca operacja asynchroniczna wprowadzenie <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</summary>
        <returns>Z możliwością zapisu <see cref="T:System.IO.Stream" /> wystąpienie skojarzone z tym wystąpieniem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli działanie nie zostało ukończone, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> metody blokuje przed zakończeniem operacji. Aby ustalić, czy działanie zostało zakończone, sprawdź <xref:System.IAsyncResult.IsCompleted%2A> właściwość przed wywołaniem elementu <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>.  
  
 Oprócz wyjątków w "Wyjątki," <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> ponownie zgłasza wyjątki, które zostały zgłoszone podczas otwierania strumienia do zapisu.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje kończące operację asynchroniczną można uzyskać strumienia żądania. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Net.FtpWebRequest> Przegląd klasy.  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> nie uzyskano przez wywołanie metody <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ta metoda już wywołano dla operacji identyfikowanych <paramref name="asyncResult" />.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Zwrócił podczas uruchamiania operacji.</param>
        <summary>Kończy się istnieje oczekująca operacja asynchroniczna wprowadzenie <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> odwołania, który zawiera <see cref="T:System.Net.FtpWebResponse" /> wystąpienia. Ten obiekt zawiera odpowiedzi na żądanie serwera FTP.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli działanie nie zostało ukończone w czasie <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metoda jest wywoływana, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> blokuje przed zakończeniem operacji. Aby zapobiec, blokowanie, sprawdź <xref:System.IAsyncResult.IsCompleted%2A> właściwość przed wywołaniem elementu <xref:System.Net.FtpWebRequest.EndGetResponse%2A>.  
  
 Oprócz wyjątków w "Wyjątki," <xref:System.Net.FtpWebRequest.EndGetResponse%2A> ponownie zgłasza wyjątki, które zostały zgłoszone podczas komunikacji z serwerem.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje kończące operację asynchroniczną można uzyskać odpowiedzi. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Net.FtpWebRequest> Przegląd klasy.  
  
 [!code-cpp[NCLFtpAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#6)]
 [!code-csharp[NCLFtpAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> nie uzyskano przez wywołanie metody <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
        <exception cref="T:System.InvalidOperationException">Ta metoda już wywołano dla operacji identyfikowanych <paramref name="asyncResult" />.</exception>
        <exception cref="T:System.Net.WebException">Wystąpił błąd przy użyciu serwera proxy HTTP.</exception>
        <block subset="none" type="usage">
          <para>Ta metoda generuje ruchu sieciowego.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="M:System.Net.FtpWebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera strumień używany do przekazywania danych do serwera FTP.</summary>
        <returns>Z możliwością zapisu <see cref="T:System.IO.Stream" /> wystąpienie używane do przechowywania danych, które zostanie wysłane do serwera przez bieżącego żądania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw właściwości żądania przed wywołaniem <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metody. Po zapisaniu danych w strumieniu, można zamknąć strumienia przed wysłaniem żądania.  
  
 Jeśli nie ustawiono <xref:System.Net.FtpWebRequest.Method%2A> właściwości <xref:System.Net.WebRequestMethods.Ftp.UploadFile> lub <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, nie można uzyskać strumienia.  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A> bloki podczas oczekiwania na strumienia. Aby tego uniknąć, należy wywołać <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> metody zamiast <xref:System.Net.FtpWebRequest.GetRequestStream%2A>.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje kopiowanie pliku do strumienia danych na żądanie i wysyła żądanie do serwera, aby przekazać dane i dołącza je do pliku.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> Wywołano i nie zostało ukończone.  
  
 \- lub -  
  
 Serwer proxy HTTP jest włączona, a następnie podjęto próbę użycia polecenia FTP innych niż <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />, lub <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
        <exception cref="T:System.Net.WebException">Nie można nawiązać połączenia z serwerem FTP.</exception>
        <exception cref="T:System.Net.ProtocolViolationException">
          <see cref="P:System.Net.FtpWebRequest.Method" /> Nie ustawiono właściwości <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> lub <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />.</exception>
        <block subset="none" type="usage">
          <para>Ta metoda generuje ruchu sieciowego.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca odpowiedź serwera FTP.</summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> odwołania, który zawiera <see cref="T:System.Net.FtpWebResponse" /> wystąpienia. Ten obiekt zawiera odpowiedzi na żądanie serwera FTP.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać dostęp do właściwości specyficzne dla FTP, należy rzutować <xref:System.Net.WebResponse> obiektu zwróconego przez tę metodę w celu <xref:System.Net.FtpWebResponse>.  
  
 <xref:System.Net.FtpWebRequest.GetResponse%2A> powoduje, że można nawiązać połączenia kontroli i może również utworzyć połączenie danych. <xref:System.Net.FtpWebRequest.GetResponse%2A> bloki do momentu otrzymania odpowiedzi. Aby tego uniknąć, można wykonać tej operacji asynchronicznie przez wywołanie metody <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> i <xref:System.Net.FtpWebRequest.EndGetResponse%2A> metody zamiast <xref:System.Net.FtpWebRequest.GetResponse%2A>.  
  
 Jeśli <xref:System.Net.FtpWebRequest.Proxy%2A> właściwość jest ustawiona, albo bezpośrednio lub w pliku konfiguracji komunikacji z serwerem FTP są nawiązywane przy użyciu serwera proxy.  
  
 Jeśli <xref:System.Net.WebException> jest zgłoszone, użyj <xref:System.Net.WebException.Response%2A> i <xref:System.Net.WebException.Status%2A> właściwości wyjątku, aby określić odpowiedzi z serwera.  
  
 Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
> [!NOTE]
>  Wiele wywołań <xref:System.Net.FtpWebRequest.GetResponse%2A> powrócić do tego samego obiektu odpowiedzi; żądanie nie jest ponownie.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje kopiowanie pliku do strumienia danych na żądanie i wysyłanie żądania można dołączyć danych do pliku na serwerze. Przykład wywołania <xref:System.Net.FtpWebRequest.GetResponse%2A> do wysłania żądania i blokowanie do czasu odpowiedzi jest zwracany przez serwer.  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Net.FtpWebRequest.GetResponse" /> lub <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> została już wywołana dla tego wystąpienia.  
  
 \- lub -  
  
 Serwer proxy HTTP jest włączona, a następnie podjęto próbę użycia polecenia FTP innych niż <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />, lub <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.FtpWebRequest.EnableSsl" /> ustawiono <see langword="true" />, ale serwer nie obsługuje tej funkcji.  
  
 \- lub -  
  
 A <see cref="P:System.Net.FtpWebRequest.Timeout" /> został określony i upłynął limit czasu.</exception>
        <block subset="none" type="usage">
          <para>Ta metoda generuje ruchu sieciowego.</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera pustą <see cref="T:System.Net.WebHeaderCollection" /> obiektu.</summary>
        <value>Pusta <see cref="T:System.Net.WebHeaderCollection" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.Headers%2A> Właściwości jest dostępne tylko w celu zgodności z innych implementacji <xref:System.Net.WebRequest> i <xref:System.Net.WebResponse> klasy. To nie ma powodu do użycia <xref:System.Net.FtpWebRequest.Headers%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("We don't support KeepAlive = true")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która określa, czy połączenie kontroli do serwera FTP jest zamknięte po zakończeniu żądania.</summary>
        <value>
          <see langword="true" /> Jeśli połączenie z serwerem nie powinien zostać zniszczone; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Net.FtpWebRequest.KeepAlive%2A> właściwość jest ustawiona na `false`, połączenie kontroli jest zamknięty podczas wywoływania <xref:System.Net.FtpWebResponse.Close%2A> — metoda.  
  
 Zmiana <xref:System.Net.FtpWebRequest.KeepAlive%2A> po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metody powoduje, że <xref:System.InvalidOperationException> wyjątku.  
  
   
  
## Examples  
 Poniższy przykład kodu są pobierane i wyświetlane wartości właściwości określonej <xref:System.Net.FtpWebRequest> obiektu.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia polecenie do wysyłania do serwera FTP.</summary>
        <value>A <see cref="T:System.String" /> wartości, która zawiera polecenia FTP do wysyłania do serwera. Wartość domyślna to <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.Method%2A> Właściwość określa, które polecenia są wysyłane do serwera. Możesz ustawić <xref:System.Net.FtpWebRequest.Method%2A> przy użyciu parametrów zdefiniowanych w pole publiczne elementy członkowskie <xref:System.Net.WebRequestMethods.Ftp> klasy. Należy pamiętać, że parametry zdefiniowane w <xref:System.Net.WebRequestMethods.Ftp> klasy są tylko opcje obsługiwanych <xref:System.Net.FtpWebRequest.Method%2A> właściwości. Ustawienie <xref:System.Net.FtpWebRequest.Method%2A> spowoduje wszelkie inne wartości dla właściwości <xref:System.ArgumentException> wyjątku.  
  
 Podczas ustawiania <xref:System.Net.FtpWebRequest.Method%2A> do <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, należy to zrobić przed wywołaniem <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metody. Nie można wywołać tych elementów członkowskich w odpowiedniej kolejności przyczyny <xref:System.Net.ProtocolViolationException> wyjątek podczas próby pobrania strumienia żądania.  
  
 Poświadczenia podane dla <xref:System.Net.FtpWebRequest> obiekt musi mieć uprawnienia do wykonywania określonej metody. W przeciwnym razie polecenie FTP nie powiedzie się.  
  
 Aby sprawdzić, powodzenia lub niepowodzenia polecenia, sprawdź <xref:System.Net.FtpWebResponse.StatusCode%2A> i <xref:System.Net.FtpWebResponse.StatusDescription%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia tę właściwość na <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku.</exception>
        <exception cref="T:System.ArgumentException">Metoda jest nieprawidłowy.  
  
 \- lub -  
  
 Metoda nie jest obsługiwana.  
  
 \- lub -  
  
 Określono wiele metod.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawsze zwraca <see cref="T:System.NotSupportedException" />.</summary>
        <value>Zawsze zwraca <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> Właściwości jest dostępne tylko w celu zgodności z innych implementacji <xref:System.Net.WebRequest> i <xref:System.Net.WebResponse> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Wstępnego uwierzytelniania nie jest obsługiwana w przypadku usługi FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia serwera proxy użyte do komunikowania się z serwerem FTP.</summary>
        <value>
          <see cref="T:System.Net.IWebProxy" /> Wystąpienia odpowiedzialnej za komunikację z serwerem FTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.Proxy%2A> Właściwość identyfikuje <xref:System.Net.IWebProxy> wystąpienia, który komunikuje się z serwerem FTP. Serwer proxy jest ustawiony przez system za pomocą plików konfiguracji i ustawień sieci lokalnej Internet Explorer. Aby określić, że należy używać żadnego serwera proxy, należy ustawić <xref:System.Net.FtpWebRequest.Proxy%2A> do wystąpienia serwera proxy zwrócony przez <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji na temat wykrywania automatyczną serwera proxy, zobacz [automatycznego wykrywania Proxy](~/docs/framework/network-programming/automatic-proxy-detection.md).  
  
 Należy ustawić <xref:System.Net.FtpWebRequest.Proxy%2A> przed zapisywania danych do strumienia żądania lub uzyskiwania odpowiedzi. Zmiana <xref:System.Net.FtpWebRequest.Proxy%2A> po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metody powoduje, że <xref:System.InvalidOperationException> wyjątku.  
  
 <xref:System.Net.FtpWebRequest> Klasa obsługuje HTTP i ISA zapory klienta serwera proxy.  
  
 Jeśli serwer proxy określony jest serwer proxy HTTP tylko <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, i <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> polecenia są obsługiwane.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia wartość tej właściwości.  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Nie można ustawić tej właściwości <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia limit czasu podczas Odczyt lub zapis w strumieniu.</summary>
        <value>Liczba milisekund przed Odczyt lub zapis razy. Wartość domyślna to 300 000 milisekund (5 minut).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> Używana podczas zapisywania do strumienia zwrócone przez <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metody lub Odczyt ze strumienia zwrócone przez <xref:System.Net.FtpWebResponse.GetResponseStream%2A> metody.  
  
 W szczególności <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> właściwość określa limit czasu dla <xref:System.IO.Stream.Read%2A> metodę, która jest używana do odczytu Strumień zwrócony przez <xref:System.Net.FtpWebResponse.GetResponseStream%2A> metody i <xref:System.IO.Stream.Write%2A> metodę, która jest używana podczas zapisu do strumienia zwrócone przez <xref:System.Net.FtpWebRequest.GetRequestStream%2A>metody. Po przekroczeniu limitu czasu wywołania metoda zgłasza <xref:System.Net.WebException> z <xref:System.Net.WebExceptionStatus> ustawioną <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Aby określić ilość czasu oczekiwania na zakończenie żądania, użyj <xref:System.Net.FtpWebRequest.Timeout%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Żądanie zostało wysłane.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji ustawienia jest mniejsza niż lub równa zero i nie jest równa <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public string RenameTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RenameTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RenameTo" />
      <MemberSignature Language="VB.NET" Value="Public Property RenameTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RenameTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę nowego pliku zostanie zmieniona.</summary>
        <value>Nowa nazwa pliku zostanie zmieniona.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Wartość określona dla operacji set jest <see langword="null" /> lub ciąg pusty.</exception>
        <exception cref="T:System.InvalidOperationException">Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator URI żądanego przez to wystąpienie.</summary>
        <value>A <see cref="T:System.Uri" /> wystąpienia identyfikujący zasób, do których uzyskuje się dostęp przy użyciu protokołu transferu plików.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Net.FtpWebRequest.RequestUri%2A> właściwość jest identyfikator URI określony podczas <xref:System.Net.WebRequest.Create%2A> metoda została wywołana w celu uzyskania tego wystąpienia.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia wartość tej właściwości.  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Net.ServicePoint" /> obiekt używany do łączenia się z serwerem FTP.</summary>
        <value>A <see cref="T:System.Net.ServicePoint" /> obiekt, który można dostosować zachowanie połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie <xref:System.Net.ServicePoint> obiekt istnieje, utworzony dla serwera FTP. Aby ustawić maksymalną liczbę połączeń, które mogą być otwarte dla serwera FTP, należy ustawić <xref:System.Net.ServicePoint.ConnectionLimit%2A> właściwość <xref:System.Net.ServicePoint> wystąpienia zwracane przez tę właściwość.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera punktu usługi z żądania i ustawia maksymalną liczbę połączeń do jednego.  
  
 [!code-cpp[NCLFtpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#1)]
 [!code-csharp[NCLFtpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę milisekund oczekiwania na żądanie.</summary>
        <value>
          <see cref="T:System.Int32" /> Wartość, która zawiera wyrażony w milisekundach czas oczekiwania, zanim upłynie limit czasu żądania. Wartość domyślna to <see cref="F:System.Threading.Timeout.Infinite" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby określić nieskończony wartość, należy ustawić <xref:System.Net.FtpWebRequest.Timeout%2A> właściwości <xref:System.Threading.Timeout.Infinite> (-1). Jest to wartość domyślna.  
  
 <xref:System.Net.FtpWebRequest.Timeout%2A> jest to liczba żądań synchronicznych wprowadzone w milisekundach <xref:System.Net.FtpWebRequest.GetResponse%2A> metody czeka na odpowiedź, a <xref:System.Net.FtpWebRequest.GetRequestStream%2A> metoda oczekuje dla strumienia. Jeśli zasób nie odpowie w tym czasie, zgłasza żądanie <xref:System.Net.WebException> z <xref:System.Net.WebException.Status%2A> ustawioną właściwość <xref:System.Net.WebExceptionStatus.Timeout>.  
  
 Zmiana <xref:System.Net.FtpWebRequest.Timeout%2A> po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metody powoduje, że <xref:System.InvalidOperationException> wyjątku.  
  
 Zapytanie systemu nazw domen (DNS, Domain Name System) może potrwać do 15 sekund do zwrócenia lub upłynął limit czasu. Jeśli żądanie zawiera nazwę hosta, która wymaga rozpoznawania i ustawisz <xref:System.Net.FtpWebRequest.Timeout%2A> do wartości mniejszej niż 15 sekund może zająć 15 sekund lub więcej przed <xref:System.Net.WebException> jest generowany, aby wskazać, limit czasu oczekiwania na żądanie.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawienie dla tej właściwości.  
  
 [!code-cpp[NCLFtpClient#23](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#23)]
 [!code-csharp[NCLFtpClient#23](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość jest mniejsza od zera i nie jest <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
        <exception cref="T:System.InvalidOperationException">Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseBinary">
      <MemberSignature Language="C#" Value="public bool UseBinary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseBinary" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseBinary" />
      <MemberSignature Language="VB.NET" Value="Public Property UseBinary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseBinary { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która określa typ danych podczas transferu plików.</summary>
        <value>
          <see langword="true" /> do wskazywania serwerowi przekazywanych danych binarnych; <see langword="false" /> aby wskazać, że dane są tekstu. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku wysyłania binarne dane, takie jak obraz, ustawić tę właściwość na `true`. Jeśli tekst jest wysyłany, ustaw dla właściwości `false`. Określanie `true` powoduje, że <xref:System.Net.FtpWebRequest> do wysyłania `"TYPE I"` polecenia na serwerze. Określanie `false` powoduje, że <xref:System.Net.FtpWebRequest> do wysyłania `"Type A"` polecenia na serwerze. Te polecenia, można zignorować serwerami FTP.  
  
 Zmiana <xref:System.Net.FtpWebRequest.UseBinary%2A> po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metody powoduje, że <xref:System.InvalidOperationException> wyjątku.  
  
   
  
## Examples  
 Poniższy przykład kodu są pobierane i wyświetlane wartości właściwości określonej <xref:System.Net.FtpWebRequest> obiektu.  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawsze zwraca <see cref="T:System.NotSupportedException" />.</summary>
        <value>Zawsze zwraca <see cref="T:System.NotSupportedException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> Właściwości jest dostępne tylko w celu zgodności z innych implementacji <xref:System.Net.WebRequest> i <xref:System.Net.WebResponse> klasy. To nie ma powodu do użycia <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Poświadczenia domyślne nie są obsługiwane w przypadku usługi FTP.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePassive">
      <MemberSignature Language="C#" Value="public bool UsePassive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePassive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UsePassive" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePassive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePassive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zachowanie procesu transferu danych aplikacji klienckiej.</summary>
        <value>
          <see langword="false" /> Jeśli transferu danych aplikacji klienckiej procesu nasłuchuje połączeń na porcie danych; w przeciwnym razie <see langword="true" /> Jeśli klient powinien nawiązania połączenia na porcie danych. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie <xref:System.Net.FtpWebRequest.UsePassive%2A> właściwości `true` wysyła "`PASV"` polecenia na serwerze. To polecenie żąda od serwera do nasłuchiwania na porcie danych i do oczekiwania na połączenie, a nie zainicjować jeden po otrzymaniu polecenia transferu.  
  
 Opis zachowania, które są określone za pomocą <xref:System.Net.FtpWebRequest.UsePassive%2A>, zobacz [RFC 959: "File Transfer Protocol", z sekcji 3.2: "Ustanawianie połączeń danych" i sekcja 4.1.2: "Transfer parametru polecenia"](https://www.ietf.org/rfc/rfc959.txt).  
  
 Zmiana <xref:System.Net.FtpWebRequest.UsePassive%2A> po wywołaniu <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, lub <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> metody powoduje, że <xref:System.InvalidOperationException> wyjątku.  
  
 Jeśli <xref:System.Net.FtpWebRequest.UsePassive%2A> ma ustawioną wartość `true`, serwer FTP nie może wysłać rozmiar pliku i postęp pobierania można zawsze miały wartość zero. Jeśli <xref:System.Net.FtpWebRequest.UsePassive%2A> ma ustawioną wartość `false`, Zapora może Zgłoś alert i blokowanie pobierania pliku.  
  
   
  
## Examples  
 Poniższy przykład kodu są pobierane i wyświetlane wartości właściwości określonej <xref:System.Net.FtpWebRequest> obiektu.  
  
 [!code-cpp[NCLFtpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#6)]
 [!code-csharp[NCLFtpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nowa wartość została określona dla tej właściwości dla żądania, który jest już w toku.</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
  </Members>
</Type>