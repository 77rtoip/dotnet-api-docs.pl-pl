<Type Name="WebRequest" FullName="System.Net.WebRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e7069a2bdf801853906e311cccac2a4a1581430b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36472162" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebRequest : MarshalByRefObject, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit WebRequest extends System.MarshalByRefObject implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebRequest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebRequest&#xA;Inherits MarshalByRefObject&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequest abstract : MarshalByRefObject, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type WebRequest = class&#xA;    inherit MarshalByRefObject&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Wysyła żądanie do zasobu identyfikator URI (Uniform). Jest to <see langword="abstract" /> klasy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest> jest `abstract` klasę podstawową dla. Model żądania/odpowiedzi przez sieć do uzyskiwania dostępu do danych z Internetu. Aplikacja, która korzysta z modelu żądanie/odpowiedź można zażądać danych z Internetu w sposób niezależny od protokołu, w którym aplikacja działa z wystąpieniami <xref:System.Net.WebRequest> klasy podczas klasy podrzędne specyficzne dla protokołu przeprowadzać szczegóły żądanie.  
  
 Żądania wysyłane z aplikacji do określonego identyfikatora URI, takich jak strony sieci Web na serwerze. Identyfikator URI określa odpowiednią klasą podrzędne można utworzyć na podstawie listy <xref:System.Net.WebRequest> zarejestrowane elementy podrzędne dla aplikacji. <xref:System.Net.WebRequest> elementy podrzędne zwykle są rejestrowane do obsługi określonego protokołu, na przykład HTTP lub FTP, ale można zarejestrować do obsługi żądania do określonego serwera lub na serwerze.  
  
 <xref:System.Net.WebRequest> Klasy zgłasza <xref:System.Net.WebException> po wystąpić błędy podczas uzyskiwania dostępu do zasobu internetowego. <xref:System.Net.WebException.Status%2A> Właściwości jest jednym z <xref:System.Net.WebExceptionStatus> wartości, które wskazuje przyczynę błędu. Gdy <xref:System.Net.WebException.Status%2A> jest <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, <xref:System.Net.WebException.Response%2A> zawiera właściwość <xref:System.Net.WebResponse> otrzymanego z zasobem internetowym.  
  
 Ponieważ <xref:System.Net.WebRequest> klasa jest `abstract` klasy zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Użyj <xref:System.Net.WebRequest.Create%2A> metodę, aby zainicjować nowe <xref:System.Net.WebRequest> wystąpień. Nie używaj <xref:System.Net.WebRequest> konstruktora.  
  
> [!NOTE]
>  Jeśli aplikacja, która tworzy obiekt WebRequest jest uruchomiony przy użyciu poświadczeń zwykłego użytkownika, aplikacja nie będzie certyfikaty zainstalowane w magazynie komputera lokalnego, chyba że uprawnienia jawnie przypisany do użytkownika w tym celu dostępu do.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Net.WebRequest> wystąpienia i zwracać odpowiedzi.  
  
 [!code-cpp[NclWebRequestSimple#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#1)]
 [!code-csharp[NclWebRequestSimple#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#1)]
 [!code-vb[NclWebRequestSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do żądanego identyfikatora URI lub dowolny identyfikator URI, który żądanie jest przekierowywane do. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" />.</permission>
    <block subset="none" type="overrides">
      <para>Przy dziedziczeniu z <see cref="T:System.Net.WebRequest" />, konieczne jest przesłonięcie następujących członków: <see cref="P:System.Net.WebRequest.Method" />, <see cref="P:System.Net.WebRequest.RequestUri" />, <see cref="P:System.Net.WebRequest.Headers" />, <see cref="P:System.Net.WebRequest.ContentLength" />, <see cref="P:System.Net.WebRequest.ContentType" />, <see cref="P:System.Net.WebRequest.Credentials" />, <see cref="P:System.Net.WebRequest.PreAuthenticate" />, <see cref="M:System.Net.WebRequest.GetRequestStream" />, <see cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" /> , <see cref="M:System.Net.WebRequest.GetResponse" />, <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />, i <see cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />. Ponadto musi zapewniać implementację elementu <see cref="T:System.Net.IWebRequestCreate" /> interfejs, który definiuje <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> metoda używana po wywołaniu <see cref="M:System.Net.WebRequest.Create(System.Uri)" />. Należy zarejestrować klasy, która implementuje <see cref="T:System.Net.IWebRequestCreate" /> interfejs, za pomocą <see cref="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" /> metody lub pliku konfiguracji.</para>
    </block>
    <altmember cref="T:System.Net.HttpWebRequest" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.WebRequest" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.WebRequest" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Net.WebRequest.Create%2A> metodę, aby zainicjować nowe <xref:System.Net.WebRequest> wystąpień. Nie należy używać konstruktora.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Net.WebRequest> wystąpienia przez wywołanie metody <xref:System.Net.WebRequest.Create%2A> metoda <xref:System.Net.WebRequest> klasy.  
  
 [!code-cpp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebRequest.WebRequest Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic WebRequest.WebRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebRequest.WebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebRequest(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.WebRequest : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.WebRequest" Usage="new System.Net.WebRequest (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> zawierający informacje wymagane do serializacji nowej <see cref="T:System.Net.WebRequest" /> wystąpienia.</param>
        <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> wskazujące źródło serializowanym strumieniu skojarzone z nowym <see cref="T:System.Net.WebRequest" /> wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.WebRequest" /> klasy z wystąpienia określonego <see cref="T:System.Runtime.Serialization.SerializationInfo" /> i <see cref="T:System.Runtime.Serialization.StreamingContext" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zaimplementowaniu przez klasy podrzędne, implementuje ten konstruktor <xref:System.Runtime.Serialization.ISerializable> interfejs na potrzeby <xref:System.Net.WebRequest> elementów podrzędnych.  
  
 Należy zauważyć, że aplikacja musi być uruchomiony w trybie pełnego zaufania, korzystając z serializacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby dostępu konstruktora, gdy Konstruktor nie jest przesłonięcia w klasie elementów podrzędnych.</exception>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="webRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje żądanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Abort%2A> Metody anuluje żądań asynchronicznych do pracy z zasobami sieci Internet <xref:System.Net.WebRequest.BeginGetResponse%2A> metody.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby dostępu do metody, gdy metoda nie jest przesłonięcia w klasie elementów podrzędnych.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.AuthenticationLevel AuthenticationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.AuthenticationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationLevel As AuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::AuthenticationLevel AuthenticationLevel { System::Net::Security::AuthenticationLevel get(); void set(System::Net::Security::AuthenticationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationLevel : System.Net.Security.AuthenticationLevel with get, set" Usage="System.Net.WebRequest.AuthenticationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.AuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą poziom uwierzytelniania i personifikacji używany dla tego żądania.</summary>
        <value>Bitowe połączenie <see cref="T:System.Net.Security.AuthenticationLevel" /> wartości. Wartość domyślna to <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.  W przypadku uwierzytelniania wzajemnego klient i serwer przedstawia poświadczenia, aby ustalić jego tożsamość. <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> i <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> wartości są odpowiednie dla uwierzytelniania Kerberos. Uwierzytelnianie Kerberos może być obsługiwany bezpośrednio lub można użyć, jeśli protokół negocjacji zabezpieczeń służy do wybierz protokół zabezpieczeń rzeczywistych. Aby uzyskać więcej informacji o protokołach uwierzytelniania, zobacz [uwierzytelnianie Internet] (http://msdn.microsoft.com/library/d342e87c-f672-4660-a513-41a2f2b80c4a).  Aby ustalić, czy wystąpiły uwierzytelnianie wzajemne, wyszukaj <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> właściwości.  Jeśli określisz <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> flagi wartość i wzajemne uwierzytelnianie nie jest wykonywane, aplikacja będzie otrzymywać <see cref="T:System.IO.IOException" /> z <see cref="T:System.Net.ProtocolViolationException" /> wyjątek wewnętrzny, wskazującą, że wzajemne uwierzytelnianie nie powiodło się.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu określa wartość tej właściwości.  
  
 [!code-cpp[NclCredPolicy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#1)]
 [!code-csharp[NclCredPolicy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegowanie.</param>
        <param name="state">Obiekt zawierający informacje o stanie dla tego żądania asynchronicznego.</param>
        <summary>W przypadku przesłonięcia w klasie podrzędne, zapewnia asynchroniczną wersję <see cref="M:System.Net.WebRequest.GetRequestStream" /> metody.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> , Która odwołuje się żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.BeginGetRequestStream%2A> Metoda uruchamia asynchroniczne żądanie dla strumienia używane do wysyłania danych do zasobu internetowego. Metoda wywołania zwrotnego, który implementuje <xref:System.AsyncCallback> delegować używa <xref:System.Net.WebRequest.EndGetRequestStream%2A> metodę, aby zwrócić strumień żądania.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.WebRequest.BeginGetRequestStream%2A> asynchronicznie uzyskanie strumienia żądania.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby dostępu do metody, gdy metoda nie jest przesłonięcia w klasie elementów podrzędnych.</exception>
        <altmember cref="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="webRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegowanie.</param>
        <param name="state">Obiekt zawierający informacje o stanie dla tego żądania asynchronicznego.</param>
        <summary>W przypadku przesłonięcia w klasie podrzędne, rozpoczyna się żądania asynchronicznego dla zasobu internetowego.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> , Która odwołuje się żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.BeginGetResponse%2A> Metoda uruchamia żądania asynchronicznego na odpowiedź. Metoda wywołania zwrotnego, który implementuje <xref:System.AsyncCallback> delegować używa <xref:System.Net.WebRequest.EndGetResponse%2A> metodę, aby zwrócić <xref:System.Net.WebResponse> z zasobem internetowym.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Jeśli generowany jest to klasa WebException, użyj <xref:System.Net.WebException.Response%2A> i <xref:System.Net.WebException.Status%2A> właściwości wyjątku, aby określić odpowiedzi z serwera.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.WebRequest.BeginGetResponse%2A> asynchronicznie żądanie zasobu docelowego. Gdy zasób został uzyskany, metody wywołania zwrotnego określonego zostaną wykonane.  
  
 [!code-cpp[WebRequest_BeginGetResponse#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#2)]
 [!code-csharp[WebRequest_BeginGetResponse#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#2)]
 [!code-vb[WebRequest_BeginGetResponse#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby dostępu do metody, gdy metoda nie jest przesłonięcia w klasie elementów podrzędnych.</exception>
        <altmember cref="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
        <altmember cref="M:System.Net.WebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public virtual System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zasady pamięci podręcznej dla tego żądania.</summary>
        <value>A <see cref="T:System.Net.Cache.RequestCachePolicy" /> obiektu, który definiuje zasady pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżące zasady pamięci podręcznej i obecności żądanego zasobu w pamięci podręcznej określają, czy można pobrać odpowiedzi z pamięci podręcznej. Przy użyciu buforowane odpowiedzi, zazwyczaj zwiększa wydajność aplikacji, ale istnieje ryzyko, że odpowiedź w pamięci podręcznej nie odpowiada odpowiedzi na serwerze.  
  
 Domyślne zasady pamięci podręcznej można określić w pliku konfiguracji w pliku Machine.config lub przez ustawienie <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> właściwości dla żądania, które używają schemat identyfikatora URI protokołu HTTP (Hypertext Transfer) lub interfejsu Secure Hypertext Transfer Protocol (HTTPS).  
  
 Kopię zasobu jest dodawane tylko do pamięci podręcznej, jeśli w strumieniu odpowiedzi dla zasobu jest pobierany i odczytu do końca strumienia. Aby inne żądanie dla tego samego zasobu można używać kopii w pamięci podręcznej, w zależności od poziomu zasad pamięci podręcznej dla tego żądania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie zasady pamięci podręcznej dla żądania sieci Web.  
  
 [!code-cpp[NCLSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NCLSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.DefaultCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public virtual string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.WebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, pobiera lub ustawia nazwę grupy połączenia dla żądania.</summary>
        <value>Nazwa grupy połączenia dla żądania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.ConnectionGroupName%2A> Właściwość kojarzy określone żądania w aplikacji do co najmniej jedna pula połączeń.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby pobierania lub ustawiania właściwości, gdy właściwość nie zostanie zastąpiona w klasie elementów podrzędnych.</exception>
        <block subset="none" type="overrides">
          <para>
            <see cref="P:System.Net.WebRequest.ConnectionGroupName" /> Właściwość zazwyczaj kojarzy grupę żądań, które mają zestaw poświadczeń z połączeniem z zasobem internetowym, aby uniknąć potencjalnych błędów zabezpieczeń.</para>
        </block>
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public virtual long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.WebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, pobiera lub ustawia długość zawartości danych żądania wysyłane.</summary>
        <value>Liczba bajtów wysyłanych danych żądania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.ContentLength%2A> Właściwość zawiera liczbę bajtów dane wysłane do zasobu internetowego przez <xref:System.Net.WebRequest> wystąpienia.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Net.WebRequest.ContentLength%2A> właściwości ilości bajtów w buforze wychodzących bajtów.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby pobierania lub ustawiania właściwości, gdy właściwość nie zostanie zastąpiona w klasie elementów podrzędnych.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.WebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, pobiera lub ustawia typ zawartości żądania wysyłane dane.</summary>
        <value>Typ zawartości żądania danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.ContentType%2A> Właściwość zawiera typ nośnika żądania. Jest to zazwyczaj MIME kodowania zawartości.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Net.WebRequest.ContentType%2A> odpowiedni typ nośnika dla właściwości.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby pobierania lub ustawiania właściwości, gdy właściwość nie zostanie zastąpiona w klasie elementów podrzędnych.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.ContentType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowy <see cref="T:System.Net.WebRequest" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUriString As String) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUriString">Identyfikator URI, który identyfikuje z zasobem internetowym.</param>
        <summary>Inicjuje nowy <see cref="T:System.Net.WebRequest" /> wystąpienia określonego schematu identyfikatora URI.</summary>
        <returns>A <see cref="T:System.Net.WebRequest" /> podrzędne dla określonych schemat identyfikatora URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Create%2A> Metoda zwraca element podrzędny <xref:System.Net.WebRequest> klasa określona w czasie wykonywania, jak najlepiej odpowiada zarejestrowanych `requestUri`.  
  
 Na przykład, jeśli zaczyna się od identyfikatora URI `http://` lub `https://` jest przekazywany w `requestUri`, <xref:System.Net.HttpWebRequest> zwróconego przez <xref:System.Net.WebRequest.Create%2A>. Jeśli przez identyfikator URI rozpoczynający się od `ftp://` jest przekazywana, <xref:System.Net.WebRequest.Create%2A> metoda zwróci <xref:System.Net.FtpWebRequest> wystąpienia. Jeśli przez identyfikator URI rozpoczynający się od `file://` jest przekazywana, <xref:System.Net.WebRequest.Create%2A> metoda zwróci <xref:System.Net.FileWebRequest> wystąpienia.  
  
 Następujące typy wstępnie zarejestrowanych rezerwy już zarejestrowany:  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 .NET obsługuje `http://`, `https://`, `ftp://`, i `file://` schematy identyfikatorów URI. Niestandardowe <xref:System.Net.WebRequest> elementów podrzędnych do obsługi innych żądań są zarejestrowane w usłudze <xref:System.Net.WebRequest.RegisterPrefix%2A> metody.  
  
 <xref:System.Net.WebRequest.Create%2A> Używa metody `requestUriString` parametr w celu utworzenia <xref:System.Uri> wystąpienie, które przechodzą do nowego <xref:System.Net.WebRequest>.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [ &#91; \<topic://conUsingNetworkTracing >&#93;](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.WebRequest.Create%2A> można utworzyć wystąpienia <xref:System.Net.HttpWebRequest> wystąpienia. Ciąg reprezentujący docelowy adres URL jest używany jako parametr konstruktora.  
  
 [!code-cpp[WebResponse_ResponseUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebResponse_ResponseUri/CPP/webresponse_responseuri.cpp#1)]
 [!code-csharp[WebResponse_ResponseUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebResponse_ResponseUri/CS/webresponse_responseuri.cs#1)]
 [!code-vb[WebResponse_ResponseUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebResponse_ResponseUri/VB/webresponse_responseuri.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Schemat żądania określone w <paramref name="requestUriString" /> nie został zarejestrowany.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUriString" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma uprawnień do łączenia się żądanego identyfikatora URI lub identyfikator URI, który żądanie jest przekierowywane do.</exception>
        <exception cref="T:System.UriFormatException">
          <block subset="none" type="note">
            <para> [.NET dla aplikacji ze Sklepu Windows] (http://go.microsoft.com/fwlink/?LinkID=247912) lub [przenośnej biblioteki klas] (http://msdn.microsoft.com/library/c31e1663-c164-4e65-b66d-d3aa8750a154), catch wyjątku klasy podstawowej <see cref="T:System.FormatException" />, zamiast tego.  </para>
          </block>  Identyfikator URI określony w <paramref name="requestUriString" /> nie jest prawidłowym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest Create (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest Create(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ Create(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.Create requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">A <see cref="T:System.Uri" /> zawierający identyfikator URI żądanego zasobu.</param>
        <summary>Inicjuje nowy <see cref="T:System.Net.WebRequest" /> wystąpienia określonego schematu identyfikatora URI.</summary>
        <returns>A <see cref="T:System.Net.WebRequest" /> podrzędne dla określonego schematu identyfikatora URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Create%2A> Metoda zwraca element podrzędny <xref:System.Net.WebRequest> klasa określona w czasie wykonywania, jak najlepiej odpowiada zarejestrowanych `requestUri`.  
  
 Na przykład w przypadku utworzenia <xref:System.Net.WebRequest> podrzędnego Handler1, do obsługi żądań do `http://www.contoso.com/text/` i o innej nazwie Handler2 do obsługi żądań do `http://www.contoso.com/code/`, można użyć <xref:System.Net.WebRequest.Create%2A> metodę, aby zwrócić obiekt podrzędny WebRequest skojarzony z jedną Określony identyfikator URI.  
  
 Aby przywrócić element podrzędny <xref:System.Net.WebRequest> klasy oparte na tylko część schemat identyfikatora URI, użyj <xref:System.Net.WebRequest.CreateDefault%2A> metody.  
  
 Na przykład, jeśli zaczyna się od identyfikatora URI `http://` lub `https://` jest przekazywany w `requestUri`, <xref:System.Net.HttpWebRequest> zwróconego przez <xref:System.Net.WebRequest.Create%2A>. Jeśli przez identyfikator URI rozpoczynający się od `ftp://` jest przekazywana, <xref:System.Net.WebRequest.Create%2A> metoda zwróci <xref:System.Net.FileWebRequest> wystąpienia. Jeśli przez identyfikator URI rozpoczynający się od `file://` jest przekazywana, <xref:System.Net.WebRequest.Create%2A> metoda zwróci <xref:System.Net.FileWebRequest> wystąpienia.  
  
 Następujące typy wstępnie zarejestrowanych rezerwy już zarejestrowany:  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 .NET obsługuje `http://`, `https://`, `ftp://`, i `file://` schematy identyfikatorów URI. Niestandardowe <xref:System.Net.WebRequest> elementów podrzędnych do obsługi innych żądań są zarejestrowane w usłudze <xref:System.Net.WebRequest.RegisterPrefix%2A> metody.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [ &#91; \<topic://conUsingNetworkTracing >&#93;](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.WebRequest.Create%2A> można utworzyć wystąpienia <xref:System.Net.HttpWebRequest> wystąpienia. Identyfikator Uri reprezentujący docelowy adres URL jest używany jako parametr konstruktora.  
  
 [!code-cpp[WebRequest_Create#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Create/CPP/webrequest_create.cpp#1)]
 [!code-csharp[WebRequest_Create#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Create/CS/webrequest_create.cs#1)]
 [!code-vb[WebRequest_Create#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Create/VB/webrequest_create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Schemat żądania określone w <paramref name="requestUri" /> nie jest zarejestrowany.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUri" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma uprawnień do łączenia się żądanego identyfikatora URI lub identyfikator URI, który żądanie jest przekierowywane do.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDefault">
      <MemberSignature Language="C#" Value="public static System.Net.WebRequest CreateDefault (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebRequest CreateDefault(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateDefault(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefault (requestUri As Uri) As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::WebRequest ^ CreateDefault(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateDefault : Uri -&gt; System.Net.WebRequest" Usage="System.Net.WebRequest.CreateDefault requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">A <see cref="T:System.Uri" /> zawierający identyfikator URI żądanego zasobu.</param>
        <summary>Inicjuje nowy <see cref="T:System.Net.WebRequest" /> wystąpienia określonego schematu identyfikatora URI.</summary>
        <returns>A <see cref="T:System.Net.WebRequest" /> podrzędne dla określonego schematu identyfikatora URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.CreateDefault%2A> Metoda zwraca <xref:System.Net.WebRequest> wystąpień elementów podrzędnych w oparciu tylko część schemat identyfikatora URI.  
  
 Na przykład, jeśli zaczyna się od identyfikatora URI `http://` jest przekazywany w `requestUri`, <xref:System.Net.HttpWebRequest> zwróconego przez <xref:System.Net.WebRequest.CreateDefault%2A>. Jeśli przez identyfikator URI rozpoczynający się od `file://` jest przekazywana, <xref:System.Net.WebRequest.CreateDefault%2A> metoda zwróci <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w .NET](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Schemat żądania określone w <paramref name="requestUri" /> nie jest zarejestrowany.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUri" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma uprawnień do łączenia się żądanego identyfikatora URI lub identyfikator URI, który żądanie jest przekierowywane do.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateHttp">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowy <see cref="T:System.Net.HttpWebRequest" /> wystąpienia dla określonego identyfikatora URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (string requestUriString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(string requestUriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUriString As String) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(System::String ^ requestUriString);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : string -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUriString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUriString">Ciąg identyfikatora URI, który identyfikuje z zasobem internetowym.</param>
        <summary>Inicjuje nowy <see cref="T:System.Net.HttpWebRequest" /> wystąpienia dla określonego ciągu identyfikatora URI.</summary>
        <returns>
          <see cref="T:System.Net.HttpWebRequest" /> Wystąpienia dla określonego ciągu identyfikatora URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.CreateHttp%28System.String%29> Metoda zwraca wystąpienie klasy <xref:System.Net.HttpWebRequest> klasy dla `requestUriString`.  
  
 Jeśli identyfikator URI, który rozpoczyna się od `http://` lub `http://` jest przekazywany w `requestUriString` parametru <xref:System.Net.HttpWebRequest> zwróconego przez <xref:System.Net.WebRequest.CreateHttp%28System.String%29>. Inny zgłosi inny schemat <xref:System.NotSupportedException>.  
  
 <xref:System.Net.WebRequest.CreateHttp%28System.String%29> Używa metody `requestUriString` parametr w celu utworzenia <xref:System.Uri> wystąpienie, które przechodzą do nowego <xref:System.Net.HttpWebRequest>. Jeśli metoda zakończy się pomyślnie, <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> właściwość zwrócona <xref:System.Net.HttpWebRequest> wystąpienie ma ustawioną wartość `false`.  
  
 .NET obsługuje `http://` i `https://` schematy identyfikatorów URI. Niestandardowe <xref:System.Net.WebRequest> elementów podrzędnych do obsługi innych żądań są zarejestrowane w usłudze <xref:System.Net.WebRequest.RegisterPrefix%2A> metody. <xref:System.Net.WebRequest.Create%28System.String%29> Metody można użyć do utworzenia elementem potomnym <xref:System.Net.WebRequest> klasy dla innych systemów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Schemat żądania określone w <paramref name="requestUriString" /> schemat http lub https.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUriString" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma uprawnień do łączenia się żądanego identyfikatora URI lub identyfikator URI, który żądanie jest przekierowywane do.</exception>
        <exception cref="T:System.UriFormatException">Identyfikator URI określony w <paramref name="requestUriString" /> nie jest prawidłowym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHttp">
      <MemberSignature Language="C#" Value="public static System.Net.HttpWebRequest CreateHttp (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.HttpWebRequest CreateHttp(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.CreateHttp(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHttp (requestUri As Uri) As HttpWebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::HttpWebRequest ^ CreateHttp(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="static member CreateHttp : Uri -&gt; System.Net.HttpWebRequest" Usage="System.Net.WebRequest.CreateHttp requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpWebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">Identyfikator URI, który identyfikuje z zasobem internetowym.</param>
        <summary>Inicjuje nowy <see cref="T:System.Net.HttpWebRequest" /> wystąpienia dla określonego identyfikatora URI.</summary>
        <returns>
          <see cref="T:System.Net.HttpWebRequest" /> Wystąpienia dla określonego ciągu identyfikatora URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> Metoda zwraca wystąpienie klasy <xref:System.Net.HttpWebRequest> klasy dla `requestUri`.  
  
 Jeśli identyfikator URI, który rozpoczyna się od `http://` lub `http://` jest przekazywany w `requestUri` parametru <xref:System.Net.HttpWebRequest> zwróconego przez <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29>. Inny zgłosi inny schemat <xref:System.NotSupportedException>.  
  
 <xref:System.Net.WebRequest.CreateHttp%28System.Uri%29> Używa metody `requestUri` parametr, aby utworzyć nową <xref:System.Net.HttpWebRequest> wystąpienia. Jeśli metoda zakończy się pomyślnie, <xref:System.Net.HttpWebRequest.AllowReadStreamBuffering%2A> właściwość zwrócona <xref:System.Net.HttpWebRequest> wystąpienie ma ustawioną wartość `false`.  
  
 .NET obsługuje `http://` i `https://` schematy identyfikatorów URI. Niestandardowe <xref:System.Net.WebRequest> elementów podrzędnych do obsługi innych żądań są zarejestrowane w usłudze <xref:System.Net.WebRequest.RegisterPrefix%2A> metody. <xref:System.Net.WebRequest.Create%28System.Uri%29> Metody można użyć do utworzenia elementem potomnym <xref:System.Net.WebRequest> klasy dla innych systemów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Schemat żądania określone w <paramref name="requestUri" /> schemat http lub https.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestUri" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma uprawnień do łączenia się żądanego identyfikatora URI lub identyfikator URI, który żądanie jest przekierowywane do.</exception>
        <exception cref="T:System.UriFormatException">Identyfikator URI określony w <paramref name="requestUri" /> nie jest prawidłowym identyfikatorem URI.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatorInstance">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebRequestCreate CreatorInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebRequestCreate CreatorInstance" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.CreatorInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CreatorInstance As IWebRequestCreate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebRequestCreate ^ CreatorInstance { System::Net::IWebRequestCreate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreatorInstance : System.Net.IWebRequestCreate" Usage="System.Net.WebRequest.CreatorInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebRequestCreate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, pobiera obiekt fabryki pochodną <see cref="T:System.Net.IWebRequestCreate" /> klasę używaną do tworzenia <see cref="T:System.Net.WebRequest" /> skonkretyzowany w żądaniu skierowanym do określonego identyfikatora URI.</summary>
        <value>Pochodne <see cref="T:System.Net.WebRequest" /> typ zwracany przez <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" /> metody.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Ta właściwość umożliwia aplikacji określenie, które <xref:System.Net.IWebRequestCreate> obiekt fabryki pochodnej został użyty do utworzenia żądania. Ten obiekt może być [System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) lub [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)), ale może to być również niestandardowego wystąpienia pochodzące z <xref:System.Net.IWebRequestCreate>. Umożliwia to aplikacji określić, czy przeglądarka hostingu [!INCLUDE[silverlight](~/includes/silverlight-md.md)], [!INCLUDE[silverlight](~/includes/silverlight-md.md)] klienta lub niektórych obiektów niestandardowych obsługuje żądania HTTP i odpowiedzi dla <xref:System.Net.WebRequest> wystąpienia. <xref:System.Net.WebRequest.RegisterPrefix%2A> Metody umożliwia aplikacji do konfigurowania, której pochodzi <xref:System.Net.WebRequest> będzie można utworzyć wystąpienia typu podczas przesyłania do określonego identyfikatora URI. <xref:System.Net.WebRequest> twórcy zwykle są rejestrowane do obsługi określonego protokołu takiego HTTP lub HTTPS, ale można zarejestrować do obsługi żądania do określonego serwera lub na serwerze. Jest to przydatne, gdy więcej niż jeden pochodnych <xref:System.Net.WebRequest> typu może przetworzyć żądania do tego samego protokołu. [!INCLUDE[sil3_first](~/includes/sil3-first-md.md)] i wiele programów obsługi HTTP obsługuje środowisko uruchomieniowe nowsze posiadającymi różne możliwości. Na przykład usługi sieci web, który korzysta z transferu REST (Representational State) mogą wymagać [System.Net.Browser.WebRequestCreator.ClientHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.clienthttp(v=vs.95)) programu obsługi, gdy będzie mógł Użyj domyślnej usługi sieci web SOAP [ System.Net.Browser.WebRequestCreator.BrowserHttp](https://msdn.microsoft.com/library/system.net.browser.webrequestcreator.browserhttp(v=vs.95)) programu obsługi.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.WebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, pobiera lub ustawia poświadczenia sieciowe używany do uwierzytelniania żądań z zasobem internetowym.</summary>
        <value>
          <see cref="T:System.Net.ICredentials" /> Zawierający poświadczenia uwierzytelnienia skojarzone z żądaniem. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Credentials%2A> Właściwość zawiera poświadczenia uwierzytelniania wymagane do uzyskania dostępu do zasobu internetowego.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Net.WebRequest.Credentials%2A> właściwości przy użyciu domyślnych poświadczeń bieżącego użytkownika. Gdy żądanie poświadczeń przechowywanych w tej właściwości są używane do weryfikacji klienta. To jest taka sama jak ustawienie <xref:System.Net.WebRequest.UseDefaultCredentials%2A> właściwości `true`.  
  
 [!code-cpp[NclWebRequestSimple#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLWebRequestSimple/CPP/webrequestget.cpp#2)]
 [!code-csharp[NclWebRequestSimple#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLWebRequestSimple/CS/webrequestget.cs#2)]
 [!code-vb[NclWebRequestSimple#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLWebRequestSimple/VB/webrequestget.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby pobierania lub ustawiania właściwości, gdy właściwość nie zostanie zastąpiona w klasie elementów podrzędnych.</exception>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.HttpWebRequest.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.WebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia domyślne zasady pamięci podręcznej dla tego żądania.</summary>
        <value>A <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> określa zasady pamięci podręcznej dla tego żądania, gdy nie inne zasady są stosowane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te zasady są używane dla tego żądania, jeśli następujące warunki:  
  
-   Brak nie <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> właściwość określona dla tego żądania.  
  
-   Konfiguracja komputera i aplikacji, plików nie określaj zasadę pamięci podręcznej, która ma zastosowanie do jednolity identyfikator zasobów (URI) używany do tworzenia tego żądania.  
  
 Zasady pamięci podręcznej określa, czy żądany zasób może zostać pobrany z pamięci podręcznej zamiast wysyłać żądania do zasobu hosta.  
  
 Kopię zasobu jest dodawane tylko do pamięci podręcznej, jeśli w strumieniu odpowiedzi dla zasobu jest pobierany i odczytu do końca strumienia. Aby inne żądanie dla tego samego zasobu można używać kopii w pamięci podręcznej, w zależności od poziomu zasad pamięci podręcznej dla tego żądania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje ustawienie domyślne zasady pamięci podręcznej dla żądań sieci Web.  
  
 [!code-cpp[NCLSimpleCache#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#15)]
 [!code-csharp[NCLSimpleCache#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać nieograniczony dostęp do zasobów sieciowych. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
        <altmember cref="P:System.Net.WebRequest.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="DefaultWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy DefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.IWebProxy DefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.DefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultWebProxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::IWebProxy ^ DefaultWebProxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultWebProxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.DefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia globalnych serwera proxy HTTP.</summary>
        <value>
          <see cref="T:System.Net.IWebProxy" /> Używane przez każdego wywołania do wystąpień <see cref="T:System.Net.WebRequest" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.DefaultWebProxy%2A> Właściwość pobiera lub ustawia globalnych serwera proxy. <xref:System.Net.WebRequest.DefaultWebProxy%2A> Właściwość określa domyślny serwer proxy który wszystkich <xref:System.Net.WebRequest> wystąpień używać, gdy serwery proxy obsługuje żądanie i bez serwera proxy jest ustawiony jawnie za pomocą <xref:System.Net.HttpWebRequest.Proxy%2A> właściwości. Serwery proxy są obecnie obsługiwane przez <xref:System.Net.FtpWebRequest> i <xref:System.Net.HttpWebRequest>.  
  
 <xref:System.Net.WebRequest.DefaultWebProxy%2A> Właściwość odczytuje ustawienia serwera proxy z pliku app.config. Jeśli plik konfiguracji, nie istnieje, używane są ustawienia serwera proxy programu Internet Explorer (IE) bieżący użytkownik.  
  
 Jeśli <xref:System.Net.WebRequest.DefaultWebProxy%2A> właściwość ma wartość null, wszystkie kolejne wystąpienia <xref:System.Net.WebRequest> klasy utworzone przez <xref:System.Net.WebRequest.Create%2A> lub <xref:System.Net.WebRequest.CreateDefault%2A> metody bez serwera proxy.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">można pobrać lub ustawić globalnych serwera proxy HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream&#xA;override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="webRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> , Która odwołuje się oczekujące żądania dla strumienia.</param>
        <summary>Po przesłonięciu w klasie podrzędne zwraca <see cref="T:System.IO.Stream" /> do zapisania danych z zasobem internetowym.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> zapisu danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.EndGetRequestStream%2A> Metoda kończy żądanie asynchroniczne strumienia, które zostało uruchomione przez <xref:System.Net.WebRequest.BeginGetRequestStream%2A> metody.  
  
> [!NOTE]
>  Aby uniknąć problemy dotyczące synchronizacji z wyrzucanie elementów bezużytecznych, pamiętaj zamknąć strumienia odpowiedzi przez wywołanie metody <xref:System.IO.Stream.Close%2A> metoda Strumień zwrócony przez <xref:System.Net.WebResponse.GetResponseStream%2A> po wywołaniu <xref:System.Net.WebRequest.EndGetResponse%2A>.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 W poniższym przykładzie uzyskuje i używa strumienia żądania przez wywołanie metody <xref:System.Net.WebRequest.EndGetRequestStream%2A>. <xref:System.Net.WebRequest.EndGetRequestStream%2A> Metoda wykonuje asynchroniczne wywołanie <xref:System.Net.WebRequest.BeginGetRequestStream%2A>.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby dostępu do metody, gdy metoda nie jest przesłonięcia w klasie elementów podrzędnych.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="webRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> , Która odwołuje się żądania oczekującego na odpowiedź.</param>
        <summary>Po przesłonięciu w klasie podrzędne zwraca <see cref="T:System.Net.WebResponse" />.</summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> zawiera odpowiedzi na żądanie z Internetu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.EndGetResponse%2A> Ukończeniu metody asynchroniczne żądanie dla zasobu internetowego, który został uruchomiony z <xref:System.Net.WebRequest.BeginGetResponse%2A> metody.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 Następujące przykładowe wywołania <xref:System.Net.WebRequest.EndGetResponse%2A> można pobrać zasobu docelowego.  
  
 [!code-cpp[WebRequest_BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CPP/webrequest_begingetresponse.cpp#1)]
 [!code-csharp[WebRequest_BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetResponse/CS/webrequest_begingetresponse.cs#1)]
 [!code-vb[WebRequest_BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetResponse/VB/webrequest_begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby dostępu do metody, gdy metoda nie jest przesłonięcia w klasie elementów podrzędnych.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="webRequest.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Do wypełniania danych.</param>
        <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> Określa, że lokalizacja docelowa tej serializacji.</param>
        <summary>Wypełnia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> z dane potrzebne do zserializowania obiektu docelowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie obiekty zawarte w <xref:System.Runtime.Serialization.SerializationInfo> automatycznie są śledzone i serializowany przez program formatujący.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStream : unit -&gt; System.IO.Stream&#xA;override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="webRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Po przesłonięciu w klasie podrzędne zwraca <see cref="T:System.IO.Stream" /> do zapisania danych z zasobem internetowym.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> do zapisania danych z zasobem internetowym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.GetRequestStream%2A> Metoda inicjuje żądanie do wysyłania danych do zasobów internetowych i zwraca <xref:System.IO.Stream> wystąpienie na potrzeby wysyłania danych do zasobu internetowego.  
  
 <xref:System.Net.WebRequest.GetRequestStream%2A> Metoda umożliwia synchroniczne dostęp do <xref:System.IO.Stream>. Dla asynchronicznego dostępu, użyj <xref:System.Net.WebRequest.BeginGetRequestStream%2A> i <xref:System.Net.WebRequest.EndGetRequestStream%2A> metody.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.WebRequest.GetRequestStream%2A> metody można uzyskać w strumieniu, a następnie zapisuje dane do tego strumienia.  
  
 [!code-cpp[WebRequest_ContentType#4](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_ContentType/CPP/webrequest_contenttype.cpp#4)]
 [!code-csharp[WebRequest_ContentType#4](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_ContentType/CS/webrequest_contenttype.cs#4)]
 [!code-vb[WebRequest_ContentType#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_ContentType/VB/webrequest_contenttype.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby dostępu do metody, gdy metoda nie jest przesłonięcia w klasie elementów podrzędnych.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStreamAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetRequestStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetRequestStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetRequestStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetRequestStreamAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.GetRequestStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="webRequest.GetRequestStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Po przesłonięciu w klasie podrzędne zwraca <see cref="T:System.IO.Stream" /> do zapisania danych z zasobem internetowym jako operację asynchroniczną.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu zostanie zakończony, kiedy <xref:System.IO.Stream> do zapisania danych z Internetem zasób jest dostępny.  
  
 Po wywołaniu metody <xref:System.Net.WebRequest.GetRequestStreamAsync%2A>, upewnij się, że można zamknąć strumienia żądania przed wywołaniem <xref:System.Net.WebRequest.GetResponseAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="abstract member GetResponse : unit -&gt; System.Net.WebResponse&#xA;override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="webRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, zwraca odpowiedź na żądanie przez Internet.</summary>
        <returns>A <see cref="T:System.Net.WebResponse" /> zawierające odpowiedzi na żądanie z Internetu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.GetResponse%2A> Metoda wysyła żądanie do zasobu internetowego i zwraca <xref:System.Net.WebResponse> wystąpienia. Jeśli żądanie już została zainicjowana przez wywołanie do <xref:System.Net.WebRequest.GetRequestStream%2A>, <xref:System.Net.WebRequest.GetResponse%2A> metoda kończy żądanie i zwraca odpowiedzi.  
  
 <xref:System.Net.WebRequest.GetResponse%2A> Metoda umożliwia synchroniczne dostęp do <xref:System.Net.WebResponse>. Dla asynchronicznego dostępu, użyj <xref:System.Net.WebRequest.BeginGetResponse%2A> i <xref:System.Net.WebRequest.EndGetResponse%2A> metody.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
> [!NOTE]
>  Jeśli generowany jest to klasa WebException, użyj <xref:System.Net.WebException.Response%2A> i <xref:System.Net.WebException.Status%2A> właściwości wyjątku, aby określić odpowiedzi z serwera.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Net.WebRequest.Timeout%2A> właściwości do 10000 MS. Jeśli okres limitu czasu przed zasób może być zwracany, <xref:System.Net.WebException> jest generowany.  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby dostępu do metody, gdy metoda nie jest przesłonięcia w klasie elementów podrzędnych.</exception>
        <altmember cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Net.WebResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt; GetResponseAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebResponse&gt; GetResponseAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetResponseAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResponseAsync () As Task(Of WebResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Net::WebResponse ^&gt; ^ GetResponseAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;&#xA;override this.GetResponseAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;" Usage="webRequest.GetResponseAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, zwraca odpowiedź na żądanie przez Internet, jako operację asynchroniczną.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po odpowiedzi na żądanie przez Internet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemWebProxy">
      <MemberSignature Language="C#" Value="public static System.Net.IWebProxy GetSystemWebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IWebProxy GetSystemWebProxy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.GetSystemWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemWebProxy () As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IWebProxy ^ GetSystemWebProxy();" />
      <MemberSignature Language="F#" Value="static member GetSystemWebProxy : unit -&gt; System.Net.IWebProxy" Usage="System.Net.WebRequest.GetSystemWebProxy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca skonfigurowane przy użyciu ustawień programu Internet Explorer obecnie personifikowanego użytkownika serwera proxy.</summary>
        <returns>
          <see cref="T:System.Net.IWebProxy" /> Używane przez każdego wywołania do wystąpień <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.GetSystemWebProxy%2A> Metoda odczytuje ustawienia serwera proxy programu Internet Explorer (IE) bieżący użytkownik. Ten proces obejmuje opcje programu Internet Explorer, aby automatycznie wykryj ustawienia serwera proxy, użyj skryptu automatycznej konfiguracji, ustawienia serwera proxy ręcznie i zaawansowane ustawienia serwera proxy ręcznie.  
  
 Jeśli aplikacja personifikuje wielu użytkowników, możesz użyć <xref:System.Net.WebRequest.GetSystemWebProxy%2A> metoda pobierania serwera proxy dla każdego personifikowanego użytkownika.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">można pobrać lub ustawić globalnych serwera proxy HTTP. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public virtual System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.WebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, pobiera lub ustawia kolekcję par nazw i wartości nagłówka skojarzone z żądaniem.</summary>
        <value>A <see cref="T:System.Net.WebHeaderCollection" /> zawierający pary nazwa/wartość nagłówka skojarzone z tym żądaniem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Headers%2A> Zawiera właściwość <xref:System.Net.WebHeaderCollection> zawierające informacje nagłówka do wysłania do zasobu internetowego.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono pary nazwa/wartość nagłówka skojarzone z tym żądaniem.  
  
 [!code-cpp[WebRequest_Headers#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Headers/CPP/webrequest_headers.cpp#1)]
 [!code-csharp[WebRequest_Headers#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Headers/CS/webrequest_headers.cs#1)]
 [!code-vb[WebRequest_Headers#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Headers/VB/webrequest_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby pobierania lub ustawiania właściwości, gdy właściwość nie zostanie zastąpiona w klasie elementów podrzędnych.</exception>
        <altmember cref="T:System.Net.WebHeaderCollection" />
        <altmember cref="P:System.Net.HttpWebRequest.Headers" />
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.Net.WebRequest.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poziom personifikacji dla bieżącego żądania.</summary>
        <value>A <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poziom personifikacji określa, jak serwer może za pomocą poświadczeń klienta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public virtual string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.WebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, pobiera lub Ustawia metodę, protokół do użycia w tym żądaniu.</summary>
        <value>Metoda protokół do użycia w tym żądaniu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku przesłonięcia w klasie podrzędne <xref:System.Net.WebRequest.Method%2A> właściwość zawiera metodę żądania do użycia w tym żądaniu.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Net.WebRequest.Method%2A> właściwości POST, aby wskazać, że żądanie zostanie wysłany danych do hosta docelowego.  
  
 [!code-cpp[WebRequest_BeginGetRequest#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CPP/webrequest_begingetrequest.cpp#3)]
 [!code-csharp[WebRequest_BeginGetRequest#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_BeginGetRequest/CS/webrequest_begingetrequest.cs#3)]
 [!code-vb[WebRequest_BeginGetRequest#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_BeginGetRequest/VB/webrequest_begingetrequest.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Jeśli właściwość nie zostanie przesłonięta w klasie podrzędne, wszelkie próby get lub set właściwości.</exception>
        <block subset="none" type="overrides">
          <para>
            <see cref="P:System.Net.WebRequest.Method" /> Właściwość może zawierać każda metoda prawidłowemu żądaniu protokołu zaimplementowana. Wartość domyślna musi podać transakcji żądanie/odpowiedź domyślna, która nie wymaga właściwości specyficzne dla protokołu.</para>
        </block>
        <altmember cref="P:System.Net.HttpWebRequest.Method" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public virtual bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.WebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, wskazuje, czy wstępnie uwierzytelnić żądania.</summary>
        <value>
          <see langword="true" /> wstępne uwierzytelnianie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z wyjątkiem pierwsze żądanie <xref:System.Net.WebRequest.PreAuthenticate%2A> właściwość wskazuje, czy chcą wysłać informacje o uwierzytelnianiu z kolejnych żądań bez oczekiwania na można wezwał przez serwer. Gdy <xref:System.Net.WebRequest.PreAuthenticate%2A> jest `false`, <xref:System.Net.WebRequest> czeka na żądanie uwierzytelniania przed wysłaniem informacji o uwierzytelnianiu.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Net.WebRequest.PreAuthenticate%2A> właściwości `true` , aby <xref:System.Net.NetworkCredential> przechowywane w <xref:System.Net.WebRequest.Credentials%2A> właściwości zostaną wysłane do wraz z żądaniem zasobów.  
  
 [!code-cpp[WebRequest_PreAuthenticate#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CPP/webrequest_preauthenticate.cpp#1)]
 [!code-csharp[WebRequest_PreAuthenticate#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_PreAuthenticate/CS/webrequest_preauthenticate.cs#1)]
 [!code-vb[WebRequest_PreAuthenticate#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_PreAuthenticate/VB/webrequest_preauthenticate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby pobierania lub ustawiania właściwości, gdy właściwość nie zostanie zastąpiona w klasie elementów podrzędnych.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public virtual System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.WebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, pobiera lub ustawia serwera proxy sieci na potrzeby dostępu do tego zasobu internetowego.</summary>
        <value>
          <see cref="T:System.Net.IWebProxy" /> Na potrzeby dostępu do zasobu internetowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Proxy%2A> Właściwość identyfikuje sieciowego serwera proxy, który używa żądania dostępu do zasobu internetowego. Żądań za pośrednictwem serwera proxy, a nie bezpośrednio do zasobu internetowego.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 Poniższy przykład przedstawia bieżący adres serwera proxy sieci i umożliwia użytkownikowi można przypisać nowe proxy sieci adres i numer portu.  
  
 [!code-cpp[WebRequest_Proxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Proxy/CPP/webrequest_proxy.cpp#1)]
 [!code-csharp[WebRequest_Proxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Proxy/CS/webrequest_proxy.cs#1)]
 [!code-vb[WebRequest_Proxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Proxy/VB/webrequest_proxy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby pobierania lub ustawiania właściwości, gdy właściwość nie zostanie zastąpiona w klasie elementów podrzędnych.</exception>
        <altmember cref="T:System.Net.IWebProxy" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="P:System.Net.HttpWebRequest.Proxy" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPortableWebRequestCreator">
      <MemberSignature Language="C#" Value="public static void RegisterPortableWebRequestCreator (System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterPortableWebRequestCreator(class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterPortableWebRequestCreator (creator As IWebRequestCreate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterPortableWebRequestCreator(System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPortableWebRequestCreator : System.Net.IWebRequestCreate -&gt; unit" Usage="System.Net.WebRequest.RegisterPortableWebRequestCreator creator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" />
      </Parameters>
      <Docs>
        <param name="creator">
          <see cref="T:System.Net.IWebRequestCreate" /> Obiektu do zarejestrowania.</param>
        <summary>Zarejestruj <see cref="T:System.Net.IWebRequestCreate" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterPrefix">
      <MemberSignature Language="C#" Value="public static bool RegisterPrefix (string prefix, System.Net.IWebRequestCreate creator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RegisterPrefix(string prefix, class System.Net.IWebRequestCreate creator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RegisterPrefix (prefix As String, creator As IWebRequestCreate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RegisterPrefix(System::String ^ prefix, System::Net::IWebRequestCreate ^ creator);" />
      <MemberSignature Language="F#" Value="static member RegisterPrefix : string * System.Net.IWebRequestCreate -&gt; bool" Usage="System.Net.WebRequest.RegisterPrefix (prefix, creator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="creator" Type="System.Net.IWebRequestCreate" />
      </Parameters>
      <Docs>
        <param name="prefix">Pełny identyfikator URI lub identyfikator URI prefiks, który <see cref="T:System.Net.WebRequest" /> zależne usługi.</param>
        <param name="creator">Metoda create który <see cref="T:System.Net.WebRequest" /> wywołań Utwórz <see cref="T:System.Net.WebRequest" /> elementów podrzędnych.</param>
        <summary>Rejestruje <see cref="T:System.Net.WebRequest" /> podrzędne dla określonego identyfikatora URI.</summary>
        <returns>
          <see langword="true" /> Jeśli rejestracja zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.RegisterPrefix%2A> Metoda rejestrów <xref:System.Net.WebRequest> elementów podrzędnych do obsługi żądań. <xref:System.Net.WebRequest> elementy podrzędne zwykle są rejestrowane do obsługi określonego protokołu takiego HTTP lub FTP, ale można zarejestrować do obsługi żądania do określonego serwera lub na serwerze.  
  
 Następujące typy wstępnie zarejestrowanych rezerwy już zarejestrowany:  
  
-   `http://`  
  
-   `https://`  
  
-   `ftp://`  
  
-   `file://`  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Net.WebRequest.Create%28System.String%29> i <xref:System.Net.WebRequest.Create%28System.Uri%29> metody.  
  
 Zduplikowane prefiksy nie są dozwolone. <xref:System.Net.WebRequest.RegisterPrefix%2A> Zwraca `false` w przypadku próby zarejestrowania zduplikowane prefiks.  
  
> [!NOTE]
>  <xref:System.Net.HttpWebRequest> Zarejestrować klasy do obsługi żądań HTTP i HTTPS schematów domyślnie. Próbuje zarejestrować inną <xref:System.Net.WebRequest> obiekt podrzędny dla tych systemów zakończy się niepowodzeniem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="prefix" /> jest <see langword="null" /> - lub - <paramref name="creator" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public virtual Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.WebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, pobiera identyfikator URI zasobu internetowego skojarzone z żądaniem.</summary>
        <value>A <see cref="T:System.Uri" /> reprezentujących zasobu skojarzone z żądaniem</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku przesłonięcia w klasie podrzędne <xref:System.Net.WebRequest.RequestUri%2A> właściwość zawiera <xref:System.Uri> wystąpienie <xref:System.Net.WebRequest.Create%2A> metoda używa do utworzenia żądania.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 Następujące testy przykład <xref:System.Net.WebRequest.RequestUri%2A> właściwości w celu określenia pierwotnie żądanej witryny.  
  
 [!code-cpp[WebRequest_RequestUri1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_RequestUri1/CPP/webrequest_requesturi.cpp#1)]
 [!code-csharp[WebRequest_RequestUri1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_RequestUri1/CS/webrequest_requesturi.cs#1)]
 [!code-vb[WebRequest_RequestUri1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_RequestUri1/VB/webrequest_requesturi.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby pobierania lub ustawiania właściwości, gdy właściwość nie zostanie zastąpiona w klasie elementów podrzędnych.</exception>
        <block subset="none" type="overrides">
          <para>
            <see cref="P:System.Net.WebRequest.RequestUri" /> musi zawierać oryginalny <see cref="T:System.Uri" /> wystąpienia przekazane do <see cref="M:System.Net.WebRequest.Create(System.Uri)" /> metody. W przypadku protokołu jest w stanie przekierować żądania do inny identyfikator URI do obsługi żądania, obiekt podrzędny należy podać właściwość, która ma zawierać identyfikator URI, który faktycznie obsługuje żądanie</para>
        </block>
        <altmember cref="P:System.Net.HttpWebRequest.RequestUri" />
        <altmember cref="P:System.Net.HttpWebRequest.Address" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">A <see cref="T:System.Runtime.Serialization.SerializationInfo" />, która przechowuje dane serializacji dla <see cref="T:System.Net.WebRequest" />.</param>
        <param name="streamingContext">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> zawiera miejsce docelowe w serializowanym strumieniu skojarzone z nowym <see cref="T:System.Net.WebRequest" />.</param>
        <summary>W przypadku przesłonięcia w klasie podrzędne, wypełnia <see cref="T:System.Runtime.Serialization.SerializationInfo" /> wystąpienia o dane potrzebne do serializacji <see cref="T:System.Net.WebRequest" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Podejmowana jest próba do serializacji obiektu, gdy interfejs nie jest przesłonięcia w klasie elementów podrzędnych.</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.WebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia długość czasu (w milisekundach), zanim upłynie limit czasu żądania.</summary>
        <value>Długość czasu w milisekundach, dopóki nie wygaśnie żądania lub wartość <see cref="F:System.Threading.Timeout.Infinite" /> wskazująca, czy żądanie jest nie upłynął limit czasu. Wartość domyślna jest zdefiniowana przez klasy podrzędne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest.Timeout%2A> Właściwość wskazuje czas (w milisekundach), aż do czasu żądań wychodzących i zgłasza <xref:System.Net.WebException>. <xref:System.Net.WebRequest.Timeout%2A> Właściwość dotyczy tylko synchroniczne żądania z <xref:System.Net.WebRequest.GetResponse%2A> metody. Aby limit czasu żądania asynchroniczne, należy użyć <xref:System.Net.WebRequest.Abort%2A> metody.  
  
> [!NOTE]
>  <xref:System.Net.WebRequest> Jest klasa `abstract` klasy. Zachowanie rzeczywistych <xref:System.Net.WebRequest> wystąpień w czasie wykonywania jest określany przez klasy podrzędne zwrócony przez <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> metody. Aby uzyskać więcej informacji o wartości domyślne i wyjątków, zobacz dokumentację dla klas elementu podrzędnego, takich jak <xref:System.Net.HttpWebRequest> i <xref:System.Net.FileWebRequest>.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Net.WebRequest.Timeout%2A> właściwości do 10000 MS. Jeśli okres limitu czasu przed zasób może być zwracany, <xref:System.Net.WebException> jest generowany.  
  
 [!code-cpp[WebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebRequest_Timeout/CPP/webrequest_timeout.cpp#1)]
 [!code-csharp[WebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebRequest_Timeout/CS/webrequest_timeout.cs#1)]
 [!code-vb[WebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebRequest_Timeout/VB/webrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wszelkie próby pobierania lub ustawiania właściwości, gdy właściwość nie zostanie zastąpiona w klasie elementów podrzędnych.</exception>
        <block subset="none" type="overrides">
          <para>Klasy podrzędne sygnału przekroczenie limitu czasu przez zgłaszanie <see cref="T:System.Net.WebException" /> z <see cref="P:System.Net.WebException.Status" /> pole <see cref="F:System.Net.WebExceptionStatus.Timeout" />. Gdy <see cref="P:System.Net.WebRequest.Timeout" /> ma ustawioną wartość <see cref="F:System.Threading.Timeout.Infinite" /> elementu podrzędnego klasy jest nie upłynął limit czasu.</para>
        </block>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public virtual bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.WebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie podrzędne, pobiera lub ustawia <see cref="T:System.Boolean" /> Określa, czy wartość tej kontrolki <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> są wysyłane z żądania.</summary>
        <value>
          <see langword="true" /> Jeśli są używane domyślne poświadczenia; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest ustawiana `true` nawiązaniem żądań to <xref:System.Net.WebRequest> obiektu Jeśli jest to wymagane przez serwer, uwierzytelniania przy użyciu poświadczeń aktualnie zalogowanego użytkownika. Aplikacje klienckie jest to zachowanie w większości przypadków. Dla aplikacji warstwy środkowej, takich jak aplikacje ASP.NET, zamiast używać tej właściwości można zwykle ustawić <xref:System.Net.WebRequest.Credentials%2A> właściwości do poświadczeń w imieniu którego żądań klienta.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Próbowano ustawić tę właściwość, po żądanie zostało wysłane.</exception>
        <exception cref="T:System.NotImplementedException">Wszelkie próby dostępu do właściwości, gdy właściwość nie zostanie zastąpiona w klasie elementów podrzędnych.</exception>
      </Docs>
    </Member>
  </Members>
</Type>