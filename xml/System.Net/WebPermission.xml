<Type Name="WebPermission" FullName="System.Net.WebPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="61f86f93a3ec9f71009b11d3a726b66c10dfe1bf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69090432" /></Metadata><TypeSignature Language="C#" Value="public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit WebPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type WebPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kontroluje prawa dostępu do zasobów internetowych protokołu HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission>zawiera zestaw metod i właściwości umożliwiających kontrolowanie dostępu do zasobów internetowych. Możesz użyć <xref:System.Net.WebPermission> , aby zapewnić ograniczony lub nieograniczony dostęp do zasobu, na podstawie <xref:System.Security.Permissions.PermissionState> <xref:System.Net.WebPermission> tego, który jest ustawiony podczas tworzenia.  
  
 <xref:System.Net.WebPermission> Utwórz wystąpienie, wywołując jego Konstruktor przy użyciu jednego z następujących zestawów parametrów:  
  
-   Brak parametrów. Wartość domyślna <xref:System.Security.Permissions.PermissionState> to <xref:System.Security.Permissions.PermissionState.None>.  
  
-   A <xref:System.Security.Permissions.PermissionState>. Określ, <xref:System.Security.Permissions.PermissionState.None> <xref:System.Net.WebPermission.AddPermission%2A> aby zezwolić na używanie dowolnego identyfikatora URI w klasie docelowej lub zezwolić na dostęp tylko do identyfikatorów URI, które można określić za pomocą metody. <xref:System.Security.Permissions.PermissionState.Unrestricted>  
  
-   <xref:System.Net.NetworkAccess> Wartość i ciąg identyfikatora URI. Określony identyfikator URI ma uprawnienia przyznane przez <xref:System.Net.NetworkAccess> wartość.  
  
-   <xref:System.Net.NetworkAccess> Specyfikator i wyrażenie regularne identyfikatora URI.  
  
 <xref:System.Net.WebPermission.ConnectList%2A> I<xref:System.Net.WebPermission.AcceptList%2A> przechowuje identyfikatory URI, do których udzielono uprawnień dostępu. Aby dodać identyfikator URI do jednej z tych list, użyj <xref:System.Net.WebPermission.AddPermission%2A>. Jeśli przekażesz <xref:System.Net.NetworkAccess.Accept> <xref:System.Net.NetworkAccess> jako parametr, identyfikator URI <xref:System.Net.WebPermission.AcceptList%2A>zostanie dodany do. <xref:System.Net.WebPermission>zezwala na połączenia z klasą docelową o identyfikatorach URI pasujących <xref:System.Net.WebPermission.AcceptList%2A>do.  
  
> [!CAUTION]
>  Aby odmówić dostępu do zasobu internetowego, należy odmówić dostępu do wszystkich możliwych ścieżek do tego zasobu. Wymaga to wywołania <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=nameWithType> z parametrem stanu ustawionym na <xref:System.Security.CodeAccessPermission.Deny%2A>wartość. Lepszym rozwiązaniem jest umożliwienie dostępu tylko do określonego zasobu. Aby uzyskać więcej informacji na temat tego tematu, zobacz [NIB: Korzystanie z tematu Odmów](https://msdn.microsoft.com/library/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25) metody.  
  
> [!NOTE]
>  Należy odmówić dostępu tylko przy użyciu ścieżki kanonicznej zasobu. Nie ma potrzeby używania wszystkich odmian składniowych ścieżki.  
  
> [!NOTE]
>  Nazwa użytkownika i domyślne informacje o porcie są usuwane z <xref:System.Uri> programu przed porównaniem z argumentem wyrażenia regularnego, który jest dostarczany <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> do konstruktora. Jeśli wyrażenie regularne zawiera informacje o użytkowniku lub domyślny numer portu, wszystkie przychodzące <xref:System.Uri>s nie będą zgodne z wyrażeniem regularnym.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć nowe wystąpienie <xref:System.Net.WebPermission> <xref:System.Text.RegularExpressions.Regex>przy użyciu. Dodatkowe hosty są dodawane do listy <xref:System.Net.WebPermission>Połącz i Zaakceptuj. Na koniec lista Połącz i zaakceptuj zostanie wyświetlona w konsoli programu.  
  
 [!code-cpp[WebPermission_Regex#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Regex/CPP/regex.cpp#1)]
 [!code-csharp[WebPermission_Regex#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Regex/CS/regex.cs#1)]
 [!code-vb[WebPermission_Regex#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Regex/VB/regex.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.CodeAccessPermission" />
    <altmember cref="T:System.Security.Permissions.PermissionState" />
    <altmember cref="T:System.Net.NetworkAccess" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Net.WebPermission" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Net.WebPermission" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy nowe wystąpienie <xref:System.Net.WebPermission> klasy. Ten konstruktor tworzy puste uprawnienie, które nie udziela żadnych praw.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.IsUnrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Security.Permissions.PermissionState -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><see cref="T:System.Security.Permissions.PermissionState" /> Wartość.</param>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Net.WebPermission" /> klasy, które przekazuje wszystkie wymagania lub zakończy się niepowodzeniem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość `state` parametru <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType> jest lub<xref:System.Security.Permissions.PermissionState.Unrestricted?displayProperty=nameWithType>, odpowiednio, w pełni ograniczone lub w pełni nieograniczonego dostępu do wszystkich zmiennych zabezpieczeń. Jeśli określisz <xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>, możesz udzielić dostępu do poszczególnych identyfikatorów URI przy użyciu <xref:System.Net.WebPermission.AddPermission%2A>.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie programu <xref:System.Net.WebPermission> i zapewnia prawa dostępu do określonych adresów URL.  
  
 [!code-cpp[WebPermission_Copy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#1)]
 [!code-csharp[WebPermission_Copy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#1)]
 [!code-vb[WebPermission_Copy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.PermissionState.Unrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * string -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">Wartość NetworkAccess, która wskazuje, jaki rodzaj dostępu ma zostać udzielony dla określonego identyfikatora URI. <see cref="F:System.Net.NetworkAccess.Accept" />wskazuje, że aplikacja może akceptować połączenia z Internetu przy użyciu zasobu lokalnego. <see cref="F:System.Net.NetworkAccess.Connect" />wskazuje, że aplikacja może łączyć się z określonymi zasobami internetowymi.</param>
        <param name="uriString">Ciąg identyfikatora URI, do którego przyznano prawa dostępu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.WebPermission" /> klasy z określonymi prawami dostępu dla określonego identyfikatora URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Net.WebPermission> a i przyznaje swojemu użytkownikowi uprawnienia do nawiązywania połączenia z hostem zdalnym lub zaakceptowania połączenia z hostem zdalnym `uriString` przy użyciu identyfikatora URI opisanego przez parametr.  
  
   
  
## Examples  
 Poniższy przykład tworzy nowe wystąpienie programu <xref:System.Net.WebPermission> z uprawnieniami do łączenia dla określonego identyfikatora URI.  
  
 [!code-cpp[WebPermission_Union#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#1)]
 [!code-csharp[WebPermission_Union#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#1)]
 [!code-vb[WebPermission_Union#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uriString" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriRegex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access"><see cref="T:System.Net.NetworkAccess" /> Wartość, która wskazuje, jaki rodzaj dostępu ma zostać udzielony dla określonego identyfikatora URI. <see cref="F:System.Net.NetworkAccess.Accept" />wskazuje, że aplikacja może akceptować połączenia z Internetu przy użyciu zasobu lokalnego. <see cref="F:System.Net.NetworkAccess.Connect" />wskazuje, że aplikacja może łączyć się z określonymi zasobami internetowymi.</param>
        <param name="uriRegex">Wyrażenie regularne, które opisuje identyfikator URI, do którego ma zostać udzielony dostęp.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.WebPermission" /> klasy z określonymi prawami dostępu dla określonego wyrażenia regularnego identyfikatora URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Net.WebPermission> a i przyznaje swojemu użytkownikowi uprawnienia do nawiązywania połączenia z hostem zdalnym lub zaakceptowania połączenia z hostem zdalnym `uriRegex` przy użyciu identyfikatora URI opisanego przez parametr.  
  
> [!NOTE]
>  Zaleca `uriRegex` się utworzenie <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>za pomocą flag, <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType>i <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType> .  
  
> [!NOTE]
>  Ciąg identyfikatora URI kandydata jest sprawdzany względem listy odpowiednich wyrażeń regularnych (<xref:System.Net.WebPermission.AcceptList%2A> lub <xref:System.Net.WebPermission.ConnectList%2A>) na dwa sposoby. Po pierwsze, ciąg identyfikatora URI kandydata jest sprawdzany względem odpowiedniej listy; następnie w przypadku braku dopasowania ciąg identyfikatora URI kandydata zostanie przekonwertowany <xref:System.Uri> na odpowiednią listę i sprawdzony.  
  
   
  
## Examples  
 Poniższy przykład tworzy nowe wystąpienie <xref:System.Net.WebPermission> z uprawnieniami do łączenia dla określonego. <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType>  
  
 [!code-cpp[WebPermission_Constructor4#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Constructor4/CPP/webpermission_constructor4.cpp#1)]
 [!code-csharp[WebPermission_Constructor4#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Constructor4/CS/webpermission_constructor4.cs#1)]
 [!code-vb[WebPermission_Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Constructor4/VB/webpermission_constructor4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="AcceptList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator AcceptList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator AcceptList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.AcceptList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ AcceptList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.AcceptList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość zwraca Wyliczenie jednego z uprawnień do akceptacji przechowywanych przez ten <see cref="T:System.Net.WebPermission" />element. Możliwe typy obiektów zawarte w zwracanym wyliczeniu <see cref="T:System.String" /> to <see cref="T:System.Text.RegularExpressions.Regex" />i.</summary>
        <value><see cref="T:System.Collections.IEnumerator" /> Interfejs, który zawiera uprawnienia do akceptowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość pobiera listę zasobów lokalnych dozwolonych przez ten <xref:System.Net.WebPermission>element. Klasa, do której zastosowano <xref:System.Net.WebPermission> dane, ma uprawnienia do odbierania połączenia przychodzącego do zasobów lokalnych znalezionych na tej liście.  
  
> [!NOTE]
>  Do tej listy można dodać identyfikatory URI przy <xref:System.Net.WebPermission.AddPermission%2A>użyciu polecenia.  
  
> [!NOTE]
>  Ciąg identyfikatora URI kandydata jest sprawdzany względem listy odpowiednich wyrażeń regularnych (<xref:System.Net.WebPermission.AcceptList%2A> lub <xref:System.Net.WebPermission.ConnectList%2A>) na dwa sposoby. Po pierwsze, ciąg identyfikatora URI kandydata jest sprawdzany względem odpowiedniej listy; następnie w przypadku braku dopasowania ciąg identyfikatora URI kandydata zostanie przekonwertowany <xref:System.Uri> na odpowiednią listę i sprawdzony.  
  
   
  
## Examples  
 Poniższy przykład drukuje adresy URL w <xref:System.Net.WebPermission.AcceptList%2A> konsoli programu.  
  
 [!code-cpp[WebPermission_AcceptConnectList#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#2)]
 [!code-csharp[WebPermission_AcceptConnectList#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#2)]
 [!code-vb[WebPermission_AcceptConnectList#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPermission">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje określony identyfikator URI z określonymi prawami dostępu do bieżącego <see cref="T:System.Net.WebPermission" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * string -&gt; unit" Usage="webPermission.AddPermission (access, uriString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">A <see cref="T:System.Net.NetworkAccess" /> , który określa prawa dostępu przyznane identyfikatorowi URI.</param>
        <param name="uriString">Ciąg opisujący identyfikator URI, do którego przyznano prawa dostępu.</param>
        <summary>Dodaje określony ciąg identyfikatora URI z określonymi prawami dostępu do bieżącego <see cref="T:System.Net.WebPermission" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określono <xref:System.Security.Permissions.PermissionState.None> <xref:System.Net.WebPermission.AddPermission%2A> jako, użyj, aby zezwolić na użycie elementu `uriString` w klasie docelowej. <xref:System.Security.Permissions.PermissionState> Sposób, który `uriString` może być używany przez klasę docelową, jest `access`określany przez. Określ <xref:System.Net.NetworkAccess.Accept> jako parametr dostępu, aby dodać identyfikator URI określony `uriString` przez parametr do listy ciągów akceptowanych przez identyfikator URI, lub Określ <xref:System.Net.NetworkAccess.Connect> jako parametr dostępu, aby dodać identyfikator URI do listy ciągów połączenia identyfikatora URI.  
  
> [!NOTE]
>  Wywołanie metody <xref:System.Net.WebPermission.AddPermission%2A> nie będziemiałożadnegoefektu,ponieważuprawnieniasąprzyznawanewszystkimidentyfikatoromURI.<xref:System.Net.WebPermission> <xref:System.Security.Permissions.PermissionState.Unrestricted>  
  
> [!NOTE]
>  Ciąg identyfikatora URI kandydata jest sprawdzany względem listy odpowiednich wyrażeń regularnych (<xref:System.Net.WebPermission.AcceptList%2A> lub <xref:System.Net.WebPermission.ConnectList%2A>) na dwa sposoby. Po pierwsze, ciąg identyfikatora URI kandydata jest sprawdzany względem odpowiedniej listy; następnie w przypadku braku dopasowania ciąg identyfikatora URI kandydata zostanie przekonwertowany <xref:System.Uri> na odpowiednią listę i sprawdzony.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak dodać prawa dostępu do określonych ciągów adresów URL.  
  
 [!code-cpp[WebPermission_Intersect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#2)]
 [!code-csharp[WebPermission_Intersect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#2)]
 [!code-vb[WebPermission_Intersect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uriString" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; unit" Usage="webPermission.AddPermission (access, uriRegex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">NetworkAccess, który określa prawa dostępu przyznane identyfikatorowi URI.</param>
        <param name="uriRegex">Wyrażenie regularne, które opisuje zestaw identyfikatorów URI, do których przyznano prawa dostępu.</param>
        <summary>Dodaje określony identyfikator URI z określonymi prawami dostępu do bieżącego <see cref="T:System.Net.WebPermission" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określono <xref:System.Security.Permissions.PermissionState.None> <xref:System.Net.WebPermission.AddPermission%2A> jako, użyj, aby zezwolić na użycie elementu `uriRegex` w klasie docelowej. <xref:System.Security.Permissions.PermissionState> Określ <xref:System.Net.NetworkAccess.Accept> `uriRegex` jako parametr, który ma dodać identyfikator URI określony przez parametr do listy ciągów akceptowanych przez identyfikator URI, lub <xref:System.Net.NetworkAccess.Connect> Określ jako parametr dostępu, aby dodać identyfikator URI do listy ciągów połączenia identyfikatora URI. `access`  
  
> [!NOTE]
>  Wywołanie <xref:System.Net.WebPermission.AddPermission%2A> <xref:System.Security.Permissions.PermissionState.Unrestricted> na wystąpienie nie będzie miało żadnego efektu, ponieważ uprawnienie zostanie przyznane wszystkim identyfikatorom URI. <xref:System.Net.WebPermission>  
  
> [!NOTE]
>  Zaleca `uriRegex` się utworzenie <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>za pomocą flag, <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType>i <xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType> .  
  
> [!NOTE]
>  Ciąg identyfikatora URI kandydata jest sprawdzany względem listy odpowiednich wyrażeń regularnych (<xref:System.Net.WebPermission.AcceptList%2A> lub <xref:System.Net.WebPermission.ConnectList%2A>) na dwa sposoby. Po pierwsze, ciąg identyfikatora URI kandydata jest sprawdzany względem odpowiedniej listy; następnie w przypadku braku dopasowania ciąg identyfikatora URI kandydata zostanie przekonwertowany <xref:System.Uri> na odpowiednią listę i sprawdzony.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Net.WebPermission.AddPermission%2A> do udzielenia praw dostępu dla określonego identyfikatora URI.  
  
 [!code-cpp[WebPermission_IsSubset#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset/CPP/webpermission_issubset.cpp#1)]
 [!code-csharp[WebPermission_IsSubset#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset/CS/webpermission_issubset.cs#1)]
 [!code-vb[WebPermission_IsSubset#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset/VB/webpermission_issubset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="uriRegex" /></exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="ConnectList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator ConnectList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator ConnectList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.ConnectList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ ConnectList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.ConnectList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość zwraca Wyliczenie jednego z uprawnień <see cref="T:System.Net.WebPermission" />do nawiązywania połączenia. Możliwe typy obiektów zawarte w zwracanym wyliczeniu <see cref="T:System.String" /> to <see cref="T:System.Text.RegularExpressions.Regex" />i.</summary>
        <value><see cref="T:System.Collections.IEnumerator" /> Interfejs, który zawiera uprawnienia do łączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość pobiera listę zasobów zdalnych, które są dozwolone w tym <xref:System.Net.WebPermission>celu. Klasa, do której zastosowano <xref:System.Net.WebPermission> dane, ma uprawnienia do łączenia się z zasobami znajdującymi się na tej liście.  
  
> [!NOTE]
>  Do tej listy można dodać identyfikatory URI przy <xref:System.Net.WebPermission.AddPermission%2A>użyciu polecenia.  
  
> [!NOTE]
>  Ciąg identyfikatora URI kandydata jest sprawdzany względem listy odpowiednich wyrażeń regularnych (<xref:System.Net.WebPermission.AcceptList%2A> lub <xref:System.Net.WebPermission.ConnectList%2A>) na dwa sposoby. Po pierwsze, ciąg identyfikatora URI kandydata jest sprawdzany względem odpowiedniej listy; następnie w przypadku braku dopasowania ciąg identyfikatora URI kandydata zostanie przekonwertowany <xref:System.Uri> na odpowiednią listę i sprawdzony.  
  
   
  
## Examples  
 Poniższy przykład drukuje adresy URL w <xref:System.Net.WebPermission.ConnectList%2A> konsoli programu.  
  
 [!code-cpp[WebPermission_AcceptConnectList#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#1)]
 [!code-csharp[WebPermission_AcceptConnectList#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#1)]
 [!code-vb[WebPermission_AcceptConnectList#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="webPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię <see cref="T:System.Net.WebPermission" />.</summary>
        <returns>Nowe wystąpienie <see cref="T:System.Net.WebPermission" /> klasy, które ma takie same wartości jak oryginalna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwracana przez tę metodę reprezentuje taki sam dostęp do zasobów jak oryginał <xref:System.Net.WebPermission>. <xref:System.Security.IPermission> Ta metoda przesłania <xref:System.Security.CodeAccessPermission.Copy%2A> i jest zaimplementowana do <xref:System.Security.IPermission> obsługi interfejsu.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć drugie wystąpienie <xref:System.Net.WebPermission> przy użyciu. <xref:System.Net.WebPermission.Copy%2A> Drugie wystąpienie jest takie samo jak pierwsze.  
  
 [!code-cpp[WebPermission_Copy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#2)]
 [!code-csharp[WebPermission_Copy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#2)]
 [!code-vb[WebPermission_Copy#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="webPermission.FromXml securityElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">Kodowanie XML, z którego ma zostać odkonstruowane <see cref="T:System.Net.WebPermission" />.</param>
        <summary>Rekonstruuje <see cref="T:System.Net.WebPermission" /> z kodowania XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda rekonstrukcja a <xref:System.Net.WebPermission> z kodowania XML <xref:System.Security.SecurityElement> , który jest definiowany przez klasę. <xref:System.Net.WebPermission.FromXml%2A>  
  
 Użyj metody do kodowania XML, łącznie z <xref:System.Net.WebPermission>informacjami o stanie. <xref:System.Net.WebPermission.ToXml%2A>  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Security.SecurityElement?displayProperty=nameWithType>, wypełnia jego atrybuty i używa <xref:System.Net.WebPermission.FromXml%2A> do transferowania tych <xref:System.Net.WebPermission>informacji do wystąpienia.  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="securityElement" /> Parametr jest<see langword="null." /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="securityElement" />nie jest elementem uprawnień dla tego typu.</exception>
        <altmember cref="M:System.Net.WebPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><see cref="T:System.Net.WebPermission" /> Do porównania z bieżącym wystąpieniem.</param>
        <summary>Zwraca logiczne przecięcie dwóch <see cref="T:System.Net.WebPermission" /> wystąpień.</summary>
        <returns>Nowy <see cref="T:System.Net.WebPermission" /> , który reprezentuje część wspólną bieżącego wystąpienia <paramref name="target" /> i parametru. Jeśli przecięcie jest puste, metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Intersect%2A>zwraca, który zawiera te uprawnienia, które są wspólne w `target` obu i bieżącym wystąpieniu. <xref:System.Net.WebPermission>  
  
 Ta metoda przesłania <xref:System.Security.CodeAccessPermission.Intersect%2A> i jest zaimplementowana do <xref:System.Security.IPermission> obsługi interfejsu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć wystąpienie <xref:System.Net.WebPermission> przy użyciu logicznego przecięcia dwóch istniejących <xref:System.Net.WebPermission> wystąpień.  
  
 [!code-cpp[WebPermission_Intersect#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#3)]
 [!code-csharp[WebPermission_Intersect#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#3)]
 [!code-vb[WebPermission_Intersect#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" />nie <see langword="null" /> jest ani typu<see cref="T:System.Net.WebPermission" /></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="webPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Do porównania z bieżącym <see cref="T:System.Net.WebPermission" />. <see cref="T:System.Net.WebPermission" /></param>
        <summary>Określa, czy bieżący <see cref="T:System.Net.WebPermission" /> jest podzbiorem określonego obiektu.</summary>
        <returns><see langword="true" />Jeśli bieżące wystąpienie jest podzbiorem <paramref name="target" /> parametru; w przeciwnym razie,. <see langword="false" /> Jeśli obiektem docelowym <see langword="null" />jest, metoda zwraca <see langword="true" /> puste bieżące uprawnienie, które nie jest nieograniczone i <see langword="false" /> w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli bieżący <xref:System.Net.WebPermission> określa zestaw skojarzonych zasobów, który jest częściowo zawarty `target` w parametrze, `target`bieżąca <xref:System.Net.WebPermission> jest podzbiorem. Ta metoda przesłania <xref:System.Net.WebPermission.IsSubsetOf%2A> i jest zaimplementowana do <xref:System.Security.IPermission> obsługi interfejsu.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Net.WebPermission.IsSubsetOf%2A> do określenia, czy prawa dostępu Znalezione w jednym <xref:System.Net.WebPermission> wystąpieniu są <xref:System.Net.WebPermission>Znalezione w innym wystąpieniu.  
  
 [!code-cpp[WebPermission_IsSubset2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset2/CPP/source.cpp#1)]
 [!code-csharp[WebPermission_IsSubset2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset2/CS/source.cs#1)]
 [!code-vb[WebPermission_IsSubset2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Parametr docelowy nie jest wystąpieniem <see cref="T:System.Net.WebPermission" />.</exception>
        <exception cref="T:System.NotSupportedException">Bieżące wystąpienie zawiera bezpośrednio zakodowane wyrażenie regularne i nie ma dokładnie tego samego prawa znalezionego w wystąpieniu docelowym.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="override this.IsUnrestricted : unit -&gt; bool" Usage="webPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza ogólny stan <see cref="T:System.Net.WebPermission" />uprawnień.</summary>
        <returns><see langword="true" />Jeśli został utworzony <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> <see langword="false" />za pomocą; w przeciwnym razie,. <see cref="T:System.Security.Permissions.PermissionState" /> <see cref="T:System.Net.WebPermission" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Net.WebPermission> jest<xref:System.Security.Permissions.PermissionState.Unrestricted>, Klasa docelowa może używać wszystkich identyfikatorów URI. W przeciwnym razie należy określić określone uprawnienie dla dowolnego identyfikatora URI, który ma być używany z klasą docelową.  
  
> [!NOTE]
>  Służy <xref:System.Net.WebPermission.AddPermission%2A> do dodawania identyfikatora URI i określania jego uprawnień.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="webPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy Kodowanie <see cref="T:System.Net.WebPermission" /> XML i jego bieżący stan.</summary>
        <returns>A <see cref="T:System.Security.SecurityElement" /> , który zawiera reprezentację <see cref="T:System.Net.WebPermission" />w formacie XML, łącznie z informacjami o stanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Net.WebPermission.FromXml%2A> , aby przywrócić informacje o stanie <xref:System.Security.SecurityElement>z.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano <xref:System.Net.WebPermission.ToXml%2A> <xref:System.Security.SecurityElement?displayProperty=nameWithType> , jak za pomocą programu utworzyć i wydrukować jego atrybuty w konsoli programu.  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Do połączenia z bieżącym <see cref="T:System.Net.WebPermission" />. <see cref="T:System.Net.WebPermission" /></param>
        <summary>Zwraca Unię logiczną między dwoma wystąpieniami <see cref="T:System.Net.WebPermission" /> klasy.</summary>
        <returns>Reprezentujący Unię bieżącego wystąpienia <paramref name="target" /> i parametru. <see cref="T:System.Net.WebPermission" /> <see langword="WebPermission" /> Jeśli jest <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> ,<see cref="T:System.Net.WebPermission" /> Metoda zwraca wartość, która jest <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Jeśli obiektem docelowym <see langword="null" />jest, metoda zwraca kopię bieżącego <see cref="T:System.Net.WebPermission" />elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Union%2A>zwraca, który zawiera wszystkie uprawnienia w obu `target` i bieżącym wystąpieniu. <xref:System.Net.WebPermission>  
  
   
  
## Examples  
 Poniższy przykład pobiera Unię logiczną dwóch <xref:System.Net.WebPermission> wystąpień, aby utworzyć trzecie <xref:System.Net.WebPermission>wystąpienie.  
  
 [!code-cpp[WebPermission_Union#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#2)]
 [!code-csharp[WebPermission_Union#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#2)]
 [!code-vb[WebPermission_Union#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">obiekt docelowy nie <see langword="null" /> jest typu. <see cref="T:System.Net.WebPermission" /></exception>
        <altmember cref="T:System.Security.Permissions.PermissionState" />
      </Docs>
    </Member>
  </Members>
</Type>
