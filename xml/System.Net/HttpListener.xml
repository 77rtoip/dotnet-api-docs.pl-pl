<Type Name="HttpListener" FullName="System.Net.HttpListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9d63beed94ebd8861aa259865c066bbde53a3fb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37476145" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListener sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="897cc-101">Zapewnia prostą, programowo kontrolowanego odbiornika protokołu HTTP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="897cc-101">Provides a simple, programmatically controlled HTTP protocol listener.</span>
      </span>
      <span data-ttu-id="897cc-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="897cc-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-103">Za pomocą <xref:System.Net.HttpListener> klasy, można utworzyć proste odbiornika protokołu HTTP, który odpowiada na żądania HTTP.</span><span class="sxs-lookup"><span data-stu-id="897cc-103">Using the <xref:System.Net.HttpListener> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</span></span> <span data-ttu-id="897cc-104">Odbiornik jest aktywna przez okres istnienia <xref:System.Net.HttpListener> obiektu i jest uruchamiana w ramach aplikacji za pomocą jego uprawnień.</span><span class="sxs-lookup"><span data-stu-id="897cc-104">The listener is active for the lifetime of the <xref:System.Net.HttpListener> object and runs within your application with its permissions.</span></span>
   
 <span data-ttu-id="897cc-105">Aby użyć <xref:System.Net.HttpListener>, Utwórz nowe wystąpienie klasy za pomocą <xref:System.Net.HttpListener> Konstruktor i użyj <xref:System.Net.HttpListener.Prefixes%2A> właściwości w celu uzyskania dostępu do kolekcji, która zawiera ciągi, które określają, które identyfikator (URI) prefiksy <xref:System.Net.HttpListener>należy przetworzyć.</span><span class="sxs-lookup"><span data-stu-id="897cc-105">To use <xref:System.Net.HttpListener>, create a new instance of the class using the <xref:System.Net.HttpListener> constructor and use the <xref:System.Net.HttpListener.Prefixes%2A> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <xref:System.Net.HttpListener> should process.</span></span>
  
 <span data-ttu-id="897cc-106">Schemat (http lub https), hosta, opcjonalnego portu oraz opcjonalna ścieżka składa się z ciągu prefiks identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="897cc-106">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</span></span> <span data-ttu-id="897cc-107">Na przykład ciąg prefiksu pełną * http://www.contoso.com:8080/customerData/ *.</span><span class="sxs-lookup"><span data-stu-id="897cc-107">An example of a complete prefix string is *http://www.contoso.com:8080/customerData/*.</span></span> <span data-ttu-id="897cc-108">Prefiksy muszą kończyć się ukośnikiem ("/").</span><span class="sxs-lookup"><span data-stu-id="897cc-108">Prefixes must end in a forward slash ("/").</span></span> <span data-ttu-id="897cc-109"><xref:System.Net.HttpListener> Obiektu o prefiks, który najlepiej pasuje do żądanego identyfikatora URI odpowie na żądanie.</span><span class="sxs-lookup"><span data-stu-id="897cc-109">The <xref:System.Net.HttpListener> object with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="897cc-110">Wiele <xref:System.Net.HttpListener> obiektów nie można dodać ten sam prefiks; <xref:System.ComponentModel.Win32Exception> wyjątek jest generowany, jeśli <xref:System.Net.HttpListener> dodaje prefiks, który jest już używać.</span><span class="sxs-lookup"><span data-stu-id="897cc-110">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix; a <xref:System.ComponentModel.Win32Exception> exception is thrown if a <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>
  
 <span data-ttu-id="897cc-111">Jeśli nie określono portu, element hosta można zastąpić wartością "\*" z informacją, że <xref:System.Net.HttpListener> akceptuje żądania wysyłane do portu żądanego identyfikatora URI jest niezgodny z innymi prefiks.</span><span class="sxs-lookup"><span data-stu-id="897cc-111">When a port is specified, the host element can be replaced with "\*" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="897cc-112">Na przykład otrzymywać wszystkie żądania wysyłane do portu 8080, kiedy żądanego identyfikatora URI nie jest obsługiwany przez żaden <xref:System.Net.HttpListener>, prefiks jest *http://\*: 8080 /*.</span><span class="sxs-lookup"><span data-stu-id="897cc-112">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <xref:System.Net.HttpListener>, the prefix is *http://\*:8080/*.</span></span> <span data-ttu-id="897cc-113">Podobnie Aby określić, że <xref:System.Net.HttpListener> akceptuje wszystkie żądania wysyłane do portu, Zastąp element hosta ze znakiem "+".</span><span class="sxs-lookup"><span data-stu-id="897cc-113">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "+" character.</span></span> <span data-ttu-id="897cc-114">Na przykład * https://+:8080 *.</span><span class="sxs-lookup"><span data-stu-id="897cc-114">For example, *https://+:8080*.</span></span> <span data-ttu-id="897cc-115">"\*" I "+" znaki mogą być obecne w prefiksy, które zawierają ścieżki.</span><span class="sxs-lookup"><span data-stu-id="897cc-115">The "\*" and "+" characters can be present in prefixes that include paths.</span></span>
  
 <span data-ttu-id="897cc-116">Począwszy od programu .NET Core 2.0 lub .NET Framework 4.6 w systemie Windows 10, poddomen symboli wieloznacznych są obsługiwane w prefiksów identyfikatorów URI, które są zarządzane przez <xref:System.Net.HttpListener> obiektu.</span><span class="sxs-lookup"><span data-stu-id="897cc-116">Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="897cc-117">Aby określić poddomeny symboli wieloznacznych, należy użyć "\*" znak jako część nazwy hosta w prefiks identyfikatora URI.</span><span class="sxs-lookup"><span data-stu-id="897cc-117">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix.</span></span> <span data-ttu-id="897cc-118">Na przykład *http://\*.foo.com/*.</span><span class="sxs-lookup"><span data-stu-id="897cc-118">For example, *http://\*.foo.com/*.</span></span> <span data-ttu-id="897cc-119">Przekazać go jako argument <xref:System.Net.HttpListenerPrefixCollection.Add%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-119">Pass this as the argument to the <xref:System.Net.HttpListenerPrefixCollection.Add%2A> method.</span></span> <span data-ttu-id="897cc-120">To działa, począwszy od programu .NET Core 2.0 lub .NET Framework 4.6 w systemie Windows 10; we wcześniejszych wersjach, spowoduje to wygenerowanie <xref:System.Net.HttpListenerException>.</span><span class="sxs-lookup"><span data-stu-id="897cc-120">This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <xref:System.Net.HttpListenerException>.</span></span>

 > [!WARNING]
 > <span data-ttu-id="897cc-121">Powiązania najwyższego poziomu symbolu wieloznacznego (*http://\*: 8080 /* i \* http://+:8080 \*) powinien **nie** można użyć.</span><span class="sxs-lookup"><span data-stu-id="897cc-121">Top-level wildcard bindings (*http://\*:8080/* and *http://+:8080*) should **not** be used.</span></span> <span data-ttu-id="897cc-122">Powiązania najwyższego poziomu symboli wieloznacznych otworzyć aplikację w celu luk w zabezpieczeniach.</span><span class="sxs-lookup"><span data-stu-id="897cc-122">Top-level wildcard bindings can open up your app to security vulnerabilities.</span></span> <span data-ttu-id="897cc-123">Dotyczy to silnych i słabych symboli wieloznacznych.</span><span class="sxs-lookup"><span data-stu-id="897cc-123">This applies to both strong and weak wildcards.</span></span> <span data-ttu-id="897cc-124">Użyj nazwy hostów jawne, a nie symboli wieloznacznych.</span><span class="sxs-lookup"><span data-stu-id="897cc-124">Use explicit host names rather than wildcards.</span></span> <span data-ttu-id="897cc-125">Powiązanie symbol wieloznaczny domeny podrzędnej (na przykład `*.mysub.com`) nie ma to zagrożenie bezpieczeństwa, jeśli możesz kontrolować domenę nadrzędną całego (w przeciwieństwie do `*.com`, który jest narażony).</span><span class="sxs-lookup"><span data-stu-id="897cc-125">Subdomain wildcard binding (for example, `*.mysub.com`) doesn't have this security risk if you control the entire parent domain (as opposed to `*.com`, which is vulnerable).</span></span> <span data-ttu-id="897cc-126">Zobacz [rfc7230 sekcji-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) Aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="897cc-126">See [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) for more information.</span></span>
  
 <span data-ttu-id="897cc-127">Aby rozpocząć, nasłuchiwać żądań od klientów, Dodaj prefiksy identyfikatora URI do kolekcji i wywołania <xref:System.Net.HttpListener.Start%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-127">To begin listening for requests from clients, add the URI prefixes to the collection and call the <xref:System.Net.HttpListener.Start%2A> method.</span></span> <span data-ttu-id="897cc-128"><xref:System.Net.HttpListener> oferuje synchroniczne i asynchroniczne modeli do przetwarzania żądań klientów.</span><span class="sxs-lookup"><span data-stu-id="897cc-128"><xref:System.Net.HttpListener> offers both synchronous and asynchronous models for processing client requests.</span></span> <span data-ttu-id="897cc-129">Żądania i ich skojarzone odpowiedzi są dostępne przy użyciu <xref:System.Net.HttpListenerContext> obiektu zwróconego przez <xref:System.Net.HttpListener.GetContext%2A> metody lub jego odpowiedników asynchronicznego, <xref:System.Net.HttpListener.BeginGetContext%2A> i <xref:System.Net.HttpListener.EndGetContext%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-129">Requests and their associated responses are accessed using the <xref:System.Net.HttpListenerContext> object returned by the <xref:System.Net.HttpListener.GetContext%2A> method or its asynchronous counterparts, the <xref:System.Net.HttpListener.BeginGetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods.</span></span>
  
 <span data-ttu-id="897cc-130">Synchroniczne model jest odpowiednie, czy aplikacja powinna blokować podczas oczekiwania na żądanie klienta oraz czy ma być przetwarzana tylko jedno żądanie w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="897cc-130">The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</span></span> <span data-ttu-id="897cc-131">Przy użyciu modelu synchroniczne, wywołaj <xref:System.Net.HttpListener.GetContext%2A> metody, która czeka na klienta wysłać żądanie.</span><span class="sxs-lookup"><span data-stu-id="897cc-131">Using the synchronous model, call the <xref:System.Net.HttpListener.GetContext%2A> method, which waits for a client to send a request.</span></span> <span data-ttu-id="897cc-132">Metoda ta zwraca <xref:System.Net.HttpListenerContext> obiekt dla przetwarzania, gdy dla jednego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="897cc-132">The method returns an <xref:System.Net.HttpListenerContext> object to you for processing when one occurs.</span></span>
  
 <span data-ttu-id="897cc-133">W bardziej złożonych model asynchronicznego aplikacji nie są blokowane podczas oczekiwania na żądania i każdego żądania są przetwarzane w jego własnym wątku wykonywania.</span><span class="sxs-lookup"><span data-stu-id="897cc-133">In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</span></span> <span data-ttu-id="897cc-134">Użyj <xref:System.Net.HttpListener.BeginGetContext%2A> metodę, aby określić metodę zdefiniowanych przez aplikację, będzie wywoływana dla każdego żądania przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="897cc-134">Use the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify an application-defined method to be called for each incoming request.</span></span> <span data-ttu-id="897cc-135">W ramach tej metody należy wywołać <xref:System.Net.HttpListener.EndGetContext%2A> metodę, aby uzyskać żądania, przetwarzanie i reagować.</span><span class="sxs-lookup"><span data-stu-id="897cc-135">Within that method, call the <xref:System.Net.HttpListener.EndGetContext%2A> method to obtain the request, process it, and respond.</span></span>
  
 <span data-ttu-id="897cc-136">W obu modelu żądania przychodzące są dostępne przy użyciu <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> właściwości i są reprezentowane przez <xref:System.Net.HttpListenerRequest> obiektów.</span><span class="sxs-lookup"><span data-stu-id="897cc-136">In either model, incoming requests are accessed using the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerRequest> objects.</span></span> <span data-ttu-id="897cc-137">Podobnie, odpowiedzi są dostępne przy użyciu <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> właściwości i są reprezentowane przez <xref:System.Net.HttpListenerResponse> obiektów.</span><span class="sxs-lookup"><span data-stu-id="897cc-137">Similarly, responses are accessed using the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerResponse> objects.</span></span> <span data-ttu-id="897cc-138">Te obiekty współużytkują pewne funkcje za pomocą <xref:System.Net.HttpWebRequest> i <xref:System.Net.HttpWebResponse> obiektów, ale jego obiektów nie można używać w połączeniu z <xref:System.Net.HttpListener> ponieważ implementują klienta, a nie serwera, zachowań.</span><span class="sxs-lookup"><span data-stu-id="897cc-138">These objects share some functionality with the <xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> objects, but the latter objects cannot be used in conjunction with <xref:System.Net.HttpListener> because they implement client, not server, behaviors.</span></span>
  
 <span data-ttu-id="897cc-139"><xref:System.Net.HttpListener> Może być wymagane uwierzytelnienie klienta.</span><span class="sxs-lookup"><span data-stu-id="897cc-139">An <xref:System.Net.HttpListener> can require client authentication.</span></span> <span data-ttu-id="897cc-140">Można określić określonego schematu na potrzeby uwierzytelniania lub można określić obiekt delegowany, który określa schemat do użycia.</span><span class="sxs-lookup"><span data-stu-id="897cc-140">You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</span></span> <span data-ttu-id="897cc-141">Może wymagać jakąś formę uwierzytelniania, aby uzyskać informacje o tożsamości klienta.</span><span class="sxs-lookup"><span data-stu-id="897cc-141">You must require some form of authentication to obtain information about the client's identity.</span></span> <span data-ttu-id="897cc-142">Aby uzyskać więcej informacji, zobacz <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, i <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-142">For additional information, see the <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, and <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> properties.</span></span>
  
> [!NOTE]
> <span data-ttu-id="897cc-143">Jeśli tworzysz <xref:System.Net.HttpListener> przy użyciu protokołu https, należy wybrać certyfikat serwera dla tego odbiornika.</span><span class="sxs-lookup"><span data-stu-id="897cc-143">If you create an <xref:System.Net.HttpListener> using https, you must select a Server Certificate for that listener.</span></span> <span data-ttu-id="897cc-144">W przeciwnym razie <xref:System.Net.HttpWebRequest> zapytania to <xref:System.Net.HttpListener> zakończy się niepowodzeniem z nieoczekiwane zamknięcie połączenia.</span><span class="sxs-lookup"><span data-stu-id="897cc-144">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span>
  
> [!NOTE]
> <span data-ttu-id="897cc-145">Za pomocą powłoki sieciowej (netsh.exe) można skonfigurować certyfikaty serwera oraz inne opcje odbiornika.</span><span class="sxs-lookup"><span data-stu-id="897cc-145">You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</span></span> <span data-ttu-id="897cc-146">Zobacz [powłoki sieciowej (Netsh)](/windows-server/networking/technologies/netsh/netsh) Aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="897cc-146">See [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) for more details.</span></span> <span data-ttu-id="897cc-147">Plik wykonywalny rozpoczęcia wysyłania za pomocą systemu Windows Server 2008 i Windows Vista.</span><span class="sxs-lookup"><span data-stu-id="897cc-147">The executable began shipping with Windows Server 2008 and Windows Vista.</span></span>
  
> [!NOTE]
> <span data-ttu-id="897cc-148">W przypadku określenia wielu schematów uwierzytelniania dla <xref:System.Net.HttpListener>, odbiornik zażąda klientów w następującej kolejności: `Negotiate`, `NTLM`, `Digest`, a następnie `Basic`.</span><span class="sxs-lookup"><span data-stu-id="897cc-148">If you specify multiple authentication schemes for the <xref:System.Net.HttpListener>, the listener will challenge clients in the following order: `Negotiate`, `NTLM`, `Digest`, and then `Basic`.</span></span>
  
   
  
## Examples
 <span data-ttu-id="897cc-149">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="897cc-149">The following code example demonstrates using a <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="897cc-150">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.HttpListener" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-150">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-151">Przed użyciem wystąpienie zwrócone przez ten konstruktor, należy wywołać jej <xref:System.Net.HttpListener.Start%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-151">Before using the instance returned by this constructor, you must invoke its <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-152">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Net.HttpListener> Konstruktor do tworzenia nowego <xref:System.Net.HttpListener> obiektu.</span><span class="sxs-lookup"><span data-stu-id="897cc-152">The following code example demonstrates using the <xref:System.Net.HttpListener> constructor to create a new <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="897cc-153">Aby uzyskać kompletny przykład, zobacz <xref:System.Net.HttpListener> temat poświęcony klasie.</span><span class="sxs-lookup"><span data-stu-id="897cc-153">For the complete example, see the <xref:System.Net.HttpListener> class topic.</span></span>  
  
 [!code-csharp[Net_listener_Basic#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="897cc-154">Nie można użyć tej klasy w bieżącym systemie operacyjnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-154">This class cannot be used on the current operating system.</span>
          </span>
          <span data-ttu-id="897cc-155">Windows Server 2003 lub Windows XP z dodatkiem SP2 jest wymagana do użycia wystąpienia tej klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-155">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="897cc-156">
            <para>Uwaga: Ten element członkowski generuje informacje ze śledzenia, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-156">
              <para>Note: This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpListener.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="897cc-157">Zamyka <see cref="T:System.Net.HttpListener" /> natychmiast, obiektu, odrzucając wszystkie aktualnie w kolejce żądań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-157">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-158">Ta metoda usuwa wszystkie zasoby zajmowane przez ten odbiornik.</span><span class="sxs-lookup"><span data-stu-id="897cc-158">This method disposes of all resources held by this listener.</span></span> <span data-ttu-id="897cc-159">Nie można ukończyć są żadnych oczekujących żądań.</span><span class="sxs-lookup"><span data-stu-id="897cc-159">Any pending requests are unable to complete.</span></span>  
  
 <span data-ttu-id="897cc-160">Po wywołaniu tej metody, zostanie wyświetlony <xref:System.ObjectDisposedException> Jeśli spróbujesz użyć tej funkcji <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="897cc-160">After calling this method, you will receive an <xref:System.ObjectDisposedException> if you attempt to use this <xref:System.Net.HttpListener>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-161">Poniższy przykład kodu demonstruje wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-161">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="897cc-162">
            <para>Ten element członkowski generuje informacje ze śledzenia, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-162">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemes">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes AuthenticationSchemes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes AuthenticationSchemes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemes" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemes As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes AuthenticationSchemes { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemes : System.Net.AuthenticationSchemes with get, set" Usage="System.Net.HttpListener.AuthenticationSchemes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-163">Pobiera lub ustawia Schemat używany do uwierzytelniania klientów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-163">Gets or sets the scheme used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-164">Bitowa kombinacja <see cref="T:System.Net.AuthenticationSchemes" /> wartości wyliczenia wskazująca na to, jak klienci znajdują się w celu uwierzytelnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-164">A bitwise combination of <see cref="T:System.Net.AuthenticationSchemes" /> enumeration values that indicates how clients are to be authenticated.</span>
          </span>
          <span data-ttu-id="897cc-165">Wartość domyślna to <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-165">The default value is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-166"><xref:System.Net.HttpListener> Korzysta określony schemat do uwierzytelniania wszystkich żądań przychodzących.</span><span class="sxs-lookup"><span data-stu-id="897cc-166">The <xref:System.Net.HttpListener> uses the specified scheme to authenticate all incoming requests.</span></span> <span data-ttu-id="897cc-167"><xref:System.Net.HttpListener.GetContext%2A> i <xref:System.Net.HttpListener.EndGetContext%2A> metody zwracają przychodzącego żądania klienta, tylko wtedy, gdy <xref:System.Net.HttpListener> pomyślnie uwierzytelnia żądanie.</span><span class="sxs-lookup"><span data-stu-id="897cc-167">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming client request only if the <xref:System.Net.HttpListener> successfully authenticates the request.</span></span>  
  
 <span data-ttu-id="897cc-168">Tożsamość pomyślnie uwierzytelniany klient może interrogate przy użyciu <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-168">You can interrogate the identity of a successfully authenticated client by using the <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="897cc-169">Jeśli chcesz <xref:System.Net.HttpListener> obiekt ma być używany z różnych mechanizmów uwierzytelniania na podstawie charakterystyki żądań odbierze (na przykład żądania <xref:System.Net.HttpListenerRequest.Url%2A> lub <xref:System.Net.HttpListenerRequest.UserHostName%2A> właściwości), należy zaimplementować metodę, która wybiera schemat uwierzytelniania.</span><span class="sxs-lookup"><span data-stu-id="897cc-169">If you want an <xref:System.Net.HttpListener> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostName%2A> property), you must implement a method that chooses the authentication scheme.</span></span> <span data-ttu-id="897cc-170">Aby dowiedzieć się, jak to zrobić, zobacz <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> dokumentacji właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-170">For instructions about how to do this, see the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="897cc-171">Aby ustawić tę właściwość, aby włączyć Digest, NTLM i Negotiate wymaga <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="897cc-171">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-172">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Net.HttpListener.AuthenticationSchemes%2A> właściwości w celu określenia schematu uwierzytelniania.</span><span class="sxs-lookup"><span data-stu-id="897cc-172">The following code example demonstrates using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property to specify an authentication scheme.</span></span>  
  
 [!code-csharp[Net_listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-173">Ten obiekt został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-173">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemeSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemeSelectorDelegate As AuthenticationSchemeSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemeSelector ^ AuthenticationSchemeSelectorDelegate { System::Net::AuthenticationSchemeSelector ^ get(); void set(System::Net::AuthenticationSchemeSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemeSelectorDelegate : System.Net.AuthenticationSchemeSelector with get, set" Usage="System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemeSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-174">Pobiera lub ustawia delegata, wywoływana w celu określenia protokół używany do uwierzytelniania klientów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-174">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-175">
            <see cref="T:System.Net.AuthenticationSchemeSelector" /> Delegat, który wywołuje metodę używaną do wybierania protokołu uwierzytelniania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-175">An <see cref="T:System.Net.AuthenticationSchemeSelector" /> delegate that invokes the method used to select an authentication protocol.</span>
          </span>
          <span data-ttu-id="897cc-176">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-176">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="897cc-177">Jeśli chcesz, aby ten sam protokół uwierzytelniania do użycia dla wszystkich żądań obsługiwanych przez konkretne wystąpienie <xref:System.Net.HttpListener>, nie należy ustawić tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="897cc-177">If you want the same authentication protocol to be used for all requests handled by a particular instance of <xref:System.Net.HttpListener>, you do not need to set this property.</span></span> <span data-ttu-id="897cc-178">Aby określić protokół do użycia dla wszystkich żądań klientów, należy użyć <xref:System.Net.HttpListener.AuthenticationSchemes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-178">To specify a protocol to be used for all client requests, use the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property.</span></span>  
  
 <span data-ttu-id="897cc-179">Jeśli klient nie określił informacje dotyczące uwierzytelniania w jego nagłówkach <xref:System.Net.HttpListener> wywołuje określonego delegata dla każdego nieuwierzytelnione żądania przychodzącego określić, jeśli istnieje, protokołu używanego na potrzeby uwierzytelniania klienta.</span><span class="sxs-lookup"><span data-stu-id="897cc-179">If the client has not specified authentication information in its headers, the <xref:System.Net.HttpListener> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</span></span> <span data-ttu-id="897cc-180"><xref:System.Net.HttpListener.GetContext%2A> i <xref:System.Net.HttpListener.EndGetContext%2A> metody zwracają przychodzące żądania tylko wtedy, gdy <xref:System.Net.HttpListener> pomyślnym uwierzytelnieniu żądanie.</span><span class="sxs-lookup"><span data-stu-id="897cc-180">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming request only if the <xref:System.Net.HttpListener> successfully authenticated the request.</span></span> <span data-ttu-id="897cc-181">Jeśli nie można uwierzytelnić żądania, <xref:System.Net.HttpListener> automatycznie wyśle z powrotem odpowiedzi 401.</span><span class="sxs-lookup"><span data-stu-id="897cc-181">If a request cannot be authenticated, the <xref:System.Net.HttpListener> automatically sends back a 401 response.</span></span> <span data-ttu-id="897cc-182">Można uzyskać tożsamości klienta pomyślnie uwierzytelnione przy użyciu <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-182">You can get the identity of a successfully authenticated client using the <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="897cc-183">Możliwość delegowania wybór protokołu uwierzytelniania metodą specyficzne dla aplikacji jest przydatne w przypadku wystąpienia <xref:System.Net.HttpListener> do różnych protokołów uwierzytelniania w zależności od charakterystyki żądań odbierze (w przypadku użycia przykład żądania <xref:System.Net.HttpListenerRequest.Url%2A> lub <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> właściwości).</span><span class="sxs-lookup"><span data-stu-id="897cc-183">The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <xref:System.Net.HttpListener> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="897cc-184">Aby ustawić tę właściwość, aby włączyć Digest, NTLM i Negotiate wymaga <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span><span class="sxs-lookup"><span data-stu-id="897cc-184">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-185">Poniższy przykład kodu ustawia wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-185">The following code example sets the value of this property.</span></span>  
  
 [!code-csharp[NclListener#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#2)]
 [!code-vb[NclListener#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#2)]  
  
 <span data-ttu-id="897cc-186">W poniższym przykładzie kodu przedstawiono implementację metody wywoływane przez <xref:System.Net.AuthenticationSchemeSelector> delegować.</span><span class="sxs-lookup"><span data-stu-id="897cc-186">The following code example provides an implementation of a method invoked by an <xref:System.Net.AuthenticationSchemeSelector> delegate.</span></span>  
  
 [!code-csharp[NclListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#1)]
 [!code-vb[NclListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-187">Ten obiekt został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-187">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetContext">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetContext (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetContext(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetContext (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetContext(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetContext : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListener.BeginGetContext (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="897cc-188">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania, gdy żądanie klienta jest dostępny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-188">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="897cc-189">Obiekt zdefiniowany przez użytkownika, który zawiera informacje na temat operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-189">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="897cc-190">Ten obiekt jest przekazywany do <c>wywołania zwrotnego</c> po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-190">This object is passed to the <c>callback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="897cc-191">Rozpocznie się pobieranie asynchronicznie żądanie przychodzące.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-191">Begins asynchronously retrieving an incoming request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="897cc-192">
            <see cref="T:System.IAsyncResult" /> Obiekt, który wskazuje stan operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-192">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-193"><xref:System.Net.HttpListener.BeginGetContext%2A> Metoda rozpoczyna (bez blokowania) wywołanie asynchroniczne do odbierania przychodzących żądań klientów.</span><span class="sxs-lookup"><span data-stu-id="897cc-193">The <xref:System.Net.HttpListener.BeginGetContext%2A> method begins an asynchronous (non-blocking) call to receive incoming client requests.</span></span> <span data-ttu-id="897cc-194">Przed wywołaniem tej metody, należy wywołać <xref:System.Net.HttpListener.Start%2A> metody i Dodaj co najmniej jeden prefiks identyfikatora URI (Uniform Resource) do nasłuchiwania, dodając parametry identyfikatora URI do <xref:System.Net.HttpListenerPrefixCollection> zwrócone przez <xref:System.Net.HttpListener.Prefixes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-194">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="897cc-195">Operacja asynchroniczna musi wykonać wywołanie <xref:System.Net.HttpListener.EndGetContext%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-195">The asynchronous operation must be completed by calling the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span> <span data-ttu-id="897cc-196">Zazwyczaj metoda jest wywoływana przez `callback` delegować.</span><span class="sxs-lookup"><span data-stu-id="897cc-196">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="897cc-197">Ta metoda nie są blokowane podczas kończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="897cc-197">This method does not block while the operation completes.</span></span> <span data-ttu-id="897cc-198">Aby uzyskać przychodzących żądań i bloku do momentu ukończenia operacji, należy wywołać <xref:System.Net.HttpListener.GetContext%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-198">To get an incoming request and block until the operation completes, call the <xref:System.Net.HttpListener.GetContext%2A> method.</span></span>  
  
 <span data-ttu-id="897cc-199">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="897cc-199">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-200">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Net.HttpListener.BeginGetContext%2A> metodę, aby określić metodę wywołania zwrotnego, która będzie obsługiwać przychodzące żądania klientów.</span><span class="sxs-lookup"><span data-stu-id="897cc-200">The following code example demonstrates using the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify a callback method that will handle incoming client requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 <span data-ttu-id="897cc-201">Poniższy przykładowy kod implementuje metodą wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="897cc-201">The following code example implements a callback method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="897cc-202">Wywołanie funkcji Win32 nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-202">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="897cc-203">Sprawdzanie wyjątku <see cref="P:System.Net.HttpListenerException.ErrorCode" /> właściwości, aby ustalić przyczynę wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-203">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="897cc-204">Ten obiekt nie została uruchomiona lub jest obecnie zatrzymana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-204">This object has not been started or is currently stopped.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-205">Ten obiekt jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-205">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="897cc-206">
            <para>Ten element członkowski generuje informacje ze śledzenia, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-206">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="httpListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="897cc-207">Zamyka <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-207">Shuts down the <see cref="T:System.Net.HttpListener" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-208">Po wywołaniu tej metody, której już nie używasz <xref:System.Net.HttpListener> obiektu.</span><span class="sxs-lookup"><span data-stu-id="897cc-208">After calling this method, you can no longer use the <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="897cc-209">Aby tymczasowo wstrzymać <xref:System.Net.HttpListener> obiektu, należy użyć <xref:System.Net.HttpListener.Stop%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-209">To temporarily pause an <xref:System.Net.HttpListener> object, use the <xref:System.Net.HttpListener.Stop%2A> method.</span></span>  
  
 <span data-ttu-id="897cc-210">Ta metoda zamykanie szczegółu <xref:System.Net.HttpListener> obiektu bez przetwarzania żądań w kolejce.</span><span class="sxs-lookup"><span data-stu-id="897cc-210">This method shut downs the <xref:System.Net.HttpListener> object without processing queued requests.</span></span> <span data-ttu-id="897cc-211">Nie można ukończyć są żadnych oczekujących żądań.</span><span class="sxs-lookup"><span data-stu-id="897cc-211">Any pending requests are unable to complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-212">Poniższy przykład kodu demonstruje wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-212">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="897cc-213">
            <para>Ten element członkowski generuje informacje ze śledzenia, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-213">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultServiceNames">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.DefaultServiceNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultServiceNames As ServiceNameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ DefaultServiceNames { System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultServiceNames : System.Security.Authentication.ExtendedProtection.ServiceNameCollection" Usage="System.Net.HttpListener.DefaultServiceNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ServiceNameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-214">Pobiera domyślną listę nazw dostawcy usługi (SPN), zgodnie z ustaleniami zarejestrowanych prefiksy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-214">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-215">Element <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> zawierający listę nazw SPN.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-215">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains a list of SPNs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-216"><xref:System.Net.HttpListener.DefaultServiceNames%2A> Właściwość jest używana przy użyciu zintegrowanego uwierzytelniania Windows w celu zapewnienia ochrony rozszerzonej.</span><span class="sxs-lookup"><span data-stu-id="897cc-216">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="897cc-217">Lista nazw SPN jest inicjowany z <xref:System.Net.HttpListener.Prefixes%2A> właściwości dostępne i wyczyszczone po dodaniu do nowego prefiksy <xref:System.Net.HttpListener.Prefixes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-217">The list of SPNs is initialized from the <xref:System.Net.HttpListener.Prefixes%2A> property when accessed and cleared when new prefixes are added to the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="897cc-218"><xref:System.Net.HttpListener.DefaultServiceNames%2A> Właściwość jest używana, jeśli aplikacja nie został ustawiony <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> właściwość jej zasady ochrony rozszerzonej.</span><span class="sxs-lookup"><span data-stu-id="897cc-218">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used if an application doesn't set the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> property on its extended protection policy.</span></span>  
  
 <span data-ttu-id="897cc-219"><xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> Który jest pobierany za pomocą <xref:System.Net.HttpListener.DefaultServiceNames%2A> właściwość została stworzona od <xref:System.Net.HttpListener.Prefixes%2A> właściwości zgodnie z następującymi zasadami:</span><span class="sxs-lookup"><span data-stu-id="897cc-219">The <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> that is retrieved with the <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is built from the <xref:System.Net.HttpListener.Prefixes%2A> property according to the following rules:</span></span>  
  
1.  <span data-ttu-id="897cc-220">Jeśli nazwa hosta jest "+", "*", lub literału IPv4 lub IPv6 (odpowiednikiem "\*" ale jest ograniczony do określonego interfejsu lokalnego), następujące nazwy SPN zostanie dodany:</span><span class="sxs-lookup"><span data-stu-id="897cc-220">If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "\*" but restricted to a specific local interface), the following SPN is added:</span></span>  
  
 <span data-ttu-id="897cc-221">`"HTTP/"` Ponadto w pełni kwalifikowana nazwa domeny komputera.</span><span class="sxs-lookup"><span data-stu-id="897cc-221">`"HTTP/"` plus the fully qualified domain name of the computer.</span></span>  
  
1.  <span data-ttu-id="897cc-222">Jeśli nazwa hosta nie zawiera kropek (nie domeny lub poddomeny), podejmowana jest próba rozpoznać w pełni kwalifikowana nazwa domeny przy użyciu systemu DNS (takie samo zachowanie, które są używane przez <xref:System.Net.HttpWebRequest>).</span><span class="sxs-lookup"><span data-stu-id="897cc-222">If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <xref:System.Net.HttpWebRequest>).</span></span> <span data-ttu-id="897cc-223">Jeśli w pełni kwalifikowana nazwa domeny może być rozpoznana, zostaną dodane następujące nazwy SPN:</span><span class="sxs-lookup"><span data-stu-id="897cc-223">If the fully-qualified domain name can be resolved, the following SPNs are added:</span></span>  
  
 <span data-ttu-id="897cc-224">`"HTTP/"` Ponadto nazwa hosta (krótka nazwa).</span><span class="sxs-lookup"><span data-stu-id="897cc-224">`"HTTP/"` plus the hostname (the short name).</span></span>  
  
 <span data-ttu-id="897cc-225">`"HTTP/"` Ponadto w pełni kwalifikowana nazwa domeny dla nazwy hosta.</span><span class="sxs-lookup"><span data-stu-id="897cc-225">`"HTTP/"` plus the fully qualified domain name for the hostname.</span></span>  
  
1.  <span data-ttu-id="897cc-226">Jeśli w pełni kwalifikowaną nazwą domeny nie można rozpoznać nazwy hosta zawiera nie kropki (nie domeny lub poddomeny), następujące nazwy SPN zostanie dodana:</span><span class="sxs-lookup"><span data-stu-id="897cc-226">If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</span></span>  
  
 <span data-ttu-id="897cc-227">`"HTTP/"` Ponadto nazwa hosta.</span><span class="sxs-lookup"><span data-stu-id="897cc-227">`"HTTP/"` plus the hostname.</span></span>  
  
1.  <span data-ttu-id="897cc-228">Jeśli nazwa hosta zawiera kropki (domeny lub poddomeny), następujące nazwy SPN zostanie dodana:</span><span class="sxs-lookup"><span data-stu-id="897cc-228">If the hostname contains dots (domains or subdomains), the following SPN is added:</span></span>  
  
 <span data-ttu-id="897cc-229">`"HTTP/"` Ponadto nazwa hosta.</span><span class="sxs-lookup"><span data-stu-id="897cc-229">`"HTTP/"` plus the hostname.</span></span>  
  
 <span data-ttu-id="897cc-230"><xref:System.Net.HttpListener.DefaultServiceNames%2A> Właściwość może służyć przez aplikację, aby zapoznać się z nazwy SPN domyślnego, które będzie używany do uwierzytelniania, jeśli nie dostarczono żadnych listy niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="897cc-230">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</span></span> <span data-ttu-id="897cc-231">Jeśli potrzebne są inne nazwy SPN, aplikacja je dodać przy użyciu jednej z <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-231">If other SPNs are needed, an application can add them using one of the <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> methods.</span></span>  
  
 <span data-ttu-id="897cc-232">Nie jest bezpieczne podczas korzystania z rozszerzonej ochrony w celu podejmowania decyzji dotyczących zasad w oparciu o żądany adres URL, ponieważ może to być sfałszowane.</span><span class="sxs-lookup"><span data-stu-id="897cc-232">It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</span></span> <span data-ttu-id="897cc-233">Przeciwnie, aplikacje będą miały <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> lub <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> właściwości podjąć decyzje dotyczące tych zasad.</span><span class="sxs-lookup"><span data-stu-id="897cc-233">Rather, applications should rely on the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> or <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> properties to make such policy decisions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="EndGetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext EndGetContext (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext EndGetContext(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetContext (asyncResult As IAsyncResult) As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ EndGetContext(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetContext : IAsyncResult -&gt; System.Net.HttpListenerContext" Usage="httpListener.EndGetContext asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="897cc-234">
            <see cref="T:System.IAsyncResult" /> Obiekt, który uzyskano, gdy operacja asynchroniczna została uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-234">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="897cc-235">Kończy operację asynchroniczną do pobrania przychodzącego żądania klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-235">Completes an asynchronous operation to retrieve an incoming client request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="897cc-236">
            <see cref="T:System.Net.HttpListenerContext" /> Obiekt reprezentujący żądanie klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-236">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-237"><xref:System.Net.HttpListener.EndGetContext%2A> Wywoływana jest metoda, zazwyczaj zdefiniowanych przez aplikację metody wywołania zwrotnego wywoływana przez obiekt delegowany, aby uzyskać <xref:System.Net.HttpListenerContext> obiekt, który zawiera przychodzącego żądania klienta i jego skojarzone odpowiedzi.</span><span class="sxs-lookup"><span data-stu-id="897cc-237">The <xref:System.Net.HttpListener.EndGetContext%2A> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <xref:System.Net.HttpListenerContext> object that contains an incoming client request and its associated response.</span></span> <span data-ttu-id="897cc-238">Ta metoda wykona operację wcześniej uruchomione przez wywołanie metody <xref:System.Net.HttpListener.BeginGetContext%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-238">This method completes an operation previously started by calling the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="897cc-239">Jeśli operacja nie została ukończona, ta metoda blokuje, dopóki nie robi.</span><span class="sxs-lookup"><span data-stu-id="897cc-239">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="897cc-240">Ponieważ wywołanie <xref:System.Net.HttpListener.EndGetContext%2A> metoda wymaga <xref:System.Net.HttpListener> obiektu, ten obiekt jest zwykle przekazywany do metody wywołania zwrotnego, za pomocą obiektu stanu do <xref:System.Net.HttpListener.BeginGetContext%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-240">Because calling the <xref:System.Net.HttpListener.EndGetContext%2A> method requires the <xref:System.Net.HttpListener> object, this object is typically passed into a callback method by using the state object passed into the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="897cc-241">Obiekt stanu można uzyskać za pomocą <xref:System.IAsyncResult.AsyncState%2A> właściwość `asyncResult` obiektu.</span><span class="sxs-lookup"><span data-stu-id="897cc-241">You can obtain this state object by using the <xref:System.IAsyncResult.AsyncState%2A> property of the `asyncResult` object.</span></span>  
  
 <span data-ttu-id="897cc-242">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="897cc-242">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-243">Poniższy przykład kodu pokazuje implementację metody wywołania zwrotnego, która wywołuje <xref:System.Net.HttpListener.EndGetContext%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-243">The following code example shows the implementation of a callback method that calls the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="897cc-244">
            <paramref name="asyncResult" /> nie uzyskano przez wywołanie metody <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-244">
              <paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="897cc-245">
            <paramref name="asyncResult" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-245">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="897cc-246">
            <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> Metoda została już wywołana dla określonego <paramref name="asyncResult" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-246">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-247">Ten obiekt jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-247">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="897cc-248">
            <para>Ten element członkowski generuje informacje ze śledzenia, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-248">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionPolicy : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy with get, set" Usage="System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("not used anywhere in the implementation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-249">Pobieranie lub ustawianie <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> na potrzeby ochrona rozszerzona na potrzeby sesji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-249">Get or set the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-250">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> określający zasad do użycia dla ochrony rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-250">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-251"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> Właściwość jest używana przy użyciu zintegrowanego uwierzytelniania Windows w celu zapewnienia ochrony rozszerzonej.</span><span class="sxs-lookup"><span data-stu-id="897cc-251">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="897cc-252"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> Właściwość umożliwia konfigurację zasady ochrony rozszerzonej w całym <xref:System.Net.HttpListener> sesji.</span><span class="sxs-lookup"><span data-stu-id="897cc-252">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="897cc-253"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> Właściwość umożliwia konfigurację zasady ochrony rozszerzonej dla każdego pojedynczego żądania.</span><span class="sxs-lookup"><span data-stu-id="897cc-253">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy for each individual request.</span></span>  
  
 <span data-ttu-id="897cc-254"><xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> Właściwość musi być `null`.</span><span class="sxs-lookup"><span data-stu-id="897cc-254">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="897cc-255"><xref:System.Net.HttpListener> Wystąpienie zyskuje kanału powiązanie Token (CBT) bezpośrednio z własnej sesji protokołu TLS, jeśli taka istnieje.</span><span class="sxs-lookup"><span data-stu-id="897cc-255">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="897cc-256">Próbowano ustawić <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> właściwości, ale <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> właściwość nie była <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-256">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="897cc-257">Próbowano ustawić <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> właściwość <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-257">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="897cc-258">Próbowano ustawić <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> właściwości po <see cref="M:System.Net.HttpListener.Start" /> metoda została już wywołana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-258">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-259">Ten obiekt jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-259">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="897cc-260">
            <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> Właściwość <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> na platformie, która nie obsługuje ochrony rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-260">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpListener.ExtendedProtectionSelector ExtendedProtectionSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListener/ExtendedProtectionSelector ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionSelectorDelegate As HttpListener.ExtendedProtectionSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListener::ExtendedProtectionSelector ^ ExtendedProtectionSelectorDelegate { System::Net::HttpListener::ExtendedProtectionSelector ^ get(); void set(System::Net::HttpListener::ExtendedProtectionSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionSelectorDelegate : System.Net.HttpListener.ExtendedProtectionSelector with get, set" Usage="System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener+ExtendedProtectionSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-261">Pobieranie lub ustawianie delegat wywoływany w celu określenia <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> do użycia dla każdego żądania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-261">Get or set the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-262">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> określający zasad do użycia dla ochrony rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-262">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-263"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> Właściwość jest używana przy użyciu zintegrowanego uwierzytelniania Windows w celu zapewnienia ochrony rozszerzonej.</span><span class="sxs-lookup"><span data-stu-id="897cc-263">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="897cc-264"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> Właściwość umożliwia konfigurację zasady ochrony rozszerzonej w całym <xref:System.Net.HttpListener> sesji.</span><span class="sxs-lookup"><span data-stu-id="897cc-264">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="897cc-265"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> Właściwość umożliwia konfigurację zasad ochrona rozszerzona na oddzielne żądanie.</span><span class="sxs-lookup"><span data-stu-id="897cc-265">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy per individual request.</span></span>  
  
 <span data-ttu-id="897cc-266"><xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> Właściwość musi być `null`.</span><span class="sxs-lookup"><span data-stu-id="897cc-266">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="897cc-267"><xref:System.Net.HttpListener> Wystąpienie zyskuje kanału powiązanie Token (CBT) bezpośrednio z własnej sesji protokołu TLS, jeśli taka istnieje.</span><span class="sxs-lookup"><span data-stu-id="897cc-267">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 <span data-ttu-id="897cc-268">Dla każdego żądania delegata można wybrać ustawienia <xref:System.Net.HttpListener> wystąpienia użyje w celu zapewnienia ochrony rozszerzonej.</span><span class="sxs-lookup"><span data-stu-id="897cc-268">For each request, the delegate can choose the settings that the <xref:System.Net.HttpListener> instance will use to provide extended protection.</span></span>  
  
 <span data-ttu-id="897cc-269">Jeśli funkcja zwraca obiekt delegowany `null` dla tej właściwości to reprezentuje <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> który <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> właściwością <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="897cc-269">If a delegate returns `null` for this property, this represents a <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> which the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> property set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="897cc-270">Próbowano ustawić <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> właściwości, ale <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> właściwość musi być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-270">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="897cc-271">Próbowano ustawić <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> właściwość <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-271">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="897cc-272">Próbowano ustawić <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> właściwości po <see cref="M:System.Net.HttpListener.Start" /> metoda została już wywołana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-272">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-273">Ten obiekt jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-273">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="897cc-274">Próbowano ustawić <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> właściwości na platformie, która nie obsługuje ochrony rozszerzonej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-274">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ GetContext();" />
      <MemberSignature Language="F#" Value="member this.GetContext : unit -&gt; System.Net.HttpListenerContext" Usage="httpListener.GetContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="897cc-275">Czeka na żądanie przychodzące i zwraca po odebraniu przez jeden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-275">Waits for an incoming request and returns when one is received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="897cc-276">
            <see cref="T:System.Net.HttpListenerContext" /> Obiekt reprezentujący żądanie klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-276">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-277">Przed wywołaniem tej metody, należy wywołać <xref:System.Net.HttpListener.Start%2A> metody i Dodaj co najmniej jeden prefiks identyfikatora URI do nasłuchiwania, dodając parametry identyfikatora URI do <xref:System.Net.HttpListenerPrefixCollection> zwrócone przez <xref:System.Net.HttpListener.Prefixes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-277">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="897cc-278">Aby uzyskać szczegółowy opis prefiksów, zobacz <xref:System.Net.HttpListener> klasa — Przegląd.</span><span class="sxs-lookup"><span data-stu-id="897cc-278">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 <span data-ttu-id="897cc-279">Blokuje tej metody, podczas oczekiwania na żądanie przychodzące.</span><span class="sxs-lookup"><span data-stu-id="897cc-279">This method blocks while waiting for an incoming request.</span></span> <span data-ttu-id="897cc-280">Przychodzące żądania, które mają być przetwarzane asynchronicznie (w oddzielnych wątkach), tak aby nie są blokowane w aplikacji, użyć <xref:System.Net.HttpListener.BeginGetContext%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-280">If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-281">Poniższy przykład kodu demonstruje wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-281">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="897cc-282">Wywołanie funkcji Win32 nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-282">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="897cc-283">Sprawdzanie wyjątku <see cref="P:System.Net.HttpListenerException.ErrorCode" /> właściwości, aby ustalić przyczynę wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-283">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="897cc-284">Ten obiekt nie została uruchomiona lub jest obecnie zatrzymana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-284">This object has not been started or is currently stopped.</span>
          </span>
          <span data-ttu-id="897cc-285">- lub - <see cref="T:System.Net.HttpListener" /> nie ma wszelkie prefiksy identyfikator (URI), aby odpowiedzieć na.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-285">-or-  The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-286">Ten obiekt jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-286">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="897cc-287">
            <para>Ten element członkowski generuje informacje ze śledzenia, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-287">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetContextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt; GetContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.HttpListenerContext&gt; GetContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextAsync () As Task(Of HttpListenerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::HttpListenerContext ^&gt; ^ GetContextAsync();" />
      <MemberSignature Language="F#" Value="member this.GetContextAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;" Usage="httpListener.GetContextAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="897cc-288">Czeka na żądanie przychodzące jako operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-288">Waits for an incoming request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="897cc-289">Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-289">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="897cc-290">Obiekt zadania reprezentujący operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-290">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="897cc-291">
            <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Net.HttpListenerContext" /> obiekt reprezentujący żądanie klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-291">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-292">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="897cc-292">This operation will not block.</span></span> <span data-ttu-id="897cc-293">Zwrócony <xref:System.Threading.Tasks.Task%601> obiektu zostanie ukończone, gdy otrzymano żądanie przychodzące.</span><span class="sxs-lookup"><span data-stu-id="897cc-293">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the incoming request has been received.</span></span>  
  
 <span data-ttu-id="897cc-294">Przed wywołaniem tej metody, należy wywołać <xref:System.Net.HttpListener.Start%2A> metody i Dodaj co najmniej jeden prefiks identyfikatora URI do nasłuchiwania, dodając parametry identyfikatora URI do <xref:System.Net.HttpListenerPrefixCollection> zwrócone przez <xref:System.Net.HttpListener.Prefixes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-294">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="897cc-295">Aby uzyskać szczegółowy opis prefiksów, zobacz <xref:System.Net.HttpListener> klasa — Przegląd.</span><span class="sxs-lookup"><span data-stu-id="897cc-295">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListenerContext" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWriteExceptions">
      <MemberSignature Language="C#" Value="public bool IgnoreWriteExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWriteExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWriteExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWriteExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWriteExceptions : bool with get, set" Usage="System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-296">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określająca, czy Twoja aplikacja otrzyma wyjątków, które występują, gdy <see cref="T:System.Net.HttpListener" /> wysyła odpowiedź do klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-296">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-297">
            <see langword="true" /> Jeśli ten <see cref="T:System.Net.HttpListener" /> nie powinny zwracać wyjątków, które występują podczas wysyłania odpowiedzi do klienta; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-297">
              <see langword="true" /> if this <see cref="T:System.Net.HttpListener" /> should not return exceptions that occur when sending the response to the client; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="897cc-298">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-298">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-299">Ustaw tę właściwość na `true` Jeśli aplikacja nie wymaga, czy odpowiedź jest pomyślnie wysyłana do każdego klienta.</span><span class="sxs-lookup"><span data-stu-id="897cc-299">Set this property to `true` if your application does not require that a response is successfully sent to each client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-300">Poniższy przykład kodu demonstruje, ustawienie tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-300">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-301">Ten obiekt został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-301">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsListening" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsListening { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsListening : bool" Usage="System.Net.HttpListener.IsListening" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-302">Pobiera wartość wskazującą, czy <see cref="T:System.Net.HttpListener" /> została uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-302">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-303">
            <see langword="true" /> Jeśli <see cref="T:System.Net.HttpListener" /> został uruchomiony; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-303">
              <see langword="true" /> if the <see cref="T:System.Net.HttpListener" /> was started; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-304">Aby rozpocząć <xref:System.Net.HttpListener>, wywołaj <xref:System.Net.HttpListener.Start%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-304">To start an <xref:System.Net.HttpListener>, call the <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-305">Poniższy przykład kodu demonstruje, przy użyciu tej właściwości, aby określić stanie nasłuchiwania wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="897cc-305">The following code example demonstrates using this property to determine the listening state of an instance.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Net.HttpListener.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-306">Pobiera wartość wskazującą, czy <see cref="T:System.Net.HttpListener" /> mogą być używane z bieżącym systemem operacyjnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-306">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-307">
            <see langword="true" /> Jeśli <see cref="T:System.Net.HttpListener" /> jest obsługiwana; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-307">
              <see langword="true" /> if <see cref="T:System.Net.HttpListener" /> is supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-308">Ta klasa jest dostępny tylko na komputerach z systemami operacyjnymi Windows XP z dodatkiem SP2 lub Windows Server 2003.</span><span class="sxs-lookup"><span data-stu-id="897cc-308">This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-309">Poniższy przykład kodu demonstruje użycie <xref:System.Net.HttpListener.IsSupported%2A> właściwości, aby wykryć czy <xref:System.Net.HttpListener> obiekt może być używany z bieżącym systemem operacyjnym.</span><span class="sxs-lookup"><span data-stu-id="897cc-309">The following code example demonstrates the use of the <xref:System.Net.HttpListener.IsSupported%2A> property to detect whether an <xref:System.Net.HttpListener> object can be used with the current operating system.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefixes">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerPrefixCollection Prefixes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerPrefixCollection Prefixes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Prefixes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefixes As HttpListenerPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerPrefixCollection ^ Prefixes { System::Net::HttpListenerPrefixCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefixes : System.Net.HttpListenerPrefixCollection" Usage="System.Net.HttpListener.Prefixes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-310">Pobiera prefiksy identyfikator (URI), obsługiwane przez to <see cref="T:System.Net.HttpListener" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-310">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-311">
            <see cref="T:System.Net.HttpListenerPrefixCollection" /> Zawierający identyfikator URI prefiksów, że <see cref="T:System.Net.HttpListener" /> obiektu jest skonfigurowany do obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-311">An <see cref="T:System.Net.HttpListenerPrefixCollection" /> that contains the URI prefixes that this <see cref="T:System.Net.HttpListener" /> object is configured to handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-312">Prefiksy są w formie kanonicznej.</span><span class="sxs-lookup"><span data-stu-id="897cc-312">The prefixes are in canonical form.</span></span> <span data-ttu-id="897cc-313">Aby uzyskać szczegółowy opis prefiksów, zobacz <xref:System.Net.HttpListener> klasa — Przegląd.</span><span class="sxs-lookup"><span data-stu-id="897cc-313">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-314">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Net.HttpListener.Prefixes%2A> właściwości do drukowania prefiksów identyfikatorów URI, które są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="897cc-314">The following code example demonstrates using the <xref:System.Net.HttpListener.Prefixes%2A> property to obtain and print the URI prefixes that are handled.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-315">Ten obiekt został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-315">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.Net.HttpListener.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-316">Pobiera lub ustawia obszar lub partycji zasobów skojarzonych z tym <see cref="T:System.Net.HttpListener" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-316">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-317">A <see cref="T:System.String" /> wartość, która zawiera nazwę obszaru skojarzony <see cref="T:System.Net.HttpListener" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-317">A <see cref="T:System.String" /> value that contains the name of the realm associated with the <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-318">Serwery używają obszary do partycjonowania chronionych zasobów. Każda partycja może mieć własny schemat i/lub autoryzacji bazy danych uwierzytelniania.</span><span class="sxs-lookup"><span data-stu-id="897cc-318">Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</span></span> <span data-ttu-id="897cc-319">Obszarów są używane tylko w przypadku podstawowe i uwierzytelnianie szyfrowane.</span><span class="sxs-lookup"><span data-stu-id="897cc-319">Realms are used only for basic and digest authentication.</span></span> <span data-ttu-id="897cc-320">Po klient pomyślnie uwierzytelnia, uwierzytelniania jest prawidłowy dla wszystkich zasobów w danego obszaru.</span><span class="sxs-lookup"><span data-stu-id="897cc-320">After a client successfully authenticates, the authentication is valid for all resources in a given realm.</span></span> <span data-ttu-id="897cc-321">Aby uzyskać szczegółowy opis obszarów, zobacz RFC 2617 na [ https://www.ietf.org/ ](https://www.ietf.org/).</span><span class="sxs-lookup"><span data-stu-id="897cc-321">For a detailed description of realms, see RFC 2617 at [https://www.ietf.org/](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="897cc-322">Wystąpienie <xref:System.Net.HttpListener> ma tylko jeden obszar skojarzone.</span><span class="sxs-lookup"><span data-stu-id="897cc-322">An instance of <xref:System.Net.HttpListener> has only one associated realm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-323">Poniższy przykład kodu pokazuje ustawienie <xref:System.Net.HttpListener.Realm%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-323">The following code example demonstrates setting the <xref:System.Net.HttpListener.Realm%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-324">Ten obiekt został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-324">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="httpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="897cc-325">Umożliwia to wystąpienie do odbierania żądań przychodzących.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-325">Allows this instance to receive incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-326">Ta metoda musi być wywoływana przed wywołaniem <xref:System.Net.HttpListener.GetContext%2A> lub <xref:System.Net.HttpListener.BeginGetContext%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-326">This method must be called before you call the <xref:System.Net.HttpListener.GetContext%2A> or <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
 <span data-ttu-id="897cc-327">Po uruchomieniu <xref:System.Net.HttpListener> obiektu, możesz użyć <xref:System.Net.HttpListener.Stop%2A> metody, aby ją wyłączyć.</span><span class="sxs-lookup"><span data-stu-id="897cc-327">After you have started an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Stop%2A> method to stop it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="897cc-328">Jeśli to wystąpienie odbiornika korzysta z protokołu https, należy zainstalować i wybierz certyfikat serwera.</span><span class="sxs-lookup"><span data-stu-id="897cc-328">If this listener instance uses https, you must install and select a Server Certificate.</span></span> <span data-ttu-id="897cc-329">W przeciwnym razie <xref:System.Net.HttpWebRequest> zapytania to <xref:System.Net.HttpListener> zakończy się niepowodzeniem z nieoczekiwane zamknięcie połączenia.</span><span class="sxs-lookup"><span data-stu-id="897cc-329">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span> <span data-ttu-id="897cc-330">Za pomocą HttpCfg.exe można skonfigurować certyfikaty serwera oraz inne opcje odbiornika.</span><span class="sxs-lookup"><span data-stu-id="897cc-330">You can configure Server Certificates and other listener options by using HttpCfg.exe.</span></span> <span data-ttu-id="897cc-331">Zobacz [ http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) Aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="897cc-331">See [http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) for more details.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-332">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Net.HttpListener.Start%2A> metodę, aby rozpocząć przetwarzanie żądań przychodzących.</span><span class="sxs-lookup"><span data-stu-id="897cc-332">The following code example demonstrates using the <xref:System.Net.HttpListener.Start%2A> method to begin processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="897cc-333">Wywołanie funkcji Win32 nie powiodło się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-333">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="897cc-334">Sprawdzanie wyjątku <see cref="P:System.Net.HttpListenerException.ErrorCode" /> właściwości, aby ustalić przyczynę wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-334">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-335">Ten obiekt jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-335">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="897cc-336">
            <para>Ten element członkowski generuje informacje ze śledzenia, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-336">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="httpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="897cc-337">Powoduje, że to wystąpienie przestać otrzymywać żądań przychodzących.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-337">Causes this instance to stop receiving incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-338">Jeśli to wystąpienie jest już zatrzymana, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="897cc-338">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 <span data-ttu-id="897cc-339">Po zatrzymaniu <xref:System.Net.HttpListener> obiektu, możesz użyć <xref:System.Net.HttpListener.Start%2A> metodę, aby uruchomić go ponownie.</span><span class="sxs-lookup"><span data-stu-id="897cc-339">After you have stopped an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Start%2A> method to restart it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-340">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Net.HttpListener.Stop%2A> metodę, aby zatrzymać przetwarzanie żądań przychodzących.</span><span class="sxs-lookup"><span data-stu-id="897cc-340">The following code example demonstrates using the <xref:System.Net.HttpListener.Stop%2A> method to stop processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-341">Ten obiekt został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-341">This object has been closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="897cc-342">
            <para>Ten element członkowski generuje informacje ze śledzenia, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-342">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="897cc-343">Zwalnia zasoby blokowane przez to <see cref="T:System.Net.HttpListener" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-343">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-344">Aplikacje powinny używać <xref:System.Net.HttpListener.Close%2A> metody zamiast wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="897cc-344">Applications should use the <xref:System.Net.HttpListener.Close%2A> method instead of calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutManager">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerTimeoutManager TimeoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerTimeoutManager TimeoutManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.TimeoutManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutManager As HttpListenerTimeoutManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerTimeoutManager ^ TimeoutManager { System::Net::HttpListenerTimeoutManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutManager : System.Net.HttpListenerTimeoutManager" Usage="System.Net.HttpListener.TimeoutManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerTimeoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-345">Menedżer limitu czasu, w tym <see cref="T:System.Net.HttpListener" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-345">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-346">Zwraca <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-346">Returns <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span>
          </span>
          <span data-ttu-id="897cc-347">Menedżer limitu czasu, w tym <see cref="T:System.Net.HttpListener" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-347">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-348">Menedżer limitu czasu definiuje ograniczenia limitu czasu połączenia dla tego <xref:System.Net.HttpListener> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="897cc-348">The timeout manager defines the connection timeout limits for this <xref:System.Net.HttpListener> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeConnectionNtlmAuthentication">
      <MemberSignature Language="C#" Value="public bool UnsafeConnectionNtlmAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeConnectionNtlmAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeConnectionNtlmAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UnsafeConnectionNtlmAuthentication : bool with get, set" Usage="System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Support for NTLM needs some loving.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="897cc-349">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która kontroluje, czy, gdy jest używany protokół NTLM, dodatkowe żądania przy użyciu tego samego połączenia Transmission Control Protocol (TCP) są wymagane w celu uwierzytelnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-349">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="897cc-350">
            <see langword="true" /> Jeśli <see cref="T:System.Security.Principal.IIdentity" /> pierwsze żądanie będzie używana do obsługi kolejnych żądań w ramach tego samego połączenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-350">
              <see langword="true" /> if the <see cref="T:System.Security.Principal.IIdentity" /> of the first request will be used for subsequent requests on the same connection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="897cc-351">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-351">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="897cc-352">Jeśli ta właściwość jest równa `true` i pierwsze żądanie za pośrednictwem określonego połączenia TCP jest uwierzytelniany przy użyciu metod NTLM, kolejne żądania za pośrednictwem tego samego połączenia TCP są przetwarzane przy użyciu informacji o uwierzytelnianiu (<xref:System.Security.Principal.IIdentity>) początkowej żądanie.</span><span class="sxs-lookup"><span data-stu-id="897cc-352">When this property is set to `true` and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<xref:System.Security.Principal.IIdentity>) of the initial request.</span></span>  
  
 <span data-ttu-id="897cc-353">Ta właściwość nie ma znaczenia podczas uwierzytelniania NTLM nie jest protokołem uwierzytelniania.</span><span class="sxs-lookup"><span data-stu-id="897cc-353">This property has no effect when NTLM is not the authentication protocol.</span></span> <span data-ttu-id="897cc-354">Gdy Negotiate jest określony jako protokół uwierzytelniania, ta właściwość ma wpływ tylko wtedy, gdy rzeczywista protokół używany do uwierzytelniania NTLM.</span><span class="sxs-lookup"><span data-stu-id="897cc-354">When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="897cc-355">Podczas ustawiania tej właściwości `true` zwiększa wydajność, ponieważ <xref:System.Net.HttpListener> nie wysyłaj dodatkowe NTLM wezwań do uwierzytelnienia, jest to zagrożenie bezpieczeństwa w niewymagające wszystkie żądania, aby podać informacje uwierzytelniające.</span><span class="sxs-lookup"><span data-stu-id="897cc-355">While setting this property to `true` increases performance because the <xref:System.Net.HttpListener> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</span></span> <span data-ttu-id="897cc-356">Należy określić, czy wzrost wydajności jest wart to zagrożenie.</span><span class="sxs-lookup"><span data-stu-id="897cc-356">You must determine whether the increase in performance is worth this risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="897cc-357">Poniższy przykład kodu demonstruje, ustawienie tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="897cc-357">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="897cc-358">Ten obiekt został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="897cc-358">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>