<Type Name="ServicePoint" FullName="System.Net.ServicePoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9840d771b2f99d1ba97527eb61ce3b03292cfef9" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39732829" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServicePoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServicePoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServicePoint" />
  <TypeSignature Language="VB.NET" Value="Public Class ServicePoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicePoint" />
  <TypeSignature Language="F#" Value="type ServicePoint = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.ServicePoint</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.CompilerServices.FriendAccessAllowed</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia zarządzanie połączenia dla połączeń HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint> Klasa obsługuje połączenia do zasobu internetowego na podstawie informacji z hosta przekazana w zasobu identyfikator (URI). Początkowego połączenia z zasobem określa informacje, <xref:System.Net.ServicePoint> przechowuje obiekt, który następnie jest współużytkowana przez wszystkie kolejne żądania do tego zasobu.  
  
 <xref:System.Net.ServicePoint> obiekty są zarządzane przez <xref:System.Net.ServicePointManager> klasy i są tworzone, jeśli to konieczne, przez <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=nameWithType> metody. <xref:System.Net.ServicePoint> obiekty nigdy nie są tworzone bezpośrednio, ale że są zawsze tworzone i zarządzane przez <xref:System.Net.ServicePointManager> klasy. Maksymalna liczba <xref:System.Net.ServicePoint> obiektów, które mogą być tworzone jest ustawiana przez <xref:System.Net.ServicePointManager.MaxServicePoints?displayProperty=nameWithType> właściwości.  
  
 Każdy <xref:System.Net.ServicePoint> obiekt zachowuje połączenie do zasobu internetowego do momentu była bezczynna dłużej niż przez czas określony w <xref:System.Net.ServicePoint.MaxIdleTime> właściwości. Gdy <xref:System.Net.ServicePoint> przekracza <xref:System.Net.ServicePoint.MaxIdleTime> wartość może być odtworzona na inne połączenie. Wartość domyślna <xref:System.Net.ServicePoint.MaxIdleTime> została ustawiona przez <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> właściwości.  
  
 Gdy <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> właściwość jest ustawiona na wartość inną niż-1, a po upływie określonego czasu upłynie, aktywne <xref:System.Net.ServicePoint> połączenie zostanie zamknięte po nich usług następnego żądania. Jest to przydatne w przypadku aplikacji, które nie wymagają aktywnych połączeń, które są otwierane przez czas nieokreślony, ponieważ są one domyślnie.  
  
> [!NOTE]
>  W warunkach dużym obciążeniem niektórych aplikacji może zabraknąć wolnych wątków w puli wątków, co może prowadzić do wydajności niską systemu (na przykład godziny transakcji o wysokiej i zmiennych). Zobacz [ http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) szereg zmian konfiguracji, które można wprowadzić, aby rozwiązać ten problem.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.ServicePoint> obiektu, który nawiązuje połączenie z www.contoso.com identyfikatora URI.  
  
 [!code-cpp[System.Net.ServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : Uri" Usage="System.Net.ServicePoint.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator URI (Uniform Resource) serwera, który to <see cref="T:System.Net.ServicePoint" /> łączy się z obiektu.</summary>
        <value>Wystąpienie <see cref="T:System.Uri" /> klasę, która zawiera identyfikator URI serwera internetowego że <see cref="T:System.Net.ServicePoint" /> łączy się z obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wyświetla wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Net.ServicePoint" /> Jest w trybie hosta.</exception>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać przy użyciu <see cref="P:System.Net.ServicePoint.Address" /> Jeśli <see cref="T:System.Net.ServicePoint" /> nawiązuje połączenie za pośrednictwem serwera proxy.</permission>
      </Docs>
    </Member>
    <Member MemberName="BindIPEndPointDelegate">
      <MemberSignature Language="C#" Value="public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.BindIPEndPoint BindIPEndPointDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.BindIPEndPointDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property BindIPEndPointDelegate As BindIPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::BindIPEndPoint ^ BindIPEndPointDelegate { System::Net::BindIPEndPoint ^ get(); void set(System::Net::BindIPEndPoint ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindIPEndPointDelegate : System.Net.BindIPEndPoint with get, set" Usage="System.Net.ServicePoint.BindIPEndPointDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.BindIPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa delegata do skojarzenia z lokalnym <see cref="T:System.Net.IPEndPoint" /> z <see cref="T:System.Net.ServicePoint" />.</summary>
        <value>Delegat, który wymusza <see cref="T:System.Net.ServicePoint" /> do użycia określonego protokołu internetowego (IP) adres i port numer lokalny. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kilka technik równoważenia obciążenia wymaga klienta do korzystania z określonego adresu IP adres i port numer lokalny, a nie <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> (lub <xref:System.Net.IPAddress.IPv6Any?displayProperty=nameWithType> dla Internet Protocol wersja 6) i port efemeryczny. Twoje <xref:System.Net.ServicePoint.BindIPEndPointDelegate> może spełnić to wymaganie.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Powiązanie portu lokalnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate Certificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.ServicePoint.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera certyfikat odebrany w tym <see cref="T:System.Net.ServicePoint" /> obiektu.</summary>
        <value>Wystąpienie <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> klasę, która zawiera certyfikat zabezpieczeń odebrane w tym <see cref="T:System.Net.ServicePoint" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że <xref:System.Net.ServicePoint> obiektu ułatwia wielu połączeń do zasobu internetowego, jego obsługa tylko jeden certyfikat.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ ClientCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.ServicePoint.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ostatni certyfikatu klienta wysłanego do serwera.</summary>
        <value>
          <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> Obiekt, który zawiera wartości publicznych ostatni certyfikat klienta jest wysyłany do serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wyświetla wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnectionGroup">
      <MemberSignature Language="C#" Value="public bool CloseConnectionGroup (string connectionGroupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CloseConnectionGroup(string connectionGroupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CloseConnectionGroup (connectionGroupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CloseConnectionGroup(System::String ^ connectionGroupName);" />
      <MemberSignature Language="F#" Value="member this.CloseConnectionGroup : string -&gt; bool" Usage="servicePoint.CloseConnectionGroup connectionGroupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionGroupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionGroupName">Nazwa grupy połączenia, który zawiera połączenia, aby zamknąć i usunąć z tego punktu usługi.</param>
        <summary>Usuwa grupę określonego połączenia z tym <see cref="T:System.Net.ServicePoint" /> obiektu.</summary>
        <returns>A <see cref="T:System.Boolean" /> wartość, która wskazuje, czy grupa połączenie zostało zamknięte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupy połączeń programu skojarzyć zbiór żądań z danego połączenia lub zestawu połączeń. Ta metoda usuwa i zamknięcie wszystkich połączeń, które należą do grupy określone połączenie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionLeaseTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionLeaseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLeaseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLeaseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLeaseTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLeaseTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionLeaseTimeout : int with get, set" Usage="System.Net.ServicePoint.ConnectionLeaseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę milisekund, po którym aktywnego <see cref="T:System.Net.ServicePoint" /> połączenie jest zamknięte.</summary>
        <value>A <see cref="T:System.Int32" /> , który określa liczbę milisekund, aktywne <see cref="T:System.Net.ServicePoint" /> połączenia pozostaje otwarte. Wartość domyślna to -1, która umożliwia aktywne <see cref="T:System.Net.ServicePoint" /> połączenie pozostają połączone przez czas nieokreślony. Ustaw tę właściwość na wartość 0, aby wymusić <see cref="T:System.Net.ServicePoint" /> połączenia można zamknąć po obsługi żądania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia upewnij się, że <xref:System.Net.ServicePoint> obiektu aktywnych połączeń nie pozostają otwarte przez czas nieokreślony. Ta właściwość jest przeznaczona dla scenariuszy, w którym porzucić i ponownie ustanowić okresowo, takich jak scenariusze równoważenia obciążenia połączeń.  
  
 Domyślnie gdy <xref:System.Net.HttpWebRequest.KeepAlive> jest `true` dla żądania, <xref:System.Net.ServicePoint.MaxIdleTime> właściwość ustawia limit czasu zamknięcia <xref:System.Net.ServicePoint> połączenia z powodu braku aktywności. Jeśli <xref:System.Net.ServicePoint> ma aktywnych połączeń <xref:System.Net.ServicePoint.MaxIdleTime> nie obowiązuje, oraz połączeń pozostają otwarte, jeśli przez czas nieokreślony.  
  
 Gdy <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> właściwość jest ustawiona na wartość inną niż-1, a po upływie określonego czasu upłynie, aktywne <xref:System.Net.ServicePoint> połączenie zostanie zamknięte po obsługi żądania, ustawiając <xref:System.Net.HttpWebRequest.KeepAlive> do `false` w tym żądaniu.  
  
 Ustawienie tej wartości ma wpływ na wszystkie połączenia zarządza <xref:System.Net.ServicePoint> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia wartość tej właściwości.  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji zestawu jest liczbą ujemną, mniejsza niż -1.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.FtpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.HttpListenerRequest.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionLimit">
      <MemberSignature Language="C#" Value="public int ConnectionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionLimit : int with get, set" Usage="System.Net.ServicePoint.ConnectionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę połączeń dozwolonych w tym <see cref="T:System.Net.ServicePoint" /> obiektu.</summary>
        <value>Maksymalna liczba połączeń w tym <see cref="T:System.Net.ServicePoint" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint.ConnectionLimit> Właściwość ustawia maksymalną liczbę połączeń <xref:System.Net.ServicePoint> obiektu można wprowadzić do zasobu internetowego. Wartość <xref:System.Net.ServicePoint.ConnectionLimit> właściwość jest ustawiona na wartość <xref:System.Net.ServicePointManager.DefaultConnectionLimit?displayProperty=nameWithType> właściwości podczas <xref:System.Net.ServicePoint> tworzony jest obiekt; kolejne zmiany <xref:System.Net.ServicePointManager.DefaultConnectionLimit> nie mają wpływu na istniejące <xref:System.Net.ServicePoint> obiektów.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.ServicePoint.ConnectionLimit> właściwości, aby sprawdzić maksymalną liczbę połączeń, <xref:System.Net.ServicePoint> obiektu można wprowadzić do określonego identyfikatora URI (Uniform Resource).  
  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Limit połączeń jest równa lub mniejsza niż 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionName">
      <MemberSignature Language="C#" Value="public string ConnectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionName" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionName : string" Usage="System.Net.ServicePoint.ConnectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę połączenia.</summary>
        <value>A <see cref="T:System.String" /> reprezentujący nazwę połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Net.ServicePoint> obiekt został zbudowany przez wywołanie metody <xref:System.Net.ServicePointManager.FindServicePoint%2A> przeciążenia z <xref:System.Uri> argument, a następnie <xref:System.Net.ServicePoint.ConnectionName> reprezentuje właściwość <xref:System.Uri.Scheme> właściwość <xref:System.Uri> obiekt używany.  
  
 Jeśli <xref:System.Net.ServicePoint> obiekt został zbudowany z hosta sieci i port, <xref:System.Net.ServicePoint.ConnectionName> właściwość zawiera ciąg, który reprezentuje hosta i portu sieci. Jeśli <xref:System.Net.ServicePoint.ConnectionName> właściwość jest ustawiona, gdy skonstruowany na podstawie nazwy hosta i port, tylko <xref:System.Net.WebRequest> obiekty o takiej samej <xref:System.Net.WebRequest.ConnectionGroupName> wartości mogą używać tego <xref:System.Net.ServicePoint> obiektu.  
  
   
  
## Examples  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConnections">
      <MemberSignature Language="C#" Value="public int CurrentConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentConnections" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.CurrentConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentConnections { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConnections : int" Usage="System.Net.ServicePoint.CurrentConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę otwartych połączeń skojarzonych z tym <see cref="T:System.Net.ServicePoint" /> obiektu.</summary>
        <value>Liczba otwartych połączeń skojarzonych z tym <see cref="T:System.Net.ServicePoint" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint.CurrentConnections> Właściwość zawiera liczbę otwartych połączeń internetowych, skojarzony z tym <xref:System.Net.ServicePoint> obiektu. Wartość <xref:System.Net.ServicePoint.CurrentConnections> nie może przekraczać tego dla <xref:System.Net.ServicePoint.ConnectionLimit>.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.ServicePoint.CurrentConnections> właściwości, aby określić liczbę otwartych połączeń internetowych, skojarzony z tym <xref:System.Net.ServicePoint> obiektu.  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expect100Continue" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Expect100Continue" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect100Continue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expect100Continue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Expect100Continue : bool with get, set" Usage="System.Net.ServicePoint.Expect100Continue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która określa, czy 100 — Kontynuuj, zachowanie jest używany.</summary>
        <value>
          <see langword="true" /> można oczekiwać, 100 — Kontynuuj odpowiedzi dla <see langword="POST" /> żądania; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest równa `true`, klient żąda używające `POST` metoda oczekuje się 100 — Kontynuuj odpowiedzi z serwera, aby wskazać, że klient powinien wysyłać dane do opublikowania. Ten mechanizm pozwala klientom unikanie wysyłania dużych ilości danych za pośrednictwem sieci, gdy zamierza odrzucenia żądania serwera, oparte na nagłówki żądania.  
  
 Załóżmy na przykład <xref:System.Net.ServicePoint.Expect100Continue> właściwość `false`. Gdy żądanie jest wysyłane do serwera, zawiera dane. Jeśli po odczytaniu nagłówków żądań, serwer wymaga uwierzytelniania i wysyła odpowiedź 401, klient musi ponownie wysłać danych przy użyciu nagłówków właściwe uwierzytelnienie.  
  
 Jeśli <xref:System.Net.ServicePoint.Expect100Continue> właściwość `true`, nagłówki żądania są wysyłane do serwera. Jeśli serwer nie zaakceptował żądania, wysyła 100 — Kontynuuj odpowiedzi sygnalizowania, że dane mogą być przesyłane. Jeśli, tak jak w poprzednim przykładzie serwer wymaga uwierzytelnienia, wysyłania odpowiedzi 401 i klient nie ma niepotrzebnie przesyłane dane.  
  
 Zmiana wartości tej właściwości nie wpływa na istniejące połączenia. Dotyczy tylko nowych połączeń, utworzony po zmianie.  
  
 Expect 100 — Kontynuuj opisano szczegółowo w sekcji IETF RFC 2616 10.1.1 zachowanie.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="servicePoint.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleSince">
      <MemberSignature Language="C#" Value="public DateTime IdleSince { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IdleSince" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.IdleSince" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdleSince As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IdleSince { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.IdleSince : DateTime" Usage="System.Net.ServicePoint.IdleSince" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera datę i godzinę, która <see cref="T:System.Net.ServicePoint" /> ostatnio połączony obiekt do hosta.</summary>
        <value>A <see cref="T:System.DateTime" /> obiekt, który zawiera datę i godzinę, o której <see cref="T:System.Net.ServicePoint" /> obiekt został ostatnio połączony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint.IdleSince> Właściwość rejestruje ostatniej daty i godziny, w jakim punkt usługi został odłączony od hosta. Gdy różnicy między bieżącym czasem i <xref:System.Net.ServicePoint.IdleSince> przekracza wartość <xref:System.Net.ServicePoint.MaxIdleTime>, <xref:System.Net.ServicePoint> obiekt jest dostępny do odtwarzania na inne połączenie.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.ServicePoint.IdleSince> właściwość, aby ustawić i pobrać daty i czasu, który <xref:System.Net.ServicePoint> ostatnio połączony obiekt do hosta.  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIdleTime">
      <MemberSignature Language="C#" Value="public int MaxIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIdleTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.MaxIdleTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIdleTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIdleTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxIdleTime : int with get, set" Usage="System.Net.ServicePoint.MaxIdleTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas połączenia skojarzone z <see cref="T:System.Net.ServicePoint" /> obiektu może pozostawać bezczynne, zanim połączenie jest zamknięte.</summary>
        <value>Czas w milisekundach, które połączenia skojarzone z <see cref="T:System.Net.ServicePoint" /> obiektu może pozostawać bezczynne, zanim zostanie zamknięta i ponownie dla innego połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz ustawić <xref:System.Net.ServicePoint.MaxIdleTime> do <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> do wskazania, że połączenie skojarzone z <xref:System.Net.ServicePoint> object nigdy nie powinny wygasać.  
  
 Wartość domyślna <xref:System.Net.ServicePoint.MaxIdleTime> właściwość ma wartość <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> właściwości podczas <xref:System.Net.ServicePoint> obiekt zostanie utworzony. Kolejne modyfikacje <xref:System.Net.ServicePointManager.MaxServicePointIdleTime> właściwości nie mają wpływu na istniejące <xref:System.Net.ServicePoint> obiektów.  
  
 Gdy <xref:System.Net.ServicePoint.MaxIdleTime> połączenia skojarzone z <xref:System.Net.ServicePoint> jest przekroczona, połączenie pozostaje otwarty do momentu aplikacja próbuje użyć połączenia. W tym czasie ramach zamyka połączenie i tworzy nowe połączenie z hostem zdalnym.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.ServicePoint.MaxIdleTime> właściwość do ustawiania i pobierania <xref:System.Net.ServicePoint> czasu bezczynności.  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> jest ustawiona na mniej niż <see cref="F:System.Threading.Timeout.Infinite" /> lub większa niż <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public virtual Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.ServicePoint.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wersję protokołu HTTP, który <see cref="T:System.Net.ServicePoint" /> używa obiektu.</summary>
        <value>A <see cref="T:System.Version" /> obiekt, który zawiera wersji protokołu HTTP, <see cref="T:System.Net.ServicePoint" /> używa obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wersji protokołu HTTP są HTTP/1.0 i HTTP/1.1.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.ServicePoint.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar buforu odbierania dla gniazda używanych przez to <see cref="T:System.Net.ServicePoint" />.</summary>
        <value>Element <see cref="T:System.Int32" /> zawierający rozmiar w bajtach buforu odbioru. Wartość domyślna to 8192.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Net.Sockets.Socket.ReceiveBufferSize>.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia wartość tej właściwości.  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji zestawu jest większa niż <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTcpKeepAlive">
      <MemberSignature Language="C#" Value="public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTcpKeepAlive(bool enabled, int32 keepAliveTime, int32 keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTcpKeepAlive (enabled As Boolean, keepAliveTime As Integer, keepAliveInterval As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="F#" Value="member this.SetTcpKeepAlive : bool * int * int -&gt; unit" Usage="servicePoint.SetTcpKeepAlive (enabled, keepAliveTime, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
        <Parameter Name="keepAliveTime" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enabled">Jeśli ustawiono wartość true, następnie keep-alive opcję TCP za pośrednictwem połączenia TCP zostaną włączone przy użyciu określonego <c>keepAliveTime</c> i <c>keepAliveInterval</c> wartości.  Jeśli ma wartość false, następnie TCP keep-alive opcja jest wyłączona, a pozostałe parametry są ignorowane.  Wartość domyślna to false.</param>
        <param name="keepAliveTime">Określa limit czasu w milisekundach, bez żadnych działań do momentu wysłania jest pierwszy pakiet keep-alive.  Wartość musi być większa niż 0.  Jeśli zostanie przekazana wartość mniejszą niż lub równe zero <see cref="T:System.ArgumentOutOfRangeException" /> zgłaszany.</param>
        <param name="keepAliveInterval">Określa interwał w milisekundach między kolejnymi keep-alive pakiety są wysyłane, jeśli potwierdzenie nie zostanie odebrana.  Wartość musi być większa niż 0.  Jeśli zostanie przekazana wartość mniejszą niż lub równe zero <see cref="T:System.ArgumentOutOfRangeException" /> zgłaszany.</param>
        <summary>Włącza lub wyłącza opcję podtrzymania połączenia TCP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może zażądać dostawcy TCP/IP korzystanie z pakietów podtrzymania połączenia TCP. Wartość domyślna to wyłączenia użytkowania pakiety utrzymywania aktywności połączenia TCP.  
  
 Ustawienia domyślne, gdy gniazda TCP jest zainicjowany keep-alive ustawia limit czasu, do 2 godzin i keep-alive interwał na 1 sekundę. `keepAliveTime` Parametr określa limit czasu w milisekundach, bez żadnych działań do momentu wysłania jest pierwszy pakiet keep-alive. `keepAliveInterval` Parametr określa interwał w milisekundach między podczas kolejnych keep-alive pakiety są wysyłane, jeśli potwierdzenie nie zostanie odebrana. Liczba keep-alive sondy nie można zmienić i jest ustawiony na 10.  
  
 Jeśli połączenie TCP zostało przerwane w wyniku utrzymywania aktywności <xref:System.Net.Sockets.SocketError> z <xref:System.Net.Sockets.SocketError.NetworkReset> jest zwracany w żadnym wywołaniom w toku dla gniazda, a kolejnych wywołań zakończy się niepowodzeniem z <xref:System.Net.Sockets.SocketError> z <xref:System.Net.Sockets.SocketError.NotConnected>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla <paramref name="keepAliveTime" /> lub <paramref name="keepAliveInterval" /> parametr jest mniejsze niż lub równe 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsPipelining">
      <MemberSignature Language="C#" Value="public bool SupportsPipelining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPipelining" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.SupportsPipelining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsPipelining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsPipelining { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsPipelining : bool" Usage="System.Net.ServicePoint.SupportsPipelining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy <see cref="T:System.Net.ServicePoint" /> obiektu obsługuje połączenia w trybie potokowym.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Net.ServicePoint" /> obiektu obsługuje potokowej połączenia; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przetwarzanie potokowe umożliwia klientom wysyłania wielu żądań przez stałe połączenie bez oczekiwania na poszczególne odpowiedzi z serwera. Serwer wysyła odpowiedzi w tej samej kolejności, jak zostały odebrane żądania.  
  
 Przetwarzanie potokowe opisano szczegółowo w temacie IETF w dokumencie RFC 2616 sekcji 8.1.2.2.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNagleAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.UseNagleAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property UseNagleAlgorithm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseNagleAlgorithm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseNagleAlgorithm : bool with get, set" Usage="System.Net.ServicePoint.UseNagleAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która określa, czy w przypadku połączeń zarządzanego przez to jest używany algorytm Nagle'a <see cref="T:System.Net.ServicePoint" /> obiektu.</summary>
        <value>
          <see langword="true" /> Aby używać algorytmu Nagle'a; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby buforować małe pakiety danych i przekazuje je jako pojedynczy pakiet jest używany algorytm Nagle'a. Proces ten, określany jako "nagling," jest powszechnie używana, ponieważ zmniejsza liczbę pakietów wysłanych i zmniejsza narzut na pakiet.  
  
 Zmiana wartości tej właściwości nie wpływa na istniejące połączenia. Dotyczy tylko nowych połączeń, utworzony po zmianie.  
  
 Algorytm Nagle'a opisano szczegółowo w IETF RFC 896.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>