<Type Name="ServicePoint" FullName="System.Net.ServicePoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3a675cc93f75ebd7462a2679bc072e59694b049" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780507" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServicePoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServicePoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.ServicePoint" />
  <TypeSignature Language="VB.NET" Value="Public Class ServicePoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServicePoint" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.ServicePoint</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Umożliwia zarządzanie połączenia dla połączenia HTTP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint> Klasa obsługuje połączenia z zasobem internetowym na podstawie informacji o hoście przekazane w zasobu URI Uniform Resource Identifier (). Początkowego połączenia z zasobem określa informacje który <xref:System.Net.ServicePoint> przechowuje obiekt, który następnie jest współużytkowana przez wszystkie kolejne żądania do tego zasobu.  
  
 <xref:System.Net.ServicePoint> obiekty są zarządzane przez <xref:System.Net.ServicePointManager> klasy i są tworzone, jeśli jest to konieczne, <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=nameWithType> metody. <xref:System.Net.ServicePoint> obiekty nigdy nie są tworzone bezpośrednio, ale są zawsze tworzone i zarządzane przez <xref:System.Net.ServicePointManager> klasy. Maksymalna liczba <xref:System.Net.ServicePoint> obiektów, które mogą być tworzone jest ustawiana przez <xref:System.Net.ServicePointManager.MaxServicePoints?displayProperty=nameWithType> właściwości.  
  
 Każdy <xref:System.Net.ServicePoint> obiektu obsługuje połączenia z zasobem internetowym dopóki zostanie bezczynności dłużej niż przez czas określony w <xref:System.Net.ServicePoint.MaxIdleTime> właściwości. Gdy <xref:System.Net.ServicePoint> przekracza <xref:System.Net.ServicePoint.MaxIdleTime> wartość, może być przetworzony ponownie, aby inne połączenie. Wartość domyślna <xref:System.Net.ServicePoint.MaxIdleTime> jest ustawiana przez <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> właściwości.  
  
 Gdy <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> właściwość jest ustawiona na wartość inną niż-1, a po określonym czasie, upłynie aktywnego <xref:System.Net.ServicePoint> połączenie jest zamknięte po jej usług następnego żądania. Jest to przydatne w przypadku aplikacji, które nie wymagają aktywnych połączeń, które są otwierane przez czas nieokreślony, ponieważ są one domyślnie.  
  
> [!NOTE]
>  W warunkach wysokie obciążenie niektórych aplikacji może zabraknąć wolnych wątków w puli wątków, co może prowadzić do wydajności niską systemu (na przykład razy transakcji wysokiej i zmiennej). Zobacz [ http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) liczby zmian konfiguracji, możesz wprowadzić, aby rozwiązać ten problem.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.ServicePoint> obiekt, który łączy się www.contoso.com identyfikatora URI.  
  
 [!code-cpp[System.Net.ServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#1)]
 [!code-csharp[System.Net.ServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#1)]
 [!code-vb[System.Net.ServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera jednolity identyfikator zasobów (URI) serwera, który to <see cref="T:System.Net.ServicePoint" /> łączy się z obiektu.</summary>
        <value>Wystąpienie <see cref="T:System.Uri" /> klasę, która zawiera identyfikator URI serwera internetowego tego <see cref="T:System.Net.ServicePoint" /> łączy się z obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod przedstawia wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Net.ServicePoint" /> Jest w trybie hosta.</exception>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać przy użyciu <see cref="P:System.Net.ServicePoint.Address" /> Jeśli <see cref="T:System.Net.ServicePoint" /> nawiązuje połączenie za pośrednictwem serwera proxy.</permission>
      </Docs>
    </Member>
    <Member MemberName="BindIPEndPointDelegate">
      <MemberSignature Language="C#" Value="public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.BindIPEndPoint BindIPEndPointDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.BindIPEndPointDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property BindIPEndPointDelegate As BindIPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::BindIPEndPoint ^ BindIPEndPointDelegate { System::Net::BindIPEndPoint ^ get(); void set(System::Net::BindIPEndPoint ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.BindIPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa pełnomocnika, aby skojarzyć lokalnym <see cref="T:System.Net.IPEndPoint" /> z <see cref="T:System.Net.ServicePoint" />.</summary>
        <value>Delegata, który wymusza <see cref="T:System.Net.ServicePoint" /> do używania konkretnego lokalnego protokołu internetowego (IP) adres i numer portu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre metody równoważenia obciążenia wymagają klienta do używania określonych lokalnego IP adres i numer portu, a nie <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> (lub <xref:System.Net.IPAddress.IPv6Any?displayProperty=nameWithType> dla Internet Protocol wersja 6) i portów tymczasowych. Twoje <xref:System.Net.ServicePoint.BindIPEndPointDelegate> może spełnić to wymaganie.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby powiązanie portów lokalnych. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate Certificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera certyfikat odebrany tego <see cref="T:System.Net.ServicePoint" /> obiektu.</summary>
        <value>Wystąpienie <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> klasy, który zawiera certyfikat zabezpieczeń otrzymano dla tego <see cref="T:System.Net.ServicePoint" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że <xref:System.Net.ServicePoint> obiektu można wprowadzać wiele połączeń do zasobu internetowego, można zachować tylko jeden certyfikat.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate ^ ClientCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ostatniego certyfikatu klienta wysłanego do serwera.</summary>
        <value>
          <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> Obiekt, który zawiera wartości publicznych ostatniego certyfikatu klienta wysłane do serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod przedstawia wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseConnectionGroup">
      <MemberSignature Language="C#" Value="public bool CloseConnectionGroup (string connectionGroupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CloseConnectionGroup(string connectionGroupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.CloseConnectionGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CloseConnectionGroup (connectionGroupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CloseConnectionGroup(System::String ^ connectionGroupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionGroupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionGroupName">Nazwa grupy połączenie, zawierający połączenia, aby zamknąć, a następnie usuń z tego punktu usługi.</param>
        <summary>Usuwa grupę określonego połączenia z tym <see cref="T:System.Net.ServicePoint" /> obiektu.</summary>
        <returns>A <see cref="T:System.Boolean" /> wartość, która wskazuje, czy grupa połączenie zostało zamknięte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupy połączeń skojarzyć zbiór żądań z danego połączenia lub zestawu połączeń. Ta metoda usuwa i zamknięcie wszystkich połączeń, które należą do grupy określonego połączenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionLeaseTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionLeaseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLeaseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLeaseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLeaseTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLeaseTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę milisekund, po którym aktywnego <see cref="T:System.Net.ServicePoint" /> połączenie jest zamknięte.</summary>
        <value>A <see cref="T:System.Int32" /> wyrażony w milisekundach czas, który określa który aktywnego <see cref="T:System.Net.ServicePoint" /> połączenie pozostanie otwarte. Wartość domyślna to -1, dzięki czemu aktywnego <see cref="T:System.Net.ServicePoint" /> połączenia, aby pozostać połączony przez nieograniczony czas. Ustaw tę właściwość na wartość 0, aby wymusić <see cref="T:System.Net.ServicePoint" /> połączeń, aby zamknąć po obsługi żądania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do zapewnienia, że <xref:System.Net.ServicePoint> obiektu aktywnych połączeń nie pozostawać otwarte przez nieograniczony czas. Ta właściwość jest przeznaczony do scenariuszy, w którym porzucić i ponownie ustanowić okresowo, takich jak scenariusze równoważenia obciążenia połączeń.  
  
 Domyślnie gdy <xref:System.Net.HttpWebRequest.KeepAlive> jest `true` dla żądania, <xref:System.Net.ServicePoint.MaxIdleTime> właściwość ustawia limit czasu zamknięcia <xref:System.Net.ServicePoint> połączenia z powodu braku aktywności. Jeśli <xref:System.Net.ServicePoint> ma aktywnych połączeń <xref:System.Net.ServicePoint.MaxIdleTime> nie obowiązuje i połączeń pozostawać otwarte przez nieograniczony czas.  
  
 Gdy <xref:System.Net.ServicePoint.ConnectionLeaseTimeout> właściwość jest ustawiona na wartość inną niż-1, a po określonym czasie, upłynie aktywnego <xref:System.Net.ServicePoint> połączenie jest zamknięte po obsługi żądania przez ustawienie <xref:System.Net.HttpWebRequest.KeepAlive> do `false` w tym żądaniu.  
  
 Ustawienie tej wartości ma wpływ na wszystkie połączenia zarządza <xref:System.Net.ServicePoint> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu określa wartość tej właściwości.  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji set jest liczbą ujemną, mniejsza niż -1.</exception>
        <altmember cref="P:System.Net.HttpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.FtpWebRequest.KeepAlive" />
        <altmember cref="P:System.Net.HttpListenerRequest.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionLimit">
      <MemberSignature Language="C#" Value="public int ConnectionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną liczbę połączeń dozwolonych na tym <see cref="T:System.Net.ServicePoint" /> obiektu.</summary>
        <value>Maksymalna liczba połączeń dozwolone na tym <see cref="T:System.Net.ServicePoint" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint.ConnectionLimit> Właściwość ustawia maksymalną liczbę połączeń <xref:System.Net.ServicePoint> obiektu mogą wysyłać do zasobu internetowego. Wartość <xref:System.Net.ServicePoint.ConnectionLimit> właściwości ustawiono wartość <xref:System.Net.ServicePointManager.DefaultConnectionLimit?displayProperty=nameWithType> właściwości podczas <xref:System.Net.ServicePoint> obiekt jest tworzony; kolejnej zmiany <xref:System.Net.ServicePointManager.DefaultConnectionLimit> nie mają wpływu na istniejące <xref:System.Net.ServicePoint> obiektów.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.ServicePoint.ConnectionLimit> właściwości, aby sprawdzić maksymalną liczbę połączeń który <xref:System.Net.ServicePoint> obiektu można wprowadzić do określonego identyfikatora URI (Uniform Resource).  
  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Limit połączeń jest równa lub mniejsza niż 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionName">
      <MemberSignature Language="C#" Value="public string ConnectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionName" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ConnectionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę połączenia.</summary>
        <value>A <see cref="T:System.String" /> reprezentujący nazwę połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Net.ServicePoint> obiekt został skonstruowany przez wywołanie metody <xref:System.Net.ServicePointManager.FindServicePoint%2A> przeciążenia z <xref:System.Uri> argument, a następnie <xref:System.Net.ServicePoint.ConnectionName> reprezentuje właściwość <xref:System.Uri.Scheme> właściwość <xref:System.Uri> obiekt używany.  
  
 Jeśli <xref:System.Net.ServicePoint> obiekt został skonstruowany na podstawie sieci hosta i port, <xref:System.Net.ServicePoint.ConnectionName> właściwości zawiera ciąg, który reprezentuje hosta i portu sieci. Jeśli <xref:System.Net.ServicePoint.ConnectionName> właściwość jest ustawiona, gdy utworzone na podstawie nazwy hosta i portu tylko <xref:System.Net.WebRequest> obiektów z takimi samymi <xref:System.Net.WebRequest.ConnectionGroupName> wartości mogą używać tego <xref:System.Net.ServicePoint> obiektu.  
  
   
  
## Examples  
 [!code-cpp[System.Net.ServicePoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#4)]
 [!code-csharp[System.Net.ServicePoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#4)]
 [!code-vb[System.Net.ServicePoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConnections">
      <MemberSignature Language="C#" Value="public int CurrentConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentConnections" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.CurrentConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentConnections { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę otwartych połączeń skojarzony z tym <see cref="T:System.Net.ServicePoint" /> obiektu.</summary>
        <value>Liczba otwartych połączeń skojarzony z tym <see cref="T:System.Net.ServicePoint" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint.CurrentConnections> Właściwość zawiera liczbę otwartych połączeń internetowych skojarzony z tym <xref:System.Net.ServicePoint> obiektu. Wartość <xref:System.Net.ServicePoint.CurrentConnections> nie może przekraczać <xref:System.Net.ServicePoint.ConnectionLimit>.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.ServicePoint.CurrentConnections> właściwości, aby określić liczbę otwartych połączeń internetowych skojarzony z tym <xref:System.Net.ServicePoint> obiektu.  
  
 [!code-cpp[System.Net.ServicePoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#2)]
 [!code-csharp[System.Net.ServicePoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#2)]
 [!code-vb[System.Net.ServicePoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expect100Continue" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.Expect100Continue" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect100Continue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expect100Continue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która określa, czy 100-kontynuować zachowanie jest używany.</summary>
        <value>
          <see langword="true" /> można oczekiwać 100-kontynuować odpowiedzi dla <see langword="POST" /> żądań; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest skonfigurowana `true`, klient żąda używające `POST` metoda oczekuje się 100-kontynuować odpowiedzi od serwera, aby wskazać, że klient ma wysłać zostać przesłane dane. Mechanizm ten umożliwia klientom unikać wysyłania dużych ilości danych za pośrednictwem sieci, gdy serwer od nagłówków żądań zamierza odrzucić żądanie.  
  
 Załóżmy na przykład <xref:System.Net.ServicePoint.Expect100Continue> jest właściwość `false`. Po wysłaniu żądania do serwera zawiera dane. Jeśli po odczytaniu nagłówków żądań, serwera wymaga uwierzytelniania i wysyła odpowiedzi 401, klient musi ponownie dane z nagłówkami właściwe uwierzytelnienie.  
  
 Jeśli <xref:System.Net.ServicePoint.Expect100Continue> właściwość jest `true`, nagłówki żądania są wysyłane do serwera. Jeśli serwer nie zaakceptował żądania, wysyła 100-kontynuować odpowiedzi sygnalizowania, że mogą być przesyłane dane. Jeśli tak jak w poprzednim przykładzie serwer wymaga uwierzytelnienia, wysyłania odpowiedzi 401 i klienta nie ma niepotrzebnie przekazywane dane.  
  
 Zmiana wartości tej właściwości nie ma wpływu na istniejące połączenia. Dotyczy tylko nowych połączeń utworzony po zmianie.  
  
 Expect 100-kontynuować zachowanie szczegółowo opisano w sekcji IETF RFC 2616 10.1.1.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdleSince">
      <MemberSignature Language="C#" Value="public DateTime IdleSince { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IdleSince" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.IdleSince" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdleSince As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IdleSince { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera datę i godzinę, która <see cref="T:System.Net.ServicePoint" /> obiekt ostatnio był połączony z hostem.</summary>
        <value>A <see cref="T:System.DateTime" /> obiekt, który zawiera datę i godzinę, o której <see cref="T:System.Net.ServicePoint" /> obiekt ostatnio był połączony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.ServicePoint.IdleSince> Właściwość rejestruje ostatniej daty i czasu, jaką punktu usługi został odłączony od hosta. Jeśli różnica między bieżącym czasem i <xref:System.Net.ServicePoint.IdleSince> przekracza wartość <xref:System.Net.ServicePoint.MaxIdleTime>, <xref:System.Net.ServicePoint> obiekt jest dostępny dla odtwarzania do innego połączenia.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.ServicePoint.IdleSince> właściwości, aby ustawić i pobrać daty i czasu, który <xref:System.Net.ServicePoint> obiekt ostatnio był połączony z hostem.  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIdleTime">
      <MemberSignature Language="C#" Value="public int MaxIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIdleTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.MaxIdleTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIdleTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIdleTime { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas połączenia skojarzone z <see cref="T:System.Net.ServicePoint" /> obiektu może pozostawać bezczynne, zanim połączenie jest zamknięte.</summary>
        <value>Czas (w milisekundach), które połączenie skojarzone z <see cref="T:System.Net.ServicePoint" /> obiektu może pozostawać bezczynne, zanim zostanie zamknięta i użyć ponownie dla innego połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można ustawić <xref:System.Net.ServicePoint.MaxIdleTime> do <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> aby wskazać, że połączenie skojarzone z <xref:System.Net.ServicePoint> obiektu nigdy nie powinien upłynął limit czasu.  
  
 Wartość domyślna <xref:System.Net.ServicePoint.MaxIdleTime> właściwość ma wartość <xref:System.Net.ServicePointManager.MaxServicePointIdleTime?displayProperty=nameWithType> właściwości podczas <xref:System.Net.ServicePoint> tworzony jest obiekt. Kolejne zmiany do <xref:System.Net.ServicePointManager.MaxServicePointIdleTime> właściwości nie mają wpływu na istniejące <xref:System.Net.ServicePoint> obiektów.  
  
 Gdy <xref:System.Net.ServicePoint.MaxIdleTime> połączenia skojarzone z <xref:System.Net.ServicePoint> jest przekraczana, połączenie pozostaje otwarty do momentu aplikacja próbuje korzystać z połączenia. W tym czasie ramach zamyka połączenie i tworzy nowe połączenie z hostem zdalnym.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.ServicePoint.MaxIdleTime> właściwość do ustawiania i pobierania <xref:System.Net.ServicePoint> czasu bezczynności.  
  
 [!code-cpp[System.Net.ServicePoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#3)]
 [!code-csharp[System.Net.ServicePoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#3)]
 [!code-vb[System.Net.ServicePoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> ma ustawioną wartość mniejsza niż <see cref="F:System.Threading.Timeout.Infinite" /> lub większa niż <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public virtual Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wersję protokołu HTTP, który <see cref="T:System.Net.ServicePoint" /> obiekt zastosowań.</summary>
        <value>A <see cref="T:System.Version" /> obiekt, który zawiera wersji protokołu HTTP który <see cref="T:System.Net.ServicePoint" /> obiekt zastosowań.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wersji protokołu HTTP są HTTP/1.0 i HTTP/1.1.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar buforu odbierania dla gniazda używanych przez to <see cref="T:System.Net.ServicePoint" />.</summary>
        <value>A <see cref="T:System.Int32" /> zawierający rozmiar w bajtach buforu odbioru. Wartość domyślna to 8192.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać dodatkowe informacje, zobacz <xref:System.Net.Sockets.Socket.ReceiveBufferSize>.  
  
   
  
## Examples  
 Poniższy przykład kodu określa wartość tej właściwości.  
  
 [!code-cpp[NCLServicePoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLServicePoint/CPP/nclservicepoint.cpp#1)]
 [!code-csharp[NCLServicePoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLServicePoint/CS/nclservicepoint.cs#1)]
 [!code-vb[NCLServicePoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLServicePoint/VB/nclservicepoint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla operacji set jest większa niż <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTcpKeepAlive">
      <MemberSignature Language="C#" Value="public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTcpKeepAlive(bool enabled, int32 keepAliveTime, int32 keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTcpKeepAlive (enabled As Boolean, keepAliveTime As Integer, keepAliveInterval As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
        <Parameter Name="keepAliveTime" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enabled">Jeśli wartość true, a następnie keep-alive opcji TCP za pośrednictwem połączenia TCP zostanie włączona przy użyciu określonego <c>keepAliveTime</c> i <c>keepAliveInterval</c> wartości.  
  
 Jeśli ma wartość false, a następnie opcję keep-alive TCP jest wyłączone, a pozostałe parametry są ignorowane.  
  
 Wartość domyślna to false.</param>
        <param name="keepAliveTime">Określa limit czasu w milisekundach, bez żadnych działań, dopóki wysłaniu pierwszego pakietu keep-alive.  
  
 Wartość musi być większa niż 0.  Jeśli została przekazana wartość mniejszą niż lub równa zero <see cref="T:System.ArgumentOutOfRangeException" /> jest generowany.</param>
        <param name="keepAliveInterval">Określa interwał w milisekundach między kolejnymi keep-alive pakiety są wysyłane w przypadku nieodebrania bez potwierdzenia.  
  
 Wartość musi być większa niż 0.  Jeśli została przekazana wartość mniejszą niż lub równa zero <see cref="T:System.ArgumentOutOfRangeException" /> jest generowany.</param>
        <summary>Włącza lub wyłącza opcję podtrzymania połączenia TCP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może zażądać dostawcy TCP/IP korzystanie z pakietów podtrzymania połączenia TCP. Wartość domyślna to, że korzystanie z pakietów podtrzymania połączenia TCP jest wyłączone.  
  
 Domyślne ustawienia gniazda TCP jest zainicjowany limitu czasu zestawy keep-alive 2 godziny i keep-alive interwał na 1 sekundę. `keepAliveTime` Parametr określa limit czasu w milisekundach, bez żadnych działań, dopóki wysłaniu pierwszego pakietu keep-alive. `keepAliveInterval` Parametr określa interwał w milisekundach między podczas kolejnych keep-alive pakiety są wysyłane w przypadku nieodebrania bez potwierdzenia. Liczba keep-alive sond nie można zmienić i jest ustawiony na 10.  
  
 Jeśli połączenie TCP zostało przerwane w wyniku utrzymywania aktywności <xref:System.Net.Sockets.SocketError> z <xref:System.Net.Sockets.SocketError.NetworkReset> jest zwracana do żadnych wywołań w toku w gnieździe, i kolejnych wywołań zakończy się niepowodzeniem z <xref:System.Net.Sockets.SocketError> z <xref:System.Net.Sockets.SocketError.NotConnected>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość określona dla <paramref name="keepAliveTime" /> lub <paramref name="keepAliveInterval" /> parametr jest mniejsza niż lub równa 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsPipelining">
      <MemberSignature Language="C#" Value="public bool SupportsPipelining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPipelining" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.SupportsPipelining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsPipelining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsPipelining { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy <see cref="T:System.Net.ServicePoint" /> obiektu obsługuje połączenia w trybie potokowym.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Net.ServicePoint" /> obiektu obsługuje potokowej połączenia; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przetwarzanie potokowe umożliwia klientom przesyłania trwałe połączenie wielu żądań bez oczekiwania na każdym odpowiedzi z serwera. Serwer wysyła odpowiedzi w tej samej kolejności, ponieważ żądania zostały odebrane.  
  
 Przetwarzanie potokowe opisano szczegółowo w IETF RFC 2616 sekcji 8.1.2.2.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#5)]
 [!code-csharp[System.Net.ServicePoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#5)]
 [!code-vb[System.Net.ServicePoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNagleAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.ServicePoint.UseNagleAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property UseNagleAlgorithm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseNagleAlgorithm { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.ServicePoint</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która określa, czy w przypadku połączeń zarządzanych przez ten jest używany algorytm Nagle'a <see cref="T:System.Net.ServicePoint" /> obiektu.</summary>
        <value>
          <see langword="true" /> Aby używać algorytmu Nagle'a; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby buforować małe pakiety danych i przekazuje je jako pojedynczy pakiet jest używany algorytm Nagle'a. Ten proces, nazywany "nagling," jest powszechnie używany, ponieważ zmniejsza liczbę pakietów wysłanych i zmniejsza narzut na pakiet.  
  
 Zmiana wartości tej właściwości nie ma wpływu na istniejące połączenia. Dotyczy tylko nowych połączeń utworzony po zmianie.  
  
 Algorytm Nagle'a szczegółowo opisano w IETF RFC 896.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia wartość tej właściwości.  
  
 [!code-cpp[System.Net.ServicePoint#9](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#9)]
 [!code-csharp[System.Net.ServicePoint#9](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#9)]
 [!code-vb[System.Net.ServicePoint#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>