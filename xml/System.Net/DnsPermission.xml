<Type Name="DnsPermission" FullName="System.Net.DnsPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60bdd71ee462cd1a70394ba2b8763983b67a0605" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69071833" /></Metadata><TypeSignature Language="C#" Value="public sealed class DnsPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DnsPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.DnsPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DnsPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class DnsPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type DnsPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kontroluje prawa dostępu do serwerów systemu nazw domen (DNS) w sieci.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślne uprawnienia zezwalają na dostęp do usług DNS wszystkim aplikacjom lokalnym i intranetowym oraz brak uprawnień DNS dla aplikacji strefy internetowej.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.SecurityZone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DnsPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DnsPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.DnsPermission : System.Security.Permissions.PermissionState -&gt; System.Net.DnsPermission" Usage="new System.Net.DnsPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Jedna z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</param>
        <summary>Tworzy nowe wystąpienie klasy, które <see cref="T:System.Net.DnsPermission" /> zezwala na nieograniczony dostęp do DNS lub nie zezwala na dostęp do usługi DNS.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `state` jest <xref:System.Security.Permissions.PermissionState.Unrestricted> ,<xref:System.Net.DnsPermission> wystąpienie przekazuje wszystkie wymagania. Jeśli `state` zawiera inne wartości <xref:System.Net.DnsPermission> , wystąpienie kończy się niepowodzeniem.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie <xref:System.Net.DnsPermission> klasy.  
  
 [!code-cpp[DnsPermission_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Constructor/CPP/dnspermission_constructor.cpp#1)]
 [!code-csharp[DnsPermission_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Constructor/CS/dnspermission_constructor.cs#1)]
 [!code-vb[DnsPermission_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Constructor/VB/dnspermission_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="state" />nie jest prawidłową <see cref="T:System.Security.Permissions.PermissionState" /> wartością.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="dnsPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy identyczną kopię bieżącego wystąpienia uprawnienia.</summary>
        <returns>Nowe wystąpienie <see cref="T:System.Net.DnsPermission" /> klasy, która jest identyczną kopią bieżącego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kopia <xref:System.Net.DnsPermission> wystąpienia zapewnia ten sam dostęp do serwerów DNS co oryginalne wystąpienie uprawnienia.  
  
   
  
## Examples  
 Poniższy przykład tworzy identyczną kopię istniejącego <xref:System.Net.DnsPermission> wystąpienia.  
  
 [!code-cpp[DnsPermission_Copy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Copy/CPP/dnspermission_copy.cpp#1)]
 [!code-csharp[DnsPermission_Copy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Copy/CS/dnspermission_copy.cs#1)]
 [!code-vb[DnsPermission_Copy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Copy/VB/dnspermission_copy.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="dnsPermission.FromXml securityElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">Kodowanie XML do użycia w celu odtworzenia <see cref="T:System.Net.DnsPermission" /> wystąpienia.</param>
        <summary>Rekonstruuje <see cref="T:System.Net.DnsPermission" /> wystąpienie z kodowania XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda rekonstruuje <xref:System.Net.DnsPermission> wystąpienie z kodowania <xref:System.Security.SecurityElement> XML zdefiniowanego przez klasę. <xref:System.Net.DnsPermission.FromXml%2A>  
  
 Użyj metody, aby kodować wystąpienie, w tym informacje o stanie. <xref:System.Net.DnsPermission> <xref:System.Net.DnsPermission.ToXml%2A>  
  
   
  
## Examples  
 Poniższy przykład rekonstruuje <xref:System.Net.DnsPermission> wystąpienie z kodowania XML.  
  
 [!code-cpp[DnsPermission_FromXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_FromXml/CPP/dnspermission_fromxml.cpp#1)]
 [!code-csharp[DnsPermission_FromXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_FromXml/CS/dnspermission_fromxml.cs#1)]
 [!code-vb[DnsPermission_FromXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_FromXml/VB/dnspermission_fromxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="securityElement" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="securityElement" />nie <see cref="T:System.Net.DnsPermission" /> jest elementem.</exception>
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="dnsPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Wystąpienie <see cref="T:System.Net.DnsPermission" /> , które ma zostać przecięciu z bieżącym wystąpieniem.</param>
        <summary>Tworzy wystąpienie uprawnienia, które jest częścią wspólną bieżącego wystąpienia uprawnień i określonego wystąpienia uprawnienia.</summary>
        <returns>Wystąpienie, które reprezentuje część wspólną bieżącego <see cref="T:System.Net.DnsPermission" /> wystąpienia z określonym <see cref="T:System.Net.DnsPermission" /> wystąpieniem lub <see langword="null" /> Jeśli przecięcie jest puste. <see cref="T:System.Net.DnsPermission" /> Jeśli oba wystąpienia i <paramref name="target" /> są nieograniczone, ta metoda zwraca nowe <see cref="T:System.Net.DnsPermission" /> wystąpienie, które jest nieograniczone; w przeciwnym razie zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wystąpienie, które zezwala na dostęp zdefiniowany przez zarówno bieżące <xref:System.Net.DnsPermission> wystąpienie, jak i określone <xref:System.Net.DnsPermission> wystąpienie. <xref:System.Net.DnsPermission> <xref:System.Net.DnsPermission.Intersect%2A> Każde żądanie musi przekazywać oba uprawnienia, aby przekazać ich przecięcie.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie uprawnienia, które jest częścią wspólną bieżącego wystąpienia uprawnień i określonego wystąpienia uprawnienia.  
  
 [!code-cpp[dnspermission_union_intersect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/dnspermission_union_intersect/CPP/dnspermission_union_intersect.cpp#2)]
 [!code-csharp[dnspermission_union_intersect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/dnspermission_union_intersect/CS/dnspermission_union_intersect.cs#2)]
 [!code-vb[dnspermission_union_intersect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/dnspermission_union_intersect/VB/dnspermission_union_intersect.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" />nie jest <see langword="null" />ani ani. <see cref="T:System.Net.DnsPermission" /></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="dnsPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Drugie <see cref="T:System.Net.DnsPermission" /> wystąpienie, które ma zostać przetestowane dla relacji podzbioru.</param>
        <summary>Określa, czy bieżące wystąpienie uprawnienia jest podzbiorem określonego wystąpienia uprawnienia.</summary>
        <returns><see langword="false" />Jeśli bieżące wystąpienie jest nieograniczone i <paramref name="target" /> <see langword="null" /> jest albo nieograniczone; w przeciwnym razie, <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżące <xref:System.Net.DnsPermission> wystąpienie jest podzbiorem określonego <xref:System.Net.DnsPermission> wystąpienia, jeśli bieżące <xref:System.Net.DnsPermission> wystąpienie określa zestaw operacji, które są w całości zawarte w określonym <xref:System.Net.DnsPermission> wystąpieniu.  
  
 Jeśli metoda zwraca `true`, bieżące <xref:System.Net.DnsPermission> wystąpienie nie zezwala na dostęp do serwerów DNS, niż jest to określone <xref:System.Net.DnsPermission> wystąpienie. <xref:System.Net.DnsPermission.IsSubsetOf%2A>  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Net.DnsPermission.IsSubsetOf%2A> metodę, aby określić, czy bieżące wystąpienie uprawnienia jest podzbiorem określonego wystąpienia uprawnienia.  
  
 [!code-cpp[DnsPermission_IsSubsetOf#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/CPP/dnspermission_issubsetof.cpp#1)]
 [!code-csharp[DnsPermission_IsSubsetOf#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/CS/dnspermission_issubsetof.cs#1)]
 [!code-vb[DnsPermission_IsSubsetOf#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/VB/dnspermission_issubsetof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" />nie jest <see langword="null" />ani ani. <see cref="T:System.Net.DnsPermission" /></exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="override this.IsUnrestricted : unit -&gt; bool" Usage="dnsPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza ogólny stan uprawnień obiektu.</summary>
        <returns><see langword="true" />Jeśli wystąpienie zostało utworzone za pomocą <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Net.DnsPermission" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Net.DnsPermission.IsUnrestricted%2A> metodę w celu sprawdzenia ogólnego stanu uprawnień obiektu.  
  
 [!code-cpp[DnsPermission_IsUnrestricted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/CPP/dnspermission_isunrestricted.cpp#1)]
 [!code-csharp[DnsPermission_IsUnrestricted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/CS/dnspermission_isunrestricted.cs#1)]
 [!code-vb[DnsPermission_IsUnrestricted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/VB/dnspermission_isunrestricted.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="dnsPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy Kodowanie <see cref="T:System.Net.DnsPermission" /> XML wystąpienia i jego bieżący stan.</summary>
        <returns><see cref="T:System.Security.SecurityElement" /> Wystąpienie zawierające zakodowane w formacie XML reprezentację obiektu zabezpieczeń, w tym informacje o stanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda tworzy wystąpienie do XML — <xref:System.Net.DnsPermission> Koduj reprezentację wystąpienia, w tym informacje o stanie. <xref:System.Security.SecurityElement> <xref:System.Net.DnsPermission.ToXml%2A>  
  
 Użyj metody <xref:System.Net.DnsPermission.FromXml%2A> , aby przywrócić informacje o stanie <xref:System.Security.SecurityElement> z wystąpienia.  
  
   
  
## Examples  
 Poniższy przykład tworzy kodowanie <xref:System.Net.DnsPermission> XML wystąpienia.  
  
 [!code-cpp[DnsPermission_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Constructor/CPP/dnspermission_constructor.cpp#1)]
 [!code-csharp[DnsPermission_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Constructor/CS/dnspermission_constructor.cs#1)]
 [!code-vb[DnsPermission_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Constructor/VB/dnspermission_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="dnsPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><see cref="T:System.Net.DnsPermission" /> Wystąpienie, które ma zostać połączone z bieżącym wystąpieniem.</param>
        <summary>Tworzy wystąpienie uprawnienia, które jest Unią z bieżącym wystąpieniem uprawnień i określonym wystąpieniem uprawnienia.</summary>
        <returns>Wystąpienie, które reprezentuje Unię bieżącego <see cref="T:System.Net.DnsPermission" /> wystąpienia z określonym <see cref="T:System.Net.DnsPermission" /> wystąpieniem. <see cref="T:System.Net.DnsPermission" /> Jeśli <paramref name="target" /> jest<see langword="null" />, ta metoda zwraca kopię bieżącego wystąpienia. Jeśli bieżące wystąpienie lub <paramref name="target" /> jest nieograniczone, ta metoda <see cref="T:System.Net.DnsPermission" /> zwraca wystąpienie, które jest nieograniczone; <see cref="T:System.Net.DnsPermission" /> w przeciwnym razie zwraca wystąpienie z ograniczeniami.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wystąpienie, które zezwala na dostęp zdefiniowany przez bieżące <xref:System.Net.DnsPermission> wystąpienie lub określone <xref:System.Net.DnsPermission> wystąpienie. <xref:System.Net.DnsPermission> <xref:System.Net.DnsPermission.Union%2A> Każde żądanie, które przekazuje jedno uprawnienie, przekazuje ich Unię.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie uprawnienia, które jest Unią z bieżącym wystąpieniem uprawnień i określonym wystąpieniem uprawnienia.  
  
 [!code-cpp[dnspermission_union_intersect#1](~/samples/snippets/cpp/VS_Snippets_Remoting/dnspermission_union_intersect/CPP/dnspermission_union_intersect.cpp#1)]
 [!code-csharp[dnspermission_union_intersect#1](~/samples/snippets/csharp/VS_Snippets_Remoting/dnspermission_union_intersect/CS/dnspermission_union_intersect.cs#1)]
 [!code-vb[dnspermission_union_intersect#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/dnspermission_union_intersect/VB/dnspermission_union_intersect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="target" />nie jest <see langword="null" />ani ani. <see cref="T:System.Net.DnsPermission" /></exception>
      </Docs>
    </Member>
  </Members>
</Type>
