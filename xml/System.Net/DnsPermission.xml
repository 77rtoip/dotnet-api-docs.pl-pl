<Type Name="DnsPermission" FullName="System.Net.DnsPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="695ee711b672465ae70750fd3699dda27cc1585a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30561385" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DnsPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DnsPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.DnsPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DnsPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class DnsPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Formanty prawa dostępu do serwerów systemu nazw domen (DNS) w sieci.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uprawnienia domyślne pozwalają wszystkich lokalnych i aplikacji strefy Intranet dostęp do usługi DNS i żadne uprawnienia DNS dla aplikacji stref internetowych.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.SecurityZone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DnsPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DnsPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Jeden z <see cref="T:System.Security.Permissions.PermissionState" /> wartości.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.DnsPermission" /> klasy, która umożliwia uzyskanie nieograniczonego dostępu DNS lub nie zezwala na dostęp DNS.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `state` jest <xref:System.Security.Permissions.PermissionState.Unrestricted>, <xref:System.Net.DnsPermission> wystąpienia przekazuje wszystkich potrzeb. Jeśli `state` zawiera inne wartości <xref:System.Net.DnsPermission> wystąpienie nie powiedzie się wszystkich potrzeb.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie <xref:System.Net.DnsPermission> klasy.  
  
 [!code-cpp[DnsPermission_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Constructor/CPP/dnspermission_constructor.cpp#1)]
 [!code-csharp[DnsPermission_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Constructor/CS/dnspermission_constructor.cs#1)]
 [!code-vb[DnsPermission_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Constructor/VB/dnspermission_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> nie jest prawidłową <see cref="T:System.Security.Permissions.PermissionState" /> wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy identyczne kopię bieżącego wystąpienia uprawnienia.</summary>
        <returns>Nowe wystąpienie klasy <see cref="T:System.Net.DnsPermission" /> klasy, która jest identyczne kopię bieżącego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kopię <xref:System.Net.DnsPermission> wystąpienia zawiera takie same prawa dostępu do serwerów DNS, jaką miało oryginalne wystąpienie uprawnień.  
  
   
  
## Examples  
 Poniższy przykład tworzy identyczne kopię istniejącej <xref:System.Net.DnsPermission> wystąpienia.  
  
 [!code-cpp[DnsPermission_Copy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Copy/CPP/dnspermission_copy.cpp#1)]
 [!code-csharp[DnsPermission_Copy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Copy/CS/dnspermission_copy.cs#1)]
 [!code-vb[DnsPermission_Copy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Copy/VB/dnspermission_copy.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">Kodowanie na potrzeby rekonstrukcji XML <see cref="T:System.Net.DnsPermission" /> wystąpienia.</param>
        <summary>Rekonstruuje <see cref="T:System.Net.DnsPermission" /> wystąpienia kodowania XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.DnsPermission.FromXml%2A> Niezamrożone metody <xref:System.Net.DnsPermission> wystąpienia kodowania XML zdefiniowane przez <xref:System.Security.SecurityElement> klasy.  
  
 Użyj <xref:System.Net.DnsPermission.ToXml%2A> do kodowania XML <xref:System.Net.DnsPermission> wystąpienia, w tym informacje o stanie.  
  
   
  
## Examples  
 Poniższy przykład rekonstruuje <xref:System.Net.DnsPermission> wystąpienia kodowania XML.  
  
 [!code-cpp[DnsPermission_FromXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_FromXml/CPP/dnspermission_fromxml.cpp#1)]
 [!code-csharp[DnsPermission_FromXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_FromXml/CS/dnspermission_fromxml.cs#1)]
 [!code-vb[DnsPermission_FromXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_FromXml/VB/dnspermission_fromxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityElement" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityElement" /> nie jest <see cref="T:System.Net.DnsPermission" /> elementu.</exception>
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <see cref="T:System.Net.DnsPermission" /> Wystąpienia intersect z bieżącym wystąpieniem.</param>
        <summary>Tworzy wystąpienie uprawnienia, które jest przecięcia bieżącego wystąpienia uprawnienia i wystąpienia określonego uprawnienia.</summary>
        <returns>A <see cref="T:System.Net.DnsPermission" /> wystąpienie reprezentuje część wspólną bieżącego <see cref="T:System.Net.DnsPermission" /> wystąpienia z określonym <see cref="T:System.Net.DnsPermission" /> wystąpienia, lub <see langword="null" /> Jeśli część wspólną jest pusta. Jeśli oba bieżącego wystąpienia i <paramref name="target" /> są bez ograniczeń, ta metoda zwraca nową <see cref="T:System.Net.DnsPermission" /> wystąpienia, które jest nieograniczony; w przeciwnym razie zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.DnsPermission.Intersect%2A> Metoda zwraca <xref:System.Net.DnsPermission> wystąpienia umożliwiająca dostęp zdefiniowane przez oba bieżące <xref:System.Net.DnsPermission> wystąpienie oraz określony <xref:System.Net.DnsPermission> wystąpienia. Wszelkie żądania musi przejść pomyślnie zarówno uprawnienia do przekazania ich przecięcia.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie uprawnienia, które jest przecięcia bieżącego wystąpienia uprawnienia i wystąpienia określonego uprawnienia.  
  
 [!code-cpp[dnspermission_union_intersect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/dnspermission_union_intersect/CPP/dnspermission_union_intersect.cpp#2)]
 [!code-csharp[dnspermission_union_intersect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/dnspermission_union_intersect/CS/dnspermission_union_intersect.cs#2)]
 [!code-vb[dnspermission_union_intersect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/dnspermission_union_intersect/VB/dnspermission_union_intersect.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> nie jest ani <see cref="T:System.Net.DnsPermission" /> ani <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Drugi <see cref="T:System.Net.DnsPermission" /> wystąpienia pod kątem relacji podzbioru.</param>
        <summary>Określa, czy bieżące wystąpienie uprawnienie jest podzbiorem wystąpienia określonego uprawnienia.</summary>
        <returns>
          <see langword="false" /> Jeśli bieżące wystąpienie jest nieograniczony i <paramref name="target" /> jest <see langword="null" /> lub bez ograniczeń, a w przeciwnym razie <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżący <xref:System.Net.DnsPermission> wystąpienia jest podzbiorem określonego <xref:System.Net.DnsPermission> wystąpienia, jeśli bieżący <xref:System.Net.DnsPermission> wystąpienia określa zestaw operacji jest całkowicie zawarty przez określony <xref:System.Net.DnsPermission> wystąpienia.  
  
 Jeśli <xref:System.Net.DnsPermission.IsSubsetOf%2A> metoda zwraca `true`, bieżący <xref:System.Net.DnsPermission> wystąpienia umożliwia szerszy dostęp do serwerów DNS, niż ma określony <xref:System.Net.DnsPermission> wystąpienia.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.DnsPermission.IsSubsetOf%2A> metodę, aby ustalić, czy bieżące wystąpienie uprawnienie jest podzbiorem wystąpienia określonego uprawnienia.  
  
 [!code-cpp[DnsPermission_IsSubsetOf#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/CPP/dnspermission_issubsetof.cpp#1)]
 [!code-csharp[DnsPermission_IsSubsetOf#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/CS/dnspermission_issubsetof.cs#1)]
 [!code-vb[DnsPermission_IsSubsetOf#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/VB/dnspermission_issubsetof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> nie jest ani <see cref="T:System.Net.DnsPermission" /> ani <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza, czy ogólny stan uprawnienia obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Net.DnsPermission" /> wystąpienie zostało utworzone z <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.DnsPermission.IsUnrestricted%2A> metodę sprawdzania, ogólny stan uprawnienia obiektu.  
  
 [!code-cpp[DnsPermission_IsUnrestricted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/CPP/dnspermission_isunrestricted.cpp#1)]
 [!code-csharp[DnsPermission_IsUnrestricted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/CS/dnspermission_isunrestricted.cs#1)]
 [!code-vb[DnsPermission_IsUnrestricted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/VB/dnspermission_isunrestricted.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy XML kodowanie <see cref="T:System.Net.DnsPermission" /> wystąpienia i swojego bieżącego stanu.</summary>
        <returns>A <see cref="T:System.Security.SecurityElement" /> wystąpienia, które zawiera reprezentacja w formacie XML obiektu zabezpieczeń, w tym informacje o stanie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.DnsPermission.ToXml%2A> Metoda tworzy <xref:System.Security.SecurityElement> wystąpienie do kodowania XML reprezentację <xref:System.Net.DnsPermission> wystąpienia, w tym informacje o stanie.  
  
 Użyj <xref:System.Net.DnsPermission.FromXml%2A> sposób przywracanie informacji o stanie z <xref:System.Security.SecurityElement> wystąpienia.  
  
   
  
## Examples  
 Poniższy przykład tworzy XML kodowanie <xref:System.Net.DnsPermission> wystąpienia.  
  
 [!code-cpp[DnsPermission_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Constructor/CPP/dnspermission_constructor.cpp#1)]
 [!code-csharp[DnsPermission_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Constructor/CS/dnspermission_constructor.cs#1)]
 [!code-vb[DnsPermission_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Constructor/VB/dnspermission_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.DnsPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <see cref="T:System.Net.DnsPermission" /> Wystąpienia, aby połączyć się z bieżącym wystąpieniem.</param>
        <summary>Tworzy wystąpienie uprawnienia, które łączy bieżące wystąpienie uprawnień i wystąpienia określonego uprawnienia.</summary>
        <returns>A <see cref="T:System.Net.DnsPermission" /> wystąpienie reprezentującego Unii bieżącego <see cref="T:System.Net.DnsPermission" /> wystąpienia z określonym <see cref="T:System.Net.DnsPermission" /> wystąpienia. Jeśli <paramref name="target" /> jest <see langword="null" />, ta metoda zwraca kopię bieżącego wystąpienia. Jeśli bieżące wystąpienie lub <paramref name="target" /> jest nieograniczony, ta metoda zwraca <see cref="T:System.Net.DnsPermission" /> wystąpienia bez ograniczeń, a w przeciwnym razie zwraca <see cref="T:System.Net.DnsPermission" /> wystąpienie, które są ograniczone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.DnsPermission.Union%2A> Metoda zwraca <xref:System.Net.DnsPermission> zdefiniowane wystąpienie, umożliwiająca dostęp przez bieżącego <xref:System.Net.DnsPermission> wystąpienia lub określony <xref:System.Net.DnsPermission> wystąpienia. Wszelkie żądania, który przekazuje albo uprawnienie przekazuje ich union.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie uprawnień, będącą Unią bieżącego wystąpienia uprawnienia i wystąpienia określonego uprawnienia.  
  
 [!code-cpp[dnspermission_union_intersect#1](~/samples/snippets/cpp/VS_Snippets_Remoting/dnspermission_union_intersect/CPP/dnspermission_union_intersect.cpp#1)]
 [!code-csharp[dnspermission_union_intersect#1](~/samples/snippets/csharp/VS_Snippets_Remoting/dnspermission_union_intersect/CS/dnspermission_union_intersect.cs#1)]
 [!code-vb[dnspermission_union_intersect#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/dnspermission_union_intersect/VB/dnspermission_union_intersect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> nie jest ani <see cref="T:System.Net.DnsPermission" /> ani <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>