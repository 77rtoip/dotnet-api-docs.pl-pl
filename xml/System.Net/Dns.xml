<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="839c6f8f05789b852734d5c4c1a494500b6564fa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36473026" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <TypeSignature Language="F#" Value="type Dns = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia funkcja rozpoznawania nazw domeny proste.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns> Klasa jest statycznej klasy, która pobiera informacje o określonego hosta z Internetu systemu nazw domen (DNS).  
  
 Informacji o hoście zapytania DNS jest zwracany w wystąpieniu <xref:System.Net.IPHostEntry> klasy. Jeśli określony host ma więcej niż jednego wpisu w bazie danych DNS <xref:System.Net.IPHostEntry> zawiera wiele adresów IP i aliasy.  
  
   
  
## Examples  
 Poniższy przykład wysyła zapytanie do bazy danych DNS, aby uzyskać informacje o hoście www.contoso.com.  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostAddresses : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostAddresses (hostNameOrAddress, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozpoznania.</param>
        <param name="requestCallback">
          <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="state">Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <c>requestCallback</c> delegować po zakończeniu operacji.</param>
        <summary>Asynchronicznie zwraca adresy Internet Protocol (IP) dla określonego hosta.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Wystąpienia, który odwołuje się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostAddresses%2A> Metody asynchronicznie wysyła zapytanie do serwera DNS dla adresów IP, które są skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` adres IP bez badanie serwera DNS jest zwracany ten adres.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Jeśli ciąg pusty jest przekazywany jako `hostNameOrAddress` argument, a następnie ta metoda zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Asynchroniczną <xref:System.Net.Dns.BeginGetHostAddresses%2A> musi być zakończona, wywołując <xref:System.Net.Dns.EndGetHostAddresses%2A> metody. Zazwyczaj metoda jest wywoływana przez `requestCallback` delegowanie.  
  
 Ta metoda nie blokuje przed zakończeniem operacji. Aby zablokować aż do zakończenia operacji, należy użyć <xref:System.Net.Dns.GetHostAddresses%2A> metody.  
  
 Aby uzyskać więcej informacji o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> jest nieprawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostByName : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostByName (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa DNS hosta.</param>
        <param name="requestCallback">
          <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="stateObject">Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <c>requestCallback</c> delegować po zakończeniu operacji.</param>
        <summary>Rozpoczyna żądanie asynchroniczne dla <see cref="T:System.Net.IPHostEntry" /> informacji na temat określonej nazwy hosta DNS.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Wystąpienia, który odwołuje się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczną <xref:System.Net.Dns.BeginGetHostByName%2A> musi być zakończona, wywołując <xref:System.Net.Dns.EndGetHostByName%2A> metody. Zazwyczaj metoda jest wywoływana przez `requestCallback` delegowanie.  
  
 Ta metoda nie blokuje przed zakończeniem operacji. Aby zablokować aż do zakończenia operacji, należy użyć <xref:System.Net.Dns.GetHostByName%2A> metody.  
  
 Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas wykonywania zapytania DNS.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Asynchronicznie usuwa nazwę hosta lub adres IP <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : System.Net.IPAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (address, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP do rozpoznania.</param>
        <param name="requestCallback">
          <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="stateObject">Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <c>requestCallback</c> delegować po zakończeniu operacji.</param>
        <summary>Asynchronicznie usuwa adres IP komputerowi <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Wystąpienia, który odwołuje się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostEntry%2A> Metody asynchronicznie wysyła zapytanie do serwera DNS dla adresów IP i aliasy skojarzone z adresem IP.  
  
 **Uwaga** ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Asynchroniczną <xref:System.Net.Dns.BeginGetHostEntry%2A> musi być zakończona, wywołując <xref:System.Net.Dns.EndGetHostEntry%2A> metody. Zazwyczaj metoda jest wywoływana przez `requestCallback` delegowanie.  
  
 Ta metoda nie blokuje przed zakończeniem operacji. Aby zablokować aż do zakończenia operacji, należy użyć <xref:System.Net.Dns.GetHostEntry%2A> metody.  
  
 Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Dns.BeginGetHostEntry%2A> metodę, aby rozpoznać adresu IP, adres do <xref:System.Net.IPHostEntry> wystąpienia.  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> jest nieprawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (hostNameOrAddress, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozpoznania.</param>
        <param name="requestCallback">
          <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="stateObject">Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <c>requestCallback</c> delegować po zakończeniu operacji.</param>
        <summary>Asynchronicznie usuwa nazwę hosta lub adres IP <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Wystąpienia, który odwołuje się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostEntry%2A> Metoda odpytuje serwer DNS dla adresu IP, który jest skojarzony z nazwą hosta lub adres IP.  
  
 **Uwaga** ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Asynchroniczną <xref:System.Net.Dns.BeginGetHostEntry%2A> musi być zakończona, wywołując <xref:System.Net.Dns.EndGetHostEntry%2A> metody. Zazwyczaj metoda jest wywoływana przez `requestCallback` delegowanie.  
  
 Ta metoda nie blokuje przed zakończeniem operacji. Aby zablokować aż do zakończenia operacji, należy użyć <xref:System.Net.Dns.GetHostEntry%2A> metody.  
  
 Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Dns.BeginGetHostEntry%2A> metodę, aby rozpoznać adresu IP, adres do <xref:System.Net.IPHostEntry> wystąpienia.  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> jest nieprawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginResolve (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa DNS hosta.</param>
        <param name="requestCallback">
          <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="stateObject">Obiekt użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <c>requestCallback</c> delegować po zakończeniu operacji.</param>
        <summary>Rozpoczyna żądanie asynchroniczne można rozpoznać nazwy hosta DNS lub adres IP <see cref="T:System.Net.IPAddress" /> wystąpienia.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Wystąpienia, który odwołuje się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczną <xref:System.Net.Dns.BeginResolve%2A> musi być zakończona, wywołując <xref:System.Net.Dns.EndResolve%2A> metody. Zazwyczaj metoda jest wywoływana przez `requestCallback` delegowanie.  
  
 Ta metoda nie blokuje przed zakończeniem operacji. Aby zablokować aż do zakończenia operacji, należy użyć <xref:System.Net.Dns.Resolve%2A> metody.  
  
 Aby uzyskać więcej informacji o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.Dns.BeginResolve%2A> do rozpoznawania nazwy hosta DNS do <xref:System.Net.IPAddress>.  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Obiekt wywołujący nie ma uprawnień dostępu do informacji DNS.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostAddresses : IAsyncResult -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.EndGetHostAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do wystąpienia <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> metody.</param>
        <summary>Kończy żądanie asynchroniczne, aby uzyskać informacje dotyczące systemu DNS.</summary>
        <returns>Tablica typu <see cref="T:System.Net.IPAddress" /> zawierający adresy IP określone przez hosta <paramref name="hostNameOrAddress" /> parametr <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostAddresses%2A> Metoda odpytuje serwer DNS dla adresów IP skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` adres IP bez badanie serwera DNS jest zwracany ten adres.  
  
 Jeśli ciąg pusty jest przekazywany jako `hostNameOrAddress` argument, a następnie ta metoda zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostByName : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostByName asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Wystąpienia, która jest zwracana przez wywołanie do <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> metody.</param>
        <summary>Kończy żądanie asynchroniczne, aby uzyskać informacje dotyczące systemu DNS.</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> Obiekt, który zawiera informacje dotyczące systemu DNS o hoście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ukończ ten uniemożliwia metody do czasu tej operacji.  
  
 Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Dns.GetHostByName%2A> metody.  
  
 Jeśli <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, <xref:System.Net.IPHostEntry.Aliases%2A> właściwość <xref:System.Net.IPHostEntry> zwróciła wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusty.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostEntry : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostEntry asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Zwrócony przez wywołanie do wystąpienia <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> metody.</param>
        <summary>Kończy żądanie asynchroniczne, aby uzyskać informacje dotyczące systemu DNS.</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> Wystąpienia, które zawiera adres informacje o hoście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ukończ ten uniemożliwia metody do czasu tej operacji.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość <xref:System.Net.IPHostEntry> zwróciła wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusty.  
  
 Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Dns.GetHostEntry%2A> metody.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndResolve asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Wystąpienia, która jest zwracana przez wywołanie do <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> metody.</param>
        <summary>Kończy żądanie asynchroniczne, aby uzyskać informacje dotyczące systemu DNS.</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> Obiekt, który zawiera informacje dotyczące systemu DNS o hoście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ukończ ten uniemożliwia metody do czasu tej operacji.  
  
 Jeśli <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> ustawiono `true`, <xref:System.Net.IPHostEntry.Aliases%2A> właściwość <xref:System.Net.IPHostEntry> zwróciła wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusty.  
  
 Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Dns.Resolve%2A> metody.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kończy żądanie asynchroniczne informacji hosta DNS.  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddresses : string -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.GetHostAddresses hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozpoznania.</param>
        <summary>Zwraca adres protokołu internetowego (IP) dla określonego hosta.</summary>
        <returns>Tablica typu <see cref="T:System.Net.IPAddress" /> zawierający adresy IP dla hosta, który nie jest określona przez <paramref name="hostNameOrAddress" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostAddresses%2A> Metoda odpytuje serwer DNS dla adresów IP skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` adres IP bez badanie serwera DNS jest zwracany ten adres.  
  
 Jeśli ciąg pusty jest przekazywany jako `hostNameOrAddress` argument, a następnie ta metoda zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Adresy IPv6 zostały przefiltrowane z poziomu wyników <xref:System.Net.Dns.GetHostAddresses%2A> metodę, jeśli komputer lokalny nie ma protokół IPv6 jest zainstalowany. W związku z tym jest możliwe odzyskanie pustą <xref:System.Net.IPAddress> wystąpienia, jeśli tylko wyniki IPv6, jeśli jest on dostępny dla `hostNameOrAddress`.parameter.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Dns.GetHostAddresses%2A> metody do rozpoznania adresu IP do tablicy typu <xref:System.Net.IPAddress>.  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> jest nieprawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddressesAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;" Usage="System.Net.Dns.GetHostAddressesAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozpoznania.</param>
        <summary>Zwraca adres protokołu internetowego (IP) dla określonego hosta jako operację asynchroniczną.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Właściwości dla obiektu task zwraca tablicę typu <see cref="T:System.Net.IPAddress" /> zawierający adresy IP dla hosta, który nie jest określona przez <paramref name="hostNameOrAddress" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po `hostNameOrAddress` został rozwiązany.  
  
 Ta metoda wysyła zapytanie do serwera DNS dla adresów IP skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` adres IP bez badanie serwera DNS jest zwracany ten adres.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> jest nieprawidłowym adresem IP.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera informacje dotyczące hosta systemu DNS dla adresu IP. Te metody są już nieaktualne.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">
          <see cref="T:System.Net.IPAddress" />.</param>
        <summary>Tworzy <see cref="T:System.Net.IPHostEntry" /> wystąpienia z określonego <see cref="T:System.Net.IPAddress" />.</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" />.  <see cref="T:System.Net.IPHostEntry" /> Wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Net.IPHostEntry> z <xref:System.Net.IPAddress>.  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="address" />.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP.</param>
        <summary>Tworzy <see cref="T:System.Net.IPHostEntry" /> wystąpienia z adresu IP.</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> Wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="address" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> nie jest prawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member GetHostByName : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByName hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa DNS hosta.</param>
        <summary>Pobiera informacje dotyczące systemu DNS dla określonej nazwy hosta DNS.</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> Obiekt, który zawiera informacje o hosta dla adresu określonego we <paramref name="hostName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostByName%2A> Metoda wysyła zapytanie do serwera DNS w Internecie dla informacji o hoście. W przypadku przekazania pustego ciągu jako nazwę hosta, ta metoda pobiera nazwę standardowego hosta na komputerze lokalnym.  
  
 Dla asynchronicznego dostępu do informacji DNS, użyj <xref:System.Net.Dns.BeginGetHostByName%2A> i <xref:System.Net.Dns.EndGetHostByName%2A> metody.  
  
 Jeśli <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, <xref:System.Net.IPHostEntry.Aliases%2A> właściwość <xref:System.Net.IPHostEntry> zwróciła wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusty.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.Dns.GetHostByName%2A> metody, aby uzyskać informacje dotyczące systemu DNS dla określonej nazwy hosta DNS.  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostName" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostName" />.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa nazwę hosta lub adres IP <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP.</param>
        <summary>Usuwa adres IP komputerowi <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> Wystąpienia, które zawiera adres informacje o hoście określonym w <paramref name="address" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostEntry%2A> Metoda odpytuje serwer DNS dla adresów IP i aliasy skojarzone z adresem IP.  
  
 Adresy IPv6 zostały przefiltrowane z poziomu wyników <xref:System.Net.Dns.GetHostEntry%2A> metodę, jeśli komputer lokalny nie ma protokół IPv6 jest zainstalowany. W związku z tym jest możliwe odzyskanie pustą <xref:System.Net.IPHostEntry> wystąpienia, jeśli tylko wyniki IPv6, jeśli jest on dostępny dla `address` parametru.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość <xref:System.Net.IPHostEntry> zwróciła wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusty.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  

## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Dns.GetHostEntry%2A> metodę, aby rozpoznać adresu IP, adres do <xref:System.Net.IPHostEntry> wystąpienia.  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> jest nieprawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozpoznania.</param>
        <summary>Usuwa nazwę hosta lub adres IP <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> Wystąpienia, które zawiera adres informacje o hoście określonym w <paramref name="hostNameOrAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostEntry%2A> Metoda odpytuje serwer DNS dla adresu IP, który jest skojarzony z nazwą hosta lub adres IP.  
  
 Jeśli ciąg pusty jest przekazywany jako `hostNameOrAddress` argument, a następnie ta metoda zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Jeśli nie można odnaleźć nazwy hosta, <xref:System.Net.Sockets.SocketException> o wartości (błąd Windows Sockets WSAHOST_NOT_FOUND) 11001 zwracany jest wyjątek. Ten wyjątek może być zwracany, jeśli serwer DNS nie odpowiada. Ten wyjątek może być również zwracany, jeśli nazwa nie jest nazwą oficjalnego hosta lub alias lub nie można znaleźć w baz danych, której dotyczy zapytanie.  
  
 <xref:System.ArgumentException> Wyjątku jest także zwracany, jeśli `hostNameOrAddress` zawiera parametr <xref:System.Net.IPAddress.Any> lub <xref:System.Net.IPAddress.IPv6Any>.  
  
 <xref:System.Net.Dns.GetHostEntry%2A> Metody zakłada się, że jeśli literałem IP jest przekazywany w `hostNameOrAddress` parametr, który aplikacja będzie <xref:System.Net.IPHostEntry> zwrócone wystąpienie ze wszystkimi zbioru właściwości. Te właściwości obejmują <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, i <xref:System.Net.IPHostEntry.HostName%2A>. W wyniku wykonania <xref:System.Net.Dns.GetHostEntry%2A> — metoda wykonują następujące zachowanie w przypadku przekazania literału ciągu adresu IP:  
  
1.  Metoda próbuje przeanalizować adresu. Jeśli `hostNameOrAddress` parametr zawiera prawne literału ciągu adresu IP, a następnie pierwszą fazę zakończy się pomyślnie.  
  
2.  Wyszukiwanie wsteczne przy użyciu adresu IP literału ciągu IP jest próbował uzyskać nazwy hosta. Ten wynik jest ustawiony jako <xref:System.Net.IPHostEntry.HostName%2A> właściwości.  
  
3.  Nazwa hosta z tej wyszukiwania wstecznego służy ponownie uzyskać wszystkie możliwe adresy IP skojarzone z nazwą i Ustaw jako <xref:System.Net.IPHostEntry.AddressList%2A> właściwości.  
  
 Dla literału ciągu IPv4 może się powieść wszystkie trzy powyższe kroki. Ale istnieje możliwość starych rekordów DNS dla adresu IPv4, który faktycznie należy do innego hosta, który ma zostać zwrócona. Może to spowodować krok #3, aby zakończyć się niepowodzeniem i Zgłoś wyjątek (Brak rekordu PTR systemu DNS dla adresu IPv4, ale żaden rekord A systemu DNS dla adresu IPv4).  
  
 W przypadku protokołu IPv6 krok #2. powyżej może zakończyć się niepowodzeniem, ponieważ w większości wdrożeń IPv6 nie rejestruj odwrotnej rekordu (PTR) dla adresu IPv6. Dzięki tej metody zwracać IPv6 ciąg literału jako nazwę hosta pełni kwalifikowanej domeny (FQDN) w <xref:System.Net.IPHostEntry.HostName%2A> właściwości.  
  
 <xref:System.Net.Dns.GetHostAddresses%2A> Metoda ma inaczej względem literały IP. Jeśli w kroku #1 zakończy się powodzeniem (pomyślnie analizuje adres IP), natychmiast zwracany adres w wyniku. Nie ma żadnych próba wyszukiwania wstecznego.  
  
 Adresy IPv6 zostały przefiltrowane z poziomu wyników <xref:System.Net.Dns.GetHostEntry%2A> metodę, jeśli komputer lokalny nie ma protokół IPv6 jest zainstalowany. W związku z tym jest możliwe odzyskanie pustą <xref:System.Net.IPHostEntry> wystąpienia, jeśli tylko wyniki IPv6, jeśli jest on dostępny dla `hostNameOrAddress`.parameter.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość <xref:System.Net.IPHostEntry> zwróciła wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusty.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.Dns.GetHostEntry%2A> metodę, aby rozpoznać adresu IP, adres do <xref:System.Net.IPHostEntry> wystąpienia.  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> parametru jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" /> parametru.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> Parametr jest nieprawidłowy adres IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa nazwę hosta lub adres IP <see cref="T:System.Net.IPHostEntry" /> wystąpienia jako operację asynchroniczną.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP.</param>
        <summary>Usuwa adres IP komputerowi <see cref="T:System.Net.IPHostEntry" /> wystąpienia jako operację asynchroniczną.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Net.IPHostEntry" /> wystąpienia, które zawiera adres informacje o hoście określonym w <paramref name="address" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po `address` został rozwiązany.  
  
 Ta metoda wysyła zapytanie do serwera DNS dla adresów IP i aliasy skojarzone z adresem IP.  
  
 Adresy IPv6 są filtrowane z wyników tej metody, jeśli komputer lokalny nie ma protokół IPv6 jest zainstalowany. W związku z tym jest możliwe odzyskanie pustą <xref:System.Net.IPHostEntry> wystąpienia, jeśli tylko wyniki IPv6, jeśli jest on dostępny dla `address` parametru.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość <xref:System.Net.IPHostEntry> zwróciła wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusty.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> jest nieprawidłowym adresem IP.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozpoznania.</param>
        <summary>Usuwa nazwę hosta lub adres IP <see cref="T:System.Net.IPHostEntry" /> wystąpienia jako operację asynchroniczną.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.  Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Net.IPHostEntry" /> wystąpienia, które zawiera adres informacje o hoście określonym w <paramref name="hostNameOrAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task%601> obiektu ukończy po `hostNameOrAddress` został rozwiązany.  
  
 Ta metoda wysyła zapytanie do serwera DNS dla adresu IP, który jest skojarzony z nazwą hosta lub adres IP.  
  
 Jeśli ciąg pusty jest przekazywany jako `hostNameOrAddress` argument, a następnie ta metoda zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Jeśli nie można odnaleźć nazwy hosta, <xref:System.Net.Sockets.SocketException> o wartości (błąd Windows Sockets WSAHOST_NOT_FOUND) 11001 zwracany jest wyjątek. Ten wyjątek może być zwracany, jeśli serwer DNS nie odpowiada. Ten wyjątek może być również zwracany, jeśli nazwa nie jest nazwą oficjalnego hosta lub alias lub nie można znaleźć w baz danych, której dotyczy zapytanie.  
  
 <xref:System.ArgumentException> Wyjątku jest także zwracany, jeśli `hostNameOrAddress` zawiera parametr <xref:System.Net.IPAddress.Any> lub <xref:System.Net.IPAddress.IPv6Any>.  
  
 Ta metoda przy założeniu, że jeśli literałem IP jest przekazywany w `hostNameOrAddress` parametr, który aplikacja będzie <xref:System.Net.IPHostEntry> zwrócone wystąpienie ze wszystkimi zbioru właściwości. Te właściwości obejmują <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, i <xref:System.Net.IPHostEntry.HostName%2A>. W związku z tym implementacja tej metody wykonują następujące zachowanie, gdy przesunie się literału ciągu adresu IP:  
  
1.  Metoda próbuje przeanalizować adresu. Jeśli `hostNameOrAddress` parametr zawiera prawne literału ciągu adresu IP, a następnie pierwszą fazę zakończy się pomyślnie.  
  
2.  Wyszukiwanie wsteczne przy użyciu adresu IP literału ciągu IP jest próbował uzyskać nazwy hosta. Ten wynik jest ustawiony jako <xref:System.Net.IPHostEntry.HostName%2A> właściwości.  
  
3.  Nazwa hosta z tej wyszukiwania wstecznego służy ponownie uzyskać wszystkie możliwe adresy IP skojarzone z nazwą i Ustaw jako <xref:System.Net.IPHostEntry.AddressList%2A> właściwości.  
  
 Dla literału ciągu IPv4 może się powieść wszystkie trzy powyższe kroki. Ale istnieje możliwość starych rekordów DNS dla adresu IPv4, który faktycznie należy do innego hosta, który ma zostać zwrócona. Może to spowodować krok #3, aby zakończyć się niepowodzeniem i Zgłoś wyjątek (Brak rekordu PTR systemu DNS dla adresu IPv4, ale żaden rekord A systemu DNS dla adresu IPv4).  
  
 W przypadku protokołu IPv6 krok #2. powyżej może zakończyć się niepowodzeniem, ponieważ w większości wdrożeń IPv6 nie rejestruj odwrotnej rekordu (PTR) dla adresu IPv6. Dzięki tej metody zwracać IPv6 ciąg literału jako nazwę hosta pełni kwalifikowanej domeny (FQDN) w <xref:System.Net.IPHostEntry.HostName%2A> właściwości.  
  
 <xref:System.Net.Dns.GetHostAddresses%2A> Metoda ma inaczej względem literały IP. Jeśli w kroku #1 zakończy się powodzeniem (pomyślnie analizuje adres IP), natychmiast zwracany adres w wyniku. Nie ma żadnych próba wyszukiwania wstecznego.  
  
 Adresy IPv6 są filtrowane z wyników tej metody, jeśli komputer lokalny nie ma protokół IPv6 jest zainstalowany. W związku z tym jest możliwe odzyskanie pustą <xref:System.Net.IPHostEntry> wystąpienia, jeśli tylko wyniki IPv6, jeśli jest on dostępny dla `hostNameOrAddress`.parameter.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość <xref:System.Net.IPHostEntry> zwróciła wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusty.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostNameOrAddress" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> parametru jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" /> parametru.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostNameOrAddress" /> Parametr jest nieprawidłowy adres IP.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberSignature Language="F#" Value="static member GetHostName : unit -&gt; string" Usage="System.Net.Dns.GetHostName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera nazwę hosta komputera lokalnego.</summary>
        <returns>Ciąg zawierający DNS hosta nazwy komputera lokalnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.Dns.GetHostName%2A> metodę, aby uzyskać nazwę hosta komputera lokalnego.  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania nazwy hosta lokalnego.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member Resolve : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.Resolve hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa hosta DNS stylu lub adres IP.</param>
        <summary>Rozpoznaje nazwy hosta DNS lub adres IP <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns>
          <see cref="T:System.Net.IPHostEntry" /> Wystąpienia, które zawiera adres informacje o hoście określonym w <paramref name="hostName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.Resolve%2A> Metoda odpytuje serwer DNS dla adresu IP skojarzone z nazwą hosta lub adres IP.  
  
 Gdy `hostName` nazwę hosta DNS styl skojarzony z wielu adresów IP, jest zwracany tylko pierwszy adres IP, który jest rozpoznawany jako tej nazwy hosta.  
  
 Jeśli <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, <xref:System.Net.IPHostEntry.Aliases%2A> właściwość <xref:System.Net.IPHostEntry> zwróciła wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusty.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu, gdy włączone śledzenie sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [śledzenia sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.Dns.Resolve%2A> metodę, aby rozpoznać adresu IP, adres do <xref:System.Net.IPHostEntry> wystąpienia.  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostName" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostName" />.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>