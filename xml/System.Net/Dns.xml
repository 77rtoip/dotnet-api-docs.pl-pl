<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f40db0fd3326b3453c170ec5a08d871305d2f3e1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69071854" /></Metadata><TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <TypeSignature Language="F#" Value="type Dns = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Oferuje proste funkcje rozpoznawania nazw domen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns> Klasa jest klasą statyczną, która pobiera informacje o określonym hoście z systemu nazw domen internetowych (DNS).  
  
 Informacje o hoście z zapytania DNS są zwracane w wystąpieniu <xref:System.Net.IPHostEntry> klasy. Jeśli określony host zawiera więcej niż jeden wpis w bazie danych DNS, <xref:System.Net.IPHostEntry> zawiera wiele adresów IP i aliasów.  
  
   
  
## Examples  
 Poniższy przykład wysyła zapytanie do bazy danych DNS w celu uzyskania informacji `www.contoso.com`na hoście.  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostAddresses : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostAddresses (hostNameOrAddress, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozwiązania.</param>
        <param name="requestCallback"><see cref="T:System.AsyncCallback" /> Delegat, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="state">Obiekt zdefiniowany przez użytkownika, który zawiera informacje o operacji. Ten obiekt jest przesyłany do <paramref name="requestCallback" /> delegata po zakończeniu operacji.</param>
        <summary>Asynchronicznie zwraca adresy protokołu internetowego (IP) dla określonego hosta.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienie odwołujące się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostAddresses%2A> Metoda asynchronicznie wysyła zapytanie do serwera DNS o adresy IP, które są skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` jest adresem IP, ten adres jest zwracany bez wysyłania zapytań do serwera DNS.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Jeśli pusty ciąg jest przekazaniem jako `hostNameOrAddress` argument, Metoda ta zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Operacja asynchroniczna <xref:System.Net.Dns.BeginGetHostAddresses%2A> musi być zakończona przez <xref:System.Net.Dns.EndGetHostAddresses%2A> wywołanie metody. Zazwyczaj Metoda jest wywoływana przez `requestCallback` delegata.  
  
 Ta metoda nie jest blokowana do momentu ukończenia operacji. Aby zablokować do momentu ukończenia operacji, użyj <xref:System.Net.Dns.GetHostAddresses%2A> metody.  
  
 Aby uzyskać więcej informacji o korzystaniu z asynchronicznego modelu programowania, zobacz [wywoływanie metod synchronicznych asynchronicznie](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozwiązywania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" />jest nieprawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostByName : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostByName (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa DNS hosta.</param>
        <param name="requestCallback"><see cref="T:System.AsyncCallback" /> Delegat, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="stateObject">Obiekt zdefiniowany przez użytkownika, który zawiera informacje o operacji. Ten obiekt jest przesyłany do <paramref name="requestCallback" /> delegata po zakończeniu operacji.</param>
        <summary>Rozpoczyna asynchroniczne żądanie <see cref="T:System.Net.IPHostEntry" /> informacji o określonej nazwie hosta DNS.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienie odwołujące się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operacja asynchroniczna <xref:System.Net.Dns.BeginGetHostByName%2A> musi być zakończona przez <xref:System.Net.Dns.EndGetHostByName%2A> wywołanie metody. Zazwyczaj Metoda jest wywoływana przez `requestCallback` delegata.  
  
 Ta metoda nie jest blokowana do momentu ukończenia operacji. Aby zablokować do momentu ukończenia operacji, użyj <xref:System.Net.Dns.GetHostByName%2A> metody.  
  
 Aby uzyskać szczegółowe informacje na temat korzystania z modelu programowania asynchronicznego, zobacz [Asynchroniczne wywoływanie metod synchronicznych](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas wykonywania zapytania DNS.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">Omówienie programowania asynchronicznego</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Asynchronicznie rozpoznaje nazwę hosta lub adres IP do <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : System.Net.IPAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (address, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP do rozwiązania.</param>
        <param name="requestCallback"><see cref="T:System.AsyncCallback" /> Delegat, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="stateObject">Obiekt zdefiniowany przez użytkownika, który zawiera informacje o operacji. Ten obiekt jest przesyłany do <paramref name="requestCallback" /> delegata po zakończeniu operacji.</param>
        <summary>Asynchronicznie rozwiązuje adres IP do <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienie odwołujące się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostEntry%2A> Metoda asynchronicznie wysyła zapytanie do serwera DNS o adresy IP i aliasy skojarzone z adresem IP.  
  
 **Uwaga** Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Operacja asynchroniczna <xref:System.Net.Dns.BeginGetHostEntry%2A> musi być zakończona przez <xref:System.Net.Dns.EndGetHostEntry%2A> wywołanie metody. Zazwyczaj Metoda jest wywoływana przez `requestCallback` delegata.  
  
 Ta metoda nie jest blokowana do momentu ukończenia operacji. Aby zablokować do momentu ukończenia operacji, użyj <xref:System.Net.Dns.GetHostEntry%2A> metody.  
  
 Aby uzyskać szczegółowe informacje na temat korzystania z modelu programowania asynchronicznego, zobacz [wywoływanie metod synchronicznych asynchronicznie](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Net.Dns.BeginGetHostEntry%2A> metody do rozpoznawania adresu IP <xref:System.Net.IPHostEntry> do wystąpienia.  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozwiązywania <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" />jest nieprawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (hostNameOrAddress, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozwiązania.</param>
        <param name="requestCallback"><see cref="T:System.AsyncCallback" /> Delegat, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="stateObject">Obiekt zdefiniowany przez użytkownika, który zawiera informacje o operacji. Ten obiekt jest przesyłany do <paramref name="requestCallback" /> delegata po zakończeniu operacji.</param>
        <summary>Asynchronicznie rozpoznaje nazwę hosta lub adres IP do <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienie odwołujące się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostEntry%2A> Metoda wysyła zapytanie do serwera DNS dla adresu IP skojarzonego z nazwą hosta lub adresem IP.  
  
 **Uwaga** Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Operacja asynchroniczna <xref:System.Net.Dns.BeginGetHostEntry%2A> musi być zakończona przez <xref:System.Net.Dns.EndGetHostEntry%2A> wywołanie metody. Zazwyczaj Metoda jest wywoływana przez `requestCallback` delegata.  
  
 Ta metoda nie jest blokowana do momentu ukończenia operacji. Aby zablokować do momentu ukończenia operacji, użyj <xref:System.Net.Dns.GetHostEntry%2A> metody.  
  
 Aby uzyskać szczegółowe informacje na temat korzystania z modelu programowania asynchronicznego, zobacz [Asynchroniczne wywoływanie metod synchronicznych](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Net.Dns.BeginGetHostEntry%2A> metody do rozpoznawania adresu IP <xref:System.Net.IPHostEntry> do wystąpienia.  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozwiązywania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" />jest nieprawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginResolve (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa DNS hosta.</param>
        <param name="requestCallback"><see cref="T:System.AsyncCallback" /> Delegat, który odwołuje się do metody do wywołania po zakończeniu operacji.</param>
        <param name="stateObject">Obiekt zdefiniowany przez użytkownika, który zawiera informacje o operacji. Ten obiekt jest przesyłany do <paramref name="requestCallback" /> delegata po zakończeniu operacji.</param>
        <summary>Rozpoczyna asynchroniczne żądanie rozpoznawania nazwy hosta DNS lub adresu IP do <see cref="T:System.Net.IPAddress" /> wystąpienia.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienie odwołujące się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operacja asynchroniczna <xref:System.Net.Dns.BeginResolve%2A> musi być zakończona przez <xref:System.Net.Dns.EndResolve%2A> wywołanie metody. Zazwyczaj Metoda jest wywoływana przez `requestCallback` delegata.  
  
 Ta metoda nie jest blokowana do momentu ukończenia operacji. Aby zablokować do momentu ukończenia operacji, użyj <xref:System.Net.Dns.Resolve%2A> metody.  
  
 Aby uzyskać więcej informacji o korzystaniu z modelu programowania asynchronicznego, zobacz [Asynchroniczne wywoływanie metod synchronicznych](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Net.Dns.BeginResolve%2A> do rozpoznawania nazwy <xref:System.Net.IPAddress>hosta DNS.  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Obiekt wywołujący nie ma uprawnień dostępu do informacji DNS.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">Omówienie programowania asynchronicznego</related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostAddresses : IAsyncResult -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.EndGetHostAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Wystąpienie zwrócone przez wywołanie <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> metody. <see cref="T:System.IAsyncResult" /></param>
        <summary>Zamyka asynchroniczne żądanie informacji DNS.</summary>
        <returns>Tablica typu <see cref="T:System.Net.IPAddress" /> , który przechowuje adresy IP dla hosta określonego <paramref name="hostNameOrAddress" /> przez parametr <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostAddresses%2A> Metoda wysyła zapytanie do serwera DNS o adresy IP skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` jest adresem IP, ten adres jest zwracany bez wysyłania zapytań do serwera DNS.  
  
 Jeśli pusty ciąg jest przekazaniem jako `hostNameOrAddress` argument, Metoda ta zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostByName : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostByName asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Wystąpienie, które jest zwracane przez wywołanie <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> metody. <see cref="T:System.IAsyncResult" /></param>
        <summary>Zamyka asynchroniczne żądanie informacji DNS.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Obiekt, który zawiera informacje DNS dotyczące hosta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest blokowana do momentu ukończenia operacji.  
  
 Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Dns.GetHostByName%2A> metody.  
  
 Jeśli właściwość jest ustawiona na `true` <xref:System.Net.IPHostEntry.Aliases%2A>,właściwość zwracanego wystąpienianiejestwypełnionaprzeztęmetodęizawszebędziepusta.<xref:System.Net.IPHostEntry> <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">Omówienie programowania asynchronicznego</related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostEntry : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostEntry asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Wystąpienie zwrócone przez wywołanie <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> metody. <see cref="T:System.IAsyncResult" /></param>
        <summary>Zamyka asynchroniczne żądanie informacji DNS.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Wystąpienie zawierające informacje o adresie hosta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest blokowana do momentu ukończenia operacji.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość zwróconegowystąpienianiejestwypełnionaprzeztęmetodę<xref:System.Net.IPHostEntry> i zawsze będzie pusta.  
  
 Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Dns.GetHostEntry%2A> metody.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndResolve asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Wystąpienie, które jest zwracane przez wywołanie <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> metody. <see cref="T:System.IAsyncResult" /></param>
        <summary>Zamyka asynchroniczne żądanie informacji DNS.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Obiekt, który zawiera informacje DNS dotyczące hosta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest blokowana do momentu ukończenia operacji.  
  
 Jeśli jest ustawiona na `true` <xref:System.Net.IPHostEntry.Aliases%2A>,właściwość zwróconego wystąpienianiejestwypełnionaprzeztęmetodęizawszebędziepusta.<xref:System.Net.IPHostEntry> <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>  
  
 Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Dns.Resolve%2A> metody.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład zatrzymuje asynchroniczne żądanie informacji o hoście DNS.  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" />jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">Omówienie programowania asynchronicznego</related>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddresses : string -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.GetHostAddresses hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozwiązania.</param>
        <summary>Zwraca adresy protokołu internetowego (IP) dla określonego hosta.</summary>
        <returns>Tablica typu <see cref="T:System.Net.IPAddress" /> , który przechowuje adresy IP dla hosta określonego <paramref name="hostNameOrAddress" /> przez parametr.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostAddresses%2A> Metoda wysyła do podsystemu DNS adresy IP skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` jest adresem IP, ten adres jest zwracany bez wysyłania zapytań do serwera DNS.
  
 Jeśli pusty ciąg jest przekazaniem jako `hostNameOrAddress` argument, Metoda ta zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Adresy IPv6 są filtrowane z wyników <xref:System.Net.Dns.GetHostAddresses%2A> metody, jeśli na komputerze lokalnym nie jest zainstalowany protokół IPv6. W związku z tym <xref:System.Net.IPAddress> `hostNameOrAddress` istnieje możliwość przywrócenia pustego wystąpienia, jeśli dla parametru są dostępne tylko wyniki IPv6.  
 
 Ta metoda jest implementowana przy użyciu interfejsów API rozpoznawania nazw podstawowego systemu operacyjnego (takich jak Win32 API getaddrinfo w systemie Windows i równoważnych interfejsów API na innych platformach).  Jeśli host został opisany w `hosts` pliku, adres IP lub adresy zostaną zwrócone bez wysyłania zapytań do serwera DNS.

> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu używa <xref:System.Net.Dns.GetHostAddresses%2A> metody do rozpoznawania adresu IP do tablicy typu. <xref:System.Net.IPAddress>  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozwiązywania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" />jest nieprawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddressesAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;" Usage="System.Net.Dns.GetHostAddressesAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozwiązania.</param>
        <summary>Zwraca adresy protokołu internetowego (IP) dla określonego hosta jako operację asynchroniczną.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task zwraca tablicę typu <see cref="T:System.Net.IPAddress" /> , która zawiera adresy IP dla hosta określonego przez <paramref name="hostNameOrAddress" /> parametr. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony `hostNameOrAddress` po rozwiązaniu problemu.  
  
 Ta metoda wysyła zapytanie do serwera DNS o adresy IP skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` jest adresem IP, ten adres jest zwracany bez wysyłania zapytań do serwera DNS.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozwiązywania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" />jest nieprawidłowym adresem IP.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera informacje o hoście DNS dla adresu IP. Te metody są już nieaktualne.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Net.IPAddress" />.</param>
        <summary>Tworzy wystąpienie <see cref="T:System.Net.IPHostEntry" /> z określonego <see cref="T:System.Net.IPAddress" />elementu.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Wystąpienie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Net.IPHostEntry> <xref:System.Net.IPAddress>z.  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozwiązywania <paramref name="address" />.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP.</param>
        <summary><see cref="T:System.Net.IPHostEntry" /> Tworzy wystąpienie na podstawie adresu IP.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Wystąpienie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozwiązywania <paramref name="address" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="address" />nie jest prawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member GetHostByName : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByName hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa DNS hosta.</param>
        <summary>Pobiera informacje DNS dla określonej nazwy hosta DNS.</summary>
        <returns>Obiekt, który zawiera informacje o hoście dla adresu określonego w <paramref name="hostName" />. <see cref="T:System.Net.IPHostEntry" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostByName%2A> Metoda wysyła do internetowego serwera DNS informacje o hoście. W przypadku przekazania pustego ciągu jako nazwy hosta ta metoda pobiera standardową nazwę hosta dla komputera lokalnego.  
  
 Aby uzyskać asynchroniczny dostęp do informacji DNS, <xref:System.Net.Dns.BeginGetHostByName%2A> Użyj <xref:System.Net.Dns.EndGetHostByName%2A> metod i.  
  
 Jeśli właściwość jest ustawiona na `true` <xref:System.Net.IPHostEntry.Aliases%2A>,właściwość zwracanego wystąpienianiejestwypełnionaprzeztęmetodęizawszebędziepusta.<xref:System.Net.IPHostEntry> <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Net.Dns.GetHostByName%2A> metodę w celu uzyskania informacji DNS dla określonej nazwy hosta DNS.  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostName" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozwiązywania <paramref name="hostName" />.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoznaje nazwę hosta lub adres IP do <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP.</param>
        <summary>Rozwiązuje adres IP do <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns>Wystąpienie zawierające informacje o adresie hosta określone w <paramref name="address" />. <see cref="T:System.Net.IPHostEntry" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostEntry%2A> Metoda wysyła zapytanie do serwera DNS o adresy IP i aliasy skojarzone z adresem IP.  
  
 Adresy IPv6 są filtrowane z wyników <xref:System.Net.Dns.GetHostEntry%2A> metody, jeśli na komputerze lokalnym nie jest zainstalowany protokół IPv6. W związku z tym <xref:System.Net.IPHostEntry> `address` istnieje możliwość przywrócenia pustego wystąpienia, jeśli dla parametru są dostępne tylko wyniki IPv6.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość zwróconegowystąpienianiejestwypełnionaprzeztęmetodę<xref:System.Net.IPHostEntry> i zawsze będzie pusta.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  

## Examples  
 Poniższy przykład kodu używa <xref:System.Net.Dns.GetHostEntry%2A> metody do rozpoznawania adresu IP <xref:System.Net.IPHostEntry> do wystąpienia.  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozwiązywania <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" />jest nieprawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozwiązania.</param>
        <summary>Rozpoznaje nazwę hosta lub adres IP do <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns>Wystąpienie zawierające informacje o adresie hosta określone w <paramref name="hostNameOrAddress" />. <see cref="T:System.Net.IPHostEntry" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostEntry%2A> Metoda wysyła zapytanie do serwera DNS dla adresu IP skojarzonego z nazwą hosta lub adresem IP.  
  
 Jeśli pusty ciąg jest przekazaniem jako `hostNameOrAddress` argument, Metoda ta zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Jeśli nazwa hosta nie została znaleziona, <xref:System.Net.Sockets.SocketException> wyjątek jest zwracany z wartością 11001 (Windows Sockets Error WSAHOST_NOT_FOUND). Ten wyjątek może być zwracany, jeśli serwer DNS nie odpowiada. Ten wyjątek może być również zwracany, jeśli nazwa nie jest oficjalną nazwą hosta lub aliasem lub nie można jej znaleźć w bazie danych, której dotyczy kwerenda.  
  
 Wyjątek <xref:System.ArgumentException> jest również zwracany, `hostNameOrAddress` Jeśli parametr zawiera <xref:System.Net.IPAddress.Any> lub <xref:System.Net.IPAddress.IPv6Any>.  
  
 Metoda zakłada, że jeśli ciąg literału IP zostanie przekazana `hostNameOrAddress` w parametrze <xref:System.Net.IPHostEntry> , że aplikacja chce zwrócić wystąpienie ze wszystkimi ustawionymi właściwościami. <xref:System.Net.Dns.GetHostEntry%2A> Te właściwości obejmują <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>i <xref:System.Net.IPHostEntry.HostName%2A>. W związku z tym implementacja <xref:System.Net.Dns.GetHostEntry%2A> metody wykazuje następujące zachowanie podczas przekazywania literału ciągu IP:  
  
1.  Metoda próbuje przeanalizować adres. `hostNameOrAddress` Jeśli parametr zawiera dozwolony literał ciągu IP, Pierwsza faza powiedzie się.  
  
2.  Wyszukiwanie wsteczne przy użyciu adresu IP literału ciągu IP próbuje uzyskać nazwę hosta. Ten wynik jest ustawiany jako <xref:System.Net.IPHostEntry.HostName%2A> właściwość.  
  
3.  Nazwa hosta z tego wyszukiwania wstecznego jest używana ponownie, aby uzyskać wszystkie możliwe adresy IP skojarzone z nazwą i ustawić ją <xref:System.Net.IPHostEntry.AddressList%2A> jako właściwość.  
  
 W przypadku literału ciągu IPv4 wszystkie trzy kroki mogą się powieść. Ale istnieje możliwość, że rekord DNS jest nieodświeżony dla adresu IPv4, który faktycznie należy do innego hosta, który ma zostać zwrócony. Może to spowodować, że krok #3 nie powiedzie się i zgłosi wyjątek (istnieje rekord PTR systemu DNS dla adresu IPv4, ale nie rekord DNS A dla adresu IPv4).  
  
 W przypadku protokołu IPv6 krok #2 powyżej może zakończyć się niepowodzeniem, ponieważ większość wdrożeń IPv6 nie rejestruje rekordu reversa (PTR) dla adresu IPv6. Dlatego ta metoda może zwrócić literał ciągu IPv6 jako w pełni kwalifikowana nazwa hosta domeny (FQDN) we <xref:System.Net.IPHostEntry.HostName%2A> właściwości.  
  
 <xref:System.Net.Dns.GetHostAddresses%2A> Metoda ma inne zachowanie w odniesieniu do literałów IP. Jeśli krok #1 powyżej zostanie pomyślnie przeanalizowany jako adres IP, ten adres zostanie natychmiast zwrócony jako wynik. Wyszukiwanie wsteczne nie ma żadnej próby.  
  
 Adresy IPv6 są filtrowane z wyników <xref:System.Net.Dns.GetHostEntry%2A> metody, jeśli na komputerze lokalnym nie jest zainstalowany protokół IPv6. W związku z tym <xref:System.Net.IPHostEntry> `hostNameOrAddress`istnieje możliwość przywrócenia pustego wystąpienia, jeśli są dostępne tylko wyniki IPv6 dla parametru.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość zwróconegowystąpienianiejestwypełnionaprzeztęmetodę<xref:System.Net.IPHostEntry> i zawsze będzie pusta.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Net.Dns.GetHostEntry%2A> metody do rozpoznawania adresu IP <xref:System.Net.IPHostEntry> do wystąpienia.  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="hostNameOrAddress" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> parametru przekracza 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozpoznawania <paramref name="hostNameOrAddress" /> parametru.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" /> Parametr jest nieprawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoznaje nazwę hosta lub adres IP do <see cref="T:System.Net.IPHostEntry" /> wystąpienia jako operację asynchroniczną.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP.</param>
        <summary>Rozwiązuje adres IP do <see cref="T:System.Net.IPHostEntry" /> wystąpienia jako operacja asynchroniczna.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Net.IPHostEntry" /> zwraca wystąpienie, które zawiera informacje o adresie hosta określonego w <paramref name="address" />. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony `address` po rozwiązaniu problemu.  
  
 Ta metoda wysyła zapytanie do serwera DNS o adresy IP i aliasy skojarzone z adresem IP.  
  
 Adresy IPv6 są filtrowane z wyników tej metody, jeśli na komputerze lokalnym nie zainstalowano protokołu IPv6. W związku z tym istnieje możliwość przywrócenia pustego <xref:System.Net.IPHostEntry> wystąpienia, jeśli `address` dla parametru są dostępne tylko wyniki protokołu IPv6.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość zwróconegowystąpienianiejestwypełnionaprzeztęmetodę<xref:System.Net.IPHostEntry> i zawsze będzie pusta.  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozwiązywania <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" />jest nieprawidłowym adresem IP.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP do rozwiązania.</param>
        <summary>Rozpoznaje nazwę hosta lub adres IP do <see cref="T:System.Net.IPHostEntry" /> wystąpienia jako operację asynchroniczną.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. Właściwość obiektu Task <see cref="T:System.Net.IPHostEntry" /> zwraca wystąpienie, które zawiera informacje o adresie hosta określonego w <paramref name="hostNameOrAddress" />. <see cref="P:System.Threading.Tasks.Task`1.Result" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony `hostNameOrAddress` po rozwiązaniu problemu.  
  
 Ta metoda wysyła zapytanie do serwera DNS o adres IP skojarzony z nazwą hosta lub adresem IP.  
  
 Jeśli pusty ciąg jest przekazaniem jako `hostNameOrAddress` argument, Metoda ta zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Jeśli nazwa hosta nie została znaleziona, <xref:System.Net.Sockets.SocketException> wyjątek jest zwracany z wartością 11001 (Windows Sockets Error WSAHOST_NOT_FOUND). Ten wyjątek może być zwracany, jeśli serwer DNS nie odpowiada. Ten wyjątek może być również zwracany, jeśli nazwa nie jest oficjalną nazwą hosta lub aliasem lub nie można jej znaleźć w bazie danych, której dotyczy kwerenda.  
  
 Wyjątek <xref:System.ArgumentException> jest również zwracany, `hostNameOrAddress` Jeśli parametr zawiera <xref:System.Net.IPAddress.Any> lub <xref:System.Net.IPAddress.IPv6Any>.  
  
 Ta metoda zakłada, że jeśli ciąg literału IP zostanie przekazana `hostNameOrAddress` w parametrze, że aplikacja <xref:System.Net.IPHostEntry> chce zwrócić wystąpienie ze wszystkimi ustawionymi właściwościami. Te właściwości obejmują <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>i <xref:System.Net.IPHostEntry.HostName%2A>. W związku z tym implementacja tej metody wykazuje następujące zachowanie podczas przekazywania literału ciągu IP:  
  
1.  Metoda próbuje przeanalizować adres. `hostNameOrAddress` Jeśli parametr zawiera dozwolony literał ciągu IP, Pierwsza faza powiedzie się.  
  
2.  Wyszukiwanie wsteczne przy użyciu adresu IP literału ciągu IP próbuje uzyskać nazwę hosta. Ten wynik jest ustawiany jako <xref:System.Net.IPHostEntry.HostName%2A> właściwość.  
  
3.  Nazwa hosta z tego wyszukiwania wstecznego jest używana ponownie, aby uzyskać wszystkie możliwe adresy IP skojarzone z nazwą i ustawić ją <xref:System.Net.IPHostEntry.AddressList%2A> jako właściwość.  
  
 W przypadku literału ciągu IPv4 wszystkie trzy kroki mogą się powieść. Ale istnieje możliwość, że rekord DNS jest nieodświeżony dla adresu IPv4, który faktycznie należy do innego hosta, który ma zostać zwrócony. Może to spowodować, że krok #3 nie powiedzie się i zgłosi wyjątek (istnieje rekord PTR systemu DNS dla adresu IPv4, ale nie rekord DNS A dla adresu IPv4).  
  
 W przypadku protokołu IPv6 krok #2 powyżej może zakończyć się niepowodzeniem, ponieważ większość wdrożeń IPv6 nie rejestruje rekordu reversa (PTR) dla adresu IPv6. Dlatego ta metoda może zwrócić literał ciągu IPv6 jako w pełni kwalifikowana nazwa hosta domeny (FQDN) we <xref:System.Net.IPHostEntry.HostName%2A> właściwości.  
  
 <xref:System.Net.Dns.GetHostAddresses%2A> Metoda ma inne zachowanie w odniesieniu do literałów IP. Jeśli krok #1 powyżej zostanie pomyślnie przeanalizowany jako adres IP, ten adres zostanie natychmiast zwrócony jako wynik. Wyszukiwanie wsteczne nie ma żadnej próby.  
  
 Adresy IPv6 są filtrowane z wyników tej metody, jeśli na komputerze lokalnym nie zainstalowano protokołu IPv6. W związku z tym <xref:System.Net.IPHostEntry> `hostNameOrAddress`istnieje możliwość przywrócenia pustego wystąpienia, jeśli są dostępne tylko wyniki IPv6 dla parametru.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość zwróconegowystąpienianiejestwypełnionaprzeztęmetodę<xref:System.Net.IPHostEntry> i zawsze będzie pusta.  

 Ta metoda jest implementowana przy użyciu interfejsów API rozpoznawania nazw podstawowego systemu operacyjnego (takich jak Win32 API getaddrinfo w systemie Windows i równoważnych interfejsów API na innych platformach).  Jeśli host został opisany w `hosts` pliku, adres IP lub adresy zostaną zwrócone bez wysyłania zapytań do serwera DNS.
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="hostNameOrAddress" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> parametru przekracza 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozpoznawania <paramref name="hostNameOrAddress" /> parametru.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" /> Parametr jest nieprawidłowym adresem IP.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberSignature Language="F#" Value="static member GetHostName : unit -&gt; string" Usage="System.Net.Dns.GetHostName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera nazwę hosta komputera lokalnego.</summary>
        <returns>Ciąg, który zawiera nazwę hosta DNS komputera lokalnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Net.Dns.GetHostName%2A> metodę w celu uzyskania nazwy hosta komputera lokalnego.  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozpoznawania nazwy hosta lokalnego.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member Resolve : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.Resolve hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa hosta w stylu systemu DNS lub adres IP.</param>
        <summary>Rozpoznaje nazwę hosta DNS lub adres IP do <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns>Wystąpienie zawierające informacje o adresie hosta określone w <paramref name="hostName" />. <see cref="T:System.Net.IPHostEntry" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.Resolve%2A> Metoda wysyła zapytanie do serwera DNS o adres IP skojarzony z nazwą hosta lub adresem IP.  
  
 Gdy `hostName` jest nazwą hosta w stylu systemu DNS skojarzoną z wieloma adresami IP, zwracany jest tylko pierwszy adres IP, który jest rozpoznawany jako nazwa tego hosta.  
  
 Jeśli właściwość jest ustawiona na `true` <xref:System.Net.IPHostEntry.Aliases%2A>,właściwość zwracanego wystąpienianiejestwypełnionaprzeztęmetodęizawszebędziepusta.<xref:System.Net.IPHostEntry> <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType>  
  
> [!NOTE]
>  Ten element członkowski emituje informacje o śledzeniu po włączeniu śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Net.Dns.Resolve%2A> metody do rozpoznawania adresu IP <xref:System.Net.IPHostEntry> do wystąpienia.  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostName" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostName" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas rozwiązywania <paramref name="hostName" />.</exception>
        <permission cref="T:System.Net.DnsPermission">do uzyskiwania dostępu do informacji DNS. Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
