<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59f9b67b32615ee436e08a6c55ddbdb42b59faba" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56789188" /></Metadata><TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <TypeSignature Language="F#" Value="type Dns = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia funkcja rozpoznawania nazw domeny proste.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns> Klasa jest klasą statyczną, który pobiera informacje o określonego hosta z internetowego systemu nazw domen (DNS).  
  
 Informacji o hoście z zapytanie DNS jest zwracana w wystąpieniu <xref:System.Net.IPHostEntry> klasy. Jeśli określony host ma więcej niż jeden wpis w bazie danych DNS <xref:System.Net.IPHostEntry> zawiera wiele adresów IP i aliasy.  
  
   
  
## Examples  
 Poniższy przykład wysyła zapytanie do bazy danych uzyskać informacji na temat www.contoso.com hosta DNS.  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostAddresses : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostAddresses (hostNameOrAddress, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP, aby rozwiązać.</param>
        <param name="requestCallback"><see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</param>
        <param name="state">Obiekt zdefiniowany przez użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <paramref name="requestCallback" /> po zakończeniu operacji.</param>
        <summary>Asynchronicznie zwraca adresy protokołu internetowego (IP) dla określonego hosta.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienia, który odwołuje się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostAddresses%2A> Metoda asynchronicznie odpytuje serwer DNS dla adresów IP, które są skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` jest adresem IP ten adres jest zwracane bez badanie serwera DNS.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Jeśli pusty ciąg jest przekazywany jako `hostNameOrAddress` argument, a następnie ta metoda zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Asynchroniczną <xref:System.Net.Dns.BeginGetHostAddresses%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Dns.EndGetHostAddresses%2A> metody. Zazwyczaj metoda jest wywoływana przez `requestCallback` delegować.  
  
 Ta metoda nie blokuje, aż do zakończenia operacji. Aby zablokować, aż do zakończenia operacji, należy użyć <xref:System.Net.Dns.GetHostAddresses%2A> metody.  
  
 Aby uzyskać więcej informacji na temat korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" /> nie jest prawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostByName : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostByName (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa DNS hosta.</param>
        <param name="requestCallback"><see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</param>
        <param name="stateObject">Obiekt zdefiniowany przez użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <paramref name="requestCallback" /> po zakończeniu operacji.</param>
        <summary>Rozpoczyna się dla żądania asynchronicznego <see cref="T:System.Net.IPHostEntry" /> informacji na temat określonej nazwy hosta DNS.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienia, który odwołuje się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczną <xref:System.Net.Dns.BeginGetHostByName%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Dns.EndGetHostByName%2A> metody. Zazwyczaj metoda jest wywoływana przez `requestCallback` delegować.  
  
 Ta metoda nie blokuje, aż do zakończenia operacji. Aby zablokować, aż do zakończenia operacji, należy użyć <xref:System.Net.Dns.GetHostByName%2A> metody.  
  
 Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas wykonywania zapytania DNS.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">Omówienie programowania asynchronicznego</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Asynchronicznie usuwa nazwę hosta lub adres IP, który <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : System.Net.IPAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (address, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP, aby rozwiązać.</param>
        <param name="requestCallback"><see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</param>
        <param name="stateObject">Obiekt zdefiniowany przez użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <paramref name="requestCallback" /> po zakończeniu operacji.</param>
        <summary>Asynchronicznie jest rozpoznawana jako adres IP komputerowi <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienia, który odwołuje się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostEntry%2A> Metoda asynchronicznie odpytuje serwer DNS dla adresów IP i aliasy skojarzone z adresem IP.  
  
 **Uwaga** ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Asynchroniczną <xref:System.Net.Dns.BeginGetHostEntry%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Dns.EndGetHostEntry%2A> metody. Zazwyczaj metoda jest wywoływana przez `requestCallback` delegować.  
  
 Ta metoda nie blokuje, aż do zakończenia operacji. Aby zablokować, aż do zakończenia operacji, należy użyć <xref:System.Net.Dns.GetHostEntry%2A> metody.  
  
 Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Dns.BeginGetHostEntry%2A> metodę, aby rozpoznać adres IP adres <xref:System.Net.IPHostEntry> wystąpienia.  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" /> nie jest prawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (hostNameOrAddress, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP, aby rozwiązać.</param>
        <param name="requestCallback"><see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</param>
        <param name="stateObject">Obiekt zdefiniowany przez użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <paramref name="requestCallback" /> po zakończeniu operacji.</param>
        <summary>Asynchronicznie usuwa nazwę hosta lub adres IP, który <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienia, który odwołuje się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostEntry%2A> Metoda odpytuje serwer DNS dla adresu IP, który jest skojarzony z nazwą hosta lub adres IP.  
  
 **Uwaga** ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 Asynchroniczną <xref:System.Net.Dns.BeginGetHostEntry%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Dns.EndGetHostEntry%2A> metody. Zazwyczaj metoda jest wywoływana przez `requestCallback` delegować.  
  
 Ta metoda nie blokuje, aż do zakończenia operacji. Aby zablokować, aż do zakończenia operacji, należy użyć <xref:System.Net.Dns.GetHostEntry%2A> metody.  
  
 Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Dns.BeginGetHostEntry%2A> metodę, aby rozpoznać adres IP adres <xref:System.Net.IPHostEntry> wystąpienia.  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" /> nie jest prawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginResolve (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa DNS hosta.</param>
        <param name="requestCallback"><see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</param>
        <param name="stateObject">Obiekt zdefiniowany przez użytkownika, który zawiera informacje na temat operacji. Ten obiekt jest przekazywany do <paramref name="requestCallback" /> po zakończeniu operacji.</param>
        <summary>Asynchroniczne żądanie do rozpoznawania nazwy hosta DNS lub adres IP, który rozpoczyna <see cref="T:System.Net.IPAddress" /> wystąpienia.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Wystąpienia, który odwołuje się do żądania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczną <xref:System.Net.Dns.BeginResolve%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Dns.EndResolve%2A> metody. Zazwyczaj metoda jest wywoływana przez `requestCallback` delegować.  
  
 Ta metoda nie blokuje, aż do zakończenia operacji. Aby zablokować, aż do zakończenia operacji, należy użyć <xref:System.Net.Dns.Resolve%2A> metody.  
  
 Aby uzyskać więcej informacji na temat korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.Dns.BeginResolve%2A> można rozpoznać nazwy hosta DNS, aby <xref:System.Net.IPAddress>.  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Obiekt wywołujący nie ma uprawnień dostępu do informacji DNS.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">Omówienie programowania asynchronicznego</related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostAddresses : IAsyncResult -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.EndGetHostAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> Wystąpienie zwrócone przez wywołanie <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> metody.</param>
        <summary>Kończy się żądania asynchronicznego, aby uzyskać informacje dotyczące systemu DNS.</summary>
        <returns>Tablica typu <see cref="T:System.Net.IPAddress" /> zawierający adresy IP dla określonego przez hosta <paramref name="hostNameOrAddress" /> parametru <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.BeginGetHostAddresses%2A> Metoda odpytuje serwer DNS dla adresów IP skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` jest adresem IP ten adres jest zwracane bez badanie serwera DNS.  
  
 Jeśli pusty ciąg jest przekazywany jako `hostNameOrAddress` argument, a następnie ta metoda zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostByName : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostByName asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> Wystąpienia, który jest zwracany przez wywołanie <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> metody.</param>
        <summary>Kończy się żądania asynchronicznego, aby uzyskać informacje dotyczące systemu DNS.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Obiekt, który zawiera informacje DNS o hoście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wykonaj to bloki metody do czasu tej operacji.  
  
 Aby wykonać tę operację synchronicznie, należy użyć <xref:System.Net.Dns.GetHostByName%2A> metody.  
  
 Jeśli <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, <xref:System.Net.IPHostEntry.Aliases%2A> właściwość <xref:System.Net.IPHostEntry> zwrócone wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusta.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">Omówienie programowania asynchronicznego</related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostEntry : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostEntry asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> Wystąpienie zwrócone przez wywołanie <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> metody.</param>
        <summary>Kończy się żądania asynchronicznego, aby uzyskać informacje dotyczące systemu DNS.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Wystąpienia, które zawiera adres informacje o hoście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wykonaj to bloki metody do czasu tej operacji.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość <xref:System.Net.IPHostEntry> zwrócone wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusta.  
  
 Aby wykonać tę operację synchronicznie, należy użyć <xref:System.Net.Dns.GetHostEntry%2A> metody.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndResolve asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> Wystąpienia, który jest zwracany przez wywołanie <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> metody.</param>
        <summary>Kończy się żądania asynchronicznego, aby uzyskać informacje dotyczące systemu DNS.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Obiekt, który zawiera informacje DNS o hoście.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wykonaj to bloki metody do czasu tej operacji.  
  
 Jeśli <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> ustawiono `true`, <xref:System.Net.IPHostEntry.Aliases%2A> właściwość <xref:System.Net.IPHostEntry> zwrócone wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusta.  
  
 Aby wykonać tę operację synchronicznie, należy użyć <xref:System.Net.Dns.Resolve%2A> metody.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kończy się żądania asynchronicznego, aby uzyskać informacje dotyczące hosta systemu DNS.  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0">Omówienie programowania asynchronicznego</related>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddresses : string -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.GetHostAddresses hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP, aby rozwiązać.</param>
        <summary>Zwraca adresy protokołu internetowego (IP) dla określonego hosta.</summary>
        <returns>Tablica typu <see cref="T:System.Net.IPAddress" /> zawierający adresy IP dla hosta, który jest określony przez <paramref name="hostNameOrAddress" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostAddresses%2A> Metoda odpytuje podsystemu DNS dla adresów IP skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` jest adresem IP ten adres jest zwracane bez badanie serwera DNS.
  
 Jeśli pusty ciąg jest przekazywany jako `hostNameOrAddress` argument, a następnie ta metoda zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Adresy IPv6 są odfiltrowywane z wyników <xref:System.Net.Dns.GetHostAddresses%2A> metody, jeśli komputer lokalny nie jest protokół IPv6 jest zainstalowany. Co w efekcie użytkownik może wrócić pustą <xref:System.Net.IPAddress> wystąpienia, jeśli tylko protokół IPv6 wyniki były dostępne dla `hostNameOrAddress` parametru.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Dns.GetHostAddresses%2A> metodę, aby rozpoznać adres IP do tablicy typu <xref:System.Net.IPAddress>.  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" /> nie jest prawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddressesAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;" Usage="System.Net.Dns.GetHostAddressesAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP, aby rozwiązać.</param>
        <summary>Zwraca adresy protokołu internetowego (IP) dla określonego hosta jako operację asynchroniczną.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Właściwości dla obiektu task zwraca tablicę typu <see cref="T:System.Net.IPAddress" /> zawierający adresy IP dla hosta, który jest określony przez <paramref name="hostNameOrAddress" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiektu zostanie ukończone po `hostNameOrAddress` został rozwiązany.  
  
 Ta metoda wysyła zapytanie do serwera DNS dla adresów IP skojarzone z nazwą hosta. Jeśli `hostNameOrAddress` jest adresem IP ten adres jest zwracane bez badanie serwera DNS.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" /> nie jest prawidłowym adresem IP.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera informacje dotyczące hosta systemu DNS dla adresu IP. Te metody są już nieaktualne.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address"><see cref="T:System.Net.IPAddress" />.</param>
        <summary>Tworzy <see cref="T:System.Net.IPHostEntry" /> wystąpienie z określonym <see cref="T:System.Net.IPAddress" />.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Net.IPHostEntry> z <xref:System.Net.IPAddress>.  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="address" />.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP.</param>
        <summary>Tworzy <see cref="T:System.Net.IPHostEntry" /> wystąpienia z adresu IP.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="address" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="address" /> nie jest prawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member GetHostByName : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByName hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa DNS hosta.</param>
        <summary>Pobiera informacje DNS dla określonej nazwy hosta DNS.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Obiekt, który zawiera informacje dotyczące hosta dla adresu określonego we <paramref name="hostName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostByName%2A> — Metoda wysyła do serwera DNS w sieci Internet, aby uzyskać informacje dotyczące hosta. W przypadku przekazania pustego ciągu jako nazwę hosta, ta metoda pobiera nazwy hostów standardowych, na komputerze lokalnym.  
  
 Dla asynchronicznego dostępu do informacji DNS, użyj <xref:System.Net.Dns.BeginGetHostByName%2A> i <xref:System.Net.Dns.EndGetHostByName%2A> metody.  
  
 Jeśli <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, <xref:System.Net.IPHostEntry.Aliases%2A> właściwość <xref:System.Net.IPHostEntry> zwrócone wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusta.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.Dns.GetHostByName%2A> metodę, aby uzyskać informacje o DNS dla określonej nazwy hosta DNS.  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostName" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostName" />.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoznaje nazwę hosta lub adres IP, który <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP.</param>
        <summary>Jest rozpoznawana jako adres IP komputerowi <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Wystąpienia, które zawiera adres informacji o hoście, określonym w <paramref name="address" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostEntry%2A> Metoda odpytuje serwer DNS dla adresów IP i aliasy skojarzone z adresem IP.  
  
 Adresy IPv6 są odfiltrowywane z wyników <xref:System.Net.Dns.GetHostEntry%2A> metody, jeśli komputer lokalny nie jest protokół IPv6 jest zainstalowany. Co w efekcie użytkownik może wrócić pustą <xref:System.Net.IPHostEntry> wystąpienia, jeśli tylko protokół IPv6 wyniki były dostępne dla `address` parametru.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość <xref:System.Net.IPHostEntry> zwrócone wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusta.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  

## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Dns.GetHostEntry%2A> metodę, aby rozpoznać adres IP adres <xref:System.Net.IPHostEntry> wystąpienia.  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" /> nie jest prawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP, aby rozwiązać.</param>
        <summary>Rozpoznaje nazwę hosta lub adres IP, który <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Wystąpienia, które zawiera adres informacji o hoście, określonym w <paramref name="hostNameOrAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.GetHostEntry%2A> Metoda odpytuje serwer DNS dla adresu IP, który jest skojarzony z nazwą hosta lub adres IP.  
  
 Jeśli pusty ciąg jest przekazywany jako `hostNameOrAddress` argument, a następnie ta metoda zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Jeśli nie można odnaleźć nazwy hosta, <xref:System.Net.Sockets.SocketException> zwracany jest wyjątek z wartością 11001 (Windows Sockets: błąd WSAHOST_NOT_FOUND). Mogą być zwracane ten wyjątek, jeśli serwer DNS nie odpowiada. Ten wyjątek również mogą być zwracane, jeśli nazwa nie jest host oficjalne nazwy lub aliasu lub nie można znaleźć w baz danych, którego dotyczy kwerenda.  
  
 <xref:System.ArgumentException> Również jest zwracany wyjątek, jeśli `hostNameOrAddress` parametr zawiera <xref:System.Net.IPAddress.Any> lub <xref:System.Net.IPAddress.IPv6Any>.  
  
 <xref:System.Net.Dns.GetHostEntry%2A> Metoda zakłada, że jeśli ciągiem literału IP jest przekazywany w `hostNameOrAddress` parametr, który chce, aby aplikacja <xref:System.Net.IPHostEntry> wystąpienie zwrócone ze wszystkimi zestawu właściwości. Te właściwości obejmują <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, i <xref:System.Net.IPHostEntry.HostName%2A>. W wyniku wykonania <xref:System.Net.Dns.GetHostEntry%2A> metoda wykonują następujące zachowanie, gdy literał ciągu IP jest przekazywany:  
  
1.  Metoda próbuje przeanalizować adresu. Jeśli `hostNameOrAddress` parametr zawiera prawne IP literał ciągu znaków, a następnie pierwszą fazę zakończy się pomyślnie.  
  
2.  Wyszukiwania wstecznego, przy użyciu adresu IP literału ciągu IP podejmowana jest próba uzyskania nazwy hosta. Ten wynik jest ustawiony jako <xref:System.Net.IPHostEntry.HostName%2A> właściwości.  
  
3.  Nazwę hosta z tym wyszukiwania wstecznego umożliwia ponownie uzyskać wszystkie możliwe adresy IP skojarzone z nazwą i Ustaw jako <xref:System.Net.IPHostEntry.AddressList%2A> właściwości.  
  
 Dla literału ciągu IPv4 wszystkie trzy powyższe kroki może się powieść. Ale istnieje możliwość, starych rekordów DNS dla adresu IPv4, który faktycznie należy do innego hosta, który ma zostać zwrócona. Może to spowodować kroku #3, aby zakończyć się niepowodzeniem i zwróci wyjątek (istnieje rekord PTR systemu DNS dla adresu IPv4, ale żaden rekord A systemu DNS dla adresu IPv4).  
  
 W przypadku protokołu IPv6 w kroku 2 # powyżej może zakończyć się niepowodzeniem, ponieważ w większości wdrożeń IPv6 nie rejestruj odwrotnej rekordu (PTR) dla adresu IPv6. Dzięki tej metody zwracają ciąg IPv6 literału jako nazwy hosta w pełni kwalifikowanej domeny (FQDN) w <xref:System.Net.IPHostEntry.HostName%2A> właściwości.  
  
 <xref:System.Net.Dns.GetHostAddresses%2A> Metoda ma różne zachowanie w odniesieniu do literały adresów IP. Jeśli krok #1 powyżej zakończy się powodzeniem (pomyślnie analizuje jako adres IP), natychmiast zwracany w wyniku adres. Nie ma żadnych próba wyszukiwania wstecznego.  
  
 Adresy IPv6 są odfiltrowywane z wyników <xref:System.Net.Dns.GetHostEntry%2A> metody, jeśli komputer lokalny nie jest protokół IPv6 jest zainstalowany. Co w efekcie użytkownik może wrócić pustą <xref:System.Net.IPHostEntry> wystąpienia, jeśli tylko wyniki IPv6, gdzie są dostępne dla `hostNameOrAddress`.parameter.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość <xref:System.Net.IPHostEntry> zwrócone wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusta.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.Dns.GetHostEntry%2A> metodę, aby rozpoznać adres IP adres <xref:System.Net.IPHostEntry> wystąpienia.  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> parametr jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" /> parametru.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" /> Parametr nie jest prawidłowym adresem IP.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoznaje nazwę hosta lub adres IP, który <see cref="T:System.Net.IPHostEntry" /> wystąpienia jako operację asynchroniczną.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="address">Adres IP.</param>
        <summary>Jest rozpoznawana jako adres IP komputerowi <see cref="T:System.Net.IPHostEntry" /> wystąpienia jako operację asynchroniczną.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Net.IPHostEntry" /> wystąpienia, które zawiera adres informacji o hoście, określonym w <paramref name="address" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiektu zostanie ukończone po `address` został rozwiązany.  
  
 Ta metoda wysyła zapytanie do serwera DNS dla adresów IP i aliasy skojarzone z adresem IP.  
  
 Adresy IPv6 są filtrowane z wyników tej metody, jeśli komputer lokalny nie jest protokół IPv6 jest zainstalowany. Co w efekcie użytkownik może wrócić pustą <xref:System.Net.IPHostEntry> wystąpienia, jeśli tylko wyniki IPv6, gdzie są dostępne dla `address` parametru.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość <xref:System.Net.IPHostEntry> zwrócone wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusta.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="address" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="address" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="address" /> nie jest prawidłowym adresem IP.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">Nazwa hosta lub adres IP, aby rozwiązać.</param>
        <summary>Rozpoznaje nazwę hosta lub adres IP, który <see cref="T:System.Net.IPHostEntry" /> wystąpienia jako operację asynchroniczną.</summary>
        <returns>Obiekt zadania reprezentujący operację asynchroniczną. <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Net.IPHostEntry" /> wystąpienia, które zawiera adres informacji o hoście, określonym w <paramref name="hostNameOrAddress" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task%601> obiektu zostanie ukończone po `hostNameOrAddress` został rozwiązany.  
  
 Ta metoda wysyła zapytanie do serwera DNS dla adresu IP, który jest skojarzony z nazwą hosta lub adres IP.  
  
 Jeśli pusty ciąg jest przekazywany jako `hostNameOrAddress` argument, a następnie ta metoda zwraca adresy IPv4 i IPv6 hosta lokalnego.
  
 Jeśli nie można odnaleźć nazwy hosta, <xref:System.Net.Sockets.SocketException> zwracany jest wyjątek z wartością 11001 (Windows Sockets: błąd WSAHOST_NOT_FOUND). Mogą być zwracane ten wyjątek, jeśli serwer DNS nie odpowiada. Ten wyjątek również mogą być zwracane, jeśli nazwa nie jest host oficjalne nazwy lub aliasu lub nie można znaleźć w baz danych, którego dotyczy kwerenda.  
  
 <xref:System.ArgumentException> Również jest zwracany wyjątek, jeśli `hostNameOrAddress` parametr zawiera <xref:System.Net.IPAddress.Any> lub <xref:System.Net.IPAddress.IPv6Any>.  
  
 Ta metoda zakłada, że jeśli ciągiem literału IP jest przekazywany w `hostNameOrAddress` parametr, który chce, aby aplikacja <xref:System.Net.IPHostEntry> wystąpienie zwrócone ze wszystkimi zestawu właściwości. Te właściwości obejmują <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, i <xref:System.Net.IPHostEntry.HostName%2A>. Gdy literał ciągu IP zostaną przekazane wykazuje są następujące zachowanie implementacja tej metody:  
  
1.  Metoda próbuje przeanalizować adresu. Jeśli `hostNameOrAddress` parametr zawiera prawne IP literał ciągu znaków, a następnie pierwszą fazę zakończy się pomyślnie.  
  
2.  Wyszukiwania wstecznego, przy użyciu adresu IP literału ciągu IP podejmowana jest próba uzyskania nazwy hosta. Ten wynik jest ustawiony jako <xref:System.Net.IPHostEntry.HostName%2A> właściwości.  
  
3.  Nazwę hosta z tym wyszukiwania wstecznego umożliwia ponownie uzyskać wszystkie możliwe adresy IP skojarzone z nazwą i Ustaw jako <xref:System.Net.IPHostEntry.AddressList%2A> właściwości.  
  
 Dla literału ciągu IPv4 wszystkie trzy powyższe kroki może się powieść. Ale istnieje możliwość, starych rekordów DNS dla adresu IPv4, który faktycznie należy do innego hosta, który ma zostać zwrócona. Może to spowodować kroku #3, aby zakończyć się niepowodzeniem i zwróci wyjątek (istnieje rekord PTR systemu DNS dla adresu IPv4, ale żaden rekord A systemu DNS dla adresu IPv4).  
  
 W przypadku protokołu IPv6 w kroku 2 # powyżej może zakończyć się niepowodzeniem, ponieważ w większości wdrożeń IPv6 nie rejestruj odwrotnej rekordu (PTR) dla adresu IPv6. Dzięki tej metody zwracają ciąg IPv6 literału jako nazwy hosta w pełni kwalifikowanej domeny (FQDN) w <xref:System.Net.IPHostEntry.HostName%2A> właściwości.  
  
 <xref:System.Net.Dns.GetHostAddresses%2A> Metoda ma różne zachowanie w odniesieniu do literały adresów IP. Jeśli krok #1 powyżej zakończy się powodzeniem (pomyślnie analizuje jako adres IP), natychmiast zwracany w wyniku adres. Nie ma żadnych próba wyszukiwania wstecznego.  
  
 Adresy IPv6 są filtrowane z wyników tej metody, jeśli komputer lokalny nie jest protokół IPv6 jest zainstalowany. Co w efekcie użytkownik może wrócić pustą <xref:System.Net.IPHostEntry> wystąpienia, jeśli tylko wyniki IPv6, gdzie są dostępne dla `hostNameOrAddress`.parameter.  
  
 <xref:System.Net.IPHostEntry.Aliases%2A> Właściwość <xref:System.Net.IPHostEntry> zwrócone wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusta.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostNameOrAddress" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostNameOrAddress" /> parametr jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostNameOrAddress" /> parametru.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="hostNameOrAddress" /> Parametr nie jest prawidłowym adresem IP.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberSignature Language="F#" Value="static member GetHostName : unit -&gt; string" Usage="System.Net.Dns.GetHostName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera nazwę hosta komputera lokalnego.</summary>
        <returns>Ciąg, który zawiera DNS hosta nazwa komputera lokalnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.Dns.GetHostName%2A> metodę, aby uzyskać nazwę hosta komputera lokalnego.  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania nazwy hosta lokalnego.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member Resolve : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.Resolve hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostName">Nazwa hosta DNS stylu lub adres IP.</param>
        <summary>Rozpoznaje nazwę hosta DNS lub adres IP, który <see cref="T:System.Net.IPHostEntry" /> wystąpienia.</summary>
        <returns><see cref="T:System.Net.IPHostEntry" /> Wystąpienia, które zawiera adres informacji o hoście, określonym w <paramref name="hostName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Dns.Resolve%2A> Metoda odpytuje serwer DNS dla adresu IP skojarzone z nazwą hosta lub adres IP.  
  
 Gdy `hostName` nazwy hosta DNS stylu jest skojarzony z wieloma adresami IP, jest zwracana tylko pierwszego adresu IP, który jest rozpoznawany jako tej nazwy hosta.  
  
 Jeśli <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> właściwość jest ustawiona na `true`, <xref:System.Net.IPHostEntry.Aliases%2A> właściwość <xref:System.Net.IPHostEntry> zwrócone wystąpienie nie zostanie wypełnione przez tę metodę i zawsze będzie pusta.  
  
> [!NOTE]
>  Ten element członkowski generuje informacje o śledzeniu, po włączeniu funkcji śledzenia sieci w aplikacji. Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.Dns.Resolve%2A> metodę, aby rozpoznać adres IP adres <xref:System.Net.IPHostEntry> wystąpienia.  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="hostName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Długość <paramref name="hostName" /> jest większa niż 255 znaków.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Napotkano błąd podczas rozpoznawania <paramref name="hostName" />.</exception>
        <permission cref="T:System.Net.DnsPermission">Aby uzyskać dostęp do informacji DNS. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>