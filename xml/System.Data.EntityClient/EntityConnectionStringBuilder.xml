<Type Name="EntityConnectionStringBuilder" FullName="System.Data.EntityClient.EntityConnectionStringBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dde6bcf477263877cab9c3f66fc1eb67c2bb0e06" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32089025" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityConnectionStringBuilder extends System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityClient.EntityConnectionStringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityConnectionStringBuilder&#xA;Inherits DbConnectionStringBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityConnectionStringBuilder sealed : System::Data::Common::DbConnectionStringBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnectionStringBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia prosty sposób tworzenia i zarządzania zawartością parametrów połączeń używanych przez EntityClient.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktor ciągów połączenia umożliwiają deweloperom programowe tworzenie ciągów połączenia poprawna składniowo i przeanalizować i skompiluj ponownie istniejących parametrów połączenia, przy użyciu właściwości i metody klasy. Konstruktor ciągów połączenia zapewnia jednoznacznie właściwości odpowiadającej pary znanych — słowo kluczowe/wartość. Deweloperzy tworzący musi parametry połączenia jako część aplikacji można użyć <xref:System.Data.EntityClient.EntityConnectionStringBuilder> klasy do kompilowania i modyfikowania parametry połączenia.  
  
 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> Sprawdza dla par prawidłową — słowo kluczowe i wartości, z których każdy jest ujawniona jako <xref:System.Data.EntityClient.EntityConnectionStringBuilder> wartości właściwości.  
  
> [!NOTE]
>  Ciąg połączenia dla źródła danych jest dostarczana przez <xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A> właściwości. Podany dostawca ciąg połączenia nie jest zaznaczone dla par prawidłową — słowo kluczowe i wartości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Data.EntityClient.EntityConnectionStringBuilder> w połączeniu z <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.EntityClient.EntityConnection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnectionStringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Data.EntityClient.EntityConnectionStringBuilder> w połączeniu z <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. Kod ustawia właściwości `SqlConnectionStringBuilder` utworzyć <xref:System.Data.SqlClient.SqlConnection> parametry połączenia, które dostarcza część podstawowej parametry połączenia dostawcy. Należy pamiętać, że nazwa dostawcy nie można ustawić za pomocą `SqlConnectionStringBuilder` , ponieważ nie jest prawidłową `SqlConnection` składnia ciągu połączenia. Kod tworzy <xref:System.Data.EntityClient.EntityConnection> ciąg połączenia przez ustawienie `EntityConnectionStringBuilder` właściwości.  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnectionStringBuilder (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnectionStringBuilder(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Parametry połączenia specyficzne dla dostawcy źródła danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> przy użyciu dostarczone parametry połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podana `connectionString` nie jest zaznaczone dla par prawidłową — słowo kluczowe i wartości. Składnię prawidłowe — słowo kluczowe i wartości, zobacz <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.  
  
 Niezmienna Nazwa dostawcy musi być określony w `connectionString` parametru. Dostawców obsługiwane są następujące:  
  
-   `System.Data.Odbc`  
  
-   `System.Data.OleDb`  
  
-   `System.Data.OracleClient`  
  
-   `System.Data.SqlClient`  
  
-   `Microsoft.SqlServerCe.Client`  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Data.EntityClient.EntityConnectionStringBuilder> w połączeniu z <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. Kod ustawia właściwości `SqlConnectionStringBuilder` utworzyć <xref:System.Data.SqlClient.SqlConnection> parametry połączenia, które dostarcza część podstawowej parametry połączenia dostawcy. Należy pamiętać, że nazwa dostawcy nie można ustawić za pomocą `SqlConnectionStringBuilder` , ponieważ nie jest prawidłową `SqlConnection` składnia ciągu połączenia. Kod tworzy <xref:System.Data.EntityClient.EntityConnection> ciąg połączenia przez ustawienie `EntityConnectionStringBuilder` właściwości. Nie używa `connectionString` przeciążenia.  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści zawartość <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.EntityClient.EntityConnectionStringBuilder.Clear%2A> Metoda usuwa wszystkie pary słów kluczowych i wartości z <xref:System.Data.EntityClient.EntityConnectionStringBuilder> i resetuje wszystkie odpowiednie właściwości na wartość null (`Nothing` w języku Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public override bool ContainsKey (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsKey(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ContainsKey (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ContainsKey(System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">Klucz do zlokalizowania w <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</param>
        <summary>Określa, czy <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> zawiera określony klucz.</summary>
        <returns>Zwraca <see langword="true" /> Jeśli <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> zawiera element z określonym kluczem, a w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public override bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> ma stały rozmiar.</summary>
        <value>Zwraca <see langword="true" /> w każdym przypadku, ponieważ <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> dostarcza kolekcję stałym rozmiarze par — słowo kluczowe/wartość.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string keyword] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(keyword As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ keyword); void set(System::String ^ keyword, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">Klucz elementu do pobrania lub ustawienia.</param>
        <summary>Pobiera lub ustawia wartość skojarzoną z określonym kluczem. W języku C# ta właściwość jest indeksatora.</summary>
        <value>Wartość skojarzona z określonym kluczem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ <xref:System.Data.EntityClient.EntityConnectionStringBuilder> zawiera słownik stałym rozmiarze, próba dodania klucza, który nie istnieje w słowniku zgłasza <xref:System.Collections.Generic.KeyNotFoundException>.  
  
 Składnię prawidłowe — słowo kluczowe i wartości, zobacz <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyword" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">Próba dodania klucza, który nie istnieje w kluczach dostępne.</exception>
        <exception cref="T:System.FormatException">Nieprawidłowa wartość w parametrach połączenia (w szczególności wartość logiczna lub liczbowego był oczekiwany, ale nie podano).</exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Collections.ICollection" /> zawierającą klucze ze słownika w <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> Zawierającą klucze ze słownika w <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składnię prawidłowe — słowo kluczowe i wartości, zobacz <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public string Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Property Metadata As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Metadata { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Metadata")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia lokalizacje metadanych w parametrach połączenia.</summary>
        <value>Pobiera lub ustawia lokalizacje metadanych w parametrach połączenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składnię prawidłowe — słowo kluczowe i wartości, zobacz <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Name")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę sekcji zgodnie z definicją w pliku konfiguracji.</summary>
        <value>Nazwa sekcji w pliku konfiguracji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składnię prawidłowe — słowo kluczowe i wartości, zobacz <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Provider")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę podstawowych [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] dostawcy danych w parametrach połączenia.</summary>
        <value>Niezmienna nazwa podstawowa [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] dostawcy danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używana jest nazwa niezmienna dostawcy pobrać <xref:System.Data.Common.DbProviderFactory> obiektu dla źródłowego dostawcy.  
  
 Składnię prawidłowe — słowo kluczowe i wartości, zobacz <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionString">
      <MemberSignature Language="C#" Value="public string ProviderConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Provider Connection String")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia parametry połączenia wewnętrznej, specyficznych dla dostawcy.</summary>
        <value>Parametry połączenia wewnętrznej, specyficznych dla dostawcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametry połączenia specyficzne dla dostawcy nie jest zaznaczone dla par prawidłową — słowo kluczowe i wartości przed jest ustawiona. Deweloperzy mogą tworzyć parametry połączenia za pomocą konstruktora klasy ciąg jednoznacznie połączenia lub użyciem <xref:System.Data.Common.DbConnectionStringBuilder> klasy. <xref:System.Data.Common.DbConnectionStringBuilder> Projekcie nie są sprawdzane dla par prawidłową — słowo kluczowe i wartości. W związku z tym jest możliwe przy użyciu tej klasy, aby utworzyć parametry połączenia nieprawidłowy.  
  
 Składnię prawidłowe — słowo kluczowe i wartości, zobacz <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override bool Remove (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Remove(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Remove(System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">Klucz parę — słowo kluczowe i wartości do usunięcia z parametrów połączenia w tym <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</param>
        <summary>Usuwa wpis z określonym kluczem z <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> wystąpienia.</summary>
        <returns>Zwraca <see langword="true" /> Jeśli klucz istniał w parametrach połączenia i została usunięta; <see langword="false" /> Jeśli klucz nie istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ `Remove` metoda zwraca wartość wskazującą jego sukces, nie jest wymagane do wyszukiwania przed usunięciem parę — słowo kluczowe i wartości z klucza <xref:System.Data.EntityClient.EntityConnectionStringBuilder> wystąpienia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyword" /> ma wartość null (<see langword="Nothing" /> w języku Visual Basic)</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public override bool TryGetValue (string keyword, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetValue(string keyword, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetValue (keyword As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetValue(System::String ^ keyword, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyword">Klucz elementu do pobrania.</param>
        <param name="value">Wartość odpowiadający <c>— słowo kluczowe.</c></param>
        <summary>Pobiera wartość odpowiadającą podany klucz z tego <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</summary>
        <returns>Zwraca <see langword="true" /> Jeśli <paramref name="keyword" /> został znaleziony w parametrach połączenia; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue%2A> Metody umożliwiają deweloperom bezpiecznie pobrać wartości z <xref:System.Data.EntityClient.EntityConnectionStringBuilder> bez konieczności Sprawdź, czy podana nazwa klucza jest prawidłową nazwą klucza. `TryGetValue` jest przekazywany nieistniejącą klucza nie zgłaszał wyjątku. Wywoływanie `TryGetValue` kluczem nieistniejącą umieszcza wartość null (`Nothing` w języku Visual Basic) w `value` parametru.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="keyword" /> zawiera wartość null (<see langword="Nothing" /> w języku Visual Basic).</exception>
      </Docs>
    </Member>
  </Members>
</Type>